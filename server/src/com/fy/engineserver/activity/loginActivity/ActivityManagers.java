package com.fy.engineserver.activity.loginActivity;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.apache.log4j.Logger;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.poifs.filesystem.POIFSFileSystem;

import cn.uc.g.sdk.cp.constant.GameDataCategory;
import cn.uc.g.sdk.cp.model.gamedata.GameData;
import cn.uc.g.sdk.cp.model.gamedata.LoginGameRole;
import cn.uc.g.sdk.cp.service.SDKServerService;

import com.fy.engineserver.activity.ActivityManager;
import com.fy.engineserver.activity.ActivityShowInfo;
import com.fy.engineserver.activity.ActivitySubSystem;
import com.fy.engineserver.activity.AllActivityManager;
import com.fy.engineserver.activity.VipHelpMess;
import com.fy.engineserver.activity.activeness.PlayerActivenessInfo;
import com.fy.engineserver.activity.datamanager.ActivityConstant;
import com.fy.engineserver.activity.newChongZhiActivity.NewChongZhiActivityManager;
import com.fy.engineserver.activity.newChongZhiActivity.NewMoneyActivity;
import com.fy.engineserver.activity.newChongZhiActivity.NewXiaoFeiActivity;
import com.fy.engineserver.activity.newChongZhiActivity.TotalChongZhiActivity;
import com.fy.engineserver.activity.newChongZhiActivity.TotalTimesChongZhiActivity;
import com.fy.engineserver.activity.newChongZhiActivity.TotalTimesXiaoFeiActivity;
import com.fy.engineserver.activity.treasure.TreasureActivityManager;
import com.fy.engineserver.activity.treasure.model.TreasureArticleModel;
import com.fy.engineserver.activity.treasure.model.TreasureModel;
import com.fy.engineserver.activity.wafen.instacne.WaFenInstance4Private;
import com.fy.engineserver.activity.wafen.manager.WaFenManager;
import com.fy.engineserver.core.Game;
import com.fy.engineserver.datasource.article.concrete.DefaultArticleEntityManager;
import com.fy.engineserver.datasource.article.data.articles.Article;
import com.fy.engineserver.datasource.article.data.entity.ArticleEntity;
import com.fy.engineserver.datasource.article.data.props.Knapsack;
import com.fy.engineserver.datasource.article.manager.ArticleEntityManager;
import com.fy.engineserver.datasource.article.manager.ArticleManager;
import com.fy.engineserver.datasource.language.Translate;
import com.fy.engineserver.gametime.SystemTime;
import com.fy.engineserver.mail.service.MailManager;
import com.fy.engineserver.menu.activity.exchange.ExchangeActivity;
import com.fy.engineserver.menu.activity.exchange.ExchangeActivityManager;
import com.fy.engineserver.message.ACTIVITY_EXTEND_REQ;
import com.fy.engineserver.message.ACTIVITY_FIRST_PAGE2_REQ;
import com.fy.engineserver.message.ACTIVITY_FIRST_PAGE2_RES;
import com.fy.engineserver.message.ACTIVITY_FIRST_PAGE_REQ;
import com.fy.engineserver.message.ACTIVITY_FIRST_PAGE_RES;
import com.fy.engineserver.message.CONFIRM_ARTICLE_EXCHANGE_REQ;
import com.fy.engineserver.message.CONFIRM_ARTICLE_EXCHANGE_RES;
import com.fy.engineserver.message.GET_ACTIVITY_INFO_REQ;
import com.fy.engineserver.message.GET_ACTIVITY_INFO_RES;
import com.fy.engineserver.message.GET_ACTIVITY_MESS_RES;
import com.fy.engineserver.message.GameMessageFactory;
import com.fy.engineserver.message.NOTICE_ACTIVITY_BUTTON_STAT_RES;
import com.fy.engineserver.message.NOTICE_ACTIVITY_STAT_REQ;
import com.fy.engineserver.message.OPEN_TREASUREACTIVITY_WINDOW_RES;
import com.fy.engineserver.message.QUERY_ARTICLE_EXCHANGE_REQ;
import com.fy.engineserver.message.QUERY_ARTICLE_EXCHANGE_RES;
import com.fy.engineserver.newtask.service.TaskManager;
import com.fy.engineserver.platform.PlatformManager;
import com.fy.engineserver.platform.PlatformManager.Platform;
import com.fy.engineserver.sprite.Player;
import com.fy.engineserver.stat.ArticleStatManager;
import com.fy.engineserver.uniteserver.UnitServerActivity;
import com.fy.engineserver.uniteserver.UnitedServerManager;
import com.fy.engineserver.util.CompoundReturn;
import com.fy.engineserver.util.ServiceStartRecord;
import com.fy.engineserver.util.StringTool;
import com.fy.engineserver.util.TimeTool;
import com.fy.engineserver.util.config.ConfigServiceManager;
import com.xuanzhi.boss.game.GameConstants;
import com.xuanzhi.tools.cache.diskcache.concrete.DefaultDiskCache;
import com.xuanzhi.tools.transport.RequestMessage;

/**
 * 活动管理
 * 
 *
 */
public class ActivityManagers{
		
	public static Logger logger = Logger.getLogger(ActivityManagers.class);
	
	private static ActivityManagers self;
	public  boolean isOpenSoul = true;
	public  String appServers[] = {"pan3","西方灵山","飞瀑龙池","玉幡宝刹","问天灵台","雪域冰城","白露横江","左岸花海","裂风峡谷","右道长亭","永安仙城","霹雳霞光","对酒当歌","独霸一方","独步天下","飞龙在天","九霄龙吟","万象更新","春风得意","天下无双","仙子乱尘","幻灵仙境","梦倾天下","再续前缘","兰若古刹","权倾皇朝","诸神梦境","倾世仙缘","傲啸封仙","一统江湖","龙隐幽谷","前尘忆梦","国色天香","天上红绯"};
	public String limitSoulServers [] = {"幽恋蝶谷","国内本地测试"};
	/** 
	 * 考虑到活动是长期的，key可以加入时间来唯一
	 */
	private DefaultDiskCache ddc;
	
	public static long lastClickTime = 0;
	/**
	 * 用来存放ddckey的集合，方便以后查看所有的活动
	 */
	private DefaultDiskCache ddcKeys;
	
	public File dataFile;
	
	public File dataKeysFile;
	
	public String activityFile;
	
	private List<Activity> activitys;
	
	public List<ActivityShowInfo> infos = new ArrayList<ActivityShowInfo>();
	public List<VipHelpMess> vipMesses = new ArrayList<VipHelpMess>();
	
	private List<PrizeMore> morerewards = new LinkedList<PrizeMore>();
	
	/**
	 * 老玩家回归
	 */
	private List<Activity> oldplayercomeback = new LinkedList<Activity>();
	
	/**
	 * 迷城活动
	 */
	private List<Activity> petactivitys = new LinkedList<Activity>();
	
	public static ActivityManagers getInstance(){
		return self;
	}
	
	public void init() throws Exception{
		
		long now = System.currentTimeMillis();
		self = this;
		activitys = new ArrayList<Activity>();
		ddc = new DefaultDiskCache(dataFile, null,"连续登录活动", 100L * 365 * 24 * 3600 * 1000L);
		ddcKeys = new DefaultDiskCache(dataKeysFile, null,"连续登录活动keys", 100L * 365 * 24 * 3600 * 1000L);
		initActivityData();
		initActivityShowInfo();
		logger.warn("[活动管理初始化] [ActivityManager] [成功] [activitys:"+activitys.size()+"] [耗时："+(System.currentTimeMillis()-now)+"] [--------------------]");
		ServiceStartRecord.startLog(this);
	}
	
	public String serverNameString [] = {"天道之地"};
	public String rewardKey = "11月29合服补偿";
	public String [] rewardNameString = {"橙色玉液礼包(绑)","橙色封魔录礼包(绑)","工资卡100两","宝石涅槃(3级)","改名卡"}; 
	public int [] rewardNums = {1,1,2,1,1}; 
	public int limitLevel = 10;
	public String titleString = "11月29合服补偿";
	public String contentString = "11月29合服补偿";
	public void loginReward(Player p){
		if(!Arrays.asList(serverNameString).contains(GameConstants.getInstance().getServerName())){
			return;
		}
		if(p == null || rewardNameString == null || rewardNums == null || rewardNums.length != rewardNameString.length){
			logger.warn("[发送登录补偿奖励] [错误：参数错误] [rewardNums:"+rewardNums+"] [rewardNameString:"+rewardNameString+"] ["+(p!=null?p.getLogString():"null")+"]");
			return;
		}
		if(p.getLevel() < limitLevel){
			return;
		}
		Integer result = (Integer)ddc.get(rewardKey+p.getId());
		if(result != null){
			return;
		}
		try {
			List<ArticleEntity> list = new ArrayList<ArticleEntity>();
			for(int i=0;i<rewardNameString.length;i++){
				Article a = ArticleManager.getInstance().getArticle(rewardNameString[i]);
				ArticleEntity ae = ArticleEntityManager.getInstance().createEntity(a, true, ArticleEntityManager.维护补偿, p, a.getColorType(), rewardNums[i], true);
				list.add(ae);
			}
			MailManager.getInstance().sendMail(p.getId(),list.toArray(new ArticleEntity[]{}),rewardNums, titleString, contentString, 0, 0, 0, titleString);
			ddc.put(rewardKey+p.getId(), new Integer(1));
			p.sendError(titleString+"已发送,请查收邮件");
		} catch (Exception e) {
			e.printStackTrace();
			logger.warn("[发送登录补偿奖励] [异常] [rewardNums:"+rewardNums+"] [rewardNameString:"+rewardNameString+"] ["+(p!=null?p.getLogString():"null")+"]",e);
		}
	}
	
	
	public static final int CREATE_PLAYER = 1;
	public static final int PLAYER_ENTER = 2;
	public static final int PLAYER_UPGRADE = 3;
	
	String queryUrl = "http://collect.sdkyy.9game.cn:8080/ng/cpserver/gamedata/ucid.game.gameData";
	public void sendPlayerInfoToUC(Player p , int type){
		try {
			
			if(!p.getUsername().startsWith("UCSDKUSER_")){
				return;
			}
			String uid = p.getUsername().split("UCSDKUSER_")[1];
			if(uid == null || uid.isEmpty()){
				return;
			}

		    //最终拼接的游戏数据对象
		    List<GameData> gameDataList = new ArrayList<GameData>();
		    long startTime = SystemTime.currentTimeMillis();
			/**
			* 必接功能<br>
			* 提交游戏扩展数据功能，游戏SDK要求游戏在运行过程中，提交一些用于运营需要的扩展数据，这些数据通过扩展数据提交方法进行提交。
			* 登录游戏角色成功后调用，及角色等级变化后调用
			* 游戏内如果没有相应的字段：int传-1，string传"不存在"
			*/
		    //玩家的游戏数据
		    LoginGameRole loginGameRole = new LoginGameRole();
		    loginGameRole.setRoleId(p.getId()+"");
		    loginGameRole.setRoleLevel(p.getLevel()+"");
		    loginGameRole.setRoleName(p.getName()+"");
		    loginGameRole.setZoneId("1");
		    loginGameRole.setZoneName(GameConstants.getInstance().getServerName());
		    loginGameRole.setRoleCTime(p.getCreateTime() /1000);
		    loginGameRole.setOs("android");
		    loginGameRole.setRoleLevelMTime((long)-1);

		    //构造玩家的游戏数据对象,构建数据后需要调SDKServerService.gameData接口提交数据,详见文档最后
		    GameData roleData = new GameData(GameDataCategory.LOGIN_GAME_ROLE, loginGameRole);
		    gameDataList.add(roleData);
		    
			/**
			* ===========================
			* 构造完数据后，需要调用SDKServerService.gameData(accountId, gameDataList)方法，才会将数据上传到服务器
			* ===========================
			*/
		    boolean result = false;
		    try {
		        result = SDKServerService.gameData(uid, gameDataList);
		    } catch (Exception e) {
		    	e.printStackTrace();
		    }
		    Game.logger.info("[推送信息到UC] [返回数据] [result:"+result+"] [(1:创建,2:进入,3:升级):"+type+"] ["+p.getLogString()+"] [cost:"+(System.currentTimeMillis()-startTime)+"ms]");
			
			
//			if(!p.getUsername().startsWith("UCSDKUSER_")){
//				return;
//			}
//			String uid = p.getUsername().split("UCSDKUSER_")[1];
//			if(uid == null || uid.isEmpty()){
//				return;
//			}
//			
////			data:accountId,gameData{category,{zoneId,zoneName,roleId}}
////			gameData:category,content
////			content:zoneId,zoneName,roleId
//			
//			long startTime = SystemTime.currentTimeMillis();
//			HashMap<String,String> coutentParams = new HashMap<String,String>();
//			coutentParams.put("roleCTime",p.getCreateTime()+"");
//			coutentParams.put("roleId",p.getId()+"");
//			coutentParams.put("roleLevel",p.getLevel()+"");
//			coutentParams.put("roleName",p.getName()+"");
//			coutentParams.put("zoneId","1");
//			coutentParams.put("zoneName",GameConstants.getInstance().getServerName());
//			
//			HashMap<String,Object> gameParams = new HashMap<String,Object>();
//			gameParams.put("category","loginGameRole");
//			gameParams.put("content",coutentParams);
//			
//			String gameInfo = JacksonManager.getInstance().toJsonString(gameParams);
//			
//			HashMap<String,Object> dataParams = new HashMap<String,Object>();
//			dataParams.put("accountId",uid);
//			dataParams.put("gameData",URLEncoder.encode(gameInfo,"utf-8"));
//			
//			String md5Str = JacksonManager.getInstance().toJsonString(dataParams)+"1b7bbe8bff2e825c03f2cc42301dec92";
//			String mySign = StringUtil.hash(md5Str);
//			
//			String game = "{\"gameId\":885649}";
//			HashMap<String,String> params = new HashMap<String,String>();
//			params.put("data",JacksonManager.getInstance().toJsonString(dataParams));
//			params.put("game",game);
//			params.put("id",SystemTime.currentTimeMillis()+"");
//			params.put("service","ucid.game.gameData");
//			params.put("sign",mySign);
//			
//			HashMap headers = new HashMap();
//			String queryContent = JacksonManager.getInstance().toJsonString(params);
//        	String resp = "";
//        	byte bytes[] = HttpUtils.webPost(new java.net.URL(queryUrl), queryContent.getBytes(), headers, 60000, 10000);
//        	String encoding = (String)headers.get(HttpUtils.ENCODING);
//        	Integer code = (Integer)headers.get(HttpUtils.Response_Code);
//        	String message = (String)headers.get(HttpUtils.Response_Message);
//        	resp = new String(bytes,encoding);
//		    logger.info("[推送信息到UC] [返回数据] [成功] [type:"+type+"] [encoding:"+encoding+"] [message:"+message+"] [code:"+code+"] [请求地址:"+queryUrl+"] [请求内容:"+queryContent+"] [返回内容:"+resp+"] [cost:"+(System.currentTimeMillis()-startTime)+"ms]");
		} catch (Exception e) {
			e.printStackTrace();
			Game.logger.warn("[推送信息到UC] [异常] ["+type+"] ["+p.getLogString()+"]",e);
		}
	}
	
	
	/**
	 * 二测期间达到71级的玩家，送激活码一个，在首发期间兑换唯一炫彩称号。
	 */
	
	private String [] codes = {"S26505899370","S88362279538","S22274493434","S68063522350","S08296613019","S91306184310","S92293100677","S02551717679","S66893730173","S84832158844","S80460610871","S10176739667","S17681383075","S70018238241","S31499386996","S72300573497","S52374573157","S58612635282","S72536452385","S13589713630","S52750870599","S73722004797","S60436210334","S43968249504","S96055746634","S54745640860","S04951609885","S12878496868","S10778974588","S32895353193","S99655698614","S89973365826","S73527134179","S31055441697","S88487026612","S14217710359","S88090259288","S26964130203","S35409814965","S51219553116","S20587873427","S01648774157","S95245856150","S10009916993","S51615654814","S78634361602","S85579632067","S48834905109","S94215118557","S90537958721","S49381325522","S41729022480","S92717500749","S93601508019","S51275633549","S65144028807","S89151216201","S25801609669","S82201105319","S47135735106","S45380526112","S01330933655","S10908286113","S74284300742","S46709735212","S73550140593","S02494295930","S06011756311","S46411919080","S03708579216","S76357744414","S03433974919","S62862826240","S86936584561","S00584026245","S47670630195","S14546794653","S29374975600","S61799210700","S66472468825","S13613280678","S18656591057","S50411195915","S32003188904","S07807992240","S06279788331","S38739963951","S24183306320","S87265392244","S96816300822","S10694149858","S23901238540","S80128710473","S18615882809","S82449706031","S44895189927","S29900212526","S53605164118","S82206616157","S04705786360","S96825804359","S98876150748","S12198340195","S09415255532","S84897043186","S70946778340","S63632928200","S76335924860","S73511030876","S94810519276","S90812289158","S89533223573","S52406429942","S83016862400","S21602744496","S04651274395","S60852827896","S62353360806","S08080722551","S63453690677","S79760695385","S62167337832","S01745809389","S87722715172","S49797745907","S37620628668","S16248310386","S59901505944","S21619362888","S32524024088","S24212371906","S88709118725","S09326952638","S39511240749","S73123413195","S59824233913","S23784594215","S98219718135","S43562583653","S34554012083","S88718074152","S27530781617","S26455822519","S02343209968","S58268459938","S71520412110","S18118775873","S62729749542","S40842614292","S39286225292","S24629215547","S41692682901","S12877094101","S74122057163","S60620958097","S02540993434","S66519710950","S49271334968","S31769239170","S26061593351","S27541000765","S39097017751","S19830668007","S13385818807","S23799002012","S30178604903","S80384461703","S30468953155","S61592772707","S37602842000","S85313383743","S01345373898","S79604421308","S12146279338","S62220317951","S91367771426","S76384638479","S88187772639","S02368836354","S89426461451","S43175497017","S87232985301","S14219054154","S31558795816","S19383717551","S48461767163","S10376406846","S69643180032","S37063867076","S87196798106","S02083428822","S41119654920","S86889764091","S23998171215","S37688982436","S10642678270","S88802535676","S11369438180","S12631194536","S14660752294","S41501313514","S40856412113","S04199450490","S59236929598","S36271010941","S29397722984","S07401157641","S72442943255","S76090073065","S37359116421","S99437799598","S73020356742","S14770419179","S58497508546","S77975890174","S75031530342","S40652004162","S07759411462","S34477661055","S38994150293","S00069039287","S89866317082","S07067047408","S18481148717","S99655447128","S93564786874","S76815767509","S13850316613","S12590717533","S56589769978","S09497621440","S59346015754","S92448111413","S62647254032","S42568236347","S05673728787","S17944207949","S18286106822","S07834001482","S24471551458","S17742936935","S56303337670","S80634848692","S84857013596","S54887721036","S23567507375","S28082643090","S30720910387","S02841669434","S41864027054","S59980663666","S87976437534","S62443363815","S89944052264","S86207313582","S50070020982","S49724346665","S58406151800","S83654343045","S77213034135","S07945655016","S21093002670","S76366650282","S92594412098","S52064319656","S26299277065","S90574433446","S32033390658","S19236101938","S33767625867","S89990980787","S67531818177","S94007271191","S37556786361","S11123833444","S08943305225","S91969635017","S21698657985","S92579827195","S24617282632","S80926433651","S75960509200","S49702074495","S76853029080","S97409663061","S82329172121","S74701110579","S43166310620","S15344112795","S19783799290","S84088458380","S93333375077","S80254234095","S61767534458","S70652618864","S79663494238","S76922527522","S93494788239","S65942193656","S27864303958","S96209539060","S16243022657","S38822053710","S93144675954","S68096317834","S01798497380","S24338284991","S67396310537","S58664968992","S34288334535","S51743345740","S23945367471","S01664768589","S13015037520","S48109541794","S59700730273","S63829168455","S49933532464","S80885622418","S56172691482","S17230847828","S17501220252","S13615418917","S59976063897","S21017646048","S76904000715","S53428805567","S12577597494","S50437285510","S52453127646","S51156429971","S76992985073","S44015201605","S69428067611","S00236735402","S37647717753","S50894316625","S78933056293","S98191193835","S01848447950","S34303397941","S83907522955","S83895921814","S12385858950","S00429548544","S22960129688","S19166856751","S96376682398","S72911509933","S96361391425","S57754613636","S02529145180","S54664295388","S63524039894","S31179512004","S28148111197","S94445152201","S81795043606","S32435975101","S18224400475","S82604033642","S52386366288","S88369707383","S17890260972","S29734072512","S94467136606","S62700606087","S14956647763","S20090678225","S09191634968","S03844578641","S43921237557","S65142381589","S54480086822","S47320200204","S03169522502","S12116336876","S78131004596","S22513273135","S86265161242","S90759662206","S77836705786","S00299349900","S09541607704","S17303945080","S82456070371","S54755960882","S46616251898","S95449765912","S72781636900","S24323427275","S88793565505","S03864730408","S64533297739","S28103035376","S05887785718",
			"S57028457267","S96519815151","S33251537012","S34469675212","S49122406787","S67918806577","S71655614247","S41578536827","S31371206457","S88663396269","S86690490177","S93448794929","S97861934076","S43068979366","S70668386514","S11532719467","S95169922583","S40064688725","S07380063789","S07573625658","S87130565413","S05012052271","S92702776295","S21638920212","S70903201113","S86276146494","S37090721991","S86547875986","S94461304521","S11473442787","S13711104782","S57473488418","S66113414651","S54883446357","S95363125013","S73928721402","S77095506732","S15293562791","S78275429936","S78371207641","S36518306391","S37340144513","S57094478096","S64860901377","S14166534758","S78284660162","S41344059377","S96939677804","S81035782192","S34308953829","S28683757986","S94400701578","S67026613599","S57285546963","S30536192917","S49816942425","S97167057500","S03223894614","S44415474724","S12470363314","S39420445796","S80480141041","S32322949737","S96065506381","S95285776984","S08372265688","S31616908977","S34559682890","S24397078143","S62085809050","S05156001200","S99610804431","S12164998749","S46238515217","S05208033420","S70511998919","S34660041375","S41503565154","S01668001019","S26091611570","S93879840211","S25505519085","S38817700795","S25097248661","S19068987617","S94864434163","S92874376394","S06302476197","S14825410332","S30115310185","S66327912824","S75226928780","S39301994447","S53190107221","S65828486337","S58407373291","S50672606598","S49710179105","S52638156267","S17643689376","S70407105221","S25514513288","S08527683949","S96035939916","S04070510876","S05142108744","S92768233263","S05963451317","S91567865242","S10680208805","S70828704926","S51183418009","S67777311004","S32623208489","S51087817095","S75529850954","S08833239984","S77997722635","S90464448844","S92358265969","S46179983441","S76728001100","S16920042954","S40238107300","S83037441235","S03381249311","S21728490764","S83359497618","S09670240998","S71733752219","S27949720138","S02388913145","S35640451838","S93487373871","S81939427803","S84020264295","S52040544264","S60471635429","S09713373636","S91136813909","S58089472597","S88507915595","S36257036041","S33512376974","S95533034464","S17923740499","S85519035332","S36085369231","S99828724956","S24734627779","S79858311185","S34777775972","S09193901587","S23359029892","S32994425355","S59660427052","S74006007539","S42714571445","S38066077784","S00340867073","S43308379180","S87050488527","S92967512519","S89033734685","S06800942826","S73473324032","S79390541482","S10716950482","S44756496070","S61114682556","S47076754039","S35061544622","S79158527693","S54538618344","S84406841348","S39462772120","S58721973546","S07892607097","S46145057621","S64958456960","S79700283859","S36195560598","S43770813261","S91071623981","S39489010905","S99349820602","S09715637002","S46469515053","S57307866473","S12538345189","S70471105424","S29200457249","S83881844799","S77112398952","S62374527965","S18327183382","S29204404484","S80107172739","S70901859262","S94331683712","S10841939321","S60221667596","S24105357229","S20110381278","S17904752018","S28395572227","S23771939545","S80532804785","S24200249408","S08624408910","S85955995796","S27600318901","S65854118128","S83832299414","S24966072438","S16556840972","S23613246994","S84598781179","S84222679026","S35360806347","S45724558907","S72388606239","S60507675067","S17246584393","S57819705258","S60104440070","S04638214711","S10596864274","S11522668662","S43843383893","S60375899483","S32289642238","S55802834496","S81212151976","S29768777298","S49070640181","S08182421538","S15024491812","S55173030400","S66914713838","S06004967400","S26090868759","S95392012726","S52680979444","S65343381356","S68274547718","S98034448340","S59528534300","S46067408846","S72401307331","S71054702876","S21329911574","S08764425732","S74872623266","S02862633561","S69683797638","S80927005077","S46131812240","S30553051558","S12905406695","S13942908233","S81721602949","S68392169465","S99760013464","S89195298156","S00332651911","S43940917617","S30988476523","S88604768887","S01356698319","S46426277372","S26788852368","S01366508091","S45533787242","S41807813327","S46775529926","S70800482293","S66942855306","S82800727735","S60445217300","S62256971595","S39583520907","S41067689511","S31673433837","S31473971275","S92919527614","S70700710051","S83567690084","S82131069880","S79787755515","S48355355449","S15076169908","S27855388010","S12345784821","S66958655394","S02065424803","S37531139300","S53822047909","S78605771309","S70893894233","S00684858115","S51837732616","S96790346283","S33358829607","S84502899338","S67070623901","S83210033526","S13707311127","S53244495674","S22900171174","S88358648503","S09263761869","S54905978597","S41456420608","S11035683703","S21337273820","S89094335140","S79696074615","S94154259573","S12208100278","S07727860465","S91679694262","S53496280327","S26165802994","S24286295459","S43474273129","S14562450515","S51378857550","S42535382063","S74871947189","S81483326415","S76908953299","S80773533578","S24200279525","S81481811102","S07848532432","S54379310471","S08155171485","S18097359861","S15865363317","S41674933726","S93696649457","S50552189390","S09247256485","S60966805505","S25025364368","S77396973250","S89292472905","S43758849854","S52249904393","S55285606809","S26929100311","S74480877323","S12534910458","S57939376627","S17755438883","S72328463283","S90794920830","S51102974224","S02830307089","S05397394016","S51088960781","S23755021961","S14321001887","S65424669533","S55785944094","S60093492949","S88305137802","S55617703208","S16974193316","S35353833379","S31911817663","S39450949303","S66188280619","S79493132035","S69399233880","S41442723402","S24227002343","S78413590389","S72951743607","S96608628191","S64716048496","S51852109728","S42510420683","S61232304528","S52238160281","S34692185681","S66347988983","S14916391876","S38729297750","S07927027510","S04306976001","S31436245038","S59775191361","S90010363605","S70593714474","S91596905979",
			"S64576348273","S93138855577","S79419906152","S31828131083","S65029603172","S28467850673","S66830974215","S21923053427","S96206093562","S63617879502","S14091153324","S23359897562","S88551750938","S13817898356","S94448952944","S04801740457","S94160027889","S32978763804","S83543820928","S69990267189","S39240964256","S58851455784","S74933263762","S78801461650","S55492833617","S76512036961","S78231843743","S82048698663","S52965910417","S37040805482","S10675085836","S76175493309","S80604223637","S99149669906","S43648845856","S95528335137","S27019540223","S12849939932","S56344210049","S68651918049","S72193678816","S96991952642","S02668456107","S57694821269","S08255755609","S48006960377","S27926860046","S76316325400","S57953973944","S07179968554","S19962027121","S53834053413","S47941456527","S09657409982","S59149402890","S94420929698","S06609133391","S94367438282","S12592522401","S69141452852","S09177373786","S97229855061","S34464013665","S19954529997","S93703719240","S80011958184","S40820654770","S48445248101","S78348175806","S16029129109","S27723042284","S31511261504","S53093574299","S91238588305","S35371651748","S12867404074","S11434688559","S74561425719","S64795887447","S09030774661","S82169494873","S72018316666","S80627682598","S13992235951","S84175724218","S03925405648","S61059504260","S41378755823","S49007871076","S22149001415","S95071987604","S00454752909","S48403002856","S28211690573","S55901466068","S20758572373","S77095949328","S88621082289","S07001759794","S19241464571","S80306150871","S10761013537","S89092172866","S55639763524","S82672554897","S24208895602","S33564597878","S56889219169","S91243871585","S86696129176","S60731961268","S10066941525","S93652753840","S21421305334","S95952469745","S57090516970","S99547734981","S75369906442","S27868014724","S01222317466","S31310368562","S08898458455","S60293883193","S51607414036","S58983204924","S47779557361","S22998204545","S82072422130","S11016486845","S34353307247","S31944490533","S74760728301","S01644353821","S19084284113","S51073805317","S91622364948","S86343306572","S41171191263","S30358128791","S75562391898","S81600906691","S51243583581","S87525733084","S38997900635","S92144627709","S71911161614","S57832576036","S56606181927","S20260159050","S26595807585","S71811597735","S22961054481","S38577328832","S18861743435","S01922854269","S08597480480","S37384622454","S15020589623","S81110678962","S01208051374","S01871218425","S06863117508","S02689590681","S30752195810","S98725253649","S74227102484","S54076285580","S52063922672","S51180350169","S45000958460","S68053831992","S26236916903","S27107302252","S37433247513","S27184791100","S04137183380","S84416583087","S34453648176","S10895567843","S82484586806","S30204053184","S60487457825","S75408437395","S27330289910","S31579861190","S29409324931","S73326147043","S44984632636","S46246572622","S55898861729","S95000771680","S34668874506","S83966927857","S70727802844","S14146004992","S43033371884","S17526777976","S59854772369","S90820533729","S81619905055","S32890423046","S76750786835","S90557778901","S25885049720","S81011593078","S39152829779","S81310311738","S77511697820","S23190203474","S60351559036","S91655819904","S23653495515","S45402380855","S06198695826","S25077727360","S55769960373","S79569265834","S65860494399","S12963285695","S85754189258","S94165470759","S89946278944","S06729818605","S32431699399","S48661722825","S66372191885","S90921608225","S33525737233","S85232121128","S93739771424","S33860324034","S58989850458","S71083828543","S78925996281","S11171481281","S24179216675","S75996109425","S18831223492","S67138028663","S05839280562","S45506947764","S88588528670","S30648228243","S83693183725","S54147199012","S28061749847","S71732003560","S68143351996","S95089384262","S16772663897","S56422896975","S93157155084","S51681541545","S46990698285","S66294989169","S85362736697","S13997694511","S10001398741","S99710819845","S84916086948","S42807277040","S51396758310","S22148901330","S28728027889","S99099547043","S06840054045","S17015402403","S95726388317","S07044185310","S38300465051","S28235329788","S12208042342","S03067070443","S62451203545","S23544515822","S80399102891","S75633349480","S23736976269","S07744326539","S18786880759","S20873338892","S11790918957","S09279393834","S42409176127","S83542494771","S23544364895","S58339107485","S82888768199","S06712883773","S97027987743","S43527601359","S84803483484","S03897088052","S68720398343","S58780653901","S30603516264","S38542399991","S08904974116","S16186251682","S84012292804","S77659234346","S60893264455","S55514825007","S78494988917","S67044353289","S90400904157","S06882584189","S70335094061","S27885306017","S06909447819","S95696754131","S43621697615","S39846630017","S70053566945","S67840209281","S86080655777","S28028898785","S16639461808","S25403566983","S32376427855","S85213434547","S98004697196","S73025850346","S31079158379","S32079622126","S86914483564","S47829611825","S48255262506","S43384203811","S82287400635","S49549110589","S73803730868","S47559044455","S35883948765","S31942035798","S80054238784","S62989485319","S16487761587","S44970724958","S48275925235","S83232238080","S83999147918","S46858366864","S76146301690","S27732613313","S69205408073","S70745134329","S76907855232","S94751328382","S56957978983","S53855319729","S28320439427","S91866794680","S19242601736","S22146541860","S84018206479","S95551353811","S07298024971","S95115840317","S33373529708","S54144647800","S72749298726","S59817471868",
			"S62920158011","S59226247604","S35701706198","S83044154632","S72924896047","S09323454663","S25260339455","S34122725265","S40720908843","S07642830263","S29789799123","S77120310451","S48888688939","S06927953178","S99839919045","S43236234634","S07662703113","S39933975729","S20343398543","S80926368706","S23678483594","S80260121046","S08397607540","S80852778030","S43745700019","S94431256454","S17445952649","S30058942637","S68930159526","S13345981410","S78835838793","S45907802287","S60599754324","S31817276344","S87017809493","S56056371158","S61600329869","S95445726463","S19312774405","S79308189973","S08740512036","S03720608454","S59181013737","S33679933977","S79896303109","S49406124310","S10738117677","S99310639067","S97730639817","S75250665400","S86727529765","S09307288288","S56271485775","S14056569437","S01237806417","S01439018644","S08782332260","S81919078167","S71451658281","S01333761177","S76041141719","S83869328734","S20398849814","S81517793103","S87359494298","S15369179096","S02433482179","S15765264279","S16135875302","S31744441073","S02645332554","S92846244332","S72046216819","S35429414125","S92457308056","S23071915138","S05055684644","S78120238407","S72126535640","S20770979065","S57979308884","S12542463990","S15255712091","S16973392307","S80096539717","S56183811143","S96728518393","S70293821899","S08629860880","S10126933379","S31820103756","S23990294857","S62042239987","S95028731778","S66850179058","S55876342613","S61776904343","S09860375427","S22544626515","S49450406312","S48529766878","S00064552607","S21393355842","S73519248078","S60461432340","S99083765966","S57953587426","S40980191842","S16662147682","S60448265724","S18859089059","S14926401942","S40327073654","S98383477734","S18458158676","S29345841277","S63136393904","S12443644244","S44207009679","S40787947506","S78480301021","S67015763201","S83415884540","S96970927758","S79346127339","S92850720389","S03726858056","S10326913664","S86178610416","S17883102778","S36744613022","S75472763106","S08230895507","S53197796573","S72070029598","S39663905276","S25405221925","S09239878518","S40384591856","S34784568154","S23274012736","S11321925241","S98162015192","S31109536365","S94707916938","S06828065445","S35330140436","S83991218870","S54263413272","S75814259765","S59578902111","S29217500405","S64208139508","S12009772614","S80142493027","S70455534380","S42653288506","S23169473836","S32425754250","S79951264027","S56862210481","S17400828311","S87506450770","S89634210842","S34229988933","S57619014277","S17517208073","S86567353911","S07925344299","S85486447375","S01621963892","S12610871847","S29194659101","S58834003093","S80118777424","S43833662365","S50937798590","S61399245138","S07032733020","S73884314141","S82972994223","S47239690114","S59262105361","S51325686108","S87593414665","S89416459207","S57766927812","S62358294651","S31912404592","S57670675055","S36343533153","S48261601114","S06928026104","S70196106285","S91780510544","S56476697422","S63603325016","S87928359142","S11400527623","S19390478603","S22726287178","S75177896108","S47966175531","S38890967189","S06439395688","S29186558671","S33227500505","S36347254679","S13324472096","S69114332386","S49329087063","S51073134751","S93013251123","S39460459303","S59750129075","S27661427395","S89530134832","S64777115159","S03051551334","S52730997440","S13315367233","S75689769224","S19258148331","S03742148178","S88459328932","S26832319483","S03722758462","S79291093166","S87708600021","S38787589732","S56316844490","S27179404833","S78258633370","S07181978980","S23869514989","S56027481275","S06324915271","S93262360418","S99355434207","S51943007387","S83477381986","S45948535827","S92399021058","S55520279136","S82665928500","S31991209548","S61834019349","S08291531058","S17643909552","S41791850600","S99715513990","S20395564113","S43161789052","S15323419581","S79649127808","S17561190316","S10162447931","S92402353896","S66303563465","S45416868403","S58784648151","S55607060971","S02423293664","S82893653500","S19093257591","S14402697914","S40685444709","S23004582330","S72386611786","S30726891357","S10959966083","S14024695372","S94532195902","S67692992632","S40618072292","S74012064544","S39056233087","S02353220675","S18317638909","S94004173268","S29908583404","S79146242175","S93549344677","S57040660988","S94145291296","S71668366362","S90341002137","S71032993054","S66639110760","S24993414695","S78369988207","S08714893511","S02316312164","S37290888190","S50504524215","S25818603561","S76298465071","S33680416497","S65340205879","S79244834813","S32730083688","S69572751404","S44480967737","S16043851281","S74845104563","S03172762475","S61306465665","S52924730269","S04715522670","S33480225560","S54698051705","S06764063450","S66074661340","S17603084001","S58268504349","S08029898364","S05026196254","S56722355994","S66600713738","S19547664180","S51268577685","S35690771724","S82479717703","S32178420265","S08840735486","S97792972828","S64248409521","S18897852789","S37316532334","S44520803193","S20286563040","S93797336896","S65721633064","S55432022098","S86717432514","S46639161310","S33148853848","S29307845386","S24614291574","S39615930555","S39505255394","S73866817615","S09405116811","S75446534713","S03143676172","S57793593391","S32548747822","S31386496387","S08657293856","S05445396467","S20730960432","S00307040931","S39215529652","S73230304542","S81094535738","S53238742777","S36400327143","S35191155933","S12453065138","S43980233566","S09337039552","S00451712221","S08936080661","S84570688747","S12366067732","S57284308511","S58614568320","S00979334547","S08287298618","S56424085643","S27265184657","S76324624987","S26491381862","S41725846839","S06864544953","S51511860311","S58504432632","S24744517518","S02661048851","S16127158967","S74919054702","S01309381573","S06958925665","S67409743261","S81466602920","S06950156032","S12964517717","S27117688205","S34845531029","S54935032258","S01028618150","S02963928486","S45807802335","S21586488922","S77071571261","S91511423538","S49863174056",
			"S78051476590","S06863831083","S79059664117","S77464691188","S64340273273","S44221359771","S16258099180","S56392909186","S10021023044","S59864523101","S45832915231","S27731628787","S80123312504","S81868056080","S02662139387","S36731472517","S94873537851","S50633565695","S18155602724","S18827997814","S58210815539","S03605685497","S49052469821","S65027058614","S86931023253","S41825548939","S11921620710","S90688016281","S89552388823","S28485844879","S49554166464","S83979676136","S11997938103","S43530090433","S30876996034","S32067996236","S76350573875","S33328281211","S63284097316","S03527660113","S11581863094","S72740629737","S47865320614","S25196236990","S45543556072","S69047503060","S23510434377","S49882100366","S51620541799","S03942758430","S51904508176","S58300455108","S85142243048","S51831845671","S01164658655","S22499908589","S02323590629","S06795767198","S64238328889","S26859628448","S45123356543","S58080110734","S63524220275","S53871888668","S09996291737","S93207805524","S89748598256","S11684832686","S06300814914","S22049635408","S43008441095","S38875460203","S25050044322","S87280264027","S83713267507","S81169079509","S90024280827","S19161017277","S32415728005","S84803474677","S61970752026","S05503074420","S99990037369","S79761275018","S97279417365","S75267218392","S62654250283","S63877767161","S32563773250","S05708869634","S08521148454","S76952327870","S49365646798","S51175308879","S29584083021","S30650126136","S17541392341","S50360356868","S72475244839","S85159664839","S34236284553","S53016724076","S99243513251","S80871685298","S39344814214","S80570491458","S65900215322","S09881482654","S03127931128","S56586724900","S70578712851","S77803126492","S23507194263","S07246155985","S65139035277","S64640045261","S58018420813","S67832004061","S62480878317","S57413967128","S89780516359","S67204323757","S26607085818","S02114249650","S56009147053","S39607512491","S23368530687","S09940440435","S08136829971","S51870294151","S80433444979","S22771753885","S86803269429","S02221235976","S53444812782","S96480591694","S18011060598","S40191380088","S35057959123","S72840953150","S31953957176","S29928791023","S88746144620","S73911350967","S79441929996","S91220935482","S65065268212","S93502584825","S72246550788","S50942464871","S25785840828","S13482562746","S88898741227","S31773875638","S13401852313","S85957825186","S10369449793","S62636667965","S59005660283","S27008117444","S62028153315","S92355999742","S62312472274","S85261633188","S24405570329","S09975067963","S84892523707","S49172947475","S45847383922","S25208704632","S11997713338","S58863321929","S20397932183","S70692649719","S79662302972","S61748616902","S25602152765","S41796841909","S14915820870","S38324835173","S61240761958","S73439175525","S98399936105","S12966027219","S62134063194","S10290579567","S59496819614","S60756080110","S29363087479","S78004456338","S27188564069","S31652351999","S44619437503","S99030226587","S88049452695","S41173421113","S19360670037","S88441514408","S36750237110","S13954196189","S18542565948","S87059548862","S86108613077","S70583599971","S64153331320","S12713736382","S08953185037","S80849225397","S44085346199","S66137169627","S81287045431","S97752770872","S13614176393","S24800965886","S35778037346","S09865875731","S90468424502","S01093255785","S94262406278","S67529778909","S51757735550","S92694120269","S37848457866","S59945788244","S62293149545","S83772672749","S98078252079","S25260066012","S69878605484","S35543157736","S67706296957","S51134743899","S30145369084","S17959471993","S13153339999","S10796040612","S99821422534","S46889722128","S73897812638","S17276762889","S29067281262","S90827967418","S36823179865","S60271906703","S34801451157","S10809823022","S25372087901","S63616982680","S31202097524","S93330891068","S54902959769","S61444302016","S00228917197","S93626176034","S29360524120","S14358932479","S95976577288","S74497211784","S81157665948","S56215984303","S17296535731","S12623629528","S10675046895","S04671378942","S23667695196","S70723186479","S22941221599","S67675717364","S33783069410","S56954736528","S46383548573","S94916487592","S73668329357","S67876265858","S15695661468","S93027300128","S11539528915","S06324214742","S27493374549","S21526354545","S10281299290","S37181622569","S52520868877","S39477152925","S34741140238","S36536303142","S70429846997","S99580482384","S23350146546","S08507935588","S36498845301","S76312650699","S29561063155","S45004052077","S20364534786","S33081655841","S30861203053","S80225607176","S85092149927","S92015762503","S71582290067","S75727382151","S57368911673","S06171557531","S93875005842","S65603359882","S51249794819","S13710668845","S78069898147","S16122449990","S37082559717","S83136605014","S66866690722","S63073799604","S13196819101","S73440215790","S83291768252","S59187848695","S00385192086","S89234514233","S91050916537","S77711085262","S93253095340","S02984925585","S25668993597","S90393843148","S59604771580","S13757812720","S15555601349","S30659567636","S10794155414","S93654011804","S25908933740","S60366344654","S18070810100","S54946459297","S23641092865","S46572958254","S37174870340","S50961117140","S36950132318","S79272015163","S63903208555","S42513341700","S64322719404","S03653576373","S94094840433","S63673068388","S84856956730","S75746143348","S07903341217","S65603020735","S72979204785","S32884131236","S59365493232","S72761538962","S86405340713","S59572961842","S85174235918","S45421096435","S75871949730","S79720242010","S05202289400","S94818561125","S34033014337","S69270088780","S01676082608","S43477984822","S49055781018","S53958358629","S27091058927","S86018916903","S81410756641","S72628017287","S49393628938","S55733211478","S05644117148","S89528141978","S48254101319","S95840856967","S67857625870","S53191809313","S10448980324","S33292995088","S59501887761","S61158117763","S87422483694","S18469563587","S56895414712","S09577413442","S87250792580","S97666753343","S99521359548","S52705698163","S26085059414","S84403733244","S32016353131",
			"S21977463899","S88104210093","S64617858121","S54527366252","S25358781330","S14592518127","S68198969821","S96581132014","S64738302471","S74239762699","S94156977914","S24163750748","S49552680863","S83799912959","S41341638553","S25029954592","S32852137507","S77369068225","S08287743339","S74634991361","S44460765562","S33008074678","S34660456459","S60363319399","S06957596609","S57067327642","S32724621056","S50658075879","S03858917376","S10221088713","S51021376803","S91616778817","S77243779091","S14591936347","S09101487069","S41171925116","S67316617131","S37788955227","S69633737920","S29371982500","S41233714781","S84365801617","S55743835617","S53066996164","S72569648104","S31487854869","S08478904955","S06570820857","S20013840914","S04203048045","S31775536271","S23926133914","S04581157013","S82727812627","S63300131323","S41761282195","S30024843074","S58364897843","S03024615937","S31769499832","S06418396568","S20877519796","S36035963703","S45940395126","S74115253831","S73771328669","S01902997724","S63095753838","S69871594188","S56572549607","S39385439817","S28720747619","S14615620627","S99304341144","S11654844385","S63513382259","S83952639541","S78382634801","S96177143978","S02707334677","S33475315168","S57114765968","S36690982028","S53215913721","S11965969688","S22217610204","S55467489256","S45796060473","S72130115604","S16104085597","S06271943667","S47071705003","S59378753263","S42955154492","S52054030045","S13969036023","S06783760862","S17684875894","S54863095360","S78012037420","S79423095665","S85252629036","S61104738334","S03129612185","S38471759210","S51436140764","S14285361153","S52214360507","S89282740026","S91868956779","S05886421040","S04313984557","S29397912652","S26773019504","S56785270511","S31812306163","S39864298007","S85056375294","S52999662755","S72011377955","S69562332149","S03544901104","S15582873222","S03268714394","S57232008043","S62600414129","S04506234443","S21025061306","S57362693405","S94735193618","S42675819210","S07576479900","S53445042302","S17255633267","S57584254345","S16985171570","S45177680785","S44267783887","S57767457784","S29860203246","S42602585627","S37689151181","S39455579981","S38738026764","S11657728169","S07455911642","S57800461641","S38333603121","S27501094256","S75417733884","S42440616385","S40740473558","S32514129486","S68514136319","S91112345477","S50756698143","S08160567996","S32754541881","S75198763012","S70760721270","S37033780930","S13000730574","S79245079709","S10643328266","S58056155149","S87270517103","S59587478903","S72647131020","S07095110047","S38372521392","S73726688166","S54119098984","S52552552973","S61050607969","S95586284180","S11377874406","S99697368394","S01429503394","S14006236672","S55897270495","S73171708653","S42558810142","S83488940266","S82310879771","S13892841183","S62711808966","S28938240276","S43985266724","S36395706675","S44922101867","S91273606310","S49027062676","S95691300046","S53306812121","S05248576075","S17162717421","S57656234922","S03503569397","S49793745690","S02073492052","S49374965075","S50110262079","S78909233883","S04316847187","S65014654492","S99451124781","S95056432645","S08079456508","S95896575692","S72340900426","S79611697978","S34438745002","S37610323468","S96349744734","S44877275419","S43236837403","S76120091317","S63404568109","S41417726557","S27861357810","S28540268341","S42557693632","S51791860805","S52458816057","S75015493993","S92075585320","S11515546990","S17635096919","S99879609165","S61180111659","S52535519577","S81636986430","S25789438140","S68923666946","S83435917962","S56609667820","S28171652749","S39732436803","S46517122307","S95675022738","S00594550250","S48928392693","S17272362030","S01116117566","S04087880305","S72217513591","S06043092066","S16336331931","S85362334816","S63846904147","S43853925779","S87475817183","S92387099062","S73291835219","S99029373678","S95489842770","S15256811742","S85080156555","S25863301099","S62348829700","S64018376792","S24346029973","S32425885769","S62789246051","S77924282447","S48588740844","S21505780214","S25582636091","S80581482722","S58221944788","S51608765018","S22683184458","S07683101893","S19754274343","S51351023439","S35966327467","S06307697088","S39539699876","S89421567819","S02233812524","S73110930117","S93780495374","S10403804045","S31278598829","S98607665321","S89086074575","S03995053433","S48000183958","S10770424011","S48036081966","S16767526327","S12858997542","S92204144672","S19002871664","S15716256938","S69757610870","S87635942990","S27460381703","S29817540837","S86434429536","S20963159325","S09594132540","S91062120012","S77077339099","S12861001507","S30671809364","S15201963725","S51730587662","S51380324302","S25599228782","S24193847507","S15536419066","S12451288966","S59845830248","S95477903976","S76414925228","S78177846062","S67097888230","S27331854907","S63576317621","S51959460493","S37141406131","S25757177855","S26473059728","S25073387706","S93412179986","S01248836024","S82116145006","S95819897449","S60282288335","S66353707734","S26563983835","S56796908497","S41372063355","S33569365578","S58469463928","S88690075582","S84248200933","S58911031354","S66382090653","S62446565514","S50704326748","S54834697814","S07675918052","S45365123009","S91997610087","S15520351804","S30295809276","S79223640084","S32903419671","S37998826071","S24396242804","S33179230573","S91998288941","S17222424999","S37743537174","S30618757670","S64619475715","S88273832559","S79076677444","S68936301505","S45557007817","S83856919397","S40241962014","S64172569150","S02175653902","S03040429683","S41926376141","S48334956603","S27924296892","S97242838075","S76354605471","S23450842418",
			"S86536411604","S75152765849","S24137765413","S16288980447","S46249954197","S73829926209","S84831940486","S14543835615","S40726901463","S68374982606","S47631398522","S48272252182","S41264725426","S25980708025","S94081587129","S57621902367","S76153457107","S77722727110","S32979658714","S42279079047","S82626405287","S39909393637","S11558772820","S28350843946","S90844490806","S98262027693","S86746067475","S33760641236","S22398992089","S29001160893","S98712510943","S98427939063","S29875232193","S04428152181","S93577701811","S54883844411","S67214403153","S40700436783","S24262299744","S66040743532","S30133892374","S94550537057","S10265724029","S67794535227","S29294952080","S23114021990","S12643414782","S42698218691","S18578105325","S28505881328","S69154643235","S07974086168","S29471724541","S58414043829","S94650408861","S06540634229","S30348586969","S42733025230","S69901189157","S30318504120","S43458801645","S37407767266","S20501731677","S96547104493","S37991970711","S10962969399","S98001778038","S84726615740","S74587116834","S07892813152","S79719585792","S25327451063","S88387360051","S27448708139","S19513187008","S01987076843","S99209369340","S80140699413","S84673085903","S88845760875","S29127750950","S57749239397","S17957187290","S42239987336","S67801015142","S17449476347","S54550039987","S71989899894","S13062882524","S45117100945","S42168340742","S97386080989","S58165748430","S25441247761","S30542757789","S21191261940","S75875103789","S73711177912","S72520514125","S66285992975","S25353808620","S25001205006","S43916880910","S55454617512","S50846477501","S21920801528","S47802523049","S54920182113","S66233751362","S41401708553","S11973086398","S65656822269","S59818292701","S86573266009","S42674250998","S56573219782","S73511512730","S67131104941","S46795133232","S42570702010","S39381200900","S16020575854","S64052126601","S01256886194","S84004372776","S02919458947","S77319997576","S51180771393","S09849104616","S37190676283","S29987267346","S47562176150","S54742666703","S06237463862","S19637134854","S84369529427","S02781156148","S21858773708","S83338424653","S37673644970","S14601654046","S72052787646","S29344464346","S51343836444","S59857522624","S25499648452","S51432440364","S81051906353","S51008228559","S02879527840","S09211375384","S07707071577","S12359989442","S45314530045","S07546597677","S82843153011","S57534874752","S11402551996","S13474487770","S12416845466","S02663917034","S28521554160","S74635839498","S38927592657","S24373085855","S41003666368","S09037446018","S27277476874","S08770343563","S73968501553","S15396439496","S25712722357","S27547375331","S12300135522","S27150136451","S37756858026","S72430141356","S50615730823","S79880214464","S78815825792","S25051938289","S97276816601","S00268298556","S20392257723","S61937991417","S31761410073","S16057734396","S23054330433","S24368629504","S95160983248","S36811512257","S62645276980","S47981151243","S56346260759","S01530001330","S40618979439","S54701270344","S21188904983","S70978363118","S57993083351","S94948107017","S40594572795","S82335795614","S17966689186","S20371697445","S45109783701","S89189228617","S05951870165","S65383891218","S01363633881","S02382716955","S70563117537","S42425717973","S52341131386","S57872892302","S81208536805","S13037652407","S91497502947","S29813862445","S13113112709","S20440475496","S75654792086","S83368252425","S90642270653","S44105162955","S56191066896","S88273794683","S17451731921","S62359535657","S81529135918","S31578025805","S39763784300","S69302742922","S49481510246","S20691474356","S73635736202","S16267223590","S20391915074","S48806738106","S63024924241","S79959275514","S81241486138","S41947457172","S26520651738","S52772983375","S89903096350","S67865345992","S90264186410","S01955444522","S29895303429","S21870893397","S76241737474","S15195711654","S78831540813","S75874970354","S65060688171","S10354515012","S92882794699","S49299645187","S64084691036","S73624119465","S46117955521","S15632719321","S71000690329","S06827303875","S03643673486","S74595794232","S21385990769","S45515912489","S49503928760","S40693017292","S28274061586","S07137636367","S44391845240","S99992221336","S82998460986","S47529078985","S05364829512","S86774386826","S96610791016","S63060862365","S41280721433","S90199127009","S79006942655","S13884845192","S29254973628","S23298465872","S75645996332","S44526106681","S22951300294","S22780095377","S68909813020","S17401480447","S22223684819","S01700228040","S97545609153","S44871070045","S49811953984","S38280427497","S56290974676","S57894757926","S08288361126","S56894514868","S92459497458","S02071682026","S88331897854","S88930940952","S78803186836","S13083975348","S11831606332","S55213622740","S27089053995","S03404894609","S20862436968","S78213809688","S31634418443","S64114132411","S08679463801","S00987311917","S34091474398","S70287373167","S88024849973","S51331490463","S01004597504","S88104085028","S00012215294","S83660966873","S49830592760","S77671572600","S33731189260","S63054450749","S70848312101","S24140777323","S14190602453","S34970060362","S79732868537","S11576861067","S40168141001","S30856443180","S58712056787","S66812631416","S51393154826","S50192255446","S57315986751","S26120689585","S24230254820","S06847766956","S73916604077","S41662464534","S16911315720","S70863203278","S88765458933","S70113034043","S05101260047","S60389120897","S20663875082","S63440162727","S67127550406","S85537475684","S11634499285","S77167488249","S10515727826","S45020088786","S61729993935","S51714095866","S73423503149","S08509579841","S85506418581","S90660215977","S58995429503","S81850964785","S43296752480","S94300942643","S01697602897","S56250993877","S85319748893","S05439362408","S07542288363","S36556980944","S53450793680","S58369246349","S54379041596","S20567581975","S91922054562","S61016503393","S05748000174","S23375686497","S54457377605","S78154576585","S80049046011","S34301508611","S92925895182","S35779752321","S92692595651","S22723539465","S29452714782","S97295872948",
			"S66948688506","S43045485638","S11243487570","S85868854473","S91544690296","S69919380090","S51491896183","S25112802346","S59747354460","S42879813463","S09292442901","S06068097474","S51619774332","S19482427434","S10031645303","S91771268174","S08184463949","S84924465982","S86944454305","S22712382294","S53598829900","S36937892046","S15768458551","S14298454758","S90813703509","S66484822526","S91105163140","S89687007524","S99554240597","S46803059376","S82141054319","S86682081544","S81946477880","S55271869622","S15666108568","S48806268103","S23508450634","S97459068606","S34819248482","S97496490695","S58135520283","S93162910986","S66158748784","S89926122020","S62105538076","S75216755524","S75670959425","S78121792289","S65679152970","S13264386564","S56716023413","S45663129139","S38931954808","S91615090478","S22522414763","S35657275913","S33896687878","S19055857805","S44526697319","S38885238773","S05802149072","S35761977276","S94748876812","S99372715531","S83392971274","S10963886222","S69777497976","S86809659134","S44692124648","S34799168338","S09915562776","S76727249332","S29328286767","S52309375774","S24644254832","S22345609007","S54043143759","S50233415632","S02115006385","S31196587338","S44295970172","S94577579632","S19291537128","S10532050001","S53716024534","S56332395607","S20404368778","S31939941861","S36860348319","S80332165928","S55574819046","S95704649369","S47321903268","S77510254901","S13688512904","S94479790829","S21758848525","S21633474102","S06356242296","S88154469715","S94918682725","S94638558279","S68781125462","S66602132190","S18569088818","S24490496969","S49068873216","S79416624773","S85459188015","S58353200108","S16672317509","S72508214652","S22325120195","S14922194064","S99671960632","S78271607486","S97987615662","S93443207522","S37943747075","S77307222970","S14272610383","S95739047951","S16857234398","S38064078150","S83195182541","S80995605540","S95379827448","S73384519234","S53023591568","S07316781637","S84277835625","S47475876404","S42055538437","S74082712962","S63281295279","S09565727789","S69949505721","S70001537260","S61314472532","S86447329554","S86317162935","S53903204933","S60491783200","S24398186688","S76470176750","S59873326819","S50201459524","S98786839998","S00269088032","S96507806186","S96353145635","S18583767090","S44156791701","S65237404541","S11208005127","S16219019791","S66516282215","S10287109852","S04119136989","S13066932240","S30575510459","S59604896501","S61970820949","S26556431450","S54531286836","S17274019413","S34592711915","S76927659705","S84129125261","S77988264649","S72335073212","S76000988899","S31031157585","S10529997465","S72597459264","S59768760965","S91431892870","S76848616977","S34457871776","S62282632225","S63972080418","S74485768403","S94156983561","S56777339521","S29493665303","S60696137214","S73384610998","S87417716411","S77798039764","S65900743859","S68597860118","S40084552856","S05859909436","S04949178366","S64145582187","S18514665440","S09136565699","S07207148127","S84199070297","S75039476910","S92192552524","S48530707484","S33284107636","S84577145102","S98173906606","S61032875374","S15426619114","S83873049325","S04385544269","S04439674313","S24079410975","S15569049842","S40490784790","S73295635177","S07125373690","S11936161746","S21591613311","S64666588384","S64586486268","S52432278893","S83957428350","S75696143940","S55636502760","S65593509611","S37511903261","S42702308341","S19049559021","S32745570234","S61215570413","S07276755711","S90726590289","S52414177615","S66723775807","S48730208675","S17674498926","S68408838139","S30675070289","S47787495280","S50382642584","S01467656650","S13479952401","S52796261745","S62021187746","S38081574793","S99985244835","S74838371882","S98428217241","S24982394187","S93427576536","S46691687443","S42710351281","S65167752636","S47013181685","S25038795228","S89558302388","S74577176316","S27352982198","S50221202082","S38315579448","S35199725621","S12264454116","S11963768527","S87267570577","S70629500472","S90472308534","S60960714758","S84623056386","S54496856464","S30469447034","S98706434912","S41795077809","S58648241430","S27758327405","S07370683892","S44517200321","S35754102424","S60750012855","S98847559639","S06925837053","S85084554152","S34790744740","S36862519123","S14730998607","S57438816782","S65002477997","S15455062650","S46537145451","S59149114554","S45545208781","S40434618690","S72582010517","S27872654508","S09860553060","S95179405174","S29411612222","S14623146981","S46907534669","S62710663894","S36465738266","S66371980593","S26003488179","S84163134800","S69425625143","S02033330484","S07543339074","S42192958913","S07139169705","S33834531170","S68541060404","S05652049529","S72343787859","S37294239872","S43007187012","S16019329937","S44666481642","S79197357817","S94682072066","S74556511037","S36468476158","S25526636563","S38531801787","S33325451978","S83290804570","S59350957048","S50757927255","S92445979481","S49304041958","S96059708185","S11023495151","S67658524605","S93527664962","S06389832752","S29493344188","S18964678935","S93976541766","S31286136873","S62918015594","S43375564276","S85956167065","S22635130688","S39347674110","S18718103538","S04625582414","S04319334785","S41309780123","S73856428735","S80615971894","S61532102546","S82473305653","S52820545048","S21544492637","S03183394405","S44805756122","S95340876096","S45379594021","S00709597151","S75549113946","S70241135553","S86231203473","S38901897052","S41738065875","S65826418459","S97998490100","S98638569755","S47853472158","S34846438364","S45127553923","S31352116606","S29398609172","S02441665903","S90543370989","S92713582693","S13518747660","S12784971606","S20829176146","S02066865643","S74383726081","S02384484633","S13760713900","S96701327188","S79402419584","S72477687830","S84043840149","S67283964378","S71242743055","S59564755696","S70287110610","S06093424700","S08494043002","S10284443789","S32865688334","S57512154825","S33683460601","S83805765018","S53201514464","S49664915810","S61394890563",
			"S81130808560","S80770292905","S93471654427","S90747317992","S15630817617","S59808915675","S93185429023","S32153226165","S77616740825","S82823956876","S54145609626","S11206561245","S96575693723","S37620165989","S90418775188","S24994468806","S16881252067","S12279511158","S45670299188","S61369432289","S85218729869","S91159466985","S31165479974","S31780975937","S24443673172","S39647401862","S07039814836","S02118346156","S25285827506","S35510098304","S25936373739","S73952724819","S08146487112","S31445363947","S74045453678","S42456966514","S24468951419","S50649037733","S53361338874","S14210227183","S71071021244","S11276901264","S24167660713","S42535152881","S38485130293","S96901815773","S03012586829","S45209059035","S77623812528","S73883980117","S46973000455","S50753004442","S86854831309","S11650900692","S50145158413","S98848255381","S08364084453","S80212116394","S28761066825","S74662843043","S84735781820","S44293864677","S87174603204","S28978821768","S27779919067","S43593433644","S12655189197","S96917796282","S68538920557","S01392725741","S12473664310","S78994423269","S74826558000","S29806404373","S93469493257","S69163386212","S04497115640","S57925266491","S54145394145","S35108769093","S90180905410","S90505865966","S98379701517","S85353421055","S76606269758","S87541340367","S78097697704","S37236453375","S60868265998","S81545753365","S93486347884","S06005657956","S25451298128","S90495518107","S34118926631","S07722043916","S69923517553","S73582107367","S25335442373","S25619711612","S66185437162","S25325812356","S29707593676","S03635836713","S32467720119","S18656676177","S20016286285","S50679912586","S81551565700","S76414968126","S86595652534","S11231943193","S89623864087","S09953737658","S81553868493","S90214837046","S18288501588","S27837186842","S86104698178","S69659833231","S68426154052","S70299057994","S49143728267","S69968353732","S65349078288","S47044869797","S40724960426","S22345010447","S67269589131","S57160809679","S80822435208","S92263399120","S23026674793","S70608872609","S01281329026","S83799581259","S91109739161","S67472507311","S03559962469","S63372522965","S25537235419","S29984843750","S30162366745","S11436595061","S56369678750","S05922751096","S36812084137","S28761347024","S15316054675","S98535823657","S88752197638","S58919817311","S25788499948","S39003071610","S20802057209","S12468402445","S41588994624","S33431627653","S64758169584","S59611768701","S81508783646","S19235298198","S83474177246","S09042997330","S27107541240","S98280016556","S78264203429","S63174951618","S51819477073","S17566842986","S98790452643","S29118240663","S17194435027","S37087911704","S02520269352","S19786824282","S35792741109","S97617543785","S36398880612","S56120261010","S52371387427","S81074039259","S86452184506","S70494523392","S25235994265","S54594455807","S30237697587","S40232992669","S08786201114","S02547456790","S17499201648","S47385867595","S07968021464","S34871181946","S80698845738","S83873153482","S15024102524","S30356284192","S14496936315","S46869687526","S75453327517","S59359192479","S49136375791","S70424670963","S04776204168","S66388202774","S78778493283","S44171553488","S26165791256","S00540024767","S21018503754","S01024819644","S50540754249","S36127570076","S77588323360","S95055753715","S01346176708","S25634879902","S44722756519","S98125075302","S13757119914","S27460648780","S81591796568","S68056977370","S71338709754","S19386555754","S04305667646","S87803869652","S69587988453","S60736572028","S65873076347","S34498806110","S04746950426","S56802884981","S67823332312","S43000595892","S61103498171","S98296728350","S71068752522","S56978112369","S05891979683","S01751986408","S31477991189","S85917776472","S48450447325","S43024758297","S40954487327","S41898891916","S93293804989","S99706087099","S56556447034","S11072948272","S73951198634","S69105050122","S68375836509","S69508134709","S27949924444","S27004579958","S84029335174","S24927168143","S68255704418","S44444614126","S35383111902","S18708920987","S46435878789","S48365223087","S77811032413","S77261643053","S70269850252","S76195786702","S06540352864","S11079450316","S36794295816","S72710985669","S29878235409","S03212262091","S29167009563","S82964883034","S81280826454","S41702909837","S25145524993","S45130120765","S51579464617","S05010149995","S03620469553","S22474496093","S73496869951","S04589584145","S78478967124","S53504965015","S10815956486","S71668028305","S42150439832","S53180139623","S64890537090","S17334684103","S98197329806","S46224751206","S15880612677","S66171304765","S04691896413","S22817922962","S96180543810","S03836550530","S48501321828","S69200612703","S41276031416","S23659177200","S34153415943","S01480256562","S40503789848","S83024107267","S52463350579","S15106941524","S21398228703","S37754461960","S36057599337","S42148354719","S41443925889","S79235913001","S07900803009","S87489006515","S74018945349","S63309026255","S88206483830","S51902949953","S01533777970","S29426110574","S26270624048","S33658161543","S79310155558","S43737251934","S28680505570","S48315894123","S39418928037","S42973924533","S82787886699","S27726076341","S69412616517","S55425041865","S32474877617","S23722761865","S80529578474","S27374809448","S44448993700","S94637844143","S76257495306","S96347660046","S15405374560","S95014126714","S54377776952","S10252939389","S96589512452","S03728211465","S15833092647","S16777420586","S56370698778","S52826735404","S86912767951","S72891141610","S35634287557","S73705956475","S99064326640","S30634592079","S91609960117","S02276498129","S13781203763","S60478125261","S00378075328","S71170829422","S69756582385","S11887957765","S52193934238",
			"S63908254531","S96251794140","S35743237817","S36513030761","S22172971308","S35012428330","S82774338727","S07778631325","S99634654780","S42238994431","S92298470508","S20967519177","S74366989595","S66409691928","S19145299742","S82392638485","S44191536225","S86918724602","S92752572904","S89253536797","S84038969861","S92732458523","S40135265404","S84138105086","S77731490802","S87981813813","S16769436603","S29213370676","S84552038920","S27817496146","S36562199584","S09699205426","S15285593408","S86781269647","S36550936343","S23238559578","S96827291494","S84872713537","S86624390497","S91424663897","S69472937073","S02321028239","S38971434586","S86709563204","S03804371902","S95187283543","S07998146401","S73000579051","S87347289286","S74908218349","S71145387200","S23438494522","S87515173776","S13401074225","S71726365458","S88831327453","S55364583018","S44285522238","S32816125273","S28387301304","S53855188643","S77784301304","S78730417331","S51353544533","S45734494637","S03965048680","S92203408732","S41205102276","S39000580487","S66391727792","S72835548830","S35219968944","S82801758981","S45552436194","S86337259909","S70650825743","S05076299321","S80586891836","S83177758790","S00066263914","S48267331238","S28021200981","S82446845340","S73799990140","S44940520399","S78338522985","S69191496094","S52978562783","S40505365972","S80798494292","S68931347028","S83792187971","S84154506684","S63460020125","S23253160737","S83215724183","S13690601262","S82682710367","S54880021394","S79295853486","S45178922214","S92040199394","S61550516900","S54181740423","S74718505862","S87401117578","S06080953968","S73025554443","S37675354167","S28492800892","S46098127270","S48209919194","S48786596301","S41543810935","S11081165128","S37294260310","S89586559317","S19912911406","S97553876178","S27384187300","S77937728062","S97587084698","S50035443427","S87153510151","S78931201236","S17960704325","S24858630064","S29569593702","S05837411078","S69932801607","S21911152195","S48995195567","S37631811636","S90571414790","S21631024771","S80897340018","S92627035789","S89575035860","S94747555037","S73919825751","S31367238830","S93958228927","S62160281519","S52322679905","S65692217193","S86121420215","S16244548884","S57822622386","S54097344418","S05292771071","S87151952769","S20934428272","S00099240904","S40386378391","S72946102791","S10713330285","S64056762072","S13048464711","S14360586416","S41911557296","S82105320071","S36507386623","S25138510274","S58560623458","S26243274494","S74085407634","S86225925268","S66787229638","S63589293609","S86534147637","S40655519551","S72346971655","S34806667832","S79315784911","S78845575138","S32999392558","S55550516002","S95417446168","S09691142062","S75802626699","S82516973009","S69036985540","S19838954035","S10759271674","S21869843084","S02904373889","S17057724909","S82472058898","S14571033446","S27375733871","S39701398406","S24664308758","S96737912232","S04533814827","S80810971995","S09367453551","S85443841835","S38467603677","S97956967188","S32017605973","S12904975422","S94645269066","S53338123165","S33866509439","S01075717925","S45551216930","S51227483490","S06908893315","S54036347938","S00766538671","S17492250661","S73985517998","S16392448634","S51447019997","S52367554723","S82979452710","S17093675914","S15859770815","S13314841832","S25715599361","S96657183951","S91232100226","S63183866309","S38610942492","S72692991325","S28712179548","S79394540168","S79226181251","S11048685182","S99561261112","S74409184807","S87786905998","S71617836865","S03923092628","S21941788481","S20566030777","S84048968355","S24757290706","S60187297137","S21959362774","S18326461682","S50725776018","S64582543819","S05136652486","S33771997861","S55874970800","S03258042442","S09090255968","S78460564029","S02012529884","S68094129915","S93583151343","S59271233678","S66692620040","S21659878113","S23513731452","S50462271885","S42682041677","S40274944357","S42299690071","S28984073734","S10986410389","S74227561225","S00272998698","S34061861963","S38769019923","S46572527357","S18488326870","S20994975889","S64279229306","S60615986013","S16022452079","S98040364004","S72680922862","S45452607974","S89955067764","S83251587969","S42409440824","S32867005865","S74392264796","S16905165317","S40856683013","S42533183381","S39582344991","S35321962128","S26700104751","S95822792825","S50344010498","S90195889702","S39537526858","S25071716200","S88615324108","S00881748221","S63975165080","S67545444692","S44812970889","S67062282052","S00116246606","S84977718049","S95482508371","S54601126278","S03193663921","S50269900721","S70691644180","S17304957763","S14996480492","S13754479923","S37624864868","S25192638800","S92549657370","S67433291033","S29013565916","S84508768731","S85177003554","S09410333475","S65983961167","S74083957773","S21669501672","S15757567248","S52741338688","S76192487454","S38400668556","S04500097505","S67855939747","S18424760688","S62557602735","S83948891022","S36502717027","S55007363059","S01182687167","S69781834814","S01854084228","S52017714547","S83216980995","S08550637282","S45877680980","S64222781735","S58744266044","S41615870945","S33974216789","S12519403580","S25578712965","S94154852840","S43656166172","S04830055873","S97748175439","S89220895493","S73097775788","S70854906555","S02959465521","S64550019518","S72168827151","S96618969417","S51487642388","S71113845609","S48568055109","S65307850629","S72709238654","S09963366989","S99524946469","S82328984550","S74646570573","S28044454769","S78805164261","S47500326125","S09037127074","S33945461504","S00965054427","S54315746952","S49282592701","S62765190771","S52917628152","S31786761630","S10099362977","S76203263916","S94719347468","S78804103454","S33884057870","S93123536082","S39535096055","S93865088777","S84055491194","S24452207765","S33919221469","S13824795302","S28330447004","S58551680922","S00125700580","S56574022793","S11132389174","S73015114682","S56066852865","S10911139291","S78138949807","S59479899692","S88304227143",
			"S76298835061","S46018595062","S12993228634","S57761199747","S06290712243","S66700512708","S24335266034","S22049992486","S64982512649","S63706872744","S88284380659","S89614001939","S82192282374","S74803603826","S03127125406","S90338422452","S31358887954","S19546001633","S60837833826","S46747470392","S16180145141","S46447773743","S42968949190","S05846598133","S44130246218","S85748510287","S34613248535","S46416223717","S18283035778","S91422650617","S12856120003","S08552484580","S97984238371","S72354853199","S69489057151","S37213488392","S11384074600","S81769787744","S24115713921","S78558402677","S13276921616","S77005431328","S36634785114","S26964242719","S99550540037","S44315163259","S45584025005","S10518163389","S46853945601","S19087984592","S24208459668","S98580608312","S87580670117","S34778473430","S31004074428","S60588595647","S85220679519","S53828415340","S10644553443","S42011849211","S14459622441","S77616313929","S85771839618","S52415453401","S07501197618","S93938896926","S03630633493","S86913563440","S97411558922","S23420863253","S82324323154","S84777052634","S14073394614","S67521312090","S30787567623","S76567441658","S13475033451","S56963534169","S79022523568","S75701012569","S54808978379","S58239844302","S77591080193","S00134179505","S44757624469","S88810852632","S27595159812","S95842091615","S44746400408","S96793633583","S71701099393","S71242499059","S92434214022","S01674365923","S36862416552","S73132936239","S39890439031","S48277929057","S42209826026","S01781380707","S45209112816","S07335457977","S32142357968","S23569529651","S74422533338","S89160210080","S41588288371","S88796937564","S86820443766","S19426703497","S37031541300","S95088702788","S89862644469","S03086900634","S50785830083","S05070734184","S59620029645","S55971956483","S95008322668","S78602578328","S34792795662","S40276333840","S59173996095","S00829096561","S99884127853","S24071465967","S24805994042","S13388816856","S75173983085","S82798865375","S60094898979","S73616828322","S18743596706","S17139949480","S42889074259","S21209244694","S15442427561","S11287837786","S99826334044","S27767738123","S63351912664","S27446530612","S18981967909","S64968717917","S98310890822","S97047015966","S73069617481","S21402211881","S46021505710","S16963932533","S70545834655","S90941548856","S53681347829","S13944254206","S97617296338","S73484042051","S25763937494","S04125697137","S41696418204","S32457539957","S46811045284","S79636042466","S36742595059","S63343254715","S62477144311","S32482334459","S83929521711","S49087279574","S71167629711","S19060171131","S71422576601","S22564497084","S22171950363","S16956096419","S22184280923","S81990187317","S52022978802","S52095622600","S71082197792","S85507815900","S90430234267","S53910194634","S02883274104","S95866941582","S68411633906","S22451732195","S91108656079","S81851818472","S82312025461","S92648218239","S39136655846","S75446455973","S65433082486","S37795813864","S87853765976","S70230504744","S17358646044","S16701120512","S41650476169","S84478050710","S39827473265","S78771521457","S42496220829","S38870624927","S04123124403","S85300202591","S87984887649","S72375492252","S17036049619","S04607652010","S89125949025","S79705841553","S89487107708","S76458232429","S90424159401","S78433414073","S29625924936","S63328351587","S72108705244","S10134485514","S51274371934","S15504251105","S48485898113","S36194449819","S84192524370","S58468080670","S59710085906","S83437589585","S57361765095","S55942666773","S82916472709","S66539288032","S00087218639","S21795629088","S64582950638","S76056593954","S79795040462","S11083122562","S17276621867","S88073449061","S42790500250","S34686426090","S10791633924","S06202837052","S90880728161","S64098844368","S56588757474","S89143875780","S37936875202","S77362128410","S71458056081","S63722839645","S80818655359","S71351780759","S90438301796","S60979310098","S10871934228","S35924430519","S94671631220","S63306460588","S17294897262","S19384835873","S68641660993","S23076882521","S70414423876","S86064418592","S32298811983","S05729430813","S45817908733","S06247645938","S88845755217","S30036343424","S89287235345","S04118625915","S87305889473","S20980936090","S25029745980","S84218554663","S92144591298","S00275616742","S55668967547","S05170370864","S55710403431","S90631257055","S65254245220","S44528784319","S53189505991","S30212986327","S32297552472","S77848795024","S94071303783","S01667009432","S11008847961","S00760363353","S51097550698","S31446560814","S10380769232","S21821580014","S13978943258","S94992285976","S30686304831","S97895747806","S09911681998","S00659034221","S31108001495","S18228252173","S75324732347","S66051531495","S54339708305","S98900000273","S62882540544","S13809438426","S15947576308","S66719432848","S58767494182","S00496055258","S74004327707","S79405091351","S96272781598","S56930101409","S80811322120","S38939692772","S54202142938","S18095518603","S59507872306","S08072294068","S80008823263","S20248486922","S13871175260","S85278022125","S52491684310","S52214914506","S84681006662","S76616966093","S48647412807","S05967617840","S63963713952","S88311438560","S49433400775","S09328842243","S44711663306","S12124530761","S99471052032","S92460720242","S15919861680","S91562829659","S73407979385","S58185579225","S34391328975","S31426319457","S63558413299","S09454759262","S31550707972","S96518911986","S39281354239","S95574772767","S00884061242","S22962842597","S82472763208","S10578068486","S18615856634","S22508208682","S26124461101","S12008618055","S50248811983","S67050166334","S89969163254","S90817026591","S42007136319","S56140620365","S91189779828","S66418313830","S71377118551","S45288268834","S57513528406","S71307100697","S29959813658","S51195175477","S52673104979","S63182539906","S77059750032","S50729762957","S38487572069","S92840483059","S56803795193","S80119648419","S79180792074","S33760644848","S20211524126","S21041947440","S39484797887","S17903003864","S54607666285","S18638159771","S60620512247","S21104672783","S90728209966",
			"S76719670296","S12688238231","S55690161693","S10104147608","S30930361336","S68625444542","S93587887496","S81567038099","S90769810945","S70420999861","S94198538804","S39683783221","S33981330336","S25692380384","S70998313925","S57779445097","S41548816712","S75860744625","S15810870855","S16864053863","S40085518480","S90416372336","S08184482200","S95370843824","S13443315329","S86706920749","S97784420889","S39940380283","S57410334602","S68758615234","S04486141590","S15250740228","S95202398535","S91928682781","S16786983470","S29602341408","S88623450116","S93871759643","S06793807893","S58357219289","S86435094324","S66958711321","S70734560251","S63027456554","S70709879300","S00177508403","S86928503782","S27110057964","S88786289589","S76608810291","S80180174458","S36794961804","S78189661660","S03380880978","S21946315835","S43551154783","S26794098387","S00517661967","S28859485550","S63010443309","S93853286663","S17379082139","S31713661996","S13940400185","S54186309118","S37490632196","S91608688053","S95920143388","S63256534405","S96708050982","S28810981441","S23251435557","S67714424669","S37046351068","S01586957591","S77474918784","S35046435105","S83137717822","S62185074238","S43760698470","S69787421562","S60447311355","S21643631663","S10293382583","S16655707329","S72697943463","S64994110672","S63523169116","S30626325417","S21455191887","S27687936512","S53381410064","S82736896951","S18219839073","S07026982194","S78276415650","S13749419186","S92906790266","S92293561319","S61320287977","S32960667419","S72002424276","S40772195617","S46039406788","S23296238007","S38680028029","S04118610988","S73003400907","S78969031978","S29371573514","S77150449067","S51112137225","S36794276894","S33000523986","S54083534982","S00949895315","S28911347305","S83414277015","S50143679639","S96652702337","S79003507964","S42311742789","S50601291780","S17794412447","S02484763723","S58995169577","S97921330614","S37399326913","S40508402611","S82708593502","S71679742633","S95907274430","S88998320431","S57016345345","S08734806457","S15652546408","S99193368016","S59035526699","S17971025485","S95777473696","S52832757124","S18326648560","S72916874518","S60570184997","S61842958735","S03736332568","S32562614653","S11737152081","S60048264374","S04894434900","S51789146432","S35256303387","S51409284135","S92915353876","S76332641421","S01280059991","S77234214250","S92194191108","S02641608538","S46062653868","S83488555839","S55878974275","S76543763918","S04699939438","S10743438310","S45568963385","S40940357433","S99224266477","S40967336842","S40270950018","S36504148170","S20207384895","S50328232712","S79535816426","S90678753394","S86335960846","S58966317314","S44359494057","S32423627275","S50406794497","S26962119735","S06638596571","S94300698909","S92417264516","S23128291586","S15038746972","S39872347440","S05557652935","S87589104048","S76241759610","S36025349268","S73723482719","S57597316623","S79472539105","S02456511872","S38310888964","S59112770239","S33589664021","S51549016066","S36632636820","S95877815547","S01613581728","S12291130615","S80495706385","S41436787406","S15757548470","S82839904847","S59198690102","S72715259974","S54487841703","S54437023941","S86554214214","S20812103067","S07328385966","S20107896776","S15566522602","S76931044238","S97895024707","S18890473907","S18843274080","S30550528823","S33978991488","S34190868878","S86620127488","S98078846605","S18100955128","S38920839810","S92980542347","S93568148669","S22538249556","S62897076034","S66239586261","S76675101780","S42679963764","S41641242765","S77861993452","S82225497008","S87764711189","S67118093875","S34883323647","S62183594586","S83117445712","S43125570953","S88845025313","S66585234099","S30654968280","S62296606978","S96526552827","S74354938092","S68040146382","S11869186851","S37028792125","S08501901451","S98656799802","S30912700230","S14014610051","S37163047861","S22436597811","S84342843359","S17123465162","S85411605573","S60068768218","S60684096680","S41951342605","S31013187270","S69395277574","S32623938066","S60069332459","S38170408086","S20518630346","S26976670771","S17378312295","S45393890462","S92164087522","S04751033297","S42450942351","S10185971297","S76949992066","S21215259453","S22164815534","S83433589822","S90571478540","S64923076411","S03113097159","S32155538082","S16047697415","S65223874680","S53694296390","S73165869095","S12406391558","S31545781206","S41374308516","S13804915094","S57281421190","S41838064486","S14795288386","S26705294882","S36279192768","S28702656433","S44391304999","S70369168247","S12998951635","S17414568519","S70492663592","S31915057161","S99692873875","S35990327089","S01151901427","S88415598341","S02623688402","S94923330027","S98774217173","S58899810693","S76950871945","S84713603827","S90755200976","S86649859031","S54250636958","S62541507117","S31473119725","S78159064361","S34732682954","S25261490104","S43980751614","S67524343950","S31237783727","S00977503038","S82508590164","S54553874608","S32771901233","S51017972154","S73990610499","S29967490624","S56388430735","S05457192049","S76270453286","S82645246178","S48211637474","S09951586636","S74426141592","S91605830183","S66040527883","S86638675172","S83030713667","S98543881620","S40223402055","S19387358118","S81528547207","S36039699206","S17714649397","S46661292481","S57161897966","S06424447151","S52874493983","S34183378025","S50814486138","S40875250609","S29201450055","S59923263166","S93214885071","S20572230479","S51447526536","S09040923706","S90902613062","S12507223114","S43736595895","S84678470651","S69080400741","S97914451515","S36069864284","S38876018571","S89442490112","S17077229646","S01085876309",
			"S18882374851","S35671885526","S38071694849","S58182152084","S24460903804","S05528985028","S79510468385","S51040199609","S74831569788","S59078666595","S98734184085","S11947842545","S91654632404","S43888658461","S36388767574","S88748576996","S01786740315","S89495527095","S01650181558","S45253715513","S68517184724","S28282746139","S09948566759","S41279867691","S53063650371","S15875128271","S51724481831","S46209599220","S22192362908","S12096202507","S48899256108","S61670572739","S71124446236","S72674365364","S46796723045","S08639057357","S57014145649","S08351453510","S02918383989","S15595144840","S57273185153","S29151370368","S25048356705","S09249578701","S18484036780","S12635275305","S74248589790","S12090244997","S32081436053","S44212920986","S60973183207","S91540248268","S02201629512","S68936442307","S31957660211","S33685132719","S10432105751","S61385214047","S86596859355","S06253390535","S57484313677","S56392871583","S41865397869","S76544162383","S58266344206","S06492463732","S28046124527","S43905092889","S68483456377","S67472338917","S67271042269","S14459292047","S96354631782","S28759691992","S36624292986","S86203576046","S58282454736","S16857012565","S68692267059","S39187820299","S77629967997","S64985530188","S93483832819","S57179140438","S97675428857","S71424545983","S22689971674","S81871674174","S30734496548","S19323218829","S86737905692","S87750758298","S96079765605","S61418147584","S05530739212","S74308458150","S34170210312","S97089859834","S25109635913","S23321078362","S05267774392","S31736417740","S70786634429","S59556391437","S81252149065","S72850692501","S25622486600","S08741750150","S55035133637","S72540977751","S94961218174","S89666962440","S13570671368","S25149453117","S06748878717","S32628595125","S19496682088","S01491098004","S14118235176","S64318514567","S44497946904","S79204513232","S68898470400","S73072054005","S07883142148","S93015215623","S48140412065","S61737478965","S28900108182","S56833845415","S58820932594","S75603295198","S59111324545","S32291718643","S75322779398","S15933074163","S65711623242","S69827345366","S04298575849","S65220903973","S71457835257","S94397396944","S07340258902","S09062175131","S15368873153","S60083936516","S37604621299","S22252151144","S82725447772","S24281890275","S62795627906","S76501104360","S95946381905","S21080512614","S21908317277","S20520197368","S89707286436","S56819189369","S70238917350","S78083749566","S95825489520","S58045984105","S29739217047","S58824562016","S18904361910","S25552336376","S39013179111","S96040194648","S66984996333","S28135812635","S00552104930","S75192306992","S58575501623","S23197656619","S46258398724","S70842695869","S68614832910","S10617651523","S55222193838","S91938345799","S68798245188","S75385117619","S08247454215","S41651242364","S38585683462","S27898781704","S11093428294","S23026089248","S84476326740","S86152274205","S69385521880","S83866103374","S63569436459","S26020882814","S66049392010","S31527236925","S65453281828","S81107458292","S33485223393","S85941278304","S97603305188","S55715893065","S82957795642","S96291190965","S48942606942","S60616297515","S67655188992","S10856698292","S77729606932","S99122364939","S07338582499","S57582224894","S58514793408","S31786762640","S15540115329","S92917697995","S04278571198","S88488786584","S37250521909","S64254635066","S43074719816","S47593381836","S14458955775","S41133666729","S23952061643","S56446313708","S26747337096","S89586487641","S52100030288","S98466291115","S93378926556","S21107110441","S66040217923","S34234994376","S82183596859","S39485166365","S03761454713","S21946766075","S56288023040","S85169719050","S05257377301","S53068545214","S60772459974","S53027819774","S23084354107","S91069402805","S56778976498","S91378471228","S58425626677","S59744320020","S10433120022","S24352310024","S02605197205","S07339368389","S46380532511","S31025361581","S83063043498","S54613668838","S02452362992","S38442634658","S39493091583","S59238244711","S91955047396","S65416028515","S94980142547","S93831482280","S36454566798","S38845820230","S35698713231","S29448099152","S80926727044","S08477456508","S81395461651","S38252586132","S91915235818","S69629529796","S03108878269","S48599066422","S43252688356","S01697724764","S43022996278","S16123981146","S60654307283","S38004720372","S58200442995","S58562386188","S45157795415","S94266282397","S61486581930","S34944404456","S33715343438","S95179836628","S52807200002","S77013001973","S38961651729","S36859112545","S61487946996","S95947019333","S34428024354","S67202030322","S24996925082","S63704525503","S17136539655","S57371523153","S88634944096","S15987416404","S78556000470","S02946168920","S71180945670","S72715825260","S04672865761","S34361923431","S00832116087","S65334013720","S41959117452","S12496024095","S57117995143","S78842449656","S59408079857","S85512997142","S90097151735","S47106357569","S63034515891","S92283775710","S74956162369","S40848249286","S91564425318","S52264525325","S52169822024","S99339239286","S72913624958","S18484493730","S51286901983","S65583327159","S56291445331","S49439603675","S61835944632","S04629761698","S71561735927","S42972671970","S75877574924","S64507534881","S29699920968","S27153774968","S02952612736","S90300388017","S64602635567","S58752981015","S47274708354","S39098630800","S37432575771","S16482483183","S60791680723","S60191144566","S82104806692","S23388258823","S23570745049","S15500134810","S68638070469","S96509095828","S33608425761","S22477752448","S00734722972","S73729334688","S28204786036","S96721227907","S81265394156","S37050004063","S73974210451","S39668039554","S34999308261","S69159196085","S02999148975","S59693798076","S03786139185","S13004325833","S02844300615","S41097566239","S16924649498","S79128457608","S34807115300","S13696601101","S04300244745","S84769132464","S49554998259","S48540615613","S65491635578","S30152828611","S92635965175","S03532390715","S83637446010","S65177416978","S07919175713","S96615338210","S23031800545","S19577046599","S08469406701",
			"S91708604420","S28025380717","S59041856896","S45763022354","S61955822710","S80652778647","S10948414431","S68530225742","S57289297488","S24674571810","S26828312102","S84075874555","S45497087628","S21781519502","S29244593347","S66022829508","S94905738331","S66677455718","S24796744675","S50778857451","S03124514850","S47381023753","S98895412460","S64536131462","S58607235244","S14704559910","S60318011016","S69804342107","S08537468645","S61284635816","S00756642582","S53716349606","S66537015923","S42280002394","S38877053006","S22622523667","S10233040129","S52174309972","S31521066938","S06748673719","S12107698802","S65485779054","S59442049934","S47014956600","S67173554456","S62907873106","S06550728259","S58887797291","S50879938683","S79851657188","S29129442680","S38778437037","S63027548377","S90920786145","S15887688125","S79674450865","S63372260695","S20444016549","S36028816119","S64165843153","S71500146237","S97673936063","S16965504933","S73619337655","S64456691426","S88645407221","S93967386571","S90070366306","S78192202588","S45960394272","S56675078201","S64467437563","S75081772368","S23024242141","S27708409732","S65422882694","S68978923884","S39352350727","S86434958886","S86760983422","S01306567861","S87089752359","S08365030667","S68418166323","S38655155243","S88023833286","S07950108256","S87050228446","S23884627190","S42717569021","S50008455469","S75297267197","S79801977126","S86482361227","S37755217368","S31305805941","S62930865714","S70173638750","S65740147764","S94281347322","S45605926215","S49014279512","S11901022385","S20633249945","S04457817560","S69771589499","S55991743194","S81357273857","S66609048278","S65296702622","S07568158030","S41899577130","S96277409660","S93430033168","S61358508738","S57804574691","S47483306563","S63872417669","S30176058975","S72816019460","S61310450986","S96227369506","S27797836283","S29882178065","S16175586422","S82457165401","S53242094569","S11155814824","S70768007125","S26554304928","S95109804790","S81349395756","S34655864144","S00343410813","S14645136878","S14404715086","S83228870749","S16158001343","S20187389445","S45309718135","S09908541698","S95130891369","S73574761322","S52786370884","S53469175625","S82395802389","S81823325388","S60816086110","S78952040652","S85411080670","S90813415986","S97191512682","S90369257539","S06377902431","S63273822259","S49342113517","S66099098372","S28539070304","S72719099091","S35293456355","S21237530986","S75015978416","S28051922579","S32119023014","S85174974551","S17406873861","S85718152454","S14940882846","S36016575676","S59041879232","S92497485574","S24039210281","S39847730742","S27206094210","S69351756150","S99710089561","S58832230367","S52683219665","S59126219021","S34721421594","S81574596159","S02526690017","S86999649601","S01986629081","S84583988470","S91415111678","S55006211064","S55744571174","S35402024011","S69818652420","S43096572893","S85612548289","S96510320739","S89631357373","S73499029781","S07935739673","S10004926310","S03436676699","S10920033640","S56031468110","S17333395483","S80563350723","S04437267879","S29877185399","S55607642486","S36650069227","S65005279567","S96668462259","S14968520207","S09572507882","S64340190258","S15309902181","S45630289540","S13911089031","S31054462920","S19575096818","S73871790931","S65862704661","S68729201534","S71518040772","S34279124883","S79526943953","S40766714991","S28753806513","S00066413269","S67017612821","S04418481731","S73691679251","S12974188008","S23660697094","S96847152757","S32081956246","S68166652126","S15486513476","S38794932875","S23707485555","S26620753025","S82254383052","S65145541731","S71526891625","S28028187555","S22299140147","S67224840648","S94092519553","S90493061739","S67773017331","S85714199803","S62485488308","S06334011875","S08431260733","S22908819391","S72322055185","S42805649957","S44101691108","S29969519963","S33531802461","S62735156858","S79294630342","S52049649134","S10878278181","S03215957266","S41480750992","S13081932686","S98068033974","S61201480820","S99820662322","S86260646174","S68285923527","S21871935285","S85796304311","S97232063292","S79467069360","S45990296870","S19141684331","S82431970339","S01137400002","S32391261510","S66457274234","S47423429894","S76733564770","S36063528112","S53840318224","S98361563271","S46283234493","S03944239523","S07703355639","S23236037443","S60740007618","S48109894192","S15876705608","S18806781578","S75888789193","S56355063516","S47619047612","S81806403056","S52896258096","S94170640688","S43592661035","S07886359788","S42769777371","S34679724225","S78305876676","S03504909827","S27983950911","S03253279848","S70229224425","S60063228536","S11694783405","S57586679260","S00749840913","S30248877305","S35556952694","S12245294721","S29680279393","S49829100853","S31347243916","S79845806738","S25425491202","S33321970180","S37955357810","S38490917350","S40370818070","S96320875140","S21477516770","S91881158995","S76667326257","S98343592082","S31957890265","S11299268679","S91329907464","S72579606053","S26471068887","S11220718272","S24051537514","S48212976025","S06195888498","S13063420810","S43074619127","S06392574809","S07164097212","S08223147856","S07578483494","S44497258962","S81532780342","S71501376933","S24664054534","S70754284367","S76310730635","S78503705052","S84233274307","S69630384829","S40085925021","S59058622234","S66118807119","S91467372361","S57558473459","S06716618052","S45810807818","S28502958412","S25819004139","S28552443497","S47519410937","S63596481077","S93957721443","S66539967336","S63873639775","S46183033398","S19448438580","S94862746891","S68296784485","S61535183724","S53285447342","S84905487550","S79235729718","S26601214333","S27249341604","S21608943391","S54463378231","S76609527519","S81538597082","S08876146242","S10871671983","S80743153598","S75568683659","S80209808892","S92534101662","S81718722305","S64297635892","S43998841249","S06682867749","S16236966950","S27249462583","S35159387291","S63144234388","S03910968396","S63840376214","S51294960342",
			"S88412940505","S81189150678","S24791466045","S36329695578","S03464050576","S38081217549","S54917780692","S16518196095","S54260121708","S09133753327","S17867275935","S45797692992","S96572432577","S66572699753","S59576158233","S02376940322","S42771474591","S90784583376","S95757307023","S58375096532","S25158604211","S56143493755","S86268077011","S70067818927","S49422508104","S54962062904","S07665918927","S49339758521","S78594435436","S97492447719","S94493022146","S11424605605","S76463118815","S55054904216","S35620762553","S56529490413","S40148378010","S83310880284","S76000218815","S04853332077","S89620203330","S07949388316","S04895032579","S79965269379","S31726491459","S51178534416","S39093304272","S62822066960","S63327656776","S32499450231","S05735268055","S54835851970","S39558883206","S64135443523","S99111487307","S06396695850","S23542673560","S76684506706","S22673811153","S86042838802","S45756062575","S40331005021","S19519445509","S91842836727","S37043707386","S52790464272","S44062086976","S91122069105","S81018237733","S33344583429","S83916377733","S74556796738","S63407094366","S40002217250","S70709214769","S50824595329","S71058700622","S43357449323","S66070716171","S68825291964","S04110867822","S98140390705","S85968871953","S40289004691","S22511970123","S07348953503","S26655590389","S94896998772","S59619768635","S20438830992","S60348151958","S46598516190","S88757849409","S49689720059","S03387940682","S09462943280","S34788992627","S31229330514","S30208066225","S72286575075","S60498536694","S39352374319","S92362593241","S24953233954","S34024618117","S96335022532","S40389011456","S61779677176","S36766776205","S51240953716","S97347506006","S05232834462","S17014171332","S81331459283","S44405136968","S28047011317","S74157789172","S32002887719","S05770011759","S16743065423","S45306242957","S63988476210","S18063692106","S26861288010","S39683306766","S13739732331","S95603399058","S75080624188","S05843983288","S90733323497","S96800092060","S51324609024","S27738600019","S48961313065","S60806112571","S07290332189","S26876782941","S49270751615","S06736949251","S82468081426","S77031150289","S42212624868","S43517504525","S16223563412","S98018858195","S52064363659","S24539607391","S29380645658","S20415585192","S81052379865","S58076198840","S53171496437","S22106007524","S81380847263","S31849460606","S03520785325","S31332336041","S96733720511","S75237408589","S69435222699","S29676865244","S23530144050","S12159329668","S90210969626","S58907331716","S09580379796","S06481766978","S60771044909","S98936924272","S90693473767","S32783722457","S66031657700","S16840406681","S56982742602","S67283504967","S06392551796","S72469727151","S91013788300","S80864369580","S12701343893","S49530630934","S55799526067","S80162456038","S48491791524","S83600758337","S73734762253","S09406013332","S77330334686","S46500508712","S03978554043","S94661885700","S29908815956","S43277356780","S44499219873","S81420075437","S60618606207","S02409770589","S73805718320","S89403436775","S82216369938","S71858986106","S01456777538","S78991750627","S20291202864","S71965653603","S84677339928","S82157134764","S57098506022","S60918240319","S42988858464","S14023786953","S92128744671","S11462678583","S77318168008","S83650167656","S78554333342","S28376648753","S26770059620","S87309519910","S23619276113","S06270661173","S69892546664","S84023915727","S90739827800","S64279531838","S07357763702","S69035638671","S52389907158","S77105821652","S53379978889","S62308707562","S65565140606","S14817330683","S48131718880","S78043615927","S93935358160","S01507017421","S54012011959","S21895382102","S68192802007","S10735094434","S20228967259","S59741589684","S74545645019","S90426420740","S44222895159","S04870873108","S35987842573","S93181845881","S50260911175","S64977149621","S38864669736","S89841698509","S53636967687","S24495340537","S70715540851","S73324950823","S69918807564","S14045879179","S97080271732","S79080905402","S09450521735","S10933869810","S15204959573","S15125586367","S41613948018","S98759571912","S45679024415","S49966427168","S83592071516","S43787375850","S30704043703","S52145285122","S62027902060","S05024870268","S88464524693","S40406297834","S49666194158","S80381598465","S63856350631","S85257967173","S01364134081","S66948871999","S37675666243","S29387872922","S70580771015","S56671202926","S39350640320","S99015054158","S71713439735","S94745838995","S82239483488","S53547950246","S42645212055","S66754356110","S16403668663","S26452450526","S53679004643","S16823562697","S95487919749","S33378579576","S13906809319","S65283037732","S15098658945","S46010248974","S32546651516","S36707723756","S85460242324","S24970825426","S70441475733","S74341614704","S62897255376","S43508152800","S48060687094","S83025787761","S19804032786","S60918698462","S54851158314","S85002851443","S70409506392","S63519094474","S61046894995","S19805397008","S63084998033","S78318049096","S55474720952","S97343451796","S70193842124","S62092934246","S54981131617","S02236747700","S94690053019","S39312292866","S40931104858","S76162471622","S33363905649","S50583649783","S25125326059","S04657965124","S96804982889","S13178696715","S16513098206","S04812195047","S89545907396","S49908842127","S85724421094","S16557435009","S90190804932","S00647029732","S88335175944","S46514284951","S69079970393","S30419314097","S88150519041","S47788097568","S53133783103","S04676175632","S16004694835","S13210761636","S28282645090","S32173076783","S53558477758","S00695272654","S08708821034","S07373962040","S29825934410","S23399266416","S98226725758","S18243264515","S99209690287","S13050703840","S29658309133","S29802693395",
			"S02562778013","S98639268784","S71753391697","S86354987527","S52231915923","S16753060234","S56263743614","S32092112854","S81599808953","S48051082222","S99300774146","S68028485691","S07215265470","S10773435022","S41121176778","S95899687896","S26098176160","S53456527708","S33789918235","S46462194727","S77041083509","S98133115789","S04897252317","S90599357454","S52005123051","S36696036632","S32249749734","S99050989851","S79706144279","S27379267515","S05434448506","S56607290480","S41459987716","S15632134792","S39698167657","S17028723460","S23059952880","S99857611541","S04052956173","S37094631244","S86338029589","S70148940474","S08503692307","S65738294971","S96504989840","S44313562187","S05191706869","S69893265476","S45381852807","S35427185748","S38579764215","S44671392620","S85274248367","S94249329009","S19816243644","S01825456045","S08461710420","S54805748778","S80595656606","S04083480572","S57973177335","S20803171991","S77903641768","S49069641369","S54040259788","S94039615401","S47258209971","S64882020150","S30463982190","S39711490750","S75774602998","S82624445639","S94127513682","S55319172050","S52496492184","S50796277123"};
	public synchronized void handleReward(Player p){
//		if(p.getLevel() == 71){
//			String serverName = GameConstants.getInstance().getServerName();
//			if(serverName!=null && (serverName.equals("缥缈问仙") || serverName.equals("客户端测试"))){
//				int index = getRewardIndex();
//				if(index >= codes.length){
//					logger.warn("[玩家达到71级送激活码] [错误:已经送完] [index:"+index+"] ["+p.getLogString()+"]");
//					return;
//				}
//				try {
//					MailManager.getInstance().sendMail(p.getId(), new ArticleEntity[]{}, "内测赢取首发限量版称号", "激活码："+codes[index]+"，二测期间达到71级的玩家，送激活码一个，在首发期间兑换唯一炫彩称号。", 0, 0, 0, "二测71级送激活码");
//					logger.warn("[玩家达到71级送激活码] [成功] [index:"+index+"] [code:"+codes[index]+"] ["+p.getLogString()+"]");
//					ddc.put("71级送激活码", index+1);
//				} catch (Exception e) {
//					e.printStackTrace();
//					logger.warn("[玩家达到71级送激活码] [异常] [index:"+index+"] ["+p.getLogString()+"]",e);
//				}
//			}
//		}
		if(p.getLevel() != 70 && p.getLevel() != 110){
			return;
		}
		String articleName = "";
		if(p.getLevel() == 70){
			articleName = "70级系统大礼包";
		}else if(p.getLevel() == 110){
			articleName = "110级系统大礼包";
		}
		try {
			Article a = ArticleManager.getInstance().getArticle(articleName);
			ArticleEntity ae = ArticleEntityManager.getInstance().createEntity(a, true, ArticleEntityManager.升级礼包, p, a.getColorType(), 1, true);
			MailManager.getInstance().sendMail(p.getId(), new ArticleEntity[]{ae}, "全民冲级好礼", "全民冲级好礼", 0, 0, 0, "全民冲级好礼");
		} catch (Exception e) {
			e.printStackTrace();
			logger.warn("[玩家达到升级送大礼包] [异常] [articleName:"+articleName+"] ["+p.getLogString()+"]",e);
		}
		
	}
	
	public void initActivityData(){
		//领取银票的绿色服
//		List<LoginActivityArticle> articles = new ArrayList<LoginActivityArticle>();
//		articles.add(new LoginActivityArticle(Translate.第1天, Translate.用于获得10两银票, Translate.银块+"x8", Translate.恭喜您获得了银块+"x8", "zhouyi",0, 8,Translate.银块,2,8));
//		articles.add(new LoginActivityArticle(Translate.第2天, Translate.用于获得10两银票, Translate.银块+"x10", Translate.恭喜您获得了银块+"x10", "zhouer",0, 10,Translate.银块,2,10));
//		articles.add(new LoginActivityArticle(Translate.第3天, Translate.用于获得10两银票, Translate.银块+"x12", Translate.恭喜您获得了银块+"x12", "zhousan",0, 12,Translate.银块,2,12));
//		articles.add(new LoginActivityArticle(Translate.第4天, Translate.用于获得10两银票, Translate.银块+"x14", Translate.恭喜您获得了银块+"x14", "zhousi",0, 14,Translate.银块,2,14));
//		articles.add(new LoginActivityArticle(Translate.第5天, Translate.用于获得10两银票, Translate.银块+"x16", Translate.恭喜您获得了银块+"x16", "zhouwu",0, 16,Translate.银块,2,16));
//		articles.add(new LoginActivityArticle(Translate.第6天, Translate.用于获得10两银票, Translate.银块+"x18", Translate.恭喜您获得了银块+"x18", "zhoul",0, 18,Translate.银块,2,18));
//		articles.add(new LoginActivityArticle(Translate.第7天, Translate.用于获得10两银票, Translate.银块+"x20", Translate.恭喜您获得了银块+"x20", "zhoutian",0, 20,Translate.银块,2,20));
//		Set<String> set = new HashSet<String>();
////		set.add("新功能测试");
//		set.add("天下无双");
//		set.add("海纳百川");
//		set.add("琼楼金阙");
//		set.add("飘渺仙道");
//		set.add("万里苍穹");
//		set.add("盛世欢歌");
//		set.add("修罗转生");
//		Set<String> set2 = new HashSet<String>();
//		ContinueLoginActivity cla = new ContinueLoginActivity(TimeTool.formatter.varChar19.parse("2013-04-10 10:00:00"), TimeTool.formatter.varChar19.parse("2113-05-30 23:59:59"), new Platform[] { Platform.官方 }, set2,"20130406绿色服",articles,ddc,ddcKeys,set);
		
		//国服除绿色服
//		List<LoginActivityArticle> activitys2 = new ArrayList<LoginActivityArticle>();
//		activitys2.add(new LoginActivityArticle(Translate.第1天, Translate.用于兑换连登奖励, Translate.连登令旗+"x1", Translate.恭喜您获得了连登令旗+"x1", "wujiang",0, 1,Translate.连登令旗,2,1));
//		activitys2.add(new LoginActivityArticle(Translate.第2天, Translate.用于兑换连登奖励, Translate.连登令旗+"x2", Translate.恭喜您获得了连登令旗+"x2", "wujiang",0, 2,Translate.连登令旗,2,2));
//		activitys2.add(new LoginActivityArticle(Translate.第3天, Translate.用于兑换连登奖励, Translate.连登令旗+"x3", Translate.恭喜您获得了连登令旗+"x3", "wujiang",0, 3,Translate.连登令旗,2,3));
//		activitys2.add(new LoginActivityArticle(Translate.第4天, Translate.用于兑换连登奖励, Translate.连登令旗+"x3", Translate.恭喜您获得了连登令旗+"x3", "wujiang",0, 3,Translate.连登令旗,2,3));
//		activitys2.add(new LoginActivityArticle(Translate.第5天, Translate.用于兑换连登奖励, Translate.连登令旗+"x3", Translate.恭喜您获得了连登令旗+"x3", "wujiang",0, 3,Translate.连登令旗,2,3));
//		activitys2.add(new LoginActivityArticle(Translate.第6天, Translate.用于兑换连登奖励, Translate.连登令旗+"x4", Translate.恭喜您获得了连登令旗+"x4", "wujiang",0, 4,Translate.连登令旗,2,4));
//		activitys2.add(new LoginActivityArticle(Translate.第7天, Translate.用于兑换连登奖励, Translate.连登令旗+"x4", Translate.恭喜您获得了连登令旗+"x4", "wujiang",0, 4,Translate.连登令旗,2,4));
//		Set<String> set3 = new HashSet<String>();
//		Set<String> set4 = new HashSet<String>();
////		set4.add("新功能测试");
//		set4.add("天下无双");
//		set4.add("海纳百川");
//		set4.add("琼楼金阙");
//		set4.add("飘渺仙道");
//		set4.add("万里苍穹");
//		set4.add("盛世欢歌");
//		set4.add("修罗转生");
//		ContinueLoginActivity cla2 = new ContinueLoginActivity(TimeTool.formatter.varChar19.parse("2013-04-10 10:00:00"), TimeTool.formatter.varChar19.parse("2113-05-30 23:59:59"), new Platform[] { Platform.官方 }, set4,"20130406非绿色服",activitys2,ddc,ddcKeys,set3);
		
		//腾讯测试服，仙尊降世
		List<LoginActivityArticle> activitys3 = new ArrayList<LoginActivityArticle>();
		activitys3.add(new LoginActivityArticle(Translate.第1天, Translate.用于兑换连登奖励, Translate.连登令旗+"x1", Translate.恭喜您获得了连登令旗+"x1", "wujiang",0, 1,"連登令旗",2,1));
		activitys3.add(new LoginActivityArticle(Translate.第2天, Translate.用于兑换连登奖励, Translate.连登令旗+"x2", Translate.恭喜您获得了连登令旗+"x2", "wujiang",0, 2,"連登令旗",2,2));
		activitys3.add(new LoginActivityArticle(Translate.第3天, Translate.用于兑换连登奖励, Translate.连登令旗+"x3", Translate.恭喜您获得了连登令旗+"x3", "wujiang",0, 3,"連登令旗",2,3));
		activitys3.add(new LoginActivityArticle(Translate.第4天, Translate.用于兑换连登奖励, Translate.连登令旗+"x3", Translate.恭喜您获得了连登令旗+"x3", "wujiang",0, 3,"連登令旗",2,3));
		activitys3.add(new LoginActivityArticle(Translate.第5天, Translate.用于兑换连登奖励, Translate.连登令旗+"x3", Translate.恭喜您获得了连登令旗+"x3", "wujiang",0, 3,"連登令旗",2,3));
		activitys3.add(new LoginActivityArticle(Translate.第6天, Translate.用于兑换连登奖励, Translate.连登令旗+"x4", Translate.恭喜您获得了连登令旗+"x4", "wujiang",0, 4,"連登令旗",2,4));
		activitys3.add(new LoginActivityArticle(Translate.第7天, Translate.用于兑换连登奖励, Translate.连登令旗+"x4", Translate.恭喜您获得了连登令旗+"x4", "wujiang",0, 4,"連登令旗",2,4));
		Set<String> set30 = new HashSet<String>();
		Set<String> set31 = new HashSet<String>();
		ContinueLoginActivity cla3 = new ContinueLoginActivity(TimeTool.formatter.varChar19.parse("2013-04-10 10:00:00"), TimeTool.formatter.varChar19.parse("2013-05-30 23:59:59"), new Platform[] { Platform.台湾 }, set31,"20130523测试服",activitys3,ddc,ddcKeys,set30);
		
		List<LoginActivityArticle> activitys4 = new ArrayList<LoginActivityArticle>();
		activitys4.add(new LoginActivityArticle(Translate.第1天, Translate.用于兑换连登奖励, Translate.连登令旗+"x1", Translate.恭喜您获得了连登令旗+"x1", "wujiang",0, 1,Translate.连登令旗,2,1));
		activitys4.add(new LoginActivityArticle(Translate.第2天, Translate.用于兑换连登奖励, Translate.连登令旗+"x2", Translate.恭喜您获得了连登令旗+"x2", "wujiang",0, 2,Translate.连登令旗,2,2));
		activitys4.add(new LoginActivityArticle(Translate.第3天, Translate.用于兑换连登奖励, Translate.连登令旗+"x3", Translate.恭喜您获得了连登令旗+"x3", "wujiang",0, 3,Translate.连登令旗,2,3));
		activitys4.add(new LoginActivityArticle(Translate.第4天, Translate.用于兑换连登奖励, Translate.连登令旗+"x3", Translate.恭喜您获得了连登令旗+"x3", "wujiang",0, 3,Translate.连登令旗,2,3));
		activitys4.add(new LoginActivityArticle(Translate.第5天, Translate.用于兑换连登奖励, Translate.连登令旗+"x3", Translate.恭喜您获得了连登令旗+"x3", "wujiang",0, 3,Translate.连登令旗,2,3));
		activitys4.add(new LoginActivityArticle(Translate.第6天, Translate.用于兑换连登奖励, Translate.连登令旗+"x4", Translate.恭喜您获得了连登令旗+"x4", "wujiang",0, 4,Translate.连登令旗,2,4));
		activitys4.add(new LoginActivityArticle(Translate.第7天, Translate.用于兑换连登奖励, Translate.连登令旗+"x4", Translate.恭喜您获得了连登令旗+"x4", "wujiang",0, 4,Translate.连登令旗,2,4));
		Set<String> set40 = new HashSet<String>();
		Set<String> set41 = new HashSet<String>();
		ContinueLoginActivity cla4 = new ContinueLoginActivity(TimeTool.formatter.varChar19.parse("2013-04-10 10:00:00"), TimeTool.formatter.varChar19.parse("2113-05-30 23:59:59"), new Platform[] { Platform.腾讯 }, set41,"20130523测试服",activitys4,ddc,ddcKeys,set40);
		
		List<LoginActivityArticle> activitys5 = new ArrayList<LoginActivityArticle>();
		activitys5.add(new LoginActivityArticle(Translate.第1天, Translate.用于兑换连登奖励, Translate.连登令旗+"x1", Translate.恭喜您获得了连登令旗+"x1", "wujiang",0, 1,Translate.连登令旗,2,1));
		activitys5.add(new LoginActivityArticle(Translate.第2天, Translate.用于兑换连登奖励, Translate.连登令旗+"x2", Translate.恭喜您获得了连登令旗+"x2", "wujiang",0, 2,Translate.连登令旗,2,2));
		activitys5.add(new LoginActivityArticle(Translate.第3天, Translate.用于兑换连登奖励, Translate.连登令旗+"x3", Translate.恭喜您获得了连登令旗+"x3", "wujiang",0, 3,Translate.连登令旗,2,3));
		activitys5.add(new LoginActivityArticle(Translate.第4天, Translate.用于兑换连登奖励, Translate.连登令旗+"x3", Translate.恭喜您获得了连登令旗+"x3", "wujiang",0, 3,Translate.连登令旗,2,3));
		activitys5.add(new LoginActivityArticle(Translate.第5天, Translate.用于兑换连登奖励, Translate.连登令旗+"x3", Translate.恭喜您获得了连登令旗+"x3", "wujiang",0, 3,Translate.连登令旗,2,3));
		activitys5.add(new LoginActivityArticle(Translate.第6天, Translate.用于兑换连登奖励, Translate.连登令旗+"x4", Translate.恭喜您获得了连登令旗+"x4", "wujiang",0, 4,Translate.连登令旗,2,4));
		activitys5.add(new LoginActivityArticle(Translate.第7天, Translate.用于兑换连登奖励, Translate.连登令旗+"x4", Translate.恭喜您获得了连登令旗+"x4", "wujiang",0, 4,Translate.连登令旗,2,4));
		Set<String> set50 = new HashSet<String>();
		Set<String> set51 = new HashSet<String>();
		ContinueLoginActivity cla5 = new ContinueLoginActivity(TimeTool.formatter.varChar19.parse("2013-07-03 11:00:00"), TimeTool.formatter.varChar19.parse("2013-08-27 23:59:59"), new Platform[] { Platform.韩国 }, set51,"20130701韩国服",activitys5,ddc,ddcKeys,set50);
		
//		activitys.add(cla);
//		activitys.add(cla2);
		activitys.add(cla3);
//		activitys.add(cla4);
		activitys.add(cla5);
		
		/**额外的奖励配置*/
		Set<String> 开放服务器 = new HashSet<String>();
		开放服务器.add("兰若古刹");
		开放服务器.add("龙争虎斗");
		开放服务器.add("墨语流年");
		Set<String> 不开放服务器 = new HashSet<String>();
		String 奖励物品[] = {Translate.六一勋章碎片};
		int 奖励数量 [] = {1};
		int 奖励颜色 [] = {3};
		PrizeMore pMore = new PrizeMore(TimeTool.formatter.varChar19.parse("2013-04-10 10:00:00"), TimeTool.formatter.varChar19.parse("2013-06-06 23:59:59"), new Platform[] { Platform.官方,Platform.腾讯 },不开放服务器,开放服务器,奖励物品,奖励数量,奖励颜色);
		morerewards.add(pMore);
		
		Set<String> 开放服务器2 = new HashSet<String>();
		Set<String> 不开放服务器2 = new HashSet<String>();
		String 奖励物品2[] = {Translate.端午勋章碎片};
		int 奖励数量2 [] = {1};
		int 奖励颜色2 [] = {3};
		PrizeMore pMore2 = new PrizeMore(TimeTool.formatter.varChar19.parse("2013-06-08 00:00:00"), TimeTool.formatter.varChar19.parse("2013-06-14 23:59:59"), new Platform[] { Platform.官方,Platform.腾讯},不开放服务器2,开放服务器2,奖励物品2,奖励数量2,奖励颜色2);
		morerewards.add(pMore2);
		
		//2013-06-09 16:16 xiaofeiyang chaolei
		Set<String> 开放服务器3 = new HashSet<String>();
		Set<String> 不开放服务器3 = new HashSet<String>();
		不开放服务器3.add("豪杰聚义");
		不开放服务器3.add("一战成名");
		不开放服务器3.add("殇城之巅");
		String 奖励物品3[] = {Translate.周年庆勋章碎片};
		int 奖励数量3 [] = {1};
		int 奖励颜色3 [] = {3};
		PrizeMore pMore3 = new PrizeMore(TimeTool.formatter.varChar19.parse("2013-06-13 00:00:00"), TimeTool.formatter.varChar19.parse("2013-06-20 23:59:59"), new Platform[] { Platform.官方,Platform.腾讯 },不开放服务器3,开放服务器3,奖励物品3,奖励数量3,奖励颜色3);
		morerewards.add(pMore3);
		
		Set<String> 开放服务器_tw = new HashSet<String>();
		Set<String> 不开放服务器_tw = new HashSet<String>();
		String 奖励物品_tw[] = {"快樂勳章碎片"};
		int 奖励数量_tw [] = {1};
		int 奖励颜色_tw [] = {3};
		PrizeMore pMore_tw = new PrizeMore(TimeTool.formatter.varChar19.parse("2013-06-06 10:00:00"), TimeTool.formatter.varChar19.parse("2013-06-11 14:59:59"), new Platform[] { Platform.台湾 },不开放服务器_tw,开放服务器_tw,奖励物品_tw,奖励数量_tw,奖励颜色_tw);
		morerewards.add(pMore_tw);
		
		Set<String> 开放服务器_tw2 = new HashSet<String>();
		Set<String> 不开放服务器_tw2 = new HashSet<String>();
		String 奖励物品_tw2[] = {"端午勳章碎片"};
		int 奖励数量_tw2 [] = {1};
		int 奖励颜色_tw2 [] = {3};
		PrizeMore pMore_tw2 = new PrizeMore(TimeTool.formatter.varChar19.parse("2013-06-11 00:00:00"), TimeTool.formatter.varChar19.parse("2013-06-17 23:59:59"), new Platform[] { Platform.台湾},不开放服务器_tw2,开放服务器_tw2,奖励物品_tw2,奖励数量_tw2,奖励颜色_tw2);
		morerewards.add(pMore_tw2);
		
		Set<String> 开放服务器_tw3 = new HashSet<String>();
		Set<String> 不开放服务器_tw3 = new HashSet<String>();
		String 奖励物品_tw3[] = {"仲夏勳章碎片"};
		int 奖励数量_tw3 [] = {1};
		int 奖励颜色_tw3 [] = {3};
		PrizeMore pMore_tw3 = new PrizeMore(TimeTool.formatter.varChar19.parse("2013-06-18 00:00:00"), TimeTool.formatter.varChar19.parse("2013-06-24 23:59:59"), new Platform[] { Platform.台湾 },不开放服务器_tw3,开放服务器_tw3,奖励物品_tw3,奖励数量_tw3,奖励颜色_tw3);
		morerewards.add(pMore_tw3);
		
		/**老玩家回归奖励**/
		Set<String> set_old = new HashSet<String>();
		Set<String> set_old2 = new HashSet<String>();
		OldPlayerActivity old = new OldPlayerActivity(TimeTool.formatter.varChar19.parse("2013-12-10 10:00:00"), TimeTool.formatter.varChar19.parse("2016-10-19 23:59:59"), new Platform[] { Platform.官方 },set_old,set_old2);
		oldplayercomeback.add(old);
		
		Set<String> pet = new HashSet<String>();
		pet.add("太虚幻境");
		pet.add("昆仑圣殿");
		pet.add("化外之境");
		Set<String> pet_limit = new HashSet<String>();
//		//崆峒灵宝、万佛朝宗、无量净土、金宫银坊、冲霄云楼、王者之域、独战群神、傲剑凌云、碧海青天、侠骨柔肠、凌霜傲雪、仙岛秘境
//		pet_limit.add("崆峒灵宝");
//		pet_limit.add("万佛朝宗");
//		pet_limit.add("无量净土");
//		pet_limit.add("金宫银坊");
//		pet_limit.add("冲霄云楼");
//		pet_limit.add("王者之域");pet_limit.add("独战群神");
//		pet_limit.add("傲剑凌云");pet_limit.add("碧海青天");
//		pet_limit.add("侠骨柔肠");pet_limit.add("凌霜傲雪");
//		pet_limit.add("仙岛秘境");
		EnterPetDaoActivity petactivity = new EnterPetDaoActivity(TimeTool.formatter.varChar19.parse("2013-12-25 00:00:00"), TimeTool.formatter.varChar19.parse("2013-12-31 23:59:59"), new Platform[] { Platform.腾讯 },pet_limit,pet);
		activitys.add(petactivity);
		
		Set<String> set_task = new HashSet<String>();
		Set<String> set_task2 = new HashSet<String>();
		Set<String> set_task3 = new HashSet<String>();
		set_task3.add("国内论道(15体)");
		set_task3.add("国内论道(30体)");
		set_task3.add("国内论道(60体)");
		set_task3.add("国外论道(20体)");
		set_task3.add("国外论道(40体)");
		set_task3.add("国外论道(80体)");
		
		TaskRewardActivity task = new TaskRewardActivity(40,TimeTool.formatter.varChar19.parse("2013-11-08 00:00:00"), TimeTool.formatter.varChar19.parse("2013-11-14 23:59:59"), new Platform[] { Platform.官方 },set_task,set_task2,set_task3);
		activitys.add(task);
		
	}
	
	public void 进入迷城活动(Player player,String mapname,int michengtype){
		try{
			if(activitys!=null && activitys.size()>0){
				for(Activity activity:activitys){
					if(activity.isOpen()){
						if(activity.isEffective()){
							if(activity instanceof EnterPetDaoActivity){
								EnterPetDaoActivity a = (EnterPetDaoActivity)activity;
								a.doPrizes(player, mapname,michengtype);
							}
						}
					}
				}
			}
		}catch(Exception e){
			e.printStackTrace();
			ActivitySubSystem.logger.warn("[活动管理] [异常] [player:"+player.getLogString()+"] ["+e+"]");
		}
	}
	
	public void noticeTaskRewardActivity(Player p,String taskname){
		try{
			if(activitys!=null && activitys.size()>0){
				for(Activity activity:activitys){
					if(activity.isOpen()){
						if(activity.isEffective()){
							if(activity instanceof TaskRewardActivity){
								ActivitySubSystem.logger.warn("[完成任务额外奖励活动] [taskname:"+taskname+"] ["+p.getLoving()+"] [1]");
								TaskRewardActivity act = (TaskRewardActivity) activity;
								if(act.isRightTask(p,taskname)){
									ActivitySubSystem.logger.warn("[完成任务额外奖励活动] [taskname:"+taskname+"] ["+p.getLoving()+"] [2]");
									act.doPrizes(p, 0);
								}
							}
						}
					}
				}
			}
		}catch(Exception e){
			ActivitySubSystem.logger.warn("[活动管理] [异常] [taskname:"+taskname+"] ["+p.getLogString()+"] ["+e+"]");
		}
	}
	
	public void noticePlayerActivity(Player player){
		try{
			if(activitys!=null && activitys.size()>0){
				for(Activity activity:activitys){
					if(activity.isOpen()){
						if(activity.isEffective()){
							if(activity instanceof ContinueLoginActivity){
								ContinueLoginActivity act = (ContinueLoginActivity) activity;
								act.updateLoginData(player);
							}
						}
					}
				}
			}
		}catch(Exception e){
			ActivitySubSystem.logger.warn("[活动管理] [异常] [] ["+e+"]");
		}
	}

	/**
	 * 在玩家设置上次登录时间之前调用
	 */
	public void noticeOldPlayerBeforeLogin(Player player){
		if(oldplayercomeback!=null && oldplayercomeback.size()>0){
			for(Activity activity:oldplayercomeback){
				if(activity.isOpen()){
					if(activity.isEffective()){
						activity.doPrizes(player,0);
					}
				}
			}
		}
	}
	
	public void doPrizes(Player player,int index){
		if(activitys!=null && activitys.size()>0){
			for(Activity activity:activitys){
				if(activity.isOpen()){
					if(activity.isEffective()){
						activity.doPrizes(player,index-1);
					}
				}
			}
		}
	}
	
	public static boolean isSameDay(long time1,long time2){
		Calendar ca=Calendar.getInstance();
		ca.setTimeInMillis(time1);
		int year1=ca.get(Calendar.YEAR);
		int month1=ca.get(Calendar.MONTH);
		int day1=ca.get(Calendar.DAY_OF_MONTH);
		int hour1=ca.get(Calendar.HOUR);

		ca.setTimeInMillis(time2);
		int year2=ca.get(Calendar.YEAR);
		int month2=ca.get(Calendar.MONTH);
		int day2=ca.get(Calendar.DAY_OF_MONTH);
		int hour2=ca.get(Calendar.HOUR);
		return year1==year2&&month1==month2&&day1==day2;//&&hour1==hour2;//&&minute1==minute2;///
	}
	private long getTimesByStr(String time){
		if((time.split(":").length!=3)){
			return 0;
		}
		long now = System.currentTimeMillis();
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		String ymd = sdf.format(now);
		String newtime = ymd+" "+time;
		SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		long ms = 0;
		try {
			ms = sdf2.parse(newtime).getTime();
		} catch (ParseException e) {
			e.printStackTrace();
		}
		return ms;
	}
	
	/**
	 *  活动:一些活动功能参数的控制
	 *  type(0,1,2,3)
	 *  结婚:0,返回结婚需要的钱
	 *	宗派:1,返回宗派需要的钱
	 *	结义:2,返回结义需要的钱
	 *	武圣争夺:3，武圣争夺奖励翻倍
	 *	韩国称号:4,夏日消费得坐骑，赢称号
	 *  韩国封魔录双倍：5,双倍经验
	 *  灵脉双倍：6,双倍
	 *  铭刻活动条件限制: 7,奖励的物品名,数量
	 *  商店购买公告提示：8,必须购买的礼包和数量
	 */
	public CompoundReturn getValue(int type,Player p){
		CompoundReturn cr = CompoundReturn.create();
		long now = System.currentTimeMillis();
		if(type==8){
			if(!PlatformManager.getInstance().isPlatformOf(Platform.官方)){
				return cr.setBooleanValue(false);
			}
			long starttime = TimeTool.formatter.varChar19.parse("2013-06-24 00:00:00");
			long endtime = TimeTool.formatter.varChar19.parse("2113-10-24 23:59:59");
			boolean iseffective = starttime < now && now < endtime;
			if(!iseffective){
				return cr.setBooleanValue(false);
			}else{
				return cr.setBooleanValue(true).setStringValue(Translate.开天礼包).setIntValue(99);
			}
			
		}
		
		if(type==7){
			if(!PlatformManager.getInstance().isPlatformOf(Platform.官方,Platform.腾讯)){
				return cr.setBooleanValue(false);
			}
			long starttime = TimeTool.formatter.varChar19.parse("2013-06-24 00:00:00");
			long endtime = TimeTool.formatter.varChar19.parse("2013-09-29 23:59:59");
			boolean iseffective = starttime < now && now < endtime;
			if(!iseffective){
				return cr.setBooleanValue(false);
			}else{
				return cr.setBooleanValue(true).setStringValue(Translate.传奇鉴定符).setIntValue(1);
			}
			
		}
		
		if(type==5){
			if(!PlatformManager.getInstance().isPlatformOf(Platform.韩国)){
				return cr.setBooleanValue(false);
			}
			GameConstants gc = GameConstants.getInstance();
			String servername = gc.getServerName();
			String names [] = {"S10-구천현녀","S11-풍도대제","ST"};
			boolean iseffect = false;
			for(String name : names){
				if(name.equals(servername)){
					iseffect = true;
					break;
				}
			}
			if(!iseffect){
				return cr.setBooleanValue(false);
			}
			String starthour = "20:00:00";
			String endhour = "23:00:00";
			if(starthour!=null&&endhour!=null){
				long startms = getTimesByStr(starthour);
				long endms = getTimesByStr(endhour);
				if(now<startms || endms<now){
					return cr.setBooleanValue(false);
				}
			}
			long starttime = TimeTool.formatter.varChar19.parse("2013-06-24 00:00:00");
			long endtime = TimeTool.formatter.varChar19.parse("2013-08-22 23:59:59");
			boolean iseffective = starttime < now && now < endtime;
			if(!iseffective){
				return cr.setBooleanValue(false);
			}else{
				return cr.setBooleanValue(true).setIntValue(2);
			}
		}
		
		if(type==4){
			if(!PlatformManager.getInstance().isPlatformOf(Platform.韩国)){
				return cr.setBooleanValue(false);
			}
			if(p.getLevel()<10){
				return cr.setBooleanValue(false);
			}
			long starttime = TimeTool.formatter.varChar19.parse("2113-06-24 00:00:00");
			long endtime = TimeTool.formatter.varChar19.parse("2013-07-09 23:59:59");
			boolean iseffective = starttime < now && now < endtime;
			if(!iseffective){
				return cr.setBooleanValue(false);
			}else{
				return cr.setBooleanValue(true);
			}
		}
		
		if(p.getLevel()<20){
			return cr.setBooleanValue(false);
		}
		
		//不同活动的时间控制
		if(type==6){
			List<UnitServerActivity> usActivities= UnitedServerManager.getInstance().getUnitServerActivityByName("灵脉双倍");
			if(usActivities!=null){
//			long starttime = TimeTool.formatter.varChar19.parse("2013-06-24 00:00:00");
//			long endtime = TimeTool.formatter.varChar19.parse("2013-11-23 23:59:59");
//				boolean iseffective = starttime < now && now < endtime; 
				UnitServerActivity usa=UnitedServerManager.getInstance().getRightUnitServerActivity(usActivities);
				if(usa==null){
					return cr.setBooleanValue(false);
				}
				
				Set<String> 开放服务器 = new HashSet<String>();
//				开放服务器.add("域外之战");
//				开放服务器.add("仙道独尊");
//				开放服务器.add("天道再临");
//				开放服务器.add("神魂不灭");
//				开放服务器.add("国内本地测试");
				for(String name:usa.getServerfit().getOpenServerNames()){
					开放服务器.add(name);
				}
				GameConstants gc = GameConstants.getInstance();
				if(gc==null){
					return cr.setBooleanValue(false);
				}
				
				if(!开放服务器.contains(gc.getServerName())){
					return cr.setBooleanValue(false);
				}
				
				return cr.setBooleanValue(true).setIntValue(2);
			}
		}
		
		if(type==3){
			List<UnitServerActivity> usActivities= UnitedServerManager.getInstance().getUnitServerActivityByName("武圣争夺奖励翻倍");
			if(usActivities!=null){
				
//				long starttime = TimeTool.formatter.varChar19.parse("2013-06-24 00:00:00");
//				long endtime = TimeTool.formatter.varChar19.parse("2013-11-24 23:59:59");
//				boolean iseffective = starttime < now && now < endtime;
				UnitServerActivity usa=UnitedServerManager.getInstance().getRightUnitServerActivity(usActivities);
				if(usa==null){
					return cr.setBooleanValue(false);
				}else{
					Set<String> 开放服务器 = new HashSet<String>();
//					开放服务器.add("域外之战");
//					开放服务器.add("仙道独尊");
//					开放服务器.add("天道再临");
//					开放服务器.add("神魂不灭");
//					开放服务器.add("国内本地测试");
					for(String name:usa.getServerfit().getOpenServerNames()){
						开放服务器.add(name);
					}
					GameConstants gc = GameConstants.getInstance();
					if(gc==null){
						return cr.setBooleanValue(false);
					}
					
					if(!开放服务器.contains(gc.getServerName())){
						return cr.setBooleanValue(false);
					}
					
					return cr.setBooleanValue(true).setIntValue(2);
				}
			}
		}
		
		long starttime = TimeTool.formatter.varChar19.parse("2013-09-13 00:00:00");
		long endtime = TimeTool.formatter.varChar19.parse("2013-09-19 23:59:59");
		boolean iseffective = starttime < now && now < endtime;
		if(!iseffective){
			return cr.setBooleanValue(false);
		}	
		if(type==0){
			return cr.setBooleanValue(true).setIntValue(5000);//10000
		}else if(type==1){
			return cr.setBooleanValue(true).setIntValue(2500 * 1000);//5 * 1000 * 1000
		}else if(type==2){
			return cr.setBooleanValue(true).setIntValue(250*1000);//500*1000
		}
		
		return cr.setBooleanValue(false);
	}
	
	public void handle_QUERY_ARTICLE_EXCHANGE_REQ(Player player,QUERY_ARTICLE_EXCHANGE_REQ req){
		long now = System.currentTimeMillis();
		int selectType = req.getSelectType();
		String materialNames[] = req.getArticleNames();
		List<ExchangeActivity> activities = ExchangeActivityManager.getInstance().activities;
		if(logger.isInfoEnabled()){
			logger.info("[请求物品合成信息] [失败] [selectType:"+selectType+"] [activities:"+(activities==null?"null":activities.size())+"] [player:"+player.getLogString()+"] [materialNames:"+(materialNames==null?"null":Arrays.toString(materialNames))+"]");
		}
		if(activities==null || activities.size()==0){
			QUERY_ARTICLE_EXCHANGE_RES  res = new QUERY_ARTICLE_EXCHANGE_RES(req.getSequnceNum(),selectType, Translate.没有活动配方, -1L);
			player.addMessageToRightBag(res);
			if(logger.isInfoEnabled()){
				logger.info("[请求物品合成信息] [失败] [activities==null] [player:"+player.getLogString()+"]");
			}
			return;
		}
		System.out.println("11--selectType:"+selectType);
		StringBuffer sb = new StringBuffer();
		List<ExchangeActivity> list = new ArrayList<ExchangeActivity>();
		for(ExchangeActivity activity : activities){
			if(activity.getRewardType()==selectType){
				if(activity.getStartTime()<now && now<activity.getEndTime()){
					list.add(activity);
					sb.append(activity.getPeifangName()).append("\n");
				}
			}
		}
		System.out.println("22--selectType:"+selectType+"--list:"+list.size());
		
		if(list==null || list.size()==0){
			QUERY_ARTICLE_EXCHANGE_RES  res = new QUERY_ARTICLE_EXCHANGE_RES(req.getSequnceNum(),selectType, Translate.没有活动配方, -1L);
			player.addMessageToRightBag(res);
			if(logger.isInfoEnabled()){
				logger.info("[请求物品合成信息] [失败] [list==null] [player:"+player.getLogString()+"]");
			}
			return;
		}
		
		if(materialNames==null || materialNames.length==0){
			QUERY_ARTICLE_EXCHANGE_RES  res = new QUERY_ARTICLE_EXCHANGE_RES(req.getSequnceNum(), selectType,sb.toString(), -1L);
			player.addMessageToRightBag(res);
			if(logger.isInfoEnabled()){
				logger.info("[请求物品合成信息] [失败] [materialNames==null] [player:"+player.getLogString()+"]");
			}
			return;
		}
		System.out.println("22--selectType:"+selectType+"--list:"+list.size()+"--materialNames:"+Arrays.toString(materialNames));
		/**
		 * 该方式是随便放入一个，就显示能合成的预览，后改成，必须满足条件才显示预览
		 */
//		int values[] = new int[list.size()];
//		for(int i=0;i<list.size();i++){
//			ExchangeActivity a = list.get(i);
//			String names [] = a.getCostArticleNameArr();
//			int samenum = 0;
//			for(String name: names){
//				for(String name2 : materialNames){
//					if(name2.equals(name)){
//						samenum++;
//					}
//				}
//			}
//			values[i] = samenum;
//			System.out.println("names:"+Arrays.toString(names));
//			System.out.println("materialNames:"+Arrays.toString(materialNames));
//			System.out.println("=============================");
//		}
//				
//		int maxValue = Integer.MIN_VALUE;
//		int index = 0;
//		for(int i=0;i<values.length;i++){
//			if(values[i]>maxValue){
//				maxValue = values[i];
//				index = i;
//			}
//		}
//		System.out.println("相同数："+Arrays.toString(values)+"--index:"+index);
		ExchangeActivity activity = null;
		end:for(int i=0;i<list.size();i++){
			ExchangeActivity a = list.get(i);
			String names [] = a.getCostArticleNameArr();
			int samenum = 0;
			for(String name: names){
				for(String name2 : materialNames){
					if(name2.equals(name)){
						samenum++;
					}
				}
			}
			System.out.println("names:"+Arrays.toString(names)+"--materialNames:"+Arrays.toString(materialNames));
			System.out.println("materialNames:"+materialNames.length+"--samenum:"+samenum+"--"+names.length);
			if(samenum==names.length && samenum==materialNames.length){
				activity = a;
				break end;
			}
		}
		
		if(activity==null || activity.getGainArticleNameArr()==null || activity.getGainArticleNameArr().length==0 || activity.getGainArticleColorArr()==null){
			QUERY_ARTICLE_EXCHANGE_RES  res = new QUERY_ARTICLE_EXCHANGE_RES(req.getSequnceNum(), selectType,sb.toString(), -1L);
			player.addMessageToRightBag(res);
			if(logger.isInfoEnabled()){
				logger.info("[请求物品合成信息] [失败:活动没有配置奖励物品] [activity==null] [player:"+player.getLogString()+"]");
			}
			return;
		}
		
		//只有一个
		String giveName = activity.getGainArticleNameArr()[0];
		Article a = ArticleManager.getInstance().getArticle(giveName);
		if(a==null){
			QUERY_ARTICLE_EXCHANGE_RES  res = new QUERY_ARTICLE_EXCHANGE_RES(req.getSequnceNum(),selectType, sb.toString(), -1L);
			player.addMessageToRightBag(res);
			logger.warn("[请求物品合成信息] [失败:活动没有配置奖励物品] [物品不存在:"+giveName+"] [activity:"+activity+"] ["+player.getLogString()+"]");
			return;
		}
		System.out.println("33--selectType:"+selectType+"--list:"+list.size()+"--giveName:"+giveName);
		
		int color = a.getColorType();
		if(activity.getGainArticleColorArr().length>0){
			color = activity.getGainArticleColorArr()[0];
		}
		boolean isbind = true;
		if(activity.getGainArticleBindArr().length>0){
			isbind = activity.getGainArticleBindArr()[0];
		}
		System.out.println("44--selectType:"+selectType+"--list:"+list.size()+"--giveName:"+giveName+"--color:"+color+"--isbind:"+isbind);
		try {
			int getType = 0; //新创建
			ArticleEntity ae = DefaultArticleEntityManager.getInstance().getEntity(giveName, isbind, color);
			if(ae==null){
				getType = 1;
				ae = DefaultArticleEntityManager.getInstance().createTempEntity(a, isbind, DefaultArticleEntityManager.活动临时物品, player, color);
			}
			if(ae==null){
				QUERY_ARTICLE_EXCHANGE_RES  res = new QUERY_ARTICLE_EXCHANGE_RES(req.getSequnceNum(),selectType, sb.toString(), -1L);
				player.addMessageToRightBag(res);
				logger.warn("[请求物品合成信息] [失败:活动没有配置奖励物品] [创建物品失败:"+giveName+"] [activity:"+activity+"] ["+player.getLogString()+"]");
				return;
			}
			QUERY_ARTICLE_EXCHANGE_RES  res = new QUERY_ARTICLE_EXCHANGE_RES(req.getSequnceNum(),selectType, sb.toString(), ae.getId());
			player.addMessageToRightBag(res);
			logger.warn("[请求物品合成信息] [成功] ["+(getType==1?"新创建的":"已创建")+"] [请求类型:"+getTypeName(selectType)+"] [材料:"+Arrays.toString(materialNames)+"] [预览物品:"+giveName+"] [预览物品颜色:"+color+"] [预览物品绑定:"+isbind+"] [玩家:"+player.getLogString()+"] [cost:"+(System.currentTimeMillis()-now)+"ms]");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public String getTypeName(int type){
		switch (type) {
		case 0:
			return "简单兑换";
		case 1:
			return "攻击类型";
		case 2:
			return "防御类型";
		case 3:
			return "减抗类型";
		case 4:
			return "宝石升级";
		default:
			return "";
		}
	}
	
	public void handle_CONFIRM_ARTICLE_EXCHANGE_REQ(Player player, CONFIRM_ARTICLE_EXCHANGE_REQ req){
		long now = System.currentTimeMillis();
		int selectType = req.getSelectType();
		long materialNames[] = req.getArticleIds();
		long newId = req.getNewArticleId();
		if(materialNames==null || materialNames.length==0){
			player.sendError(Translate.没有合成材料);
			player.addMessageToRightBag(new CONFIRM_ARTICLE_EXCHANGE_RES(req.getSequnceNum(), 1));
			return;
		}
		
		if(newId==-1){
			player.sendError(Translate.配方材料不符合);
			return;
		}
		
		Knapsack k = player.getKnapsack_common();
		if(k!=null){
			for(long id : materialNames){
				ArticleEntity ae = ArticleEntityManager.getInstance().getEntity(id);
				if(ae==null){
					player.sendError(Translate.合成所需材料不存在);
					player.addMessageToRightBag(new CONFIRM_ARTICLE_EXCHANGE_RES(req.getSequnceNum(), 1));
					return;
				}
				if(k.hasArticleEntityByArticleId(id)==-1){
					player.sendError(Translate.translateString(Translate.背包中没有该物品, new String[][] { { Translate.ARTICLE_NAME_1, (ae != null ? ae.getArticleName() : Translate.该物品) } }));
					player.addMessageToRightBag(new CONFIRM_ARTICLE_EXCHANGE_RES(req.getSequnceNum(), 1));
					return;
				}
			}
			
			ArticleEntity tempAe = DefaultArticleEntityManager.getInstance().getEntity(newId);
			if(tempAe==null){
				player.addMessageToRightBag(new CONFIRM_ARTICLE_EXCHANGE_RES(req.getSequnceNum(), 1));
				logger.warn("[合成活动确认] [获取物品失败:"+newId+"] ["+player.getLogString()+"]");
				return;
			}
			
			for(long id : materialNames){
				if(id>0){
					ArticleEntity aee = player.removeArticleEntityFromKnapsackByArticleId(id, "活动合成物品删除", true);
					if(aee!=null){
						ArticleStatManager.addToArticleStat(player, null, aee, ArticleStatManager.OPERATION_物品获得和消耗, 0, ArticleStatManager.YINZI, 1, "活动合成物品删除", null);
						logger.warn("[合成活动确认] [扣除材料] [成功] [类型："+getTypeName(selectType)+"] [id:"+id+"] [材料:"+aee.getArticleName()+"] ["+player.getLogString()+"]");
					}else{
						player.sendError(Translate.删除物品不成功);
						player.addMessageToRightBag(new CONFIRM_ARTICLE_EXCHANGE_RES(req.getSequnceNum(), 1));
						return;
					}
				}
			}
			
			Article a = ArticleManager.getInstance().getArticle(tempAe.getArticleName());
			if(a==null){
				player.addMessageToRightBag(new CONFIRM_ARTICLE_EXCHANGE_RES(req.getSequnceNum(), 1));
				logger.warn("[合成活动确认] [物品不存在:"+tempAe.getArticleName()+"] ["+player.getLogString()+"]");
				return;
			}
			
			try {
				ArticleEntity  ae = DefaultArticleEntityManager.getInstance().createEntity(a, tempAe.isBinded(), ArticleEntityManager.CREATE_REASON_huodong_libao, player, tempAe.getColorType(), 1, true);
				MailManager.getInstance().sendMail(player.getId(), new ArticleEntity[]{ae}, Translate.恭喜合成成功_标题, Translate.恭喜合成成功_内容, 0, 0, 0, "合成活动");
				player.sendError(Translate.恭喜合成成功_标题);
				logger.warn("[合成活动确认] [成功] [类型："+getTypeName(selectType)+"] [物品："+ae.getArticleName()+"/"+a.getName_stat()+"] [materialNames:"+Arrays.toString(materialNames)+"] ["+player.getLogString()+"] [cost:"+(System.currentTimeMillis()-now)+"ms]");
				player.addMessageToRightBag(new CONFIRM_ARTICLE_EXCHANGE_RES(req.getSequnceNum(), 0));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	}
	
	/**
	 * 更改活跃度礼包数
	 */
	public void changeActivityNums(Player p){
		Integer recordNum = (Integer)ActivityManagers.getInstance().getDdc().get("活跃"+p.getId());
		if(recordNum!=null){
			int num = recordNum.intValue() - 1;
			if(num<0){
				num = 0;
			}
			ActivityManagers.getInstance().getDdc().put("活跃"+p.getId(), new Integer(num));
		}
	}
	
	public void noiceActivityButtonStat(Player p){
		
		int activityStst [] = new int[0];
		int activityColor [] = new int[0];
		List<String> activitys = new ArrayList<String>();
		int noticeStat[] = new int[0];
		String buttonName = "";
		{
			buttonName = Translate.日常;
			noticeStat = new int[6];
			noticeStat[0] = getClickStat(Translate.签到, p);
			
			{
				int 可领取的活动度礼包数量 = 0;
				PlayerActivenessInfo pai = p.getActivenessInfo();
				if(pai != null){
					boolean gotten[] = pai.getGotten();
					for(boolean g:gotten){
						if(!g){
							可领取的活动度礼包数量++;
						}
					}
				}
				 
				
				int cnums = getClickStat(Translate.活跃, p);
				if(cnums==1){
					if(可领取的活动度礼包数量>0){
						noticeStat[1] = 1;
						ActivityManagers.getInstance().getDdc().put("活跃"+p.getId(), new Integer(可领取的活动度礼包数量));
					}
				}else {
					Integer recordNum = (Integer)ActivityManagers.getInstance().getDdc().get("活跃"+p.getId());
					if(recordNum==null){
						ActivityManagers.getInstance().getDdc().put("活跃"+p.getId(), new Integer(可领取的活动度礼包数量));
						recordNum = (Integer)ActivityManagers.getInstance().getDdc().get("活跃"+p.getId());
					}
					int lastClickNums = recordNum.intValue();
					if(可领取的活动度礼包数量>lastClickNums){
						noticeStat[1] = 1;
						ActivityManagers.getInstance().getDdc().put("活跃"+p.getId(), new Integer(可领取的活动度礼包数量));
					}
				}
			}
			
//			if(getClickStat("Boss", p)==1){
//				WorldBossEntry[] arr = WorldBossManager.getInst().conf.bossArr;
//				WorldBossEntry levelBoss = null;
//				if (arr != null) {
//					int len = arr.length;
//					for (int i = 0; i < len; i++) {
//						WorldBossEntry be = arr[i];
//						if (be == null) {
//							continue;
//						}
//						if(be.monster!=null && be.status==WorldBossEntry.Status.alive){
//							levelBoss = be;
//						}
//					}
//					if(levelBoss!=null){
//						noticeStat[4] = 1;
//					}
//				}
//			}
			 
			ActivityManagers.getInstance().getDdc().put("日常stat"+p.getId(), noticeStat);
			
		}
		{
			buttonName = Translate.活动;
			List<ActivityShowInfo> infos = ActivityManagers.getInstance().infos;
			noticeStat = new int[]{0,0,0,0,0,0};	
			int index = 0;
			activityColor =  new int[infos.size()];
			for(ActivityShowInfo a:infos){
				if(a!=null){
					if(a.isEffect()){
						activitys.add(a.activityName);
						if(a.activityName_color!=null && a.activityName_color.trim().length()>0){
							activityColor[index] = Integer.decode(a.activityName_color);
						}
						index++;
					}
				}
			}	
			if(activitys.size()>0){
				activityStst = new int[activitys.size()];
				for(int i=0;i<activitys.size();i++){
					activityStst[i] = getClickStat(activitys.get(i),p);
					if(activityStst[i]==1){
						noticeStat[0] = 1;
					}
				}
			}
			
			CompoundReturn cr = AllActivityManager.instance.notifySthHappened(AllActivityManager.wafenActivity);
			if(cr!=null){
				if(cr.getBooleanValue()){
					noticeStat[4] = 3;
				}
				WaFenInstance4Private wp = WaFenManager.instance.privateMaps.get(p.getId());
				if (wp != null) {
					if(cr.getBooleanValue() && wp.isAllOpened()){
						noticeStat[5] = 3;
					}
				}
			}
			
			ActivityManagers.getInstance().getDdc().put("活动stat"+p.getId(), noticeStat);
		}
		
		int activitystat [] = (int[]) ActivityManagers.getInstance().getDdc().get("活动stat"+p.getId());
		int dailystat [] = (int[]) ActivityManagers.getInstance().getDdc().get("日常stat"+p.getId());
		
		if(activitystat==null){
			ActivityManagers.getInstance().getDdc().put("活动stat"+p.getId(), new int[]{1,1,1});
			activitystat  = (int[]) ActivityManagers.getInstance().getDdc().get("活动stat"+p.getId());
		}
		if(dailystat==null){
			ActivityManagers.getInstance().getDdc().put("日常stat"+p.getId(), new int[]{1,1,1,0,1,0});
			dailystat  = (int[]) ActivityManagers.getInstance().getDdc().get("日常stat"+p.getId());
		}
		
		logger.warn("[玩家上线] ["+p.getName()+"] [刷新button状态] [活动:"+(activitystat==null?"null":Arrays.toString(activitystat))+"] [日常:"+(dailystat==null?"null":Arrays.toString(dailystat))+"]");
		
		boolean isnotice = false;
		end:for(int i=0;i<activitystat.length;i++){
			if(activitystat[i]==1){
				isnotice = true;
				break end;
			}
		}
		
		NOTICE_ACTIVITY_BUTTON_STAT_RES res = new NOTICE_ACTIVITY_BUTTON_STAT_RES(GameMessageFactory.nextSequnceNum(), Translate.活动, isnotice==true?1:0);
		p.addMessageToRightBag(res);
		isnotice = false;
		end:for(int i=0;i<dailystat.length;i++){
			if(dailystat[i]==1){
				isnotice = true;
				break end;
			}
		}
		NOTICE_ACTIVITY_BUTTON_STAT_RES res2 = new NOTICE_ACTIVITY_BUTTON_STAT_RES(GameMessageFactory.nextSequnceNum(), Translate.日常, isnotice==true?1:0);
		p.addMessageToRightBag(res2);
		
	}
	
	public void handle_ACTIVITY_FIRST_PAGE2_REQ(RequestMessage message, Player p){
		ACTIVITY_FIRST_PAGE2_REQ req = (ACTIVITY_FIRST_PAGE2_REQ)message;
		long nowtime = System.currentTimeMillis();
		int activityStst [] = new int[0];
		int activityColor [] = new int[0];
		List<String> activitys = new ArrayList<String>();
		String menus[] = {};
		int noticeStat[] = new int[0];
		String buttonName = "";
		logger.warn("[请求活动首界面2] [test..] [请求类型:"+(req.getReqType()==1?"日常":"活动")+"]");
		try{
			if(req.getReqType()==1){
				buttonName = Translate.日常;
				noticeStat = new int[6];
				noticeStat[0] = getClickStat(Translate.签到, p);
				menus = new String[]{Translate.签到,Translate.活跃,Translate.日常,Translate.飞仙,"Boss",Translate.渡劫};
				{
					int 可领取的活动度礼包数量 = 0;
					PlayerActivenessInfo pai = p.getActivenessInfo();
					boolean gotten[] = pai.getGotten();
					for(boolean g:gotten){
						if(!g){
							可领取的活动度礼包数量++;
						}
					}
					int cnums = getClickStat(Translate.活跃, p);
					if(cnums==1){
						if(可领取的活动度礼包数量>0){
							noticeStat[1] = 1;
							ActivityManagers.getInstance().getDdc().put("活跃"+p.getId(), new Integer(可领取的活动度礼包数量));
						}
					}else {
						Integer recordNum = (Integer)ActivityManagers.getInstance().getDdc().get("活跃"+p.getId());
						if(recordNum==null){
							ActivityManagers.getInstance().getDdc().put("活跃"+p.getId(), new Integer(可领取的活动度礼包数量));
							recordNum = (Integer)ActivityManagers.getInstance().getDdc().get("活跃"+p.getId());
						}
						int lastClickNums = recordNum.intValue();
						if(可领取的活动度礼包数量>lastClickNums){
							noticeStat[1] = 1;
							ActivityManagers.getInstance().getDdc().put("活跃"+p.getId(), new Integer(可领取的活动度礼包数量));
						}
					}
				}
				logger.warn("[请求活动首界面2] [test..] [1] [请求类型:"+(req.getReqType()==1?"日常":"活动")+"]");
//				noticeStat[2] = getClickStat(Translate.日常, p);
				
				logger.warn("[请求活动首界面2] [test..] [2] [请求类型:"+(req.getReqType()==1?"日常":"活动")+"]");
				ActivityManagers.getInstance().getDdc().put("日常stat"+p.getId(), noticeStat);
				
			}else if(req.getReqType()==2){
				if (p.getLevel() >= ActivityConstant.按钮显示等级) {
					menus = new String[]{Translate.限时活动,Translate.周月礼包,Translate.公告,Translate.天天活动,"VIP",ActivityManager.getInstance().周年寻宝,ActivityManager.getInstance().全服寻宝,ActivityManager.getInstance().极地寻宝};
				} else {
					menus = new String[]{Translate.限时活动,Translate.周月礼包,Translate.公告,"VIP",ActivityManager.getInstance().周年寻宝,ActivityManager.getInstance().全服寻宝,ActivityManager.getInstance().极地寻宝};
				}
				buttonName = Translate.活动;
				List<ActivityShowInfo> infos = ActivityManagers.getInstance().infos;
				noticeStat = new int[]{0,0,0,0,0,0,0,0};	
				int index = 0;
				activityColor =  new int[infos.size()];
				for(ActivityShowInfo a:infos){
					if(a!=null){
						if(a.isEffect()){
							activitys.add(a.activityName);
							if(a.activityName_color!=null && a.activityName_color.trim().length()>0){
//								activityColor[index] = Integer.parseInt(a.activityName_color);
								activityColor[index] = Integer.decode(a.activityName_color);
							}
							index++;
						}
					}
				}	
				logger.warn("[请求活动首界面2] [test..] [3] [请求类型:"+(req.getReqType()==1?"日常":"活动")+"]");
				if(activitys.size()>0){
					activityStst = new int[activitys.size()];
					for(int i=0;i<activitys.size();i++){
						activityStst[i] = getClickStat(activitys.get(i),p);
						if(activityStst[i]==1){
							noticeStat[0] = 1;
						}
					}
				}
				
				CompoundReturn cr = AllActivityManager.instance.notifySthHappened(AllActivityManager.wafenActivity);
				if(cr!=null){
					if(cr.getBooleanValue()){
						noticeStat[5] = 3;
					}
					WaFenInstance4Private wp = WaFenManager.instance.privateMaps.get(p.getId());
					if (wp != null) {
						if(cr.getBooleanValue() && wp.isAllOpened()){
							noticeStat[6] = 3;
						}
					}
				}
				if (p.getLevel() >= ActivityConstant.按钮显示等级) {
					noticeStat[3] = 3;
				}
				
//				if(!TreasureActivityManager.instance.isActivityOpen()){
				if(true){				//极地寻宝从标签中去掉
					//客户端没有处理
					int newstats [] = new int[noticeStat.length-1];
					System.arraycopy(noticeStat, 0, newstats, 0, newstats.length);	
					noticeStat = newstats;
					if (p.getLevel() >= ActivityConstant.按钮显示等级) {
						menus = new String[]{Translate.限时活动,Translate.周月礼包,Translate.公告,Translate.天天活动,"VIP",ActivityManager.getInstance().周年寻宝,ActivityManager.getInstance().全服寻宝};
					} else {
						menus = new String[]{Translate.限时活动,Translate.周月礼包,Translate.公告, "VIP",ActivityManager.getInstance().周年寻宝,ActivityManager.getInstance().全服寻宝};
					}
				}
				logger.warn("[请求活动首界面2] [test..] [4] [crisnull:"+(cr==null)+"] [noticeStat:"+(noticeStat==null?"null":Arrays.toString(noticeStat))+"] [请求类型:"+(req.getReqType()==1?"日常":"活动")+"]");
				ActivityManagers.getInstance().getDdc().put("活动stat"+p.getId(), noticeStat);
			}
		}catch(Exception e){
			e.printStackTrace();
		}
		
		boolean isnotice = false;
		for(int i=0;i<noticeStat.length;i++){
			if(noticeStat[i]==1){
				isnotice = true;
				break;
			}
		}
		if(isnotice){
			NOTICE_ACTIVITY_BUTTON_STAT_RES res = new NOTICE_ACTIVITY_BUTTON_STAT_RES(GameMessageFactory.nextSequnceNum(), buttonName, 1);
			p.addMessageToRightBag(res);
		}else{
			NOTICE_ACTIVITY_BUTTON_STAT_RES res = new NOTICE_ACTIVITY_BUTTON_STAT_RES(GameMessageFactory.nextSequnceNum(), buttonName, 0);
			p.addMessageToRightBag(res);
		}
		
		
		ACTIVITY_FIRST_PAGE2_RES res = new ACTIVITY_FIRST_PAGE2_RES(req.getSequnceNum(), req.getReqType(), noticeStat, activitys.toArray(new String[]{}),menus,activityColor,activityStst);
		p.addMessageToRightBag(res);
		logger.warn("[请求活动首界面2] [请求类型:"+(req.getReqType()==1?"日常":"活动")+"] [menus:"+Arrays.toString(menus)+"] [activityStst:"+(activityStst==null?"null":Arrays.toString(activityStst))+"] [stat:"+(noticeStat!=null?Arrays.toString(noticeStat):"null")+"] [activityNums:"+(activitys.size())+"] ["+p.getLogString()+"] [耗时:"+(System.currentTimeMillis()-nowtime)+"]");
	}
	
	public void handle_ACTIVITY_FIRST_PAGE_REQ(ACTIVITY_FIRST_PAGE_REQ req,Player p){
		long nowtime = System.currentTimeMillis();
		int activityStst [] = new int[0];
		int activityColor [] = new int[0];
		List<String> activitys = new ArrayList<String>();
		int noticeStat[] = new int[0];
		String buttonName = "";
		if(req.getReqType()==1){
			buttonName = Translate.日常;
			noticeStat = new int[6];
			noticeStat[0] = getClickStat(Translate.签到, p);
			
			{
				int 可领取的活动度礼包数量 = 0;
				PlayerActivenessInfo pai = p.getActivenessInfo();
				boolean gotten[] = pai.getGotten();
				for(boolean g:gotten){
					if(!g){
						可领取的活动度礼包数量++;
					}
				}
				int cnums = getClickStat(Translate.活跃, p);
				if(cnums==1){
					if(可领取的活动度礼包数量>0){
						noticeStat[1] = 1;
						ActivityManagers.getInstance().getDdc().put("活跃"+p.getId(), new Integer(可领取的活动度礼包数量));
					}
				}else {
					Integer recordNum = (Integer)ActivityManagers.getInstance().getDdc().get("活跃"+p.getId());
					if(recordNum==null){
						ActivityManagers.getInstance().getDdc().put("活跃"+p.getId(), new Integer(可领取的活动度礼包数量));
						recordNum = (Integer)ActivityManagers.getInstance().getDdc().get("活跃"+p.getId());
					}
					int lastClickNums = recordNum.intValue();
					if(可领取的活动度礼包数量>lastClickNums){
						noticeStat[1] = 1;
						ActivityManagers.getInstance().getDdc().put("活跃"+p.getId(), new Integer(可领取的活动度礼包数量));
					}
				}
			}
			
//			noticeStat[2] = getClickStat(Translate.日常, p);
			
			 
			ActivityManagers.getInstance().getDdc().put("日常stat"+p.getId(), noticeStat);
			
		}else if(req.getReqType()==2){
			buttonName = Translate.活动;
			List<ActivityShowInfo> infos = ActivityManagers.getInstance().infos;
			noticeStat = new int[]{0,0,0,0,0,0};	
			int index = 0;
			activityColor =  new int[infos.size()];
			for(ActivityShowInfo a:infos){
				if(a!=null){
					if(a.isEffect()){
						activitys.add(a.activityName);
						if(a.activityName_color!=null && a.activityName_color.trim().length()>0){
//							activityColor[index] = Integer.parseInt(a.activityName_color);
							activityColor[index] = Integer.decode(a.activityName_color);
						}
						index++;
					}
				}
			}	
			if(activitys.size()>0){
				activityStst = new int[activitys.size()];
				for(int i=0;i<activitys.size();i++){
					activityStst[i] = getClickStat(activitys.get(i),p);
					if(activityStst[i]==1){
						noticeStat[0] = 1;
					}
				}
			}
			
			CompoundReturn cr = AllActivityManager.instance.notifySthHappened(AllActivityManager.wafenActivity);
			if(cr!=null){
				if(cr.getBooleanValue()){
					noticeStat[4] = 3;
				}
				WaFenInstance4Private wp = WaFenManager.instance.privateMaps.get(p.getId());
				if (wp != null) {
					if(cr.getBooleanValue() && wp.isAllOpened()){
						noticeStat[5] = 3;
					}
				}
			}
			
			ActivityManagers.getInstance().getDdc().put("活动stat"+p.getId(), noticeStat);
		}
		
		boolean isnotice = false;
		for(int i=0;i<noticeStat.length;i++){
			if(noticeStat[i]==1){
				isnotice = true;
				break;
			}
		}
		if(isnotice){
			NOTICE_ACTIVITY_BUTTON_STAT_RES res = new NOTICE_ACTIVITY_BUTTON_STAT_RES(GameMessageFactory.nextSequnceNum(), buttonName, 1);
			p.addMessageToRightBag(res);
		}else{
			NOTICE_ACTIVITY_BUTTON_STAT_RES res = new NOTICE_ACTIVITY_BUTTON_STAT_RES(GameMessageFactory.nextSequnceNum(), buttonName, 0);
			p.addMessageToRightBag(res);
		}
		
		
		ACTIVITY_FIRST_PAGE_RES res = new ACTIVITY_FIRST_PAGE_RES(req.getSequnceNum(), req.getReqType(), noticeStat, activitys.toArray(new String[]{}),activityColor,activityStst);
		p.addMessageToRightBag(res);
		logger.warn("[请求活动首界面] [请求类型:"+(req.getReqType()==1?"日常":"活动")+"] [activityStst:"+(activityStst==null?"null":Arrays.toString(activityStst))+"] [stat:"+(noticeStat!=null?Arrays.toString(noticeStat):"null")+"] [activityNums:"+(activitys.size())+"] ["+p.getLogString()+"] [耗时:"+(System.currentTimeMillis()-nowtime)+"]");
	}
	
	public int getClickStat(String activityName,Player p){
		Long lastClickTime = (Long)ddc.get(p.getId()+activityName);
		if(lastClickTime==null){
			ddc.put(p.getId()+activityName, new Long(0));
			lastClickTime = (Long)ddc.get(p.getId()+activityName);
		}
		
		if(isSameDay(lastClickTime.longValue(), System.currentTimeMillis())){
			return 0;
		}
		return 1;
	}
	
	public int getRewardIndex(){
		Integer index = (Integer)ddc.get("71级送激活码");
		if(index == null){
			ddc.put("71级送激活码", new Integer(0));
			index = (Integer)ddc.get("71级送激活码");
		}
		return index;
	}
	
	public void handle_NOTICE_ACTIVITY_BUTTON_STAT_REQ(Player p){
//		noiceActivityButtonStat(p);
	}
	
	public void ckilckButton(NOTICE_ACTIVITY_STAT_REQ req,Player p){
		String activityName = req.getActivityName();
		int reqType = req.getReqType();
		int[]noticeStat = new int[0];
		ddc.put(p.getId()+activityName, new Long(System.currentTimeMillis()));
		if(reqType==1){
			noticeStat = new int[6];
			noticeStat[0] = getClickStat(Translate.签到, p);
			
			{
				int 可领取的活动度礼包数量 = 0;
				PlayerActivenessInfo pai = p.getActivenessInfo();
				boolean gotten[] = pai.getGotten();
				for(boolean g:gotten){
					if(!g){
						可领取的活动度礼包数量++;
					}
				}
				int cnums = getClickStat(Translate.活跃, p);
				if(cnums==1){
					if(可领取的活动度礼包数量>0){
						noticeStat[1] = 1;
						ActivityManagers.getInstance().getDdc().put("活跃"+p.getId(), new Integer(可领取的活动度礼包数量));
					}
				}else {
					Integer recordNum = (Integer)ActivityManagers.getInstance().getDdc().get("活跃"+p.getId());
					if(recordNum==null){
						ActivityManagers.getInstance().getDdc().put("活跃"+p.getId(), new Integer(可领取的活动度礼包数量));
						recordNum = (Integer)ActivityManagers.getInstance().getDdc().get("活跃"+p.getId());
					}
					int lastClickNums = recordNum.intValue();
					if(可领取的活动度礼包数量>lastClickNums){
						noticeStat[1] = 1;
						ActivityManagers.getInstance().getDdc().put("活跃"+p.getId(), new Integer(可领取的活动度礼包数量));
					}
				}
			}
			
			 
			ActivityManagers.getInstance().getDdc().put("日常stat"+p.getId(), noticeStat);
		}else if(reqType==2){
			
		}
		
		logger.warn("[玩家上线] ["+p.getName()+"] [reqType:"+reqType+"] [刷新button状态] [按钮:"+activityName+"] [noticeStat:"+(noticeStat==null?"null":Arrays.toString(noticeStat))+"]");
	}
	
//	public static boolean isSameDay(long time1,long time2){
//		Calendar ca=Calendar.getInstance();
//		ca.setTimeInMillis(time1);
//		int year1=ca.get(Calendar.YEAR);
//		int month1=ca.get(Calendar.MONTH);
//		int day1=ca.get(Calendar.DAY_OF_MONTH);
//		
//		ca.setTimeInMillis(time2);
//		int year2=ca.get(Calendar.YEAR);
//		int month2=ca.get(Calendar.MONTH);
//		int day2=ca.get(Calendar.DAY_OF_MONTH);
//		
//		return year1==year2&&month1==month2&&day1==day2; 
//	}
	
	public void noticeActivityChargeMess(Player p,long yinzi){
		List<ActivityShowInfo> infos = ActivityManagers.getInstance().infos;
		if(infos!=null && infos.size()>0){
			for(ActivityShowInfo info:infos){
				if(info==null){
					continue;
				}
				if(info.buttonFunction==15){
					String chargeMess = Translate.translateString(Translate.累计充值钱, new String[][]{{Translate.STRING_1,yinzi+""}});
					GET_ACTIVITY_MESS_RES res = new GET_ACTIVITY_MESS_RES(GameMessageFactory.nextSequnceNum(), info.activityName, chargeMess);
					p.addMessageToRightBag(res);
					logger.warn("[活动信息] [充值] [活动:"+info.activityName+"] [id:"+info.activityId+"] [chargeMess:"+chargeMess+"] ["+p.getLogString()+"]");
				}else if(info.buttonFunction==20){
					String chargeMess = Translate.translateString(Translate.累计消费钱, new String[][]{{Translate.STRING_1,yinzi+""}});
					GET_ACTIVITY_MESS_RES res = new GET_ACTIVITY_MESS_RES(GameMessageFactory.nextSequnceNum(), info.activityName, chargeMess);
					p.addMessageToRightBag(res);
					logger.warn("[活动信息] [消费] [活动:"+info.activityName+"] [id:"+info.activityId+"] [chargeMess:"+chargeMess+"] ["+p.getLogString()+"]");
				}
			}
		}
	}
	
	public void handle_GET_ACTIVITY_INFO_REQ(GET_ACTIVITY_INFO_REQ req ,Player p){
		long now = System.currentTimeMillis();
		String activityName = req.getActivityName();
		ActivityShowInfo activity = null;
		List<ActivityShowInfo> infos = ActivityManagers.getInstance().infos;
		for(ActivityShowInfo a:infos){
			if(a!=null && a.isEffect()){
				if(a.activityName.equals(activityName)){
					activity = a;
					break;
				}
			}
		}
		
		if(activity==null){
			GET_ACTIVITY_INFO_RES res = new GET_ACTIVITY_INFO_RES(req.getSequnceNum(), "",0, "","","", new long[]{}, new int[]{},new int[]{}, 0,0, "", "", 0, 0, "", "");
			p.addMessageToRightBag(res);
			logger.warn("[请求活动信息] [失败:activity==null] [活动名:"+activityName+"] ["+p.getLogString()+"]");
			return;
		}
		
		int xPoint = 0;
		int yPoint = 0;
		String npcName = "";
		String mapName = "";
		String buttonName = Translate.参与;
		String chargeMess = "";
		if(activity.buttonFunction==15){	//充值
			buttonName = Translate.反馈类型充值;
			ArrayList<NewMoneyActivity> chongZhiActivitys = NewChongZhiActivityManager.instance.chongZhiActivitys;
			for(NewMoneyActivity cz:chongZhiActivitys){
				if(cz!=null && cz.getName().equals(activityName)){
					if(cz instanceof TotalChongZhiActivity){
						chargeMess = Translate.translateString(Translate.累计充值钱, new String[][]{{Translate.STRING_1,0+""}});
						TotalChongZhiActivity  t = (TotalChongZhiActivity)cz;
						Long oldmoney = t.playerMoneys.get(p.getId());
						if(oldmoney!=null){
							chargeMess = Translate.translateString(Translate.累计充值钱, new String[][]{{Translate.STRING_1,oldmoney.longValue()+""}});
							break;
						}
						
					}else if(cz instanceof TotalTimesChongZhiActivity){
						chargeMess = Translate.translateString(Translate.累计充值钱, new String[][]{{Translate.STRING_1,0+""}});
						TotalTimesChongZhiActivity  t = (TotalTimesChongZhiActivity)cz;
						Long oldmoney = t.playerMoneys.get(p.getId());
						if(oldmoney!=null){
							chargeMess = Translate.translateString(Translate.累计充值钱, new String[][]{{Translate.STRING_1,oldmoney.longValue()+""}});
							break;
						}
						
					}
				}	
			}
		}else if(activity.buttonFunction==20){	//消费
			ArrayList<NewXiaoFeiActivity> xiaoFeiAcitivitys  = NewChongZhiActivityManager.instance.xiaoFeiAcitivitys;
			for(NewXiaoFeiActivity xf:xiaoFeiAcitivitys){
				if(xf!=null && xf.getName().equals(activityName)){
					if(xf instanceof TotalTimesXiaoFeiActivity){
						chargeMess = Translate.translateString(Translate.累计消费钱, new String[][]{{Translate.STRING_1,0+""}});
						TotalTimesXiaoFeiActivity  t = (TotalTimesXiaoFeiActivity)xf;
						Long oldmoney = t.playerMoneys.get(p.getId());
						if(oldmoney!=null){
							chargeMess = Translate.translateString(Translate.累计消费钱, new String[][]{{Translate.STRING_1,oldmoney.longValue()+""}});
							break;
						}
					}
				}	
			}
		}
		try{
			if(activity.buttonFunction==13 || activity.buttonFunction==12 || activity.buttonFunction==1){
				String args [] = activity.functionArgs.split(",");
				npcName = args[0];
				mapName = args[1];
				CompoundReturn cr = TaskManager.getInstance().getNPCInfoByGameAndName(mapName, npcName,p);
				if (cr.getBooleanValue()) {
					Game game = (Game) cr.getObjValue();
					mapName = game.gi.name;
					xPoint = cr.getIntValues()[0];
					yPoint = cr.getIntValues()[1];
				}
				logger.warn("[请求活动信息] [获取坐标信息] [活动名:"+activityName+"] [npcName:"+npcName+"] [mapName:"+mapName+"] [xPoint:"+xPoint+"] [yPoint:"+yPoint+"] ["+p.getName()+"]");
			}
		}catch(Exception e){
			e.printStackTrace();
		}
		
		long[] ids = new long[0];
		int[] nums = new int[0];
		
		if(activity.names!=null && activity.names.length>0){
			ids = new long[activity.names.length];
			nums = new int[activity.names.length];
			for(int i=0;i<activity.names.length;i++){
				String name = activity.names[i];
				ArticleEntity ae = DefaultArticleEntityManager.getInstance().getEntity(name, true, activity.colors[i]);
				if(ae==null){
					Article a = ArticleManager.getInstance().getArticle(name);
					if(a!=null){
						try {
							ae = DefaultArticleEntityManager.getInstance().createTempEntity(a, true, ArticleEntityManager.活动奖励临时物品, p, activity.colors[i]);
						} catch (Exception e) {
							e.printStackTrace();
						}
					}
				}
				if(ae!=null){
					ids[i] = ae.getId();
					nums[i] = activity.nums[i];
				}
			}
		}
		
		int noticeStat [] = (int[]) ActivityManagers.getInstance().getDdc().get("活动stat"+p.getId());
		if(noticeStat==null){
			ActivityManagers.getInstance().getDdc().put("活动stat"+p.getId(), new int[]{1,0,0});
			noticeStat  = (int[]) ActivityManagers.getInstance().getDdc().get("活动stat"+p.getId());
		}
		List<String> list = new ArrayList<String>();
		for(ActivityShowInfo a:infos){
			if(a!=null){
				if(a.isEffect()){
					list.add(a.activityName);
				}
			}
		}	
		if(list.size()>0){
			for(int i=0;i<list.size();i++){
				if(activityName.equals(list.get(i))==false){
					int result = getClickStat(list.get(i),p);
					if(result==1){
						noticeStat[0] = 1;
					}
				}
			}
		}
		ActivityManagers.getInstance().getDdc().put("活动stat"+p.getId(), noticeStat);
		
		GET_ACTIVITY_INFO_RES res = new GET_ACTIVITY_INFO_RES(req.getSequnceNum(), activityName,activity.tempId,"",activity.activityTitle, activity.activityContent, ids,nums,activity.lizis, activity.buttonType, activity.buttonFunction,buttonName, chargeMess, xPoint, yPoint, npcName, mapName);
		p.addMessageToRightBag(res);
		logger.warn("[请求活动信息] [活动名:"+activityName+"] [list:"+list.size()+"] [buttonFunction:"+activity.buttonFunction+"] [noticeStat:"+Arrays.toString(noticeStat)+"] ["+activity.toString()+"] [ids:"+(ids==null?"null":Arrays.toString(ids))+"] [nums:"+(nums==null?"null":Arrays.toString(nums))+"] [chargeMess:"+chargeMess+"] ["+p.getLogString()+"] [耗时:"+(System.currentTimeMillis()-now)+"]");
	}
	
	public void handle_ACTIVITY_EXTEND_REQ(RequestMessage req ,Player p){

		if(req instanceof ACTIVITY_EXTEND_REQ){
			ACTIVITY_EXTEND_REQ message = (ACTIVITY_EXTEND_REQ)req;
			String  activityname = message.getActvityName();
			if(activityname != null && activityname.equals(Translate.极地寻宝)){
				if (!TreasureActivityManager.instance.isActivityOpen()) {
					p.sendError(Translate.活动未开启);
					return;
				}
				long leftTime = TreasureActivityManager.instance.getActivityLeftTime() / 1000;		//返回给客户端秒数
				int len = TreasureActivityManager.instance.treasureModels.size();
				TreasureModel tm = null;			//默认打开第一个
				String description = "";			//玩法说明
				String[] treasureNames = new String[len];		//寻宝页签名
				int[] treasureIds = new int[len];			//寻宝id
				
				int tempIndex = 0;
				
				Iterator<Integer> ite = TreasureActivityManager.instance.treasureModels.keySet().iterator();
				while (ite.hasNext()) {
					int key = ite.next();
					TreasureModel value = TreasureActivityManager.instance.treasureModels.get(key);
					treasureNames[tempIndex] = value.getName();
					treasureIds[tempIndex] = value.getType();
					if (value.isIsopen() && tm == null) {
						tm = value;
					}
					tempIndex ++;
				}
				int[] digTimes = new int[tm.getDigTimes().size()];				//可挖取次数
				long[] costSilvers = new long[tm.getDigTimes().size()];			//对应消耗金钱
				for (int i=0; i<tm.getDigTimes().size(); i++) {
					digTimes[i] = tm.getDigTimes().get(i);
					costSilvers[i] = tm.getCostS().get(i);
				}
				long[] defaultArticleIds = new long[tm.getNeedShowGoods().size()];	//默认打开的寻宝界展示的物品临时id
				for (int i=0; i<defaultArticleIds.length; i++) {
					TreasureArticleModel tam = TreasureActivityManager.instance.articleModels.get(tm.getNeedShowGoods().get(i));
					defaultArticleIds[i] = tam.getTempEntityId();
				}
				description = tm.getDescription();
				
				OPEN_TREASUREACTIVITY_WINDOW_RES resp = new OPEN_TREASUREACTIVITY_WINDOW_RES(message.getSequnceNum(), leftTime, description, 
						treasureNames, treasureIds, digTimes, costSilvers, defaultArticleIds);
				p.addMessageToRightBag(resp);
			}
		}
	}
	
	public void initActivityShowInfo() throws Exception{
		long now = System.currentTimeMillis();
		File file = new File(activityFile);
		file = new File(ConfigServiceManager.getInstance().getFilePath(file));
		if(file.exists()==false){
			throw new FileNotFoundException("[ActivityManagers] [initActivityShowInfo] [文件不存在] [activityFile:"+activityFile+"]");
		}
		
		InputStream is = new FileInputStream(file);
		POIFSFileSystem pfs = new POIFSFileSystem(is);
		HSSFWorkbook work = new HSSFWorkbook(pfs);
		HSSFSheet sheet = work.getSheetAt(0);
		int maxRows = sheet.getPhysicalNumberOfRows();
		
		for (int i = 1; i < maxRows; i++) {
			int index = 0;
			HSSFRow row = sheet.getRow(i);
			if (row == null) {
				continue;
			}
			try {
				int activityId = StringTool.getCellValue(row.getCell(index++), Integer.class);
				String weekStr = StringTool.getCellValue(row.getCell(index++), String.class);
				String openserverstr = StringTool.getCellValue(row.getCell(index++), String.class);
				String limitserverstr = StringTool.getCellValue(row.getCell(index++), String.class);
				String startShowTimeStr = StringTool.getCellValue(row.getCell(index++), String.class);
				String endShowTimeStr = StringTool.getCellValue(row.getCell(index++), String.class);
				int tempId = StringTool.getCellValue(row.getCell(index++), Integer.class);
				String showIcon = StringTool.getCellValue(row.getCell(index++), String.class);
				int buttonType = StringTool.getCellValue(row.getCell(index++), Integer.class);
				int buttonFunction = StringTool.getCellValue(row.getCell(index++), Integer.class);
				String functionArgs = StringTool.getCellValue(row.getCell(index++), String.class);
				String activityName = StringTool.getCellValue(row.getCell(index++), String.class);
				String activityName_stat = StringTool.getCellValue(row.getCell(index++), String.class);
				String activityName_color = StringTool.getCellValue(row.getCell(index++), String.class);
				String activityTitle = StringTool.getCellValue(row.getCell(index++), String.class);
				String activityContent = StringTool.getCellValue(row.getCell(index++), String.class);
				String rewardNameStr = StringTool.getCellValue(row.getCell(index++), String.class);
				String rewardColorStr = StringTool.getCellValue(row.getCell(index++), String.class);
				String rewardNumStr = StringTool.getCellValue(row.getCell(index++), String.class);
				String showLiziStr = StringTool.getCellValue(row.getCell(index++), String.class);
				int weeks[] = StringToInt(weekStr.split(","));
				ActivityShowInfo info = new ActivityShowInfo(activityId, weeks, TimeTool.formatter.varChar19.parse(startShowTimeStr),TimeTool.formatter.varChar19.parse(endShowTimeStr),tempId, showIcon, buttonType, buttonFunction, functionArgs, activityName, activityTitle, activityContent);
				if(rewardNameStr!=null && rewardNameStr.trim().length()>0 && rewardColorStr!=null && rewardNumStr!=null && showLiziStr!=null){
					if(rewardNameStr.contains(",")){
						String names[] = rewardNameStr.split(",");
						int colors[] = StringToInt(rewardColorStr.split(","));
						int nums[] = StringToInt(rewardNumStr.split(","));
						int lizis[] = StringToInt(showLiziStr.split(","));
						if(names.length!=colors.length && colors.length!=nums.length){
							throw new Exception("加载活动展示信息sheet页，第" + (i + 1) + "行，第"+(index-1)+"单元格异常！！数量不一致");
						}
						info.colors = colors;
						info.names = names;
						info.nums = nums;
						info.lizis = lizis;
					}
				}
				info.activityName_stat = activityName_stat;
				info.activityName_color = activityName_color;
				if(openserverstr!=null){
					info.openservers = openserverstr.split(",");
				}
				if(limitserverstr!=null){
					info.limitservers = limitserverstr.split(",");
				}
				infos.add(info);
			} catch (Exception e) {
				throw new Exception("加载活动展示信息sheet页，第" + (i + 1) + "行，第"+(index-1)+"单元格异常！！", e);
			}
		}
		now = System.currentTimeMillis();
		
		sheet = work.getSheetAt(1);
		maxRows = sheet.getPhysicalNumberOfRows();
		
		for (int i = 1; i < maxRows; i++) {
			int index = 0;
			HSSFRow row = sheet.getRow(i);
			if (row == null) {
				continue;
			}
			int viplevel = StringTool.getCellValue(row.getCell(index++), Integer.class);
			String title = StringTool.getCellValue(row.getCell(index++), String.class);
			String content = StringTool.getCellValue(row.getCell(index++), String.class);
			if(viplevel>0 && title!=null && content!=null){
				VipHelpMess mess = new VipHelpMess(viplevel, title, content);
				vipMesses.add(mess);
			}
			logger.warn("[初始化VIP通知信息] [成功] [数量："+vipMesses.size()+"] [耗时："+(System.currentTimeMillis()-now)+"]");
		}
	}
	
	public static Map<String, Hashtable<String, Integer>> packageConfigs = new Hashtable<String, Hashtable<String,Integer>>();
	public static Map<String, Integer> hasOutNums = new  Hashtable<String, Integer>();	//全服限制
	public static String LAST_ARTICLE_NAME = "天录传送符";	//默认物品名
	static{
		//以下是礼包内道具产出限制配置
		//配置一开始
		Hashtable<String, Integer> maxOutNums = new  Hashtable<String, Integer>();
		maxOutNums.put("银砖锦囊", 2);
		maxOutNums.put("银条锦囊", 2);
		maxOutNums.put("银块锦囊", 200);
		maxOutNums.put("碎银子锦囊", 2000);
		packageConfigs.put("除夕好礼", maxOutNums);
		//配置一结束
	}
	
	/**
	 * 除夕红包道具产出限制
	 * 得到某个道具已经产出的数量 
	 */
	public int getHasOutNumsByArticleName(String articleName){
		if(!hasOutNums.keySet().contains(articleName)){
			return 0;
		}
		return hasOutNums.get(articleName);
	}
	
	/**
	 * 得到某个道具最大产出数量,0是无限制
	 */
	public int getMaxOutNumsByArticleName(String packageName,String articleName){
		if(packageConfigs.keySet().contains(packageName)){
			if(packageConfigs.get(packageName).keySet().contains(articleName)){
				return packageConfigs.get(packageName).get(articleName);
			}
		}
		return 0;
	}
	
	/**
	 * 更新产出量
	 */
	public void updateArticleOutNum(String articleName,int value){
		int oldValue = getHasOutNumsByArticleName(articleName);
		hasOutNums.put(articleName, value + oldValue);
	}
	
	public int[] StringToInt(String[] a){
		int [] fs = new int[a.length];
		for(int k=0;k<a.length;k++){
			if(a[k]!=null && a[k].trim().length()>0){
				fs[k] = Integer.parseInt(a[k]);
			}
		}
		return fs;
	}
	
	public String getActivityFile() {
		return activityFile;
	}

	public void setActivityFile(String activityFile) {
		this.activityFile = activityFile;
	}

	public DefaultDiskCache getDdc() {
		return ddc;
	}

	public void setDdc(DefaultDiskCache ddc) {
		this.ddc = ddc;
	}

	public File getDataFile() {
		return dataFile;
	}

	public void setDataFile(File dataFile) {
		this.dataFile = dataFile;
	}

	public DefaultDiskCache getDdcKeys() {
		return ddcKeys;
	}

	public void setDdcKeys(DefaultDiskCache ddcKeys) {
		this.ddcKeys = ddcKeys;
	}

	public File getDataKeysFile() {
		return dataKeysFile;
	}

	public void setDataKeysFile(File dataKeysFile) {
		this.dataKeysFile = dataKeysFile;
	}

	public List<Activity> getActivitys() {
		return activitys;
	}

	public void setActivitys(List<Activity> activitys) {
		this.activitys = activitys;
	}

	public List<PrizeMore> getMorerewards() {
		return morerewards;
	}

	public void setMorerewards(List<PrizeMore> morerewards) {
		this.morerewards = morerewards;
	}

}
