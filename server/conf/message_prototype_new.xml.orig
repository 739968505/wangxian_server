<?xml version="1.0" encoding="utf-8"?>

<prototypes version="1.0" author="myzdf">

	<factory name="GameMessageFactory" enable-serialize="true" singlefunctionMaxLength="2500"
		comment="singlefunctionMaxLength是指生成的单个函数最多含多少字符，超过的部分被拆分成多个函数，仅仅作用在生成客户端协议处理函数" />
 
	<handler name="GameMessageHandler" />

	<prototype req_name="TIME_SYNC_REQ" res_name="TIME_SYNC_RES" req_type="0x00FFFF01" res_type="0x70FFFF01" req_client_receive="true"
		res_client_send="true" comment="时间同步包，有服务器发送给客户端，用于测试客户端的网络延迟，客户端收到此数据包后，应立即返回响应包">
		<req>
			<property name="currentTime" type="long" comment="服务器当前的时间" />
		</req>
		<res>
			<property name="currentTime" type="long" comment="REQ包中服务器当前的时间" />
		</res>
	</prototype>

	<prototype req_name="TIME_SETTING_REQ" req_type="0x00FFFF02" comment="时间同步包，服务器发送给客户端，" req_client_receive="true">
		<req>
			<property name="currentTime" type="long" comment="服务器当前的时间" />
			<property name="networdDelay" type="long" comment="服务器到客户端的网络延迟" />
		</req>
	</prototype>



	<!-- 用户查找玩家，用于跳转到玩家所在地 -->
	<prototype req_name="GET_PLAYER_BY_ID_REQ" req_type="0x0000F100" res_name="GET_PLAYER_BY_ID_RES" res_type="0x7000F100" req_client_send="true"
		res_client_receive="true" comment="用户查找玩家，用于跳转到玩家所在地">
		<req>
			<property name="id" type="long" comment="id" />
		</req>
		<res>
		</res>
	</prototype>


	<prototype req_name="USER_ENTER_SERVER_REQ" req_type="0x0010F012" res_name="USER_ENTER_SERVER_RES" res_type="0x7000F012" req_client_send="true"
		res_client_receive="true" comment="用户进入服务器">
		<req>
			<property name="username" type="String" encoding="UTF-8" comment="用户名"></property>
			<property name="password" type="String" encoding="UTF-8" comment="密码，定长16个英文字符" />
			<property name="authCode" type="String" encoding="UTF-8" comment="加密后的串" />
		</req>
		<res>
			<property name="result" type="byte" comment="进入服务器结果，0-可以直接进入，1-需要排队并且已经排队, 2-进入失败"></property>
			<property name="onlineNum" type="long" comment="在线排队的数量"></property>
			<property name="offlineNum" type="long" comment="离线排队的数量"></property>
			<property name="leftTime" type="long" comment="预计进入时长(ms)"></property>
		</res>
	</prototype>
	<prototype req_name="USER_ENTER_SERVER2_REQ" req_type="0x0010F016" req_client_send="true" comment="用户进入服务器 ,返回USER_ENTER_SERVER_RES">
		<req>
			<property name="username" type="String" encoding="UTF-8" comment="用户名"></property>
			<property name="password" type="String" encoding="UTF-8" comment="密码，定长16个英文字符" />
			<property name="authCode" type="String" encoding="UTF-8" comment="加密后的串" />
			
			<property name="clientId" type="String" encoding="UTF-8" comment="" />
			<property name="channel" type="String" encoding="UTF-8" comment="渠道串，例如：ODANL_DWB01，jar包或者jad中包含此信息" />
			<property name="clientPlatform" type="String" encoding="UTF-8" comment="客户端类型，比如ios,android" />
			<property name="clientFull" type="String" encoding="UTF-8" comment="全包，半包" />
			<property name="clientProgramVersion" type="String" encoding="UTF-8" comment="客户端程序版本" />
			<property name="clientResourceVersion" type="String" encoding="UTF-8" comment="客户端资源版本" />
			
			<property name="phoneType" type="String" encoding="UTF-8" comment="真正机器的机型信息" />
			<property name="network" type="String" encoding="UTF-8" comment="WIFI,gprs,3dnet" />
			<property name="gpu" type="String" encoding="UTF-8" comment="pvr,png,ati,etc" />
			<property name="gpuOtherName" type="String" encoding="UTF-8" comment="pvr,png,ati,etc" />
			<property name="UUID" type="String" encoding="UTF-8" comment="ios 唯一用户编号" />
			<property name="DEVICEID" type="String" encoding="UTF-8" comment="android手机设备号" />
			<property name="IMSI" type="String" encoding="UTF-8" comment="android 国际移动用户识别码" />
			<property name="MACADDRESS" type="String" encoding="UTF-8" comment="ios and android 网卡地址" />
			
			<property name="isExistOtherServer" type="boolean" comment="是否存在其他客户端(收到回复消息)，并试图杀掉这个其他客户端" />
			<property name="isStartServerSucess" type="boolean" comment="是否启动客户端服务" />
			<property name="isStartServerBindFail" type="boolean" comment="是否启动客户端服务绑端口失败" />
		</req>
	</prototype>
	<prototype req_name="NEW_USER_ENTER_SERVER_REQ" req_type="0x001AF016" req_client_send="true"
		res_name="NEW_USER_ENTER_SERVER_RES" res_type="0x70EAF016" res_client_receive="true" comment="用户进入服务器 ,返回USER_ENTER_SERVER_RES">
		<req>
			<property name="username" type="String" encoding="UTF-8" comment="用户名"></property>
			<property name="password" type="String" encoding="UTF-8" comment="密码，定长16个英文字符" />
			<property name="sessionId" type="String" encoding="UTF-8" comment="sessionId" />
			
			<property name="clientId" type="String" encoding="UTF-8" comment="" />
			<property name="channel" type="String" encoding="UTF-8" comment="渠道串，例如：ODANL_DWB01，jar包或者jad中包含此信息" />
			<property name="clientPlatform" type="String" encoding="UTF-8" comment="客户端类型，比如ios,android" />
			<property name="clientFull" type="String" encoding="UTF-8" comment="全包，半包" />
			<property name="clientProgramVersion" type="String" encoding="UTF-8" comment="客户端程序版本" />
			<property name="clientResourceVersion" type="String" encoding="UTF-8" comment="客户端资源版本" />
			
			<property name="phoneType" type="String" encoding="UTF-8" comment="真正机器的机型信息" />
			<property name="network" type="String" encoding="UTF-8" comment="WIFI,gprs,3dnet" />
			<property name="gpu" type="String" encoding="UTF-8" comment="pvr,png,ati,etc" />
			<property name="gpuOtherName" type="String" encoding="UTF-8" comment="pvr,png,ati,etc" />
			<property name="MACADDRESS" type="String" encoding="UTF-8" comment="ios and android 网卡地址" />
			<property name="md5" type="String" encoding="UTF-8" comment="签名" />
		</req>
		<res>
			<property name="result" type="byte" comment="进入服务器结果，0-可以直接进入，1-需要排队并且已经排队, 2-进入失败"></property>
			<property name="onlineNum" type="long" comment="在线排队的数量"></property>
			<property name="offlineNum" type="long" comment="离线排队的数量"></property>
			<property name="leftTime" type="long" comment="预计进入时长(ms)"></property>
		</res>
	</prototype>

	<prototype req_name="LINEUP_STATUS_REQ" req_type="0x0001F013" res_name="LINEUP_STATUS_RES" res_type="0x700FF013" req_client_receive="true"
		comment="用户查询排队情况">
		<req>
			<property name="onlineNum" type="long" comment="在线排队的数量"></property>
			<property name="offlineNum" type="long" comment="离线排队的数量"></property>
			<property name="leftTime" type="long" comment="预计进入时长(ms)"></property>
		</req>
	</prototype>

	<prototype req_name="LEAVE_LINEUP_REQ" req_type="0x000FF016" res_name="LEAVE_LINEUP_RES" res_type="0x700FF016" req_client_send="true"
		res_client_receive="false" comment="用户取消排队">
		<req>
			<property name="username" type="String" encoding="UTF-8" comment="用户名"></property>
		</req>
		<res>
		</res>
	</prototype>


	<prototype req_name="GET_USER_PLAYER_REQ" req_type="0x0000F004" res_name="GET_USER_PLAYER_RES" res_type="0x7000F004" req_client_send="true"
		res_client_receive="true" comment="获得用户在服务器上的角色数量">
		<req>
			<property name="username" type="String" encoding="UTF-8" comment="用户名"></property>
		</req>
		<res>
			<property name="userPlayerCount" type="int" comment="数量"></property>
			<property name="allPlayerCount" type="int" comment="所有玩家数量"></property>
		</res>
	</prototype>

	<prototype req_name="USER_BIND_MOBILE_REQ" req_type="0x0000F005" res_name="USER_BIND_MOBILE_RES" res_type="0x7000F005" req_client_send="true"
		res_client_receive="true" comment="用户绑定手机">
		<req>
			<property name="username" type="String" encoding="UTF-8" comment="账户名" />
			<property name="passwd" type="String" encoding="UTF-8" comment="密码" />
			<property name="mobile" type="String" encoding="UTF-8" comment="绑定的手机号" />
		</req>
		<res>
			<property name="verifyCode" type="String" encoding="UTF-8" comment="验证码"></property>
		</res>
	</prototype>

	<prototype req_name="GET_PLAYER_YUANBAO_REQ" req_type="0x0000F007" res_name="GET_PLAYER_YUANBAO_RES" res_type="0x7000F007" req_client_send="true"
		res_client_receive="true" comment="获得玩家的元宝数量，由两部分组成，一部分是角色身上的，一部分在账户上，其中账户上的元宝是多个角色间共享的">
		<req>
		</req>
		<res>
			<property name="playerAmount" type="long" comment="角色上的元宝数量"></property>
			<property name="userAmount" type="long" comment="账户上的元宝数量"></property>
		</res>
	</prototype>

	<prototype req_name="PLAYER_YUANBAO_CHANGED_REQ" req_type="0x0000F008" res_name="PLAYER_YUANBAO_CHANGED_RES" res_type="0x7000F008"
		req_client_receive="true" comment="通知玩家的元宝数量改变，由两部分组成，一部分是角色身上的，一部分在账户上，其中账户上的元宝是多个角色间共享的">
		<req>
			<property name="playerAmount" type="long" comment="角色上的元宝数量"></property>
			<property name="userAmount" type="long" comment="账户上的元宝数量"></property>
		</req>
	</prototype>

	<prototype req_name="CREATE_PLAYER_REQ" res_name="CREATE_PLAYER_RES" req_type="0x00000212" res_type="0x70000212" req_client_send="true"
		res_client_receive="true" comment="客户端向服务器发送创建新的角色的请求">
		<req>
			<property name="name" type="String" encoding="UTF-8" comment="玩家的昵称"></property>
			<property name="race" type="byte" comment="1-人，2-妖"></property>
			<property name="sex" type="byte" comment="性别"></property>
			<property name="country" type="byte" comment="国家0，1，2，3，.."></property>
			<property name="career" type="byte" comment="玩家的职业"></property>

			<property name="quickcreate" type="boolean" comment="是否是快速创建" />
			<property name="recommendid" type="long" comment="推荐关系ID,jad中包含此信息，-1为jad不含此值" />
		</req>
		<res>
			<property name="result" type="byte" comment="创建精灵的结果，0表示成功，其他表示失败：&lt;br&gt; 1表示名称已经存在，2表示以达到最大创建精灵的个数，其他值为未知错误" />
			<property name="resultString" type="String" encoding="UTF-8" comment="错误信息" />
			<property name="needBindMobile" type="boolean" comment="仅当系统发现此角色为推荐账户创建的，并且没有绑定手机，需要客户端发上行绑定手机才返回true"></property>
		</res>
	</prototype>

	<prototype req_name="QUERY_PLAYER_REQ" res_name="QUERY_PLAYER_RES" req_type="0x00000013" res_type="0x70000013" req_client_send="true"
		res_client_receive="true" comment="客户端向服务器发送查询角色的请求">
		<req>
			<property name="username" type="String" encoding="UTF-8" comment="用户名称"></property>
			<property name="authCode" type="String" encoding="UTF-8" comment="登陆后返回的验证串" />
		</req>
		<res>
			<object-property name="players" type="Player[]" comment="此账户在此服务器上创建的所有的角色，长度为0或者n的数组">
				<property name="currentGameCountry" type="int" encoding="UTF-8" comment="当前地图归属"></property>
				<property name="mapName" type="String" encoding="UTF-8" comment="玩家当前所在的地图名称"></property>
				<!-- 状态 -->
				<property name="hold" type="boolean" comment="定身"></property>
				<property name="stun" type="boolean" comment="眩晕"></property>
				<property name="immunity" type="boolean" comment="免疫"></property>
				<property name="poison" type="boolean" comment="中毒"></property>
				<property name="weak" type="boolean" comment="虚弱"></property>
				<property name="invulnerable" type="boolean" comment="无敌"></property>
				<property name="cure" type="boolean" comment="缓疗状态"></property>
				<property name="liuxueState" type="boolean" comment="流血状态"></property>
				<property name="jiansuState" type="boolean" comment="减速状态"></property>
				<property name="pojiaState" type="boolean" comment="破甲状态"></property>
				<property name="zhuoreState" type="boolean" comment="灼热状态"></property>
				<property name="hanlengState" type="boolean" comment="寒冷状态"></property>
				<property name="tigaoBaojiState" type="boolean" comment="提高暴击状态"></property>
				<property name="tigaoWaigongState" type="boolean" comment="提高外功状态"></property>
				<property name="tigaoNeigongState" type="boolean" comment="提高内功状态"></property>
				<property name="tigaoWaifangState" type="boolean" comment="提高外防状态"></property>
				<property name="tigaoNeifangState" type="boolean" comment="提高内防状态"></property>
				<property name="shield" type="byte" comment="护盾"></property>
				<property name="fighting" type="boolean" comment="战斗状态"></property>
				<property name="flying" type="boolean" comment="飞行状态"></property>
				<property name="sitdownState" type="boolean" comment="坐的状态默认false为站立"></property>

				<property name="hp" type="int" comment=""></property>
				<property name="maxHP" type="int" comment=""></property>
				<property name="mp" type="int" comment=""></property>
				<property name="maxMP" type="int" comment=""></property>

				<property name="id" type="long" comment="玩家唯一的编号"></property>
				<property name="name" type="String" encoding="UTF-8" comment="玩家的昵称"></property>
				<property name="sex" type="byte" comment="性别"></property>
				<property name="country" type="byte" comment="国家"></property>
				<property name="countryPosition" type="int" comment="职位"></property>
				<property name="career" type="byte" comment="角色的门派或职业"></property>
				<property name="level" type="int" comment="等级"></property>
				<property name="soulLevel" type="int" comment="元神等级" />
				<property name="classLevel" type="short" comment="境界" />
				<property name="totalRmbyuanbao" type="long" comment="非绑定人民币等值元宝"></property>
				<property name="bindSilver" type="long" comment="绑定银子"></property>
				<property name="silver" type="long" comment="银子"></property>
				<property name="exp" type="long" comment="当前经验值"></property>
				<property name="nextLevelExp" type="long" comment="升级所需经验值"></property>
				<property name="nextLevelExpPool" type="long" comment="经验池最大值"></property>
				<property name="weaponType" type="byte" comment="武器类型，包括空手。可以用于技能的判断条件"></property>
				<property name="state" type="byte" comment=""></property>
				<property name="direction" type="byte" comment=""></property>

				<property name="avataRace" type="String" encoding="UTF-8" comment="客户端用来定位形象">
				</property>
				<property name="avata" type="String[]" encoding="UTF-8" comment="玩家身上的部件关键字：比如装备了明月刀，"></property>
				<property name="avataType" type="byte[]" comment="玩家身上的部件关键字"></property>

				<property name="aura" type="byte" comment="光环类型，-1标识没有光环类型"></property>
				<property name="encloser" type="byte" comment="角色周身的外罩，一种透明的光影效果"></property>
				<property name="isUpOrDown" type="boolean" comment=""></property>
				<property name="commonAttackSpeed" type="short" comment="普通攻击的速度"></property>
				<property name="commonAttackRange" type="short" comment="普通攻击的攻击距离（像素为单位）"></property>
				<property name="speed" type="short" comment="角色的移动速度，单位：像素/秒"></property>
				<property name="jiazuId" type="long" comment="家族id"></property>
				<property name="jiazuName" type="String" encoding="UTF-8" comment="家族的名字"></property>
				<property name="zongPaiName" type="String" encoding="UTF-8" comment="宗派的名字"></property>
				<property name="title" type="String" encoding="UTF-8" comment="称号"></property>

				<!-- 战斗属性 -->
				<property name="strength" type="int" comment=""></property>
				<property name="dexterity" type="int" comment=""></property>
				<property name="constitution" type="int" comment=""></property>
				<property name="spellpower" type="int" comment=""></property>
				<property name="physicalDamageUpperLimit" type="int" comment=""></property>
				<property name="physicalDamageLowerLimit" type="int" comment=""></property>
				<property name="phyDefence" type="int" comment=""></property>
				<property name="magicDefence" type="int" comment=""></property>
				<property name="dodge" type="int" comment=""></property>
				<property name="phyAttack" type="int" comment=""></property>
				<property name="magicAttack" type="int" comment=""></property>
				<property name="coolDownTimePercent" type="int" comment=""></property>
				<property name="setupTimePercent" type="int" comment=""></property>
				<property name="criticalHit" type="int" comment=""></property>
				<property name="vitality" type="int" comment="体力"></property>
				<property name="maxVitality" type="int" comment="体力最大数值"></property>
				<property name="energy" type="int" comment="元气"></property>
				<property name="xp" type="int" comment="怒气值"></property>
				<property name="totalXp" type="int" comment="怒气最大值"></property>
				<property name="breakDefence" type="int" comment="破防"></property>
				<property name="breakDefenceRate" type="int" comment="总破防率"></property>
				<property name="hit" type="int" comment="命中等级"></property>
				<property name="hitRate" type="int" comment="总命中率"></property>
				<property name="dodge" type="int" comment="回避"></property>
				<property name="dodgeRate" type="int" comment="总闪避率"></property>
				<property name="accurate" type="int" comment="精准"></property>
				<property name="accurateRate" type="int" comment="总精准率"></property>
				<property name="fireAttack" type="int" comment="火攻"></property>
				<property name="fireDefence" type="int" comment="火防"></property>
				<property name="fireDefenceRate" type="int" comment="总火防率"></property>
				<property name="fireIgnoreDefence" type="int" comment="减少对方火防"></property>
				<property name="fireIgnoreDefenceRate" type="int" comment="总减少对方火防率"></property>
				<property name="blizzardAttack" type="int" comment="冰攻"></property>
				<property name="blizzardDefence" type="int" comment="冰防"></property>
				<property name="blizzardDefenceRate" type="int" comment="总冰防率"></property>
				<property name="blizzardIgnoreDefence" type="int" comment="减少对方冰防"></property>
				<property name="blizzardIgnoreDefenceRate" type="int" comment="总减少对方冰防率"></property>
				<property name="windAttack" type="int" comment="风攻"></property>
				<property name="windDefence" type="int" comment="风防"></property>
				<property name="windDefenceRate" type="int" comment="总风防率"></property>
				<property name="windIgnoreDefence" type="int" comment="减少对方风防"></property>
				<property name="windIgnoreDefenceRate" type="int" comment="总减少对方风防率"></property>
				<property name="thunderAttack" type="int" comment="雷攻"></property>
				<property name="thunderDefence" type="int" comment="雷防"></property>
				<property name="thunderDefenceRate" type="int" comment="总雷防率"></property>
				<property name="thunderIgnoreDefence" type="int" comment="减少对方雷防"></property>
				<property name="thunderIgnoreDefenceRate" type="int" comment="总减少对方雷防率"></property>
				<property name="criticalDefence" type="int" comment="会心防御"></property>
				<property name="criticalDefenceRate" type="int" comment="总会心防御率"></property>
				<property name="criticalHitRate" type="int" comment="总暴击率"></property>
				<!-- 其他属性 -->
				<property name="unallocatedSkillPoint" type="short" comment=""></property>
				<property name="skillOneLevels" type="byte[]" comment="进阶技能的等级"></property>
				<property name="teamMark" type="byte" comment="玩家在团队的标记"></property>
				<!-- 玩家的坐标属性 -->
				<property name="x" type="int" comment="当前x坐标" />
				<property name="y" type="int" comment="当前y坐标" />

				<property name="inBattleField" type="boolean" comment="标记用户是否在战场中" />
				<property name="battleFieldSide" type="byte" comment="玩家在战场中的哪一方，0标识中立，1标识A方，2标识B方" />

				<property name="avataPropsId" type="long" comment="换装道具id，此id部位0或-1即代表此人现在有时装穿在身上" />
				<property name="pkMode" type="byte" comment="0普通, 1-屠杀模式" />
				<property name="nameColorType" type="byte" comment="名字颜色类型" />
				<property name="careerBasicSkillsLevels" type="byte[]" comment="职业基本技能级别" />
				<property name="skillOneLevels" type="byte[]" comment="职业进阶技能级别" />
				<property name="nuqiSkillsLevels" type="byte[]" comment="怒气技能级别" />
				<property name="xinfaLevels" type="byte[]" comment="心法技能级别" />
				<property name="jiazuTitle" type="String" encoding="UTF-8" comment="家族称号" />
				<property name="jiazuIcon" type="String" encoding="UTF-8" comment="家族徽章资源名字" />
				<property name="sealState" type="boolean" comment="封印状态" />
				<property name="bournExp" type="int" comment="境界经验" />
				<property name="weaponParticle" type="String" encoding="UTF-8" comment="武器粒子光效" />
				<property name="horseParticle" type="String" encoding="UTF-8" comment="坐骑粒子光效" />
				<property name="suitBodyParticle" type="String" encoding="UTF-8" comment="套装粒子光效身上" />
				<property name="suitFootParticle" type="String" encoding="UTF-8" comment="套装粒子光效脚下" />
				<property name="jiazuXuanZhanFlag" type="boolean" comment="家族是否有宣战" />
				<property name="jiazuXuanZhanData" type="long[]" comment="宣战家族的id" />
				<property name="citanStateLevel" type="byte" comment="刺探状态级别，用于头顶刺探显示" />
				<property name="touzhuanStateLevel" type="byte" comment="偷砖状态级别，用于头顶偷砖显示" />
				<property name="culture" type="int" comment="文采" />
				<property name="todayUsedBindSilver" type="long" comment="今天使用的绑银数" />
				<property name="evil" type="int" comment="罪恶值" />
				<property name="spouse" type="String" encoding="UTF-8" comment="配偶名字" />
				<property name="RMB" type="long" comment="人民币" />
				<property name="vipLevel" type="byte" comment="vip等级" />
				<property name="cityFightSide" type="byte" comment="城战状态，0表示正常，1表示进攻，2表示防守" />
				<property name="isGuozhan" type="boolean" comment="国战" />
				<property name="guozhanLevel" type="int" comment="国战星星" />
				<property name="lilian" type="long" comment="历练" />
				<property name="repairCarry" type="boolean" comment="随身修理" />
				<property name="mailCarry" type="boolean" comment="随身邮件" />
				<property name="wareHouseCarry" type="boolean" comment="随身仓库" />
				<property name="quickBuyCarry" type="boolean" comment="随身求购" />
				<property name="maxHPX" type="int" comment="加成属性maxHPX" />
				<property name="maxMPX" type="int" comment="加成属性maxMPX" />
				<property name="phyDefenceX" type="int" comment="加成属性phyDefenceX" />
				<property name="magicDefenceX" type="int" comment="加成属性magicDefenceX" />
				<property name="breakDefenceX" type="int" comment="加成属性breakDefenceX" />
				<property name="hitX" type="int" comment="加成属性hitX" />
				<property name="dodgeX" type="int" comment="加成属性dodgeX" />
				<property name="accurateX" type="int" comment="加成属性accurateX" />
				<property name="phyAttackX" type="int" comment="加成属性phyAttackX" />
				<property name="magicAttackX" type="int" comment="加成属性magicAttackX" />
				<property name="fireAttackX" type="int" comment="加成属性fireAttackX" />
				<property name="fireDefenceX" type="int" comment="加成属性fireDefenceX" />
				<property name="fireIgnoreDefenceX" type="int" comment="加成属性fireIgnoreDefenceX" />
				<property name="blizzardAttackX" type="int" comment="加成属性blizzardAttackX" />
				<property name="blizzardDefenceX" type="int" comment="加成属性blizzardDefenceX" />
				<property name="blizzardIgnoreDefenceX" type="int" comment="加成属性blizzardIgnoreDefenceX" />
				<property name="windAttackX" type="int" comment="加成属性windAttackX" />
				<property name="windDefenceX" type="int" comment="加成属性windDefenceX" />
				<property name="windIgnoreDefenceX" type="int" comment="加成属性windIgnoreDefenceX" />
				<property name="thunderAttackX" type="int" comment="加成属性thunderAttackX" />
				<property name="thunderDefenceX" type="int" comment="加成属性thunderDefenceX" />
				<property name="thunderIgnoreDefenceX" type="int" comment="加成属性thunderIgnoreDefenceX" />
				<property name="criticalHitX" type="int" comment="加成属性criticalHitX" />
				<property name="criticalDefenceX" type="int" comment="加成属性criticalDefenceX" />
				<property name="gongxun" type="long" comment="功勋" />
				<property name="vipPickedRewardLevel" type="byte" comment="vip已经领取的vip奖励级别(每一级vip只能领取一次，客户端可以根据这个级别来显示领取奖励按钮)" />
			</object-property>
		</res>
	</prototype>
	<prototype req_name="QUERY_SIMPLE_PLAYER_INFO_REQ" res_name="QUERY_SIMPLE_PLAYER_INFO_RES" req_type="0x00001000" res_type="0x70001000"
		req_client_send="true" res_client_receive="true" comment="客户端向服务器发送查询角色简单信息的请求">
		<req>
			<property name="id" type="long" comment="角色id"></property>
		</req>
		<res>
			<object-property name="player" type="Player" comment="此账户在此服务器上创建的所有的角色，长度为0或者n的数组">
				<property name="id" type="long" comment="玩家唯一的编号"></property>
				<property name="name" type="String" encoding="UTF-8" comment="玩家的昵称"></property>
				<property name="sex" type="byte" comment="性别"></property>
				<property name="country" type="byte" comment="国家"></property>
				<property name="countryPosition" type="int" comment="职位"></property>
				<property name="career" type="byte" comment="角色的门派或职业"></property>
				<property name="level" type="int" comment="等级"></property>
			</object-property>
		</res>
	</prototype>
	<prototype req_name="REMOVE_PLAYER_REQ" res_name="REMOVE_PLAYER_RES" req_type="0x00000014" res_type="0x70000014" req_client_send="true"
		res_client_receive="true" comment="客户端向服务器发送删除角色的请求">
		<req>
			<property name="username" type="String" encoding="UTF-8" comment="用户名，定长16个英文字符" />
			<property name="password" type="String" encoding="UTF-8" comment="密码，定长16个英文字符" />
			<property name="sessionId" type="byte[]" comment="密码，定长16个英文字符" />
			<property name="name" type="String" encoding="UTF-8" comment="玩家的昵称"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="删除精灵的结果，0表示成功，其他表示失败：&lt;br&gt;" />
			<property name="resultString" type="String" encoding="UTF-8" comment="错误信息" />
		</res>
	</prototype>

	<prototype req_name="PLAYER_ENTER_REQ" res_name="PLAYER_ENTER_RES" req_type="0x00000016" res_type="0x70000016" req_client_send="true"
		res_client_receive="true" comment="角色进入游戏请求">
		<req>
			<property name="player" type="long" comment="玩家唯一的编号"></property>
			<property name="authCode" type="String" encoding="UTF-8" comment="登陆后返回的验证串" />
		</req>
		<res>
			<property name="result" type="byte" comment="结果, 0-可以进入游戏,1-不可以进入游戏" />
			<property name="description" type="String" encoding="UTF-8" comment="不可以的描述" />
			<object-property name="buffs" type="Buff[]" comment="玩家身上的Buff">
				<property name="seqId" type="int" comment="buff的Id"></property>
				<property name="templateId" type="int" comment="模板的Id"></property>
				<property name="groupId" type="int" comment="组id"></property>
				<property name="iconId" type="String" encoding="UTF-8" comment="图标"></property>
				<property name="level" type="int" comment="级别"></property>
				<property name="invalidTime" type="long" comment="有效截止期"></property>
				<property name="startTime" type="long" comment="开始时间"></property>
				<property name="templateName" type="String" encoding="UTF-8" comment="名称"></property>
				<property name="description" type="String" encoding="UTF-8" comment="描述"></property>
				<property name="advantageous" type="boolean" comment="是否有增益的buff"></property>
				<property name="forover" type="boolean" comment="是否为永久的buff，这类buff消失时服务器会通知"></property>
			</object-property>
			<property name="worldMapDataVersion" type="int" comment="世界地图的数据版本号"></property>
			<property name="mapDataVersion" type="int" comment="要进入地图的数据版本号"></property>
			<property name="monsterTypes" type="short[]" comment="精灵的类型（仅限用普通动画表达）"></property>
			<object-property name="souls" type="Soul[]" comment="角色元神信息">
				<property name="soulType" type="int" comment="元神类型" />
				<property name="career" type="byte" comment="职业" />
				<property name="grade" type="int" comment="等级" />
				<property name="maxHp" type="int" comment="最大生命" />
				<property name="maxMp" type="int" comment="最大法力" />
				<property name="strength" type="int" comment="力量" />
				<property name="spellpower" type="int" comment="智力" />
				<property name="constitution" type="int" comment="耐力" />
				<property name="dexterity" type="int" comment="敏捷" />
				<property name="hit" type="int" comment="命中" />
				<property name="dodge" type="int" comment="回避" />
				<property name="accurate" type="int" comment="精准" />
				<property name="phyAttack" type="int" comment="近战攻击强度" />
				<property name="magicAttack" type="int" comment="魔法攻击强度" />
				<property name="criticalHit" type="int" comment="暴击" />
				<property name="criticalDefence" type="int" comment="暴击防御" />
				<property name="phyDefence" type="int" comment="物理防御" />
				<property name="magicDefence" type="int" comment="魔法防御" />
				<property name="breakDefence" type="int" comment="打断防御" />
				<property name="fireAttack" type="int" comment="火焰伤害" />
				<property name="fireDefence" type="int" comment="火焰防御" />
				<property name="fireIgnoreDefence" type="int" comment="忽略火焰防御" />
				<property name="blizzardAttack" type="int" comment="冰霜伤害" />
				<property name="blizzardDefence" type="int" comment="冰霜防御" />
				<property name="blizzardIgnoreDefence" type="int" comment="忽略冰霜防御" />
				<property name="windAttack" type="int" comment="飓风伤害" />
				<property name="windDefence" type="int" comment="飓风防御" />
				<property name="windIgnoreDefence" type="int" comment="忽略飓风防御" />
				<property name="thunderAttack" type="int" comment="雷电伤害" />
				<property name="thunderDefence" type="int" comment="雷电防御" />
				<property name="thunderIgnoreDefence" type="int" comment="忽略雷电防御" />
			</object-property>
			<property name="switchColdDown" type="long" comment="切换元神冷却时间"></property>
			<property name="coldDownLeft" type="long" comment="切换元神剩余"></property>
			<property name="maxUseBindSilver" type="long" comment="最大使用绑银上限"></property>
		</res>
	</prototype>



	<prototype req_name="FUNCTION_NPC_REQ" res_name="FUNCTION_NPC_RES" req_type="0x00000019" res_type="0x70000019" req_client_send="true"
		res_client_receive="true" comment="客户端向服务器发送请求包">
		<req>
		</req>
		<res>
			<object-property name="functionNPCs" type="FunctionNPC[]" comment="功能性NPC数组">
				<property name="x" type="int" comment="坐标" />
				<property name="y" type="int" comment="坐标" />
				<property name="avaiableTaskIds" type="long[]" comment="可接任务的ID列表" />
				<property name="avaiableTaskNames" type="String[]" encoding="UTF-8" comment="可接任务的名字列表" />
				<property name="avaiableTaskGrades" type="int[]" encoding="UTF-8" comment="可接任务的等级列表" />
				<property name="avaiableTaskTypes" type="byte[]" comment="可接任务的类型" />
				<property name="id" type="long" comment="id"></property>
				<property name="name" type="String" encoding="UTF-8" comment="名字"></property>
				<property name="title" type="String" encoding="UTF-8" comment="名字"></property>
				<property name="functionType" type="byte" comment="npc类型" />
			</object-property>
		</res>
	</prototype>

	<!--主动技能施放指令 -->
	<prototype req_name="NONTARGET_SKILL_REQ" req_type="0x00000020" req_client_send="true" comment="客户端通知服务器，无目标地施放技能">
		<req>
			<property name="targetX" type="short" comment="技能施放目标的X坐标" />
			<property name="targetY" type="short" comment="技能施放目标的Y坐标" />
			<property name="targetType" type="byte[]" comment="为了让服务器和客户端在击中目标保持一致，因此无目标技能也可以带上目标，可以传0个目标，表示周围没有目标" />
			<property name="targetId" type="long[]" comment="为了让服务器和客户端在击中目标保持一致，因此无目标技能也可以带上目标，可以传0个目标，表示周围没有目标" />
			<property name="skillId" type="short" comment="技能的Id" />
			<property name="direction" type="byte" comment="释放技能的生物朝向" />
		</req>
	</prototype>

	<prototype req_name="TARGET_SKILL_REQ" req_type="0x00000021" req_client_send="true" comment="客户端通知服务器，有目标地施放技能">
		<req>
			<property name="targetX" type="short" comment="技能施放目标的X坐标" />
			<property name="targetY" type="short" comment="技能施放目标的Y坐标" />
			<property name="targetType" type="byte[]" comment="为了让服务器和客户端在击中目标保持一致，因此无目标技能也可以带上目标，可以传0个目标，表示周围没有目标" />
			<property name="targetId" type="long[]" comment="为了让服务器和客户端在击中目标保持一致，因此无目标技能也可以带上目标，可以传0个目标，表示周围没有目标" />
			<property name="skillId" type="short" comment="技能的Id" />
			<property name="direction" type="byte" comment="释放技能的生物朝向" />
		</req>
	</prototype>

	<!--主动技能广播指令 -->
	<prototype req_name="NONTARGET_SKILL_BROADCAST_REQ" req_type="0x00000022" req_client_receive="true" comment="服务器向客户端广播技能使用事件，限定为使用者广播区内的所有玩家，不包括使用者本人">
		<req>
			<property name="casterType" type="byte" comment="技能施放者的类型" />
			<property name="casterId" type="long" comment="技能施放者的标识" />
			<property name="targetX" type="short" comment="技能施放目标的X坐标" />
			<property name="targetY" type="short" comment="技能施放目标的Y坐标" />
			<property name="skillId" type="int" comment="技能编号，范围是所有技能" />
			<property name="level" type="byte" comment="技能的等级" />
		</req>
	</prototype>

	<prototype req_name="TARGET_SKILL_BROADCAST_REQ" req_type="0x00000023" req_client_receive="true" comment="服务器向客户端广播技能使用事件，限定为使用者广播区内的所有玩家，不包括使用者本人">
		<req>
			<property name="casterType" type="byte" comment="技能施放者的类型" />
			<property name="casterId" type="long" comment="技能施放者的标识" />
			<property name="targetType" type="byte" comment="目标的类型" />
			<property name="targetId" type="long" comment="目标的标识" />
			<property name="skillId" type="int" comment="技能编号，范围是所有技能" />
			<property name="level" type="byte" comment="技能的等级" />
		</req>
	</prototype>

	<prototype req_name="LASTING_SKILL_BROADCAST_REQ" req_type="0x0F000123" req_client_receive="true" comment="服务器向客户端广播持续性技能使用事件，限定为使用者广播区内的所有玩家，不包括使用者本人">
		<req>
			<property name="casterType" type="byte" comment="技能施放者的类型" />
			<property name="casterId" type="long" comment="技能施放者的标识" />
			<property name="targetX" type="short" comment="技能施放目标的X坐标" />
			<property name="targetY" type="short" comment="技能施放目标的Y坐标" />
			<property name="skillId" type="int" comment="技能编号，范围是所有技能" />
			<property name="level" type="byte" comment="技能的等级" />
			<property name="beginTime" type="long" comment="技能的开始时间" />
			<property name="endTime" type="long" comment="技能的结束时间" />
		</req>
	</prototype>

	<prototype req_name="PLAYER_UPDATE_REQ" res_name="PLAYER_UPDATE_RES" req_type="0x00000024" res_type="0x70000024" req_client_send="true"
		res_client_receive="true" comment="玩家修改信息">
		<req>
			<property name="player" type="long" comment="玩家唯一的编号"></property>
			<property name="playername" type="String" encoding="UTF-8" comment="玩家新名称" />
			<property name="sex" type="byte" comment="新性别"></property>
			<property name="career" type="byte" comment="角色的新门派或职业"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="结果, 0-成功, 1-失败" />
			<property name="description" type="String" encoding="UTF-8" comment="失败的描述" />
		</res>
	</prototype>

	<!-- <prototype req_name="TARGET_CHANGE_REQ" req_type="0x00000025" req_client_send="true" comment="客户端通知服务器"> <req> <property name="targetType" type="byte" 
		comment="0-玩家，1-精灵，2-召唤物" /> <property name="targetId" type="long" comment="-1表示目标取消，当前没有目标" /> </req> </prototype>
-->

	<prototype req_name="USE_AURASKILL_REQ" req_type="0x00000026" req_client_send="true" comment="玩家使用光环技能的请求">
		<req>
			<property name="skillID" type="int" comment="光环技能的编号。负数代表取消玩家当前正在启用的光环技能" />
		</req>
	</prototype>

	<prototype req_name="EQUIPMENT_SKILL_REQ" req_type="0xA0000026" req_client_receive="true" comment="发送装备技能数据给客户端">
		<req>
			<property name="skillID" type="int" comment="技能id" />
			<property name="soulType" type="int" comment="元神类型" />
			<property name="addOrRemove" type="byte" comment="0表示添加，1表示删除" />
		</req>
	</prototype>

	<!-- 进入、离开和跳转地图指令 -->
	<prototype req_name="ENTER_GAME_REQ" res_name="ENTER_GAME_RES" req_type="0x00000090" res_type="0x70000090" req_client_send="true"
		res_client_receive="true" comment="客户端发送请求给服务器，要求进入某个地图">
		<req>
			<property name="player" type="long" comment="精灵的ID"></property>
			<property name="game" type="String" encoding="UTF-8" comment="地图的名称"></property>
			<property name="handset" type="String" encoding="UTF-8" comment="手机型号，此串为jar包中的串"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="0表示成功，1表示地图人数已满，2表示地图不存在"></property>
			<property name="resultString" type="String" encoding="UTF-8" comment="错误信息" />
			<property name="x" type="short" comment="精灵x轴当前的位置" />
			<property name="y" type="short" comment="精灵y轴当前的位置" />
			<property name="worldMapX" type="short" comment="精灵在世界地图中的X位置" />
			<property name="worldMapY" type="short" comment="精灵在世界地图中的Y位置" />
		</res>
	</prototype>

	<prototype req_name="LEAVE_CURRENT_GAME_REQ" req_type="0x00000091" req_client_send="true" comment="要求离开当前地图，服务器和客户端均可发送">
		<req>
		</req>
	</prototype>

	<prototype req_name="CHANGE_GAME_REQ" req_type="0x00000092" req_client_receive="true" comment="服务器发送，要求客户端离开当前地图，然后请求进入指定的下一张地图">
		<req>
			<property name="nextGame" type="String" encoding="UTF-8" comment="要求前往的下一张地图"></property>
			<property name="mapDataVersion" type="int" comment="要进入地图的数据版本号"></property>
			<property name="monsterTypes" type="short[]" comment="精灵的类型（仅限用普通动画表达）"></property>
		</req>
	</prototype>

	<prototype req_name="PLAYER_RECONN_REQ" res_name="PLAYER_RECONN_RES" req_type="0x000000A0" res_type="0x700000A0" req_client_send="true"
		res_client_receive="true" comment="客户端通知服务器，刚才断网，重新连接上来，要求继续进行游戏">
		<req>
			<property name="username" type="String" encoding="UTF-8" comment="用户名，定长16个英文字符" />
			<property name="password" type="String" encoding="UTF-8" comment="密码，定长16个英文字符" />
			<property name="player" type="long" comment="玩家的昵称"></property>
			<property name="authCode" type="String" encoding="UTF-8" comment="根据账户加密后的串，用于后期验证" />
		</req>
		<res>
			<property name="result" type="byte" comment="0断点续连成功，其他值表示失败" />
			<property name="resultString" type="String" encoding="UTF-8" comment="错误信息" />
		</res>
	</prototype>

	<prototype req_name="PLAYER_MOVE_REQ" req_type="0x000000C0" req_client_send="true" comment="客户端通知服务器，精灵沿着导航点移动到目的地，以及到达时间">
		<req>
			<property name="startTimestamp" type="long" comment="客户端当前时间" />
			<property name="speed" type="int" comment="速度"></property>
			<property name="destineTimestamp" type="long" comment="到达目的地的时刻" />
			<property name="startX" type="short" comment="出发地x坐标" />
			<property name="startY" type="short" comment="出发地y坐标" />
			<property name="endX" type="short" comment="目的地x坐标" />
			<property name="endY" type="short" comment="目的地y坐标" />
			<property name="signPosts" type="short[]" comment="导航点编号" />
		</req>
	</prototype>
	<prototype req_name="PLAYER_MOVETRACE_REQ" req_type="0x000000C1" req_client_send="true" comment="客户端通知服务器，精灵沿着按多个目标点表达的路径移动到目的地，包括到达的时间">
		<req>
			<object-property name="moveTrace4Client" type="MoveTrace4Client" comment="玩家的移动路径">
				<property name="id" type="long" comment="生物的唯一编号"></property>
				<property name="startTimestamp" type="long" comment="客户端当前时间" />
				<property name="pointsX" type="short[]" comment="路径上各点x坐标数组" />
				<property name="speed" type="int" comment="速度"></property>
				<property name="destineTimestamp" type="long" comment="到达目的地的时刻" />
				<property name="roadLen" type="short[]" comment="路径各段的长度" />
				<property name="type" type="byte" comment="生物的类型"></property>
				<property name="pointsY" type="short[]" comment="路径上各点y坐标数组" />
			</object-property>
		</req>
	</prototype>


	<prototype req_name="SPECIAL_SKILL_MOVETRACE_REQ" req_type="0x000000CA" req_client_receive="true" comment="服务器通知客户端，精灵沿着按路径移动到目的地，包括到达的时间">
		<req>
			<object-property name="moveTrace4Client" type="MoveTrace4Client" comment="玩家的移动路径">
				<property name="id" type="long" comment="生物的唯一编号"></property>
				<property name="startTimestamp" type="long" comment="客户端当前时间" />
				<property name="pointsX" type="short[]" comment="路径上各点x坐标数组" />
				<property name="speed" type="int" comment="速度"></property>
				<property name="destineTimestamp" type="long" comment="到达目的地的时刻" />
				<property name="roadLen" type="short[]" comment="路径各段的长度" />
				<property name="type" type="byte" comment="生物的类型"></property>
				<property name="pointsY" type="short[]" comment="路径上各点y坐标数组" />



				<property name="specialSkillType" type="byte" comment="技能路径类型：0-普通,1-路径不能被按键打断"></property>
			</object-property>
		</req>
	</prototype>


	<prototype req_name="SET_POSITION_REQ" req_type="0x000000C2" req_client_send="true" req_client_receive="true"
		comment="服务器通知客户端，精灵立刻移动到目的地；或者玩家中止移动时发送此指令给服务器">
		<req>
			<property name="reason" type="byte" comment="移动的原因" />
			<property name="objectType" type="byte" comment="移动生物的物种" />
			<property name="objectId" type="long" comment="移动生物的编号" />
			<property name="x" type="short" comment="目的地x坐标" />
			<property name="y" type="short" comment="目的地y坐标" />
		</req>
	</prototype>

	<prototype req_name="TOUCH_TRANSPORT_REQ" req_type="0x000000C3" req_client_send="true" comment="客户端通知服务端到达传送点">
		<req>
			<property name="transportId" type="int" comment="传送点ID" />
		</req>
	</prototype>
	<prototype req_name="NOTICE_CLIENT_UPDATE_MAPRES_REQ" req_type="0x000000C4" req_client_receive="true" comment="通知客户端更新资源">
		<req>
			<property name="resName" type="String" encoding="UTF-8" comment="资源名字" />
			<property name="version" type="int" encoding="UTF-8" comment="资源版本" />
			<property name="currMap" type="String" encoding="UTF-8" comment="当前地图" />
			<property name="useNow" type="boolean" comment="是否获得完马上显示" />
		</req>
	</prototype>

	<prototype req_name="SPRITES_IN_GAME" req_type="0x000111D0" req_client_receive="true"
		comment="服务器主动向客户端发送的数据包，告诉客户端本地图上有哪些怪,此数组客户端应该保留在内存中，在AROUND_CHANGE_REQ会通知此怪的下标来节省流量">
		<req>
			<object-property name="monstersInGame" type="Sprite[]" comment="地图上存在的怪物数据">
				<property name="id" type="long" comment="精灵唯一的编号"></property>
				<property name="name" type="String" encoding="UTF-8" comment="精灵的昵称"></property>
				<property name="title" type="String" encoding="UTF-8" comment="精灵的称号"></property>
				<property name="level" type="short" comment=""></property>
				<property name="state" type="byte" comment=""></property>
				<property name="direction" type="byte" comment=""></property>
				<property name="hp" type="int" comment=""></property>
				<property name="maxHP" type="int" comment=""></property>
				<property name="icon" type="String" encoding="UTF-8" comment="精灵的头像"></property>

				<!-- 玩家的坐标属性 -->
				<property name="x" type="int" comment="当前x坐标" />
				<property name="y" type="int" comment="当前y坐标" />

				<property name="inBattleField" type="boolean" comment="标记用户是否在战场中" />
				<property name="battleFieldSide" type="byte" comment="玩家在战场中的哪一方，0标识中立，1标识A方，2标识B方" />

				<!-- 状态 -->
				<property name="hold" type="boolean" comment="定身"></property>
				<property name="stun" type="boolean" comment="眩晕"></property>
				<property name="immunity" type="boolean" comment="免疫"></property>
				<property name="poison" type="boolean" comment="中毒"></property>
				<property name="weak" type="boolean" comment="虚弱"></property>
				<property name="invulnerable" type="boolean" comment="无敌"></property>
				<property name="shield" type="byte" comment="护盾"></property>
				<property name="aura" type="byte" comment="光环类型，-1标识没有光环类型"></property>

				<property name="avataAction" type="String" encoding="UTF-8" comment="建筑NPC动作名"></property>
				<property name="avataRace" type="String" encoding="UTF-8" comment="客户端用来定位形象"></property>
				<property name="avataSex" type="String" encoding="UTF-8" comment="客户端用来定位形象" />
				<property name="avata" type="String[]" encoding="UTF-8" comment="玩家身上的部件关键字：比如装备了明月刀，"></property>
				<property name="avataType" type="byte[]" comment="玩家身上的部件关键字"></property>
				<property name="height" type="short" comment="怪物的身高，从地面到头顶"></property>
				<property name="spriteType" type="byte" comment="精灵的类型"></property>
				<property name="monsterType" type="byte" comment="怪物的类型"></property>
				<property name="npcType" type="byte" comment="NPC的类型"></property>
				<property name="taskMark" type="boolean" comment="是否有任务"></property>
				<property name="country" type="byte" comment="阵营：0-中立"></property>

				<property name="speed" type="short" comment="移动速度，单位：像素/秒"></property>
				<property name="skillUsingState" type="boolean" comment="正在释放技能，用于正在释放暴风雪技能，该状态改变后暴风雪消失" />
				<property name="nameColor" type="int" comment="名字颜色色值" />

				<property name="objectScale" type="short" comment="大小-基础:1000" />
				<property name="objectColor" type="int" comment="生物颜色" />
				<property name="objectOpacity" type="boolean" comment="是否透明" />
				<property name="particleName" type="String" encoding="UTF-8" comment="身上的粒子" />
				<property name="particleX" type="short" comment="人物脚下中心点为0，人物右向为正，左向为负，例50为50%" />
				<property name="particleY" type="short" comment="人物脚下中心点为0，人物向上为正，向下为负，例50为50%" />
				<property name="footParticleName" type="String" encoding="UTF-8" comment="身上的粒子" />
				<property name="footParticleX" type="short" comment="人物脚下中心点为0，人物右向为正，左向为负，例50为50%" />
				<property name="footParticleY" type="short" comment="人物脚下中心点为0，人物向下为正，向上为负，例50为50%" />
				<property name="classLevel" type="short" comment="境界" />
			</object-property>
		</req>
	</prototype>

	<prototype req_name="AROUND_CHANGE_REQ" req_type="0x001100D0" req_client_receive="true"
		comment="服务器主动向客户端发送的数据包，告诉客户端其周围发生的变化，包括谁来了，谁走了，谁的什么属性发生了什么变化，以及谁在移动">
		<req>
			<object-property name="enterPlayers" type="Player[]" comment="进入到周围的玩家">
				<!-- 状态 -->
				<property name="hold" type="boolean" comment="定身"></property>
				<property name="pkMode" type="byte" comment="pk模式，分为和平，全体，组队，家族，宗派，国家，盟国"></property>
				<property name="stun" type="boolean" comment="眩晕"></property>
				<property name="immunity" type="boolean" comment="免疫"></property>
				<property name="poison" type="boolean" comment="中毒"></property>
				<property name="weak" type="boolean" comment="虚弱"></property>
				<property name="invulnerable" type="boolean" comment="无敌"></property>
				<property name="cure" type="boolean" comment="缓疗状态"></property>
				<property name="liuxueState" type="boolean" comment="流血状态"></property>
				<property name="jiansuState" type="boolean" comment="减速状态"></property>
				<property name="pojiaState" type="boolean" comment="破甲状态"></property>
				<property name="zhuoreState" type="boolean" comment="灼热状态"></property>
				<property name="hanlengState" type="boolean" comment="寒冷状态"></property>
				<property name="tigaoBaojiState" type="boolean" comment="提高暴击状态"></property>
				<property name="tigaoWaigongState" type="boolean" comment="提高外功状态"></property>
				<property name="tigaoNeigongState" type="boolean" comment="提高内功状态"></property>
				<property name="tigaoWaifangState" type="boolean" comment="提高外防状态"></property>
				<property name="tigaoNeifangState" type="boolean" comment="提高内防状态"></property>
				<property name="shield" type="byte" comment="护盾"></property>
				<property name="fighting" type="boolean" comment="战斗状态"></property>

				<property name="flying" type="boolean" comment="飞行状态"></property>
				<property name="boothState" type="boolean" comment="摆摊状态"></property>
				<property name="sitdownState" type="boolean" comment="坐的状态默认false为站立"></property>

				<property name="vitality" type="int" comment="体力"></property>
				<property name="maxVitality" type="int" comment="体力最大数值"></property>
				
				<property name="hp" type="int" comment=""></property>
				<property name="maxHP" type="int" comment=""></property>
				<property name="mp" type="int" comment=""></property>
				<property name="maxMP" type="int" comment=""></property>

				<property name="id" type="long" comment="玩家唯一的编号"></property>
				<property name="name" type="String" encoding="UTF-8" comment="玩家的昵称"></property>
				<property name="sex" type="byte" comment="性别"></property>
				<property name="country" type="byte" comment="国家"></property>
				<property name="countryPosition" type="int" comment="职位"></property>
				<property name="career" type="byte" comment="角色的门派或职业"></property>
				<property name="level" type="int" comment="等级"></property>
				<property name="soulLevel" type="int" comment="等级"></property>
				<property name="state" type="byte" comment=""></property>
				<property name="direction" type="byte" comment=""></property>

				<property name="avataRace" type="String" encoding="UTF-8" comment="客户端用来定位形象">
				</property>
				<property name="avata" type="String[]" encoding="UTF-8" comment="玩家身上的部件关键字：比如装备了明月刀，"></property>
				<property name="avataType" type="byte[]" comment="玩家身上的部件关键字"></property>

				<property name="aura" type="byte" comment="光环类型，-1标识没有光环类型"></property>
				<property name="encloser" type="byte" comment="角色周身的外罩，一种透明的光影效果"></property>
				<property name="isUpOrDown" type="boolean" comment=""></property>
				<property name="commonAttackSpeed" type="short" comment="普通攻击的速度"></property>
				<property name="commonAttackRange" type="short" comment="普通攻击的攻击距离（像素为单位）"></property>
				<property name="speed" type="short" comment="角色的移动速度，单位：像素/秒"></property>
				<property name="zongPaiName" type="String" encoding="UTF-8" comment="宗派名"></property>
				<property name="title" type="String" encoding="UTF-8" comment="称号"></property>
				<property name="chuangongState" type="boolean" comment="传功状态"></property>

				<!-- 其他属性 -->
				<property name="teamMark" type="byte" comment="玩家在团队的标记"></property>
				<!-- 玩家的坐标属性 -->
				<property name="x" type="int" comment="当前x坐标" />
				<property name="y" type="int" comment="当前y坐标" />

				<property name="inBattleField" type="boolean" comment="标记用户是否在战场中" />
				<property name="battleFieldSide" type="byte" comment="玩家在战场中的哪一方，0标识中立，1标识A方，2标识B方" />

				<property name="nameColorType" type="byte" comment="名字颜色类型">
				</property>

				<property name="jiazuTitle" type="String" encoding="UTF-8" comment="家族称号" />
				<property name="jiazuIcon" type="String" encoding="UTF-8" comment="家族徽章资源名字" />
				<property name="skillUsingState" type="boolean" comment="正在释放技能，用于正在释放暴风雪技能，该状态改变后暴风雪消失" />
				<property name="weaponParticle" type="String" encoding="UTF-8" comment="武器粒子光效" />
				<property name="horseParticle" type="String" encoding="UTF-8" comment="坐骑粒子光效" />
				<property name="suitBodyParticle" type="String" encoding="UTF-8" comment="套装粒子光效身上" />
				<property name="suitFootParticle" type="String" encoding="UTF-8" comment="套装粒子光效脚下" />
				<property name="jiazuId" type="long" comment="家族id" />
				<property name="boothName" type="String" encoding="UTF-8" comment="摆摊招牌" />
				<property name="citanStateLevel" type="byte" comment="刺探状态级别，用于头顶刺探显示" />
				<property name="touzhuanStateLevel" type="byte" comment="偷砖状态级别，用于头顶偷砖显示" />

				<property name="objectScale" type="short" comment="大小-基础:1000" />
				<property name="objectColor" type="int" comment="生物颜色" />
				<property name="objectOpacity" type="boolean" comment="是否透明" />
				<property name="spouse" type="String" encoding="UTF-8" comment="配偶名字" />
				<property name="beerState" type="byte" comment="喝酒的状态" />
				<property name="vipLevel" type="byte" comment="vip等级" />
				<property name="cityFightSide" type="byte" comment="城战状态，0表示正常，1表示进攻，2表示防守" />
				<property name="isGuozhan" type="boolean" comment="国战" />
				<property name="guozhanLevel" type="int" comment="国战星星" />
			</object-property>
			<object-property name="enterPets" type="Pet[]" comment="进入到周围的宠物">
				<property name="id" type="long" comment="宠物的id"></property>
				<property name="name" type="String" encoding="UTF-8" comment="宠物的名字"></property>
				<property name="ownerName" type="String" encoding="UTF-8" comment="宠物主人的名字"></property>
				<property name="ownerId" type="long" comment="宠物的主人"></property>
				<property name="category" type="String" encoding="UTF-8" comment="宠物的种类"></property>
				<property name="career" type="byte" comment="宠物的职业倾向"></property>
				<property name="character" type="byte" comment="宠物的性格"></property>
				<property name="sex" type="byte" comment="宠物的性别"></property>
				<property name="breedTimes" type="byte" comment="宠物可生育的次数"></property>
				<property name="breededTimes" type="byte" comment="宠物已经生育的次数"></property>
				<property name="lifeTime" type="int" comment="宠物的寿命"></property>
				<property name="happyness" type="int" comment="宠物的快乐值"></property>
				<property name="level" type="short" comment="宠物的等级"></property>
				<property name="exp" type="int" comment="宠物当前的经验值"></property>
				<property name="nextLevelExp" type="int" comment="宠物升到下级的经验值"></property>
				<property name="quality" type="byte" comment="宠物的品质，非为5档，0~4：普兽（白）、灵兽（绿）、仙兽（蓝）、神兽（紫）、圣兽（橙），需要鉴定"></property>
				<property name="starClass" type="byte" comment="宠物的星级"></property>
				<property name="generation" type="byte" comment="宠物的类型、一代0，二代1"></property>
				<property name="variation" type="byte" comment="宠物是否变异，0为不变异，否则1-5为变异等级"></property>
				<property name="strengthQuality" type="int" comment="宠物的力量资质"></property>
				<property name="dexterityQuality" type="int" comment="宠物的身法资质"></property>
				<property name="spellpowerQuality" type="int" comment="宠物的灵力资质"></property>
				<property name="constitutionQuality" type="int" comment="宠物的耐力资质"></property>
				<property name="dingliQuality" type="int" comment="宠物的定力资质"></property>
				<property name="trainLevel" type="int" comment="宠物的携带等级"></property>
				<property name="rarity" type="byte" comment="宠物的稀有度，0-随处可见,1-百里挑一,2-千载难逢"></property>
				<property name="growthClass" type="byte" comment="宠物的成长品质"></property>
				<property name="growth" type="int" comment="宠物的成长值"></property>
				<property name="skillIds" type="int[]" comment="宠物拥有的技能ids"></property>
				<property name="activeSkillLevels" type="int[]" comment="宠物拥有的技能等级"></property>
				<property name="petPropsId" type="long" comment="宠物的幻化物品实体id"></property>
				<property name="strength" type="int" comment="宠物的力量"></property>
				<property name="dexterity" type="int" comment="宠物的身法"></property>
				<property name="spellpower" type="int" comment="宠物的灵力"></property>
				<property name="constitution" type="int" comment="宠物的耐力"></property>
				<property name="dingli" type="int" comment="宠物的定力"></property>
				<property name="phyAttack" type="int" comment="宠物的外功强度"></property>
				<property name="phyDefence" type="int" comment="宠物的外功防御"></property>
				<property name="magicAttack" type="int" comment="宠物的内功强度"></property>
				<property name="magicDefence" type="int" comment="宠物的内功防御"></property>
				<property name="maxHP" type="int" comment="宠物的最大血量"></property>
				<property name="hp" type="int" comment="宠物当前血量"></property>
				<property name="criticalHit" type="int" comment="宠物的暴击"></property>
				<property name="hit" type="int" comment="宠物的命中"></property>
				<property name="dodge" type="int" comment="宠物的闪避"></property>
				<property name="fireDefence" type="int" comment="宠物的火防"></property>
				<property name="windDefence" type="int" comment="宠物的风防"></property>
				<property name="blizzardDefence" type="int" comment="宠物的冰防"></property>
				<property name="thunderDefence" type="int" comment="宠物的雷防"></property>
				<property name="unAllocatedPoints" type="int" comment="还没分配的属性点"></property>
				<property name="activationType" type="byte" comment="宠物的模式, 0-被动，1-主动，2-只跟随"></property>
				<property name="avataRace" type="String" encoding="UTF-8" comment="客户端用来定位形象">
				</property>
				<property name="avataSex" type="String" encoding="UTF-8" comment="客户端用来定位形象" />
				<property name="avata" type="String[]" encoding="UTF-8" comment="玩家身上的部件关键字：比如头部动画名字"></property>
				<property name="avataType" type="byte[]" comment="玩家身上的部件关键字"></property>
				<property name="title" type="String" encoding="UTF-8" comment="精灵的称号"></property>
				<property name="icon" type="String" encoding="UTF-8" comment="精灵的头像"></property>

				<property name="state" type="byte" comment=""></property>
				<property name="direction" type="byte" comment=""></property>
				<property name="x" type="int" comment="当前x坐标" />
				<property name="y" type="int" comment="当前y坐标" />
				<property name="inBattleField" type="boolean" comment="标记用户是否在战场中" />
				<property name="battleFieldSide" type="byte" comment="玩家在战场中的哪一方，0标识中立，1标识A方，2标识B方" />

				<!-- 状态 -->
				<property name="hold" type="boolean" comment="定身"></property>
				<property name="stun" type="boolean" comment="眩晕"></property>
				<property name="immunity" type="boolean" comment="免疫"></property>
				<property name="poison" type="boolean" comment="中毒"></property>
				<property name="weak" type="boolean" comment="虚弱"></property>
				<property name="invulnerable" type="boolean" comment="无敌"></property>
				<property name="shield" type="byte" comment="护盾"></property>
				<property name="aura" type="byte" comment="光环类型，-1标识没有光环类型"></property>
				<property name="height" type="short" comment="怪物的身高，从地面到头顶"></property>
				<property name="spriteType" type="byte" comment="精灵的类型"></property>
				<property name="monsterType" type="byte" comment="怪物的类型"></property>
				<property name="npcType" type="byte" comment="NPC的类型"></property>
				<property name="taskMark" type="boolean" comment="是否有任务"></property>
				<property name="country" type="byte" comment="阵营：0-中立，1-紫薇宫，2-日月盟"></property>

				<property name="speed" type="short" comment="移动速度，单位：像素/秒"></property>
				<property name="skillUsingState" type="boolean" comment="正在释放技能，用于正在释放暴风雪技能，该状态改变后暴风雪消失" />
				<property name="nameColor" type="int" comment="名字颜色色值" />

				<property name="objectScale" type="short" comment="大小-基础:1000" />
				<property name="objectColor" type="int" comment="生物颜色" />
				<property name="objectOpacity" type="boolean" comment="是否透明" />
				<property name="particleName" type="String" encoding="UTF-8" comment="身上的粒子" />
				<property name="particleX" type="short" comment="人物脚下中心点为0，人物右向为正，左向为负，例50为50%" />
				<property name="particleY" type="short" comment="人物脚下中心点为0，人物向下为正，向上为负，例50为50%" />
				<property name="footParticleName" type="String" encoding="UTF-8" comment="身上的粒子" />
				<property name="footParticleX" type="short" comment="人物脚下中心点为0，人物右向为正，左向为负，例50为50%" />
				<property name="footParticleY" type="short" comment="人物脚下中心点为0，人物向下为正，向上为负，例50为50%" />
			</object-property>
			<object-property name="enterSprites" type="Sprite[]" comment="进入到周围的精灵">
				<property name="id" type="long" comment="精灵唯一的编号"></property>
				<property name="name" type="String" encoding="UTF-8" comment="精灵的昵称"></property>
				<property name="title" type="String" encoding="UTF-8" comment="精灵的称号"></property>
				<property name="level" type="short" comment=""></property>
				<property name="state" type="byte" comment=""></property>
				<property name="direction" type="byte" comment=""></property>
				<property name="hp" type="int" comment=""></property>
				<property name="maxHP" type="int" comment=""></property>
				<property name="icon" type="String" encoding="UTF-8" comment="精灵的头像"></property>

				<!-- 玩家的坐标属性 -->
				<property name="x" type="int" comment="当前x坐标" />
				<property name="y" type="int" comment="当前y坐标" />

				<property name="inBattleField" type="boolean" comment="标记用户是否在战场中" />
				<property name="battleFieldSide" type="byte" comment="玩家在战场中的哪一方，0标识中立，1标识A方，2标识B方" />

				<!-- 状态 -->
				<property name="hold" type="boolean" comment="定身"></property>
				<property name="stun" type="boolean" comment="眩晕"></property>
				<property name="immunity" type="boolean" comment="免疫"></property>
				<property name="poison" type="boolean" comment="中毒"></property>
				<property name="weak" type="boolean" comment="虚弱"></property>
				<property name="invulnerable" type="boolean" comment="无敌"></property>
				<property name="shield" type="byte" comment="护盾"></property>
				<property name="aura" type="byte" comment="光环类型，-1标识没有光环类型"></property>

				<property name="avataAction" type="String" encoding="UTF-8" comment="建筑NPC动作名"></property>
				<property name="avataRace" type="String" encoding="UTF-8" comment="客户端用来定位形象"></property>
				<property name="avataSex" type="String" encoding="UTF-8" comment="客户端用来定位形象" />
				<property name="avata" type="String[]" encoding="UTF-8" comment="玩家身上的部件关键字：比如装备了明月刀，"></property>
				<property name="avataType" type="byte[]" comment="玩家身上的部件关键字"></property>
				<property name="height" type="short" comment="怪物的身高，从地面到头顶"></property>
				<property name="spriteType" type="byte" comment="精灵的类型"></property>
				<property name="monsterType" type="byte" comment="怪物的类型"></property>
				<property name="npcType" type="byte" comment="NPC的类型"></property>
				<property name="taskMark" type="boolean" comment="是否有任务"></property>
				<property name="country" type="byte" comment="阵营：0-中立"></property>

				<property name="speed" type="short" comment="移动速度，单位：像素/秒"></property>
				<property name="skillUsingState" type="boolean" comment="正在释放技能，用于正在释放暴风雪技能，该状态改变后暴风雪消失" />
				<property name="nameColor" type="int" comment="名字颜色色值" />

				<property name="objectScale" type="short" comment="大小-基础:1000" />
				<property name="objectColor" type="int" comment="生物颜色" />
				<property name="objectOpacity" type="boolean" comment="是否透明" />
				<property name="particleName" type="String" encoding="UTF-8" comment="身上的粒子" />
				<property name="particleX" type="short" comment="人物脚下中心点为0，人物右向为正，左向为负，例50为50%" />
				<property name="particleY" type="short" comment="人物脚下中心点为0，人物向上为正，向下为负，例50为50%" />
				<property name="footParticleName" type="String" encoding="UTF-8" comment="身上的粒子" />
				<property name="footParticleX" type="short" comment="人物脚下中心点为0，人物右向为正，左向为负，例50为50%" />
				<property name="footParticleY" type="short" comment="人物脚下中心点为0，人物向下为正，向上为负，例50为50%" />
				<property name="classLevel" type="short" comment="境界" />
			</object-property>



			<object-property name="leavePlayers" type="Player[]" comment="离开周围的玩家">
				<property name="id" type="long" comment="玩家唯一的编号"></property>
				<!-- property name="name" type="String" encoding="UTF-8" comment="玩家的昵称"></property
-->
			</object-property>
			<object-property name="leavePets" type="Pet[]" comment="离开周围的精灵">
				<property name="id" type="long" comment="精灵唯一的编号"></property>
				<!-- property name="name" type="String" encoding="UTF-8" comment="精灵的昵称"></property
-->
			</object-property>
			<object-property name="leaveSprites" type="Sprite[]" comment="离开周围的精灵">
				<property name="id" type="long" comment="精灵唯一的编号"></property>
				<!-- property name="name" type="String" encoding="UTF-8" comment="精灵的昵称"></property
-->
			</object-property>

			<object-property name="moveLivings" type="MoveTrace4Client[]" comment="玩家移动">
				<property name="id" type="long" comment="生物的唯一编号"></property>
				<property name="startTimestamp" type="long" comment="开始的时刻" />
				<property name="destineTimestamp" type="long" comment="到达目的地的时刻" />
				<property name="roadLen" type="short[]" comment="路径各段的长度" />
				<property name="pointsX" type="short[]" comment="路径上各点x坐标数组" />
				<property name="type" type="byte" comment="生物的类型"></property>
				<property name="pointsY" type="short[]" comment="路径上各点y坐标数组" />
				<property name="speed" type="int" comment="速度"></property>
			</object-property>

			<object-property name="changeEvents" type="FieldChangeEvent[]" comment="周围发生的状态变化">
				<property name="objectId" type="long" comment="对象的标识"></property>
				<property name="objectType" type="byte" comment="对象的类型"></property>

				<property name="fieldId" type="short" comment="对象的属性的编号:玩家，怪，NPC,宠物"></property>
				<property name="valueType" type="byte" comment="属性值类型的标识"></property>
				<property name="valueData" type="byte[]" comment="属性值对应的二进制数据"></property>

			</object-property>

			<property name="indexOfenterSpritesInArray" type="int[]" comment="enterSpritesInArray数据中各个元素对应的在SPRITE_IN_GAME中的下标" />

			<object-property name="enterSpritesInArray" type="Sprite[]" comment="进入到周围的精灵，但数据都在事先传递的数组中">
				<property name="id" type="long" comment="精灵唯一的编号"></property>
				<property name="state" type="byte" comment=""></property>
				<property name="direction" type="byte" comment=""></property>
				<property name="hp" type="int" comment=""></property>

				<!-- 玩家的坐标属性 -->
				<property name="x" type="int" comment="当前x坐标" />
				<property name="y" type="int" comment="当前y坐标" />

			</object-property>
			<property name="otherValue" type="String[]" comment="otherValue"></property>
			<property name="otherValue2" type="long[]" comment="otherValue2"></property>
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="CHANGE_PKMODE_REQ" req_type="0x00F0EF08" req_client_send="true" comment="客户端通知服务器，更改pk状态">
		<req>
			<property name="pkMode" type="byte" comment="模式，和平模式  0;全体模式  1;组队模式  2;家族模式  3;宗派模式  4;国家模式  5;盟国模式  6;"></property>
		</req>
	</prototype>

	<prototype req_name="NOTIFY_EVENT_REQ" req_type="0x000000D1" req_client_receive="true"
		comment="服务器向客户端发送，通知客户端发生了某些事情，比如获得经验值，钱，升级了，任务完成了等等，客户端根据不同的事情，作不同的现实">
		<req>
			<property name="targetType" type="byte" comment="0标识玩家，1标识怪，2表示宠物" />
			<property name="targetId" type="long" comment="某个玩家Id或者某个怪的Id" />
			<property name="eventType" type="byte" comment="事件类型，查看Constants类" />
			<property name="eventData" type="long" comment="事件对应的数据" />
		</req>
	</prototype>

	<prototype req_name="NOTIFY_EVENTS_REQ" req_type="0x000000DF" req_client_receive="true"
		comment="服务器向客户端发送，通知客户端发生了某些事情，比如获得经验值，钱，升级了，任务完成了等等，客户端根据不同的事情，作不同的现实">
		<req>
			<property name="targetTypes" type="byte[]" comment="0标识玩家，1标识怪，2表示宠物" />
			<property name="targetIds" type="long[]" comment="某个玩家Id或者某个怪的Id" />
			<property name="eventTypes" type="byte[]" comment="事件类型，查看Constants类" />
			<property name="eventDatas" type="long[]" comment="事件对应的数据" />
		</req>
	</prototype>

	<prototype req_name="NOTIFY_BUFF_REQ" req_type="0x000000D2" req_client_receive="true" comment="服务器向客户端发送，通知客户端种植了一个新的BUFF">
		<req>
			<property name="targetType" type="byte" comment="0标识玩家，1标识怪" />
			<property name="targetId" type="long" comment="某个玩家Id或者某个怪的Id" />
			<object-property name="buff" type="Buff" comment="玩家或者怪身上的Buff">
				<property name="iconId" type="String" encoding="UTF-8" comment="图标"></property>
				<property name="level" type="int" comment="级别"></property>
				<property name="invalidTime" type="long" comment="有效截止期"></property>
				<property name="startTime" type="long" comment="开始时间"></property>
				<property name="seqId" type="int" comment="buff的Id"></property>
				<property name="templateId" type="int" comment="模板的Id"></property>
				<property name="groupId" type="int" comment="组id"></property>
				<property name="templateName" type="String" encoding="UTF-8" comment="名称"></property>
				<property name="description" type="String" encoding="UTF-8" comment="描述"></property>
				<property name="advantageous" type="boolean" comment="是否有增益的buff"></property>
				<property name="forover" type="boolean" comment="是否为永久的buff，这类buff消失时服务器会通知"></property>
			</object-property>
		</req>
	</prototype>

	<!-- Self Change通知机制 -->
	<prototype req_name="NOTIFY_SELFCHANGE_REQ" req_type="0x000000D3" req_client_receive="true" comment="服务器向客户端发送，通知客户端玩家自身变量的改变">
		<req>
			<object-property name="changeEvents" type="FieldChangeEvent[]" comment="玩家自身发生的状态变化">
				<property name="fieldId" type="short" comment="对象的属性的编号"></property>
				<property name="valueType" type="byte" comment="属性值类型的标识"></property>
				<property name="valueData" type="byte[]" comment="属性值对应的二进制数据"></property>
			</object-property>
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="NOTIFY_BUFF_REMOVED_REQ" req_type="0x000000D4" req_client_receive="true" comment="服务器向客户端发送，通知客户端移除了一个BUFF">
		<req>
			<property name="targetType" type="byte" comment="0标识玩家，1标识怪" />
			<property name="targetId" type="long" comment="某个玩家Id或者某个怪的Id" />
			<property name="seqId" type="int" comment="buff的Id"></property>
		</req>
		<res>
		</res>
	</prototype>

	<!-- 怪物掉落通知机制，但怪物被杀死后，身上会掉落一些东西， 服务器需要通知客户端，有东西可以捡 但东西被捡完后，服务器通知客户端不可以捡了
-->

	<prototype req_name="NOTIFY_FLOPAVAILABLE_REQ" req_type="0x000000D5" req_client_receive="true" comment="服务器通知客户端，那些怪身上有东西可以捡，或者采集NPC有东西可以采集">
		<req>
			<property name="spriteIds" type="long[]" comment="怪或者采集NPC的Id列表"></property>
			<property name="avaiableFlag" type="boolean[]" comment="是否可以捡的标识"></property>
		</req>

	</prototype>

	<prototype req_name="QUERY_FLOPAVAILABLE_REQ" res_name="QUERY_FLOPAVAILABLE_RES" req_type="0x000000D6" res_type="0x700000D6"
		req_client_send="true" res_client_receive="true" comment="客户端查询某个怪，有什么东西可以捡的">
		<req>
			<property name="spriteId" type="long" comment="怪的Id"></property>
		</req>
		<res>
			<property name="spriteId" type="long" comment="怪的Id"></property>
			<property name="money" type="int" commnet="钱" />
			<object-property name="articleEntities" type="ArticleEntity[]" comment="物品掉落集合">
				<property name="iconId" type="String" encoding="UTF-8" comment="装备的图标" />
				<property name="showName" type="String" encoding="UTF-8" comment="物品的显示名称" />
				<property name="bindStyle" type="byte" comment="绑定方式：0不绑定，1装备绑定，2拾取绑定" />
				<property name="assignFlag" type="byte" comment="标识每个物品拾取的规则：0标识自由拾取，1标识需要掷骰子，2标识需要队长分配"></property>
				<property name="id" type="long" comment="物品实体的唯一标识" />
				<property name="colorType" type="byte" comment="颜色类型，目前是对装备有效"></property>
			</object-property>
		</res>
	</prototype>

	<prototype req_name="QUERY_FLOP_SIMPLE_REQ" res_name="QUERY_FLOP_SIMPLE_RES" req_type="0x000000D7" res_type="0x700000D7" req_client_send="true"
		res_client_receive="true" comment="客户端查询某个怪，有什么东西可以捡的。简版通知，只下发物品编号，不下发物品实体">
		<req>
			<property name="spriteId" type="long" comment="怪的Id"></property>
		</req>
		<res>
			<property name="spriteId" type="long" comment="怪的Id"></property>
			<property name="money" type="int" commnet="钱" />
			<property name="articleIDs" type="long[]" comment="物品掉落集合" />
		</res>
	</prototype>

	<prototype req_name="PICKUP_FLOP_REQ" req_type="0x000000D8" req_client_send="true" comment="客户端拾取某个怪物身上的东西">
		<req>
			<property name="spriteId" type="long" comment="怪的Id"></property>
			<property name="articleEntityIds" type="long[]" comment="要拾取的东西，如果包含非自由拾取的东西，服务器将丢弃此数据包"></property>
		</req>
	</prototype>

	<prototype req_name="PICKUP_ALLFLOP_REQ" req_type="0x000000DA" req_client_send="true" comment="客户端拾取屏幕内所有可拾取的怪">
		<req>
		</req>
	</prototype>

	<prototype req_name="PREPARE_PLAY_DICE_REQ" req_type="0x000000D9" req_client_send="true" comment="客户端要求掷骰子来获取物品">
		<req>
			<property name="spriteId" type="long" comment="怪的Id"></property>
			<property name="articleEntityId" type="long" comment="要求掷骰子来获取物品的id"></property>
		</req>
	</prototype>

	<prototype req_name="CPATAIN_ASSIGN_REQ" req_type="0x000000DC" req_client_send="true" comment="队长分配物品请求，客户端发给服务器">
		<req>
			<property name="spriteId" type="long" comment="怪的Id"></property>
			<property name="articleEntityId" type="long" comment="要求分配的物品"></property>
			<property name="playerId" type="long" comment="分配对象"></property>
		</req>
	</prototype>

	<prototype req_name="PICKUP_MONEY_REQ" req_type="0x000000DD" req_client_send="true" comment="客户端拾取某个怪物身上的钱">
		<req>
			<property name="spriteId" type="long" comment="怪的Id"></property>
		</req>
	</prototype>

	<prototype req_name="PICKUP_CAIJINPC_REQ" req_type="0x000000DE" req_client_send="true" comment="客户端拾取某个采集NPC携带的东西">
		<req>
			<property name="spriteId" type="long" comment="采集NPC的Id"></property>
		</req>
	</prototype>

	<prototype req_name="OTHER_USER_REQ" req_type="0x000000E0" req_client_receive="true" comment="服务器通知客户端，其他人用此帐户尝试使用此角色进入游戏，要求客户端断开连接">
		<req>
			<property name="username" type="String" encoding="UTF-8" comment="用户名" />
			<property name="player" type="String" encoding="UTF-8" comment="角色的昵称" />
			<property name="ip" type="String" encoding="UTF-8" comment="尝试的IP地址" />
		</req>
	</prototype>

	<prototype req_name="QUERY_SKILLINFO_REQ" res_name="QUERY_SKILLINFO_RES" req_type="0x000000E1" res_type="0x700000E1" req_client_send="true"
		res_client_receive="true" comment="请求某个技能的详细信息，此信息包括当前级别和下一个级别的信息">
		<req>
			<property name="id" type="short" comment="技能编号"></property>
			<property name="level" type="short" comment="技能等级"></property>
			<property name="descType" type="byte" comment="描述的类型，0标识技能面板的描述，包含下一级信息，1标识快捷键面板的描述，不包含下一级信息"></property>
		</req>
		<res>
			<property name="id" type="short" comment="技能编号"></property>
			<property name="descType" type="byte" comment="描述的类型，0标识技能面板的描述，包含下一级信息，1标识快捷键面板的描述，不包含下一级信息"></property>
			<property name="description" type="String" encoding="UTF-8" comment="技能某个等级的详细描述（UUB格式）"></property>
		</res>
	</prototype>

	<prototype req_name="QUERY_SKILLINFO_PET_REQ" res_name="QUERY_SKILLINFO_PET_RES" req_type="0x000000F1" res_type="0x700000F1"
		req_client_send="true" res_client_receive="true" comment="请求宠物某个技能的详细信息">
		<req>
			<property name="id" type="short" comment="技能编号"></property>
			<property name="level" type="short" comment="技能等级"></property>
			<property name="petId" type="long" comment="拥有这个技能的宠物id"></property>
		</req>
		<res>
			<property name="petId" type="long" comment="拥有这个技能的宠物id"></property>
			<property name="id" type="short" comment="技能编号"></property>
			<property name="description" type="String" encoding="UTF-8" comment="技能某个等级的详细描述（UUB格式）"></property>
		</res>
	</prototype>

	<!-- npc等的粒子效果，如暴风雪npc的暴风雪效果 -->
	<prototype req_name="PARTICLE_REQ" req_type="0x000000EE" req_client_receive="true" comment="npc等的粒子效果，如暴风雪npc的暴风雪效果">
		<req>
			<property name="id" type="long" comment="npc等的id"></property>
			<property name="playType" type="byte" comment="播放类型，0普通类型，1暴风雪类型"></property>
			<property name="particle" type="String[]" encoding="UTF-8" comment="粒子名"></property>
			<property name="attackRadius" type="short" comment="攻击半径"></property>
			<property name="startTime" type="long" comment="粒子开始时间"></property>
			<property name="endTime" type="long" comment="粒子结束时间"></property>
			<property name="speed" type="short" comment="粒子飞行速度"></property>
			<property name="angle" type="short" comment="角度"></property>
			<property name="height" type="short" comment="粒子开始高度"></property>
			<property name="maxParticleEachTime" type="short" comment="高峰时期落下粒子数量"></property>
		</req>
	</prototype>

	<!-- 客户端请求服务器关于主动技能的数据 -->
	<prototype req_name="QUERY_ACTIVESKILL_REQ" req_type="0x000000E2" req_client_send="true" comment="客户端请求服务器关于主动技能的数据，服务器返回给客户端所有的主动技能数据">
		<req>
		</req>
	</prototype>

	<prototype req_name="SEND_ACTIVESKILL_REQ" req_type="0x000000E3" req_client_receive="true" comment="客户端请求服务器关于主动技能的数据，服务器返回给客户端所有的主动技能数据">
		<req>
			<property name="commonAttackSkillIdsForWeapon" type="int[]" comment="各个武器类型对应的普通攻击的Id" />
			<object-property name="commonAttackSkills" type="CommonAttackSkill[]" comment="普通攻击">
				<property name="duration1" type="int" comment="僵直时间"></property>
				<property name="duration2" type="int" comment="攻击时间"></property>
				<property name="duration3" type="int" comment="冷却时间"></property>
				<property name="effectiveTimes" type="int[]" comment="DPS输出点" />
				<property name="enableWeaponType" type="byte" comment="是否有武器限制"></property>
				<property name="weaponTypeLimit" type="byte" comment="武器具体的限制是什么"></property>
				<property name="followByCommonAttack" type="byte" comment="定义该技能用完之后的后续操作"></property>
				<property name="ignoreStun" type="boolean" comment="技能释放时忽视眩晕状态，但禁言状态仍然有效"></property>
				<property name="id" type="int" comment="编号"></property>
				<property name="style1" type="String" encoding="UTF-8" comment="僵直动画风格"></property>
				<property name="style2" type="String" encoding="UTF-8" comment="攻击动画风格"></property>

				<property name="effectExplosionLastTime" type="int" comment="后效持续的时间过后，爆炸持续的时间"></property>
				<property name="range" type="int" comment="攻击的范围"></property>
				<property name="effectType" type="String" encoding="UTF-8" comment="后效的类型，比如闪电，落雷等"></property>
				<property name="avataRace" type="String" encoding="UTF-8" comment=""></property>
				<property name="avataSex" type="String" encoding="UTF-8" comment=""></property>
				<property name="effectLastTime" type="int" comment="后效持续的时间，为毫秒"></property>

				<property name="flySound" type="String" encoding="UTF-8" comment="飞行音效"></property>
				<property name="explodeSound" type="String" encoding="UTF-8" comment="爆炸音效"></property>
				<property name="flyParticle" type="String[]" encoding="UTF-8" comment="飞行粒子名称"></property>
				<property name="explodeParticle" type="String[]" encoding="UTF-8" comment="爆炸粒子名称"></property>
				<property name="explodePercent" type="short" comment="爆炸后效占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyParticle" type="String[]" encoding="UTF-8" comment="身上光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>
				<property name="bodyPercent" type="short" comment="身上光效粒子占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyParticleOffset" type="short[]" comment="身上光效粒子上、下、左、右偏移量"></property>
				<property name="bodyParticlePlayStart" type="long" comment="身上粒子播放开始时间，在出招多长时间后开始"></property>
				<property name="bodyParticlePlayEnd" type="long" comment="身上粒子播放结束时间，在出招多长时间后结束"></property>
				<property name="bodyPartPath" type="String" encoding="UTF-8" comment="身上光效部件路径名"></property>
				<property name="bodyPartAnimation" type="String" encoding="UTF-8" comment="身上光效动画名"></property>
				<property name="bodyPartAnimationPercent" type="short" comment="身上光效动画占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyPartAnimationOffset" type="short[]" comment="身上光效动画上、下、左、右偏移量"></property>
				<property name="bodyPartAnimationPlayStart" type="long" comment="身上动画播放开始时间，在出招多长时间后开始"></property>
				<property name="bodyPartAnimationPlayEnd" type="long" comment="身上动画播放结束时间，在出招多长时间后结束"></property>
				<property name="footParticle" type="String[]" encoding="UTF-8" comment="脚下光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>
				<property name="footParticleOffset" type="short[]" comment="脚下光效粒子上、下、左、右偏移量"></property>
				<property name="footParticlePlayStart" type="long" comment="脚下粒子播放开始时间，在出招多长时间后开始"></property>
				<property name="footParticlePlayEnd" type="long" comment="脚下粒子播放结束时间，在出招多长时间后结束"></property>
				<property name="footPartPath" type="String" encoding="UTF-8" comment="脚下光效部件路径名"></property>
				<property name="footPartAnimation" type="String" encoding="UTF-8" comment="脚下光效动画名"></property>
				<property name="footPartAnimationOffset" type="short[]" comment="脚下光效动画上、下、左、右偏移量"></property>
				<property name="footPartAnimationPlayStart" type="long" comment="脚下动画播放开始时间，在出招多长时间后开始"></property>
				<property name="footPartAnimationPlayEnd" type="long" comment="脚下动画播放结束时间，在出招多长时间后结束"></property>
				<property name="angle" type="short" comment="角度（落雷技能从上往下的角度，直接落下为0度，水平为90度，有轨迹技能如火球类这个值不起作用）"></property>
				<property name="targetFootParticle" type="String[]" encoding="UTF-8" comment="目标点脚下光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>

				<property name="guajiFlag" type="boolean" comment="是否挂机技能"></property>
				<property name="buffName" type="String" encoding="UTF-8" comment="Buff的名称"></property>

			</object-property>

			<object-property name="skillsWithoutEffect" type="SkillWithoutEffect[]" comment="无后效的攻击">
				<property name="style1" type="String" encoding="UTF-8" comment="僵直动画风格"></property>
				<property name="style2" type="String" encoding="UTF-8" comment="攻击动画风格"></property>
				<property name="effectiveTimes" type="int[]" comment="DPS输出点" />
				<property name="enableWeaponType" type="byte" comment="是否有武器限制"></property>
				<property name="weaponTypeLimit" type="byte" comment="武器具体的限制是什么"></property>
				<property name="followByCommonAttack" type="byte" comment="定义该技能用完之后的后续操作"></property>
				<property name="ignoreStun" type="boolean" comment="技能释放时忽视眩晕状态，但禁言状态仍然有效"></property>
				<property name="id" type="int" comment="编号"></property>
				<property name="duration1" type="int" comment="僵直时间"></property>
				<property name="duration2" type="int" comment="攻击时间"></property>
				<property name="duration3" type="int" comment="冷却时间"></property>

				<property name="range" type="int" comment="攻击距离"></property>

				<property name="bodyParticle" type="String[]" encoding="UTF-8" comment="身上光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>
				<property name="bodyPercent" type="short" comment="身上光效粒子占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyParticleOffset" type="short[]" comment="身上光效粒子上、下、左、右偏移量"></property>
				<property name="bodyParticlePlayStart" type="long" comment="身上粒子播放开始时间，在出招多长时间后开始"></property>
				<property name="bodyParticlePlayEnd" type="long" comment="身上粒子播放结束时间，在出招多长时间后结束"></property>
				<property name="bodyPartPath" type="String" encoding="UTF-8" comment="身上光效部件路径名"></property>
				<property name="bodyPartAnimation" type="String" encoding="UTF-8" comment="身上光效动画名"></property>
				<property name="bodyPartAnimationPercent" type="short" comment="身上光效动画占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyPartAnimationOffset" type="short[]" comment="身上光效动画上、下、左、右偏移量"></property>
				<property name="bodyPartAnimationPlayStart" type="long" comment="身上动画播放开始时间，在出招多长时间后开始"></property>
				<property name="bodyPartAnimationPlayEnd" type="long" comment="身上动画播放结束时间，在出招多长时间后结束"></property>
				<property name="footParticle" type="String[]" encoding="UTF-8" comment="脚下光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>
				<property name="footParticleOffset" type="short[]" comment="脚下光效粒子上、下、左、右偏移量"></property>
				<property name="footParticlePlayStart" type="long" comment="脚下粒子播放开始时间，在出招多长时间后开始"></property>
				<property name="footParticlePlayEnd" type="long" comment="脚下粒子播放结束时间，在出招多长时间后结束"></property>
				<property name="footPartPath" type="String" encoding="UTF-8" comment="脚下光效部件路径名"></property>
				<property name="footPartAnimation" type="String" encoding="UTF-8" comment="脚下光效动画名"></property>
				<property name="footPartAnimationOffset" type="short[]" comment="脚下光效动画上、下、左、右偏移量"></property>
				<property name="footPartAnimationPlayStart" type="long" comment="脚下动画播放开始时间，在出招多长时间后开始"></property>
				<property name="footPartAnimationPlayEnd" type="long" comment="脚下动画播放结束时间，在出招多长时间后结束"></property>
				<property name="angle" type="short" comment="角度（落雷技能从上往下的角度，直接落下为0度，水平为90度，有轨迹技能如火球类这个值不起作用）"></property>
				<property name="targetFootParticle" type="String[]" encoding="UTF-8" comment="目标点脚下光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>

				<property name="guajiFlag" type="boolean" comment="是否挂机技能"></property>
				<property name="buffName" type="String" encoding="UTF-8" comment="Buff的名称"></property>
			</object-property>
			<object-property name="skillsWithoutEffectAndQuickMove" type="SkillWithoutEffectAndQuickMove[]" comment="普通攻击">
				<property name="style2" type="String" encoding="UTF-8" comment="攻击动画风格"></property>
				<property name="effectiveTimes" type="int[]" comment="DPS输出点" />
				<property name="enableWeaponType" type="byte" comment="是否有武器限制"></property>
				<property name="weaponTypeLimit" type="byte" comment="武器具体的限制是什么"></property>
				<property name="followByCommonAttack" type="byte" comment="定义该技能用完之后的后续操作"></property>
				<property name="ignoreStun" type="boolean" comment="技能释放时忽视眩晕状态，但禁言状态仍然有效"></property>
				<property name="id" type="int" comment="编号"></property>
				<property name="duration1" type="int" comment="僵直时间"></property>
				<property name="duration2" type="int" comment="攻击时间"></property>
				<property name="duration3" type="int" comment="冷却时间"></property>
				<property name="style1" type="String" encoding="UTF-8" comment="僵直动画风格"></property>

				<property name="traceType" type="int" comment="攻击距离"></property>
				<property name="distance" type="int" comment="攻击距离"></property>
				<property name="mp" type="short[]" comment="各个等级的技能需要消耗的魔法" />

				<property name="range" type="int" comment="攻击距离"></property>

				<property name="bodyParticle" type="String[]" encoding="UTF-8" comment="身上光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>
				<property name="bodyPercent" type="short" comment="身上光效粒子占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyParticleOffset" type="short[]" comment="身上光效粒子上、下、左、右偏移量"></property>
				<property name="bodyParticlePlayStart" type="long" comment="身上粒子播放开始时间，在出招多长时间后开始"></property>
				<property name="bodyParticlePlayEnd" type="long" comment="身上粒子播放结束时间，在出招多长时间后结束"></property>
				<property name="bodyPartPath" type="String" encoding="UTF-8" comment="身上光效部件路径名"></property>
				<property name="bodyPartAnimation" type="String" encoding="UTF-8" comment="身上光效动画名"></property>
				<property name="bodyPartAnimationPercent" type="short" comment="身上光效动画占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyPartAnimationOffset" type="short[]" comment="身上光效动画上、下、左、右偏移量"></property>
				<property name="bodyPartAnimationPlayStart" type="long" comment="身上动画播放开始时间，在出招多长时间后开始"></property>
				<property name="bodyPartAnimationPlayEnd" type="long" comment="身上动画播放结束时间，在出招多长时间后结束"></property>
				<property name="footParticle" type="String[]" encoding="UTF-8" comment="脚下光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>
				<property name="footParticleOffset" type="short[]" comment="脚下光效粒子上、下、左、右偏移量"></property>
				<property name="footParticlePlayStart" type="long" comment="脚下粒子播放开始时间，在出招多长时间后开始"></property>
				<property name="footParticlePlayEnd" type="long" comment="脚下粒子播放结束时间，在出招多长时间后结束"></property>
				<property name="footPartPath" type="String" encoding="UTF-8" comment="脚下光效部件路径名"></property>
				<property name="footPartAnimation" type="String" encoding="UTF-8" comment="脚下光效动画名"></property>
				<property name="footPartAnimationOffset" type="short[]" comment="脚下光效动画上、下、左、右偏移量"></property>
				<property name="footPartAnimationPlayStart" type="long" comment="脚下动画播放开始时间，在出招多长时间后开始"></property>
				<property name="footPartAnimationPlayEnd" type="long" comment="脚下动画播放结束时间，在出招多长时间后结束"></property>
				<property name="angle" type="short" comment="角度（落雷技能从上往下的角度，直接落下为0度，水平为90度，有轨迹技能如火球类这个值不起作用）"></property>
				<property name="targetFootParticle" type="String[]" encoding="UTF-8" comment="目标点脚下光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>

				<property name="guajiFlag" type="boolean" comment="是否挂机技能"></property>
				<property name="buffName" type="String" encoding="UTF-8" comment="Buff的名称"></property>
				<property name="skillPlayType" type="byte" comment="技能类型，0为冲锋，1为闪现"></property>
			</object-property>


			<object-property name="skillsWithoutTraceAndWithRange" type="SkillWithoutTraceAndWithRange[]" comment="单个飞镖类技能">
				<property name="style2" type="String" encoding="UTF-8" comment="攻击动画风格"></property>
				<property name="effectiveTimes" type="int[]" comment="DPS输出点" />
				<property name="enableWeaponType" type="byte" comment="是否有武器限制"></property>
				<property name="weaponTypeLimit" type="byte" comment="武器具体的限制是什么"></property>
				<property name="followByCommonAttack" type="byte" comment="定义该技能用完之后的后续操作"></property>
				<property name="id" type="int" comment="编号"></property>
				<property name="duration1" type="int" comment="僵直时间"></property>
				<property name="duration2" type="int" comment="攻击时间"></property>
				<property name="duration3" type="int" comment="冷却时间"></property>
				<property name="style1" type="String" encoding="UTF-8" comment="僵直动画风格"></property>
				<property name="ignoreStun" type="boolean" comment="技能释放时忽视眩晕状态，但禁言状态仍然有效"></property>

				<property name="rangeType" type="byte" comment="范围的类型,0 以施法者自身为中心的矩形" />
				<property name="rangeWidth" type="int" comment="范围的宽度，默认为240" />
				<property name="rangeHeight" type="int" comment="范围的高度，默认为320" />
				<property name="maxAttackNums" type="short[]" comment="攻击最大个数，根据级别取值"></property>
				<property name="effectType" type="String" encoding="UTF-8" comment="后效的类型，比如闪电，落雷等"></property>
				<property name="avataRace" type="String" encoding="UTF-8" comment=""></property>
				<property name="avataSex" type="String" encoding="UTF-8" comment=""></property>
				<property name="effectLastTime" type="int" comment="后效持续的时间，为毫秒" />
				<property name="effectExplosionLastTime" type="int" comment="后效持续的时间过后，爆炸持续的时间" />
				<property name="mp" type="short[]" comment="各个等级的技能需要消耗的魔法" />

				<property name="flySound" type="String" encoding="UTF-8" comment="飞行音效"></property>
				<property name="explodeSound" type="String" encoding="UTF-8" comment="爆炸音效"></property>
				<property name="flyParticle" type="String[]" encoding="UTF-8" comment="飞行粒子名称"></property>
				<property name="explodeParticle" type="String[]" encoding="UTF-8" comment="爆炸粒子名称"></property>
				<property name="explodePercent" type="short" comment="爆炸后效占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyParticle" type="String[]" encoding="UTF-8" comment="身上光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>
				<property name="bodyPercent" type="short" comment="身上光效粒子占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyParticleOffset" type="short[]" comment="身上光效粒子上、下、左、右偏移量"></property>
				<property name="bodyParticlePlayStart" type="long" comment="身上粒子播放开始时间，在出招多长时间后开始"></property>
				<property name="bodyParticlePlayEnd" type="long" comment="身上粒子播放结束时间，在出招多长时间后结束"></property>
				<property name="bodyPartPath" type="String" encoding="UTF-8" comment="身上光效部件路径名"></property>
				<property name="bodyPartAnimation" type="String" encoding="UTF-8" comment="身上光效动画名"></property>
				<property name="bodyPartAnimationPercent" type="short" comment="身上光效动画占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyPartAnimationOffset" type="short[]" comment="身上光效动画上、下、左、右偏移量"></property>
				<property name="bodyPartAnimationPlayStart" type="long" comment="身上动画播放开始时间，在出招多长时间后开始"></property>
				<property name="bodyPartAnimationPlayEnd" type="long" comment="身上动画播放结束时间，在出招多长时间后结束"></property>
				<property name="footParticle" type="String[]" encoding="UTF-8" comment="脚下光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>
				<property name="footParticleOffset" type="short[]" comment="脚下光效粒子上、下、左、右偏移量"></property>
				<property name="footParticlePlayStart" type="long" comment="脚下粒子播放开始时间，在出招多长时间后开始"></property>
				<property name="footParticlePlayEnd" type="long" comment="脚下粒子播放结束时间，在出招多长时间后结束"></property>
				<property name="footPartPath" type="String" encoding="UTF-8" comment="脚下光效部件路径名"></property>
				<property name="footPartAnimation" type="String" encoding="UTF-8" comment="脚下光效动画名"></property>
				<property name="footPartAnimationOffset" type="short[]" comment="脚下光效动画上、下、左、右偏移量"></property>
				<property name="footPartAnimationPlayStart" type="long" comment="脚下动画播放开始时间，在出招多长时间后开始"></property>
				<property name="footPartAnimationPlayEnd" type="long" comment="脚下动画播放结束时间，在出招多长时间后结束"></property>
				<property name="angle" type="short" comment="角度（落雷技能从上往下的角度，直接落下为0度，水平为90度，有轨迹技能如火球类这个值不起作用）"></property>
				<property name="targetFootParticle" type="String[]" encoding="UTF-8" comment="目标点脚下光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>

				<property name="guajiFlag" type="boolean" comment="是否挂机技能"></property>
				<property name="buffName" type="String" encoding="UTF-8" comment="Buff的名称"></property>
			</object-property>

			<object-property name="skillsWithoutTraceAndWithTargetOrPosition" type="SkillWithoutTraceAndWithTargetOrPosition[]" comment="8个飞镖类技能，向8个方向飞行">
				<property name="style2" type="String" encoding="UTF-8" comment="攻击动画风格"></property>
				<property name="effectiveTimes" type="int[]" comment="DPS输出点" />
				<property name="enableWeaponType" type="byte" comment="是否有武器限制"></property>
				<property name="weaponTypeLimit" type="byte" comment="武器具体的限制是什么"></property>
				<property name="followByCommonAttack" type="byte" comment="定义该技能用完之后的后续操作"></property>
				<property name="id" type="int" comment="编号"></property>
				<property name="duration1" type="int" comment="僵直时间"></property>
				<property name="duration2" type="int" comment="攻击时间"></property>
				<property name="duration3" type="int" comment="冷却时间"></property>
				<property name="style1" type="String" encoding="UTF-8" comment="僵直动画风格"></property>
				<property name="ignoreStun" type="boolean" comment="技能释放时忽视眩晕状态，但禁言状态仍然有效"></property>

				<property name="effectType" type="String" encoding="UTF-8" comment="后效的类型，比如闪电，落雷等"></property>
				<property name="avataRace" type="String" encoding="UTF-8" comment=""></property>
				<property name="avataSex" type="String" encoding="UTF-8" comment=""></property>
				<property name="effectLastTime" type="int" comment="后效持续的时间，为毫秒" />
				<property name="effectExplosionLastTime" type="int" comment="后效持续的时间过后，爆炸持续的时间" />
				<property name="mp" type="short[]" comment="各个等级的技能需要消耗的魔法" />

				<property name="range" type="int" comment="攻击距离"></property>

				<property name="flySound" type="String" encoding="UTF-8" comment="飞行音效"></property>
				<property name="explodeSound" type="String" encoding="UTF-8" comment="爆炸音效"></property>
				<property name="flyParticle" type="String[]" encoding="UTF-8" comment="飞行粒子名称"></property>
				<property name="explodeParticle" type="String[]" encoding="UTF-8" comment="爆炸粒子名称"></property>
				<property name="explodePercent" type="short" comment="爆炸后效占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyParticle" type="String[]" encoding="UTF-8" comment="身上光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>
				<property name="bodyPercent" type="short" comment="身上光效粒子占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyParticleOffset" type="short[]" comment="身上光效粒子上、下、左、右偏移量"></property>
				<property name="bodyParticlePlayStart" type="long" comment="身上粒子播放开始时间，在出招多长时间后开始"></property>
				<property name="bodyParticlePlayEnd" type="long" comment="身上粒子播放结束时间，在出招多长时间后结束"></property>
				<property name="bodyPartPath" type="String" encoding="UTF-8" comment="身上光效部件路径名"></property>
				<property name="bodyPartAnimation" type="String" encoding="UTF-8" comment="身上光效动画名"></property>
				<property name="bodyPartAnimationPercent" type="short" comment="身上光效动画占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyPartAnimationOffset" type="short[]" comment="身上光效动画上、下、左、右偏移量"></property>
				<property name="bodyPartAnimationPlayStart" type="long" comment="身上动画播放开始时间，在出招多长时间后开始"></property>
				<property name="bodyPartAnimationPlayEnd" type="long" comment="身上动画播放结束时间，在出招多长时间后结束"></property>
				<property name="footParticle" type="String[]" encoding="UTF-8" comment="脚下光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>
				<property name="footParticleOffset" type="short[]" comment="脚下光效粒子上、下、左、右偏移量"></property>
				<property name="footParticlePlayStart" type="long" comment="脚下粒子播放开始时间，在出招多长时间后开始"></property>
				<property name="footParticlePlayEnd" type="long" comment="脚下粒子播放结束时间，在出招多长时间后结束"></property>
				<property name="footPartPath" type="String" encoding="UTF-8" comment="脚下光效部件路径名"></property>
				<property name="footPartAnimation" type="String" encoding="UTF-8" comment="脚下光效动画名"></property>
				<property name="footPartAnimationOffset" type="short[]" comment="脚下光效动画上、下、左、右偏移量"></property>
				<property name="footPartAnimationPlayStart" type="long" comment="脚下动画播放开始时间，在出招多长时间后开始"></property>
				<property name="footPartAnimationPlayEnd" type="long" comment="脚下动画播放结束时间，在出招多长时间后结束"></property>
				<property name="angle" type="short" comment="角度（落雷技能从上往下的角度，直接落下为0度，水平为90度，有轨迹技能如火球类这个值不起作用）"></property>
				<property name="targetFootParticle" type="String[]" encoding="UTF-8" comment="目标点脚下光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>

				<property name="guajiFlag" type="boolean" comment="是否挂机技能"></property>
				<property name="buffName" type="String" encoding="UTF-8" comment="Buff的名称"></property>
			</object-property>

			<object-property name="skillWithoutTraceAndWithSummonNPC" type="SkillWithoutTraceAndWithSummonNPC[]" comment="召唤npc技能，暴风雪火墙都是这个技能实现">
				<property name="style2" type="String" encoding="UTF-8" comment="攻击动画风格"></property>
				<property name="effectiveTimes" type="int[]" comment="DPS输出点" />
				<property name="enableWeaponType" type="byte" comment="是否有武器限制"></property>
				<property name="weaponTypeLimit" type="byte" comment="武器具体的限制是什么"></property>
				<property name="followByCommonAttack" type="byte" comment="定义该技能用完之后的后续操作"></property>
				<property name="id" type="int" comment="编号"></property>
				<property name="duration1" type="int" comment="僵直时间"></property>
				<property name="duration2" type="int" comment="攻击时间"></property>
				<property name="duration3" type="int" comment="冷却时间"></property>
				<property name="style1" type="String" encoding="UTF-8" comment="僵直动画风格"></property>
				<property name="ignoreStun" type="boolean" comment="技能释放时忽视眩晕状态，但禁言状态仍然有效"></property>

				<property name="matrixType" type="byte" comment="技能形式:0 以自身为中心的火墙,1 以坐标点为中心的火墙,2 以自身为中心的暴风雪,3 以目标为中心的暴风雪,4 以坐标点为中心的暴风雪"></property>
				<property name="attackNum" type="short[]" comment="攻击数量" />
				<property name="mp" type="short[]" comment="各个等级的技能需要消耗的魔法" />
				<property name="range" type="int" comment="攻击距离"></property>
				<property name="gapWidth" type="int" comment="椭圆宽" />
				<property name="gapHeight" type="int" comment="椭圆高" />
				<property name="maxTimeLength" type="long" comment="粒子总体飞行持续时间，如多批粒子整体时间(暴风雪类技能用)"></property>
				<property name="speed" type="short" comment="每个粒子飞行速度(暴风雪类技能用)"></property>
				<property name="angle" type="short" comment="每个粒子飞行角度(暴风雪类技能用)"></property>
				<property name="heigth" type="short" comment="粒子飞行高度(暴风雪类技能用)"></property>
				<property name="maxParticleEachTime" type="short" comment="高峰时期粒子数量(暴风雪类技能用)"></property>

				<property name="flySound" type="String" encoding="UTF-8" comment="飞行音效"></property>
				<property name="explodeSound" type="String" encoding="UTF-8" comment="爆炸音效"></property>
				<property name="flyParticle" type="String[]" encoding="UTF-8" comment="飞行粒子名称"></property>
				<property name="explodeParticle" type="String[]" encoding="UTF-8" comment="爆炸粒子名称"></property>
				<property name="explodePercent" type="short" comment="爆炸后效占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyParticle" type="String[]" encoding="UTF-8" comment="身上光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>
				<property name="bodyPercent" type="short" comment="身上光效粒子占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyParticleOffset" type="short[]" comment="身上光效粒子上、下、左、右偏移量"></property>
				<property name="bodyParticlePlayStart" type="long" comment="身上粒子播放开始时间，在出招多长时间后开始"></property>
				<property name="bodyParticlePlayEnd" type="long" comment="身上粒子播放结束时间，在出招多长时间后结束"></property>
				<property name="bodyPartPath" type="String" encoding="UTF-8" comment="身上光效部件路径名"></property>
				<property name="bodyPartAnimation" type="String" encoding="UTF-8" comment="身上光效动画名"></property>
				<property name="bodyPartAnimationPercent" type="short" comment="身上光效动画占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyPartAnimationOffset" type="short[]" comment="身上光效动画上、下、左、右偏移量"></property>
				<property name="bodyPartAnimationPlayStart" type="long" comment="身上动画播放开始时间，在出招多长时间后开始"></property>
				<property name="bodyPartAnimationPlayEnd" type="long" comment="身上动画播放结束时间，在出招多长时间后结束"></property>
				<property name="footParticle" type="String[]" encoding="UTF-8" comment="脚下光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>
				<property name="footParticleOffset" type="short[]" comment="脚下光效粒子上、下、左、右偏移量"></property>
				<property name="footParticlePlayStart" type="long" comment="脚下粒子播放开始时间，在出招多长时间后开始"></property>
				<property name="footParticlePlayEnd" type="long" comment="脚下粒子播放结束时间，在出招多长时间后结束"></property>
				<property name="footPartPath" type="String" encoding="UTF-8" comment="脚下光效部件路径名"></property>
				<property name="footPartAnimation" type="String" encoding="UTF-8" comment="脚下光效动画名"></property>
				<property name="footPartAnimationOffset" type="short[]" comment="脚下光效动画上、下、左、右偏移量"></property>
				<property name="footPartAnimationPlayStart" type="long" comment="脚下动画播放开始时间，在出招多长时间后开始"></property>
				<property name="footPartAnimationPlayEnd" type="long" comment="脚下动画播放结束时间，在出招多长时间后结束"></property>
				<property name="angle" type="short" comment="角度（落雷技能从上往下的角度，直接落下为0度，水平为90度，有轨迹技能如火球类这个值不起作用）"></property>
				<property name="targetFootParticle" type="String[]" encoding="UTF-8" comment="目标点脚下光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>

				<property name="guajiFlag" type="boolean" comment="是否挂机技能"></property>
				<property name="buffName" type="String" encoding="UTF-8" comment="Buff的名称"></property>
			</object-property>

			<object-property name="skillsWithTraceAndDirectionOrTarget" type="SkillWithTraceAndDirectionOrTarget[]" comment="广播区域内所有的人都被闪电击中">
				<property name="style2" type="String" encoding="UTF-8" comment="攻击动画风格"></property>
				<property name="effectiveTimes" type="int[]" comment="DPS输出点" />
				<property name="enableWeaponType" type="byte" comment="是否有武器限制"></property>
				<property name="weaponTypeLimit" type="byte" comment="武器具体的限制是什么"></property>
				<property name="id" type="int" comment="编号"></property>
				<property name="duration1" type="int" comment="僵直时间"></property>
				<property name="duration2" type="int" comment="攻击时间"></property>
				<property name="duration3" type="int" comment="冷却时间"></property>
				<property name="style1" type="String" encoding="UTF-8" comment="僵直动画风格"></property>
				<property name="followByCommonAttack" type="byte" comment="定义该技能用完之后的后续操作"></property>
				<property name="ignoreStun" type="boolean" comment="技能释放时忽视眩晕状态，但禁言状态仍然有效"></property>

				<property name="targetType" type="byte" comment="目标类型，0 表示对某个目标或者位置点进行攻击，无需配置后效方向,1 表示对周围环境进行攻击，需配置后效方向" />
				<property name="effectType" type="String" encoding="UTF-8" comment="后效的类型，比如闪电，落雷等"></property>
				<property name="avataRace" type="String" encoding="UTF-8" comment=""></property>
				<property name="avataSex" type="String" encoding="UTF-8" comment=""></property>
				<property name="trackType" type="byte" comment="轨迹的类型，0表示直线，1表示追踪" />
				<property name="speed" type="int" comment="飞行物体的飞行速度" />
				<property name="range" type="int" comment="飞行物体的飞行距离" />
				<property name="attackWidth" type="int" comment="攻击的宽度" />
				<property name="explosionLastingTime" type="int" comment="后效爆炸持续的时间" />
				<property name="effectNum" type="int" comment=" 后效的个数" />
				<property name="effectInitPositionX" type="int[]" comment="每个后效的起始坐标位置" />
				<property name="effectInitPositionY" type="int[]" comment="每个后效的起始坐标位置" />
				<property name="effectInitDirection" type="byte[]" comment="某个后效的方向,按钟表分12个方向，取值为0~11，0标识12点钟方向，1表示1点钟方向，6表示6点钟方向.." />
				<property name="penetrateNum" type="int" comment="后效能穿透的次数，0表示不能穿透" />
				<property name="mp" type="short[]" comment="各个等级的技能需要消耗的魔法" />

				<property name="flySound" type="String" encoding="UTF-8" comment="飞行音效"></property>
				<property name="explodeSound" type="String" encoding="UTF-8" comment="爆炸音效"></property>
				<property name="flyParticle" type="String[]" encoding="UTF-8" comment="飞行粒子名称"></property>
				<property name="explodeParticle" type="String[]" encoding="UTF-8" comment="爆炸粒子名称"></property>
				<property name="explodePercent" type="short" comment="爆炸后效占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyParticle" type="String[]" encoding="UTF-8" comment="身上光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>
				<property name="bodyPercent" type="short" comment="身上光效粒子占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyParticleOffset" type="short[]" comment="身上光效粒子上、下、左、右偏移量"></property>
				<property name="bodyParticlePlayStart" type="long" comment="身上粒子播放开始时间，在出招多长时间后开始"></property>
				<property name="bodyParticlePlayEnd" type="long" comment="身上粒子播放结束时间，在出招多长时间后结束"></property>
				<property name="bodyPartPath" type="String" encoding="UTF-8" comment="身上光效部件路径名"></property>
				<property name="bodyPartAnimation" type="String" encoding="UTF-8" comment="身上光效动画名"></property>
				<property name="bodyPartAnimationPercent" type="short" comment="身上光效动画占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyPartAnimationOffset" type="short[]" comment="身上光效动画上、下、左、右偏移量"></property>
				<property name="bodyPartAnimationPlayStart" type="long" comment="身上动画播放开始时间，在出招多长时间后开始"></property>
				<property name="bodyPartAnimationPlayEnd" type="long" comment="身上动画播放结束时间，在出招多长时间后结束"></property>
				<property name="footParticle" type="String[]" encoding="UTF-8" comment="脚下光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>
				<property name="footParticleOffset" type="short[]" comment="脚下光效粒子上、下、左、右偏移量"></property>
				<property name="footParticlePlayStart" type="long" comment="脚下粒子播放开始时间，在出招多长时间后开始"></property>
				<property name="footParticlePlayEnd" type="long" comment="脚下粒子播放结束时间，在出招多长时间后结束"></property>
				<property name="footPartPath" type="String" encoding="UTF-8" comment="脚下光效部件路径名"></property>
				<property name="footPartAnimation" type="String" encoding="UTF-8" comment="脚下光效动画名"></property>
				<property name="footPartAnimationOffset" type="short[]" comment="脚下光效动画上、下、左、右偏移量"></property>
				<property name="footPartAnimationPlayStart" type="long" comment="脚下动画播放开始时间，在出招多长时间后开始"></property>
				<property name="footPartAnimationPlayEnd" type="long" comment="脚下动画播放结束时间，在出招多长时间后结束"></property>
				<property name="angle" type="short" comment="角度（落雷技能从上往下的角度，直接落下为0度，水平为90度，有轨迹技能如火球类这个值不起作用）"></property>
				<property name="targetFootParticle" type="String[]" encoding="UTF-8" comment="目标点脚下光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>
				<property name="sendEffectTime" type="long" comment="发出召唤物的时机，技能开始多少毫秒后发出召唤物"></property>


				<property name="guajiFlag" type="boolean" comment="是否挂机技能"></property>
				<property name="buffName" type="String" encoding="UTF-8" comment="Buff的名称"></property>
			</object-property>

			<object-property name="skillWithoutTraceAndWithMatrix" type="SkillWithoutTraceAndWithMatrix[]" comment="广播区域内所有的人都被闪电击中">
				<property name="id" type="int" comment="编号"></property>
				<property name="duration1" type="int" comment="僵直时间"></property>
				<property name="duration2" type="int" comment="攻击时间"></property>
				<property name="duration3" type="int" comment="冷却时间"></property>
				<property name="style1" type="String" encoding="UTF-8" comment="僵直动画风格"></property>
				<property name="style2" type="String" encoding="UTF-8" comment="攻击动画风格"></property>
				<property name="effectiveTimes" type="int[]" comment="DPS输出点" />
				<property name="enableWeaponType" type="byte" comment="是否有武器限制"></property>
				<property name="weaponTypeLimit" type="byte" comment="武器具体的限制是什么"></property>
				<property name="followByCommonAttack" type="byte" comment="定义该技能用完之后的后续操作"></property>
				<property name="ignoreStun" type="boolean" comment="技能释放时忽视眩晕状态，但禁言状态仍然有效"></property>

				<property name="matrixType" type="byte" comment="目标类型，0 表示对某个目标或者位置点进行攻击，无需配置后效方向,1 表示对周围环境进行攻击，需配置后效方向" />
				<property name="gapWidth" type="int" comment="范围的宽度，默认为240" />
				<property name="gapHeight" type="int" comment="范围的高度，默认为320" />
				<property name="effectNum" type="int" comment="最大攻击的人数,0表示没有限制，如果有限制，系统会选择距离最近的攻击" />
				<property name="effectType" type="String" encoding="UTF-8" comment="后效的类型，比如闪电，落雷等"></property>
				<property name="avataRace" type="String" encoding="UTF-8" comment=""></property>
				<property name="avataSex" type="String" encoding="UTF-8" comment=""></property>
				<property name="effectLastTime" type="int" comment="后效持续的时间，为毫秒" />
				<property name="effectExplosionLastTime" type="int" comment="后效持续的时间过后，爆炸持续的时间" />
				<property name="mp" type="short[]" comment="各个等级的技能需要消耗的魔法" />

				<property name="range" type="int" comment="攻击距离"></property>

				<property name="flySound" type="String" encoding="UTF-8" comment="飞行音效"></property>
				<property name="explodeSound" type="String" encoding="UTF-8" comment="爆炸音效"></property>
				<property name="flyParticle" type="String[]" encoding="UTF-8" comment="飞行粒子名称"></property>
				<property name="explodeParticle" type="String[]" encoding="UTF-8" comment="爆炸粒子名称"></property>
				<property name="explodePercent" type="short" comment="爆炸后效占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyParticle" type="String[]" encoding="UTF-8" comment="身上光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>
				<property name="bodyPercent" type="short" comment="身上光效粒子占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyParticleOffset" type="short[]" comment="身上光效粒子上、下、左、右偏移量"></property>
				<property name="bodyParticlePlayStart" type="long" comment="身上粒子播放开始时间，在出招多长时间后开始"></property>
				<property name="bodyParticlePlayEnd" type="long" comment="身上粒子播放结束时间，在出招多长时间后结束"></property>
				<property name="bodyPartPath" type="String" encoding="UTF-8" comment="身上光效部件路径名"></property>
				<property name="bodyPartAnimation" type="String" encoding="UTF-8" comment="身上光效动画名"></property>
				<property name="bodyPartAnimationPercent" type="short" comment="身上光效动画占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyPartAnimationOffset" type="short[]" comment="身上光效动画上、下、左、右偏移量"></property>
				<property name="bodyPartAnimationPlayStart" type="long" comment="身上动画播放开始时间，在出招多长时间后开始"></property>
				<property name="bodyPartAnimationPlayEnd" type="long" comment="身上动画播放结束时间，在出招多长时间后结束"></property>
				<property name="footParticle" type="String[]" encoding="UTF-8" comment="脚下光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>
				<property name="footParticleOffset" type="short[]" comment="脚下光效粒子上、下、左、右偏移量"></property>
				<property name="footParticlePlayStart" type="long" comment="脚下粒子播放开始时间，在出招多长时间后开始"></property>
				<property name="footParticlePlayEnd" type="long" comment="脚下粒子播放结束时间，在出招多长时间后结束"></property>
				<property name="footPartPath" type="String" encoding="UTF-8" comment="脚下光效部件路径名"></property>
				<property name="footPartAnimation" type="String" encoding="UTF-8" comment="脚下光效动画名"></property>
				<property name="footPartAnimationOffset" type="short[]" comment="脚下光效动画上、下、左、右偏移量"></property>
				<property name="footPartAnimationPlayStart" type="long" comment="脚下动画播放开始时间，在出招多长时间后开始"></property>
				<property name="footPartAnimationPlayEnd" type="long" comment="脚下动画播放结束时间，在出招多长时间后结束"></property>
				<property name="angle" type="short" comment="角度（落雷技能从上往下的角度，直接落下为0度，水平为90度，有轨迹技能如火球类这个值不起作用）"></property>
				<property name="targetFootParticle" type="String[]" encoding="UTF-8" comment="目标点脚下光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>

				<property name="guajiFlag" type="boolean" comment="是否挂机技能"></property>
				<property name="buffName" type="String" encoding="UTF-8" comment="Buff的名称"></property>
				<property name="maxAttackNums" type="short[]" comment="攻击最大个数，根据级别取值"></property>
			</object-property>

			<object-property name="skillWithoutTraceAndOnTeamMember" type="SkillWithoutTraceAndOnTeamMember[]" comment="广播区域内所有的人都被闪电击中">
				<property name="enableWeaponType" type="byte" comment="是否有武器限制"></property>
				<property name="weaponTypeLimit" type="byte" comment="武器具体的限制是什么"></property>
				<property name="followByCommonAttack" type="byte" comment="定义该技能用完之后的后续操作"></property>
				<property name="ignoreStun" type="boolean" comment="技能释放时忽视眩晕状态，但禁言状态仍然有效"></property>
				<property name="id" type="int" comment="编号"></property>
				<property name="duration1" type="int" comment="僵直时间"></property>
				<property name="duration2" type="int" comment="攻击时间"></property>
				<property name="duration3" type="int" comment="冷却时间"></property>
				<property name="style1" type="String" encoding="UTF-8" comment="僵直动画风格"></property>
				<property name="style2" type="String" encoding="UTF-8" comment="攻击动画风格"></property>
				<property name="effectiveTimes" type="int[]" comment="DPS输出点" />

				<property name="rangeType" type="byte" comment="范围的类型,0 以施法者自身为中心的矩形" />
				<property name="rangeWidth" type="int" comment="范围的宽度，默认为240" />
				<property name="rangeHeight" type="int" comment="范围的高度，默认为320" />
				<property name="effectType" type="String" encoding="UTF-8" comment="后效的类型，比如闪电，落雷等"></property>
				<property name="avataRace" type="String" encoding="UTF-8" comment=""></property>
				<property name="avataSex" type="String" encoding="UTF-8" comment=""></property>
				<property name="effectLastTime" type="int" comment="后效持续的时间，为毫秒" />
				<property name="effectExplosionLastTime" type="int" comment="后效持续的时间过后，爆炸持续的时间" />
				<property name="mp" type="short[]" comment="各个等级的技能需要消耗的魔法" />

				<property name="flySound" type="String" encoding="UTF-8" comment="飞行音效"></property>
				<property name="explodeSound" type="String" encoding="UTF-8" comment="爆炸音效"></property>
				<property name="flyParticle" type="String[]" encoding="UTF-8" comment="飞行粒子名称"></property>
				<property name="explodeParticle" type="String[]" encoding="UTF-8" comment="爆炸粒子名称"></property>
				<property name="explodePercent" type="short" comment="爆炸后效占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyParticle" type="String[]" encoding="UTF-8" comment="身上光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>
				<property name="bodyPercent" type="short" comment="身上光效粒子占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyParticleOffset" type="short[]" comment="身上光效粒子上、下、左、右偏移量"></property>
				<property name="bodyParticlePlayStart" type="long" comment="身上粒子播放开始时间，在出招多长时间后开始"></property>
				<property name="bodyParticlePlayEnd" type="long" comment="身上粒子播放结束时间，在出招多长时间后结束"></property>
				<property name="bodyPartPath" type="String" encoding="UTF-8" comment="身上光效部件路径名"></property>
				<property name="bodyPartAnimation" type="String" encoding="UTF-8" comment="身上光效动画名"></property>
				<property name="bodyPartAnimationPercent" type="short" comment="身上光效动画占目标身高比例，基数为100，即如果值为90的话，代表90%"></property>
				<property name="bodyPartAnimationOffset" type="short[]" comment="身上光效动画上、下、左、右偏移量"></property>
				<property name="bodyPartAnimationPlayStart" type="long" comment="身上动画播放开始时间，在出招多长时间后开始"></property>
				<property name="bodyPartAnimationPlayEnd" type="long" comment="身上动画播放结束时间，在出招多长时间后结束"></property>
				<property name="footParticle" type="String[]" encoding="UTF-8" comment="脚下光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>
				<property name="footParticleOffset" type="short[]" comment="脚下光效粒子上、下、左、右偏移量"></property>
				<property name="footParticlePlayStart" type="long" comment="脚下粒子播放开始时间，在出招多长时间后开始"></property>
				<property name="footParticlePlayEnd" type="long" comment="脚下粒子播放结束时间，在出招多长时间后结束"></property>
				<property name="footPartPath" type="String" encoding="UTF-8" comment="脚下光效部件路径名"></property>
				<property name="footPartAnimation" type="String" encoding="UTF-8" comment="脚下光效动画名"></property>
				<property name="footPartAnimationOffset" type="short[]" comment="脚下光效动画上、下、左、右偏移量"></property>
				<property name="footPartAnimationPlayStart" type="long" comment="脚下动画播放开始时间，在出招多长时间后开始"></property>
				<property name="footPartAnimationPlayEnd" type="long" comment="脚下动画播放结束时间，在出招多长时间后结束"></property>
				<property name="angle" type="short" comment="角度（落雷技能从上往下的角度，直接落下为0度，水平为90度，有轨迹技能如火球类这个值不起作用）"></property>
				<property name="targetFootParticle" type="String[]" encoding="UTF-8" comment="目标点脚下光效粒子名数组，数组长度为技能级别，如果只填写一个值的话，所有级别都是这个粒子效果"></property>

				<property name="guajiFlag" type="boolean" comment="是否挂机技能"></property>
				<property name="buffName" type="String" encoding="UTF-8" comment="Buff的名称"></property>
			</object-property>
		</req>
	</prototype>

	<prototype req_name="ALLOCATE_SKILL_REQ" req_type="0x000000E5" req_client_send="true" comment="用户请求分配技能点">
		<req>
			<property name="skillId" type="int" comment="技能id" />
		</req>
	</prototype>
	
	<prototype req_name="CLEAN_SKILL_REQ" req_type="0x000000EA" req_client_send="true" comment="用户请求洗魂">
		<req>
			<property name="skillId" type="int" comment="技能id" />
		</req>
	</prototype>
	
	<prototype res_name="NEW_XINGFA_SKILL_MSG_RES" res_type="0x700100E8" res_client_receive="true" comment="新心法技能限制等级和描述">
		<res>
			<property name="level_limit" type="int" comment="等级限制" />
			<property name="limit_msg" type="String" encoding="UTF-8" comment="限制描述" />
		</res>
	</prototype>

	<prototype req_name="QUERY_CAREER_INFO_REQ" res_name="QUERY_CAREER_INFO_RES" req_type="0x000000E6" res_type="0x700000E6" req_client_send="true"
		res_client_receive="true" comment="查询门派信息">
		<req>
			<property name="career" type="byte" comment="门派编号" />
		</req>
		<res>
			<object-property name="career" type="Career" comment="门派基本信息">
				<property name="weaponTypeLimit" type="int[]" comment="允许使用的武器类型"></property>
				<property name="name" type="String" encoding="UTF-8" comment="门派的名称"></property>
			</object-property>


			<object-property name="basicSkills" type="SkillInfo[]">
				<property name="id" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="skillType" type="byte" comment="主动技能，被动技能"></property>
				<property name="maxLevel" type="int"></property>
				<property name="description" type="String" encoding="UTF-8" comment="UUB" />


				<!-- 学习条件，升级条件 -->
				<property name="needMoney" type="int[]"></property>
				<property name="needYuanQi" type="int[]"></property>
				<property name="needExp" type="int[]"></property>
				<property name="needPoint" type="int[]"></property>
				<property name="needPlayerLevel" type="int[]"></property>
			</object-property>


			<object-property name="professorSkills" type="SkillInfo[]">
				<property name="id" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="skillType" type="byte" comment="主动技能，被动技能"></property>
				<property name="maxLevel" type="int"></property>
				<property name="description" type="String" encoding="UTF-8" comment="UUB" />


				<!-- 学习条件，升级条件 -->
				<property name="needMoney" type="int[]"></property>
				<property name="needYuanQi" type="int[]"></property>
				<property name="needExp" type="int[]"></property>
				<property name="needPoint" type="int[]"></property>
				<property name="needPlayerLevel" type="int[]"></property>
			</object-property>

			<object-property name="nuqiSkills" type="SkillInfo[]">
				<property name="id" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="skillType" type="byte" comment="主动技能，被动技能"></property>
				<property name="maxLevel" type="int"></property>
				<property name="description" type="String" encoding="UTF-8" comment="UUB" />


				<!-- 学习条件，升级条件 -->
				<property name="needMoney" type="int[]"></property>
				<property name="needYuanQi" type="int[]"></property>
				<property name="needExp" type="int[]"></property>
				<property name="needPoint" type="int[]"></property>
				<property name="needPlayerLevel" type="int[]"></property>
			</object-property>

			<object-property name="xinfaSkills" type="SkillInfo[]">
				<property name="id" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="skillType" type="byte" comment="主动技能，被动技能"></property>
				<property name="maxLevel" type="int"></property>
				<property name="description" type="String" encoding="UTF-8" comment="UUB" />


				<!-- 学习条件，升级条件 -->
				<property name="needMoney" type="int[]"></property>
				<property name="needYuanQi" type="int[]"></property>
				<property name="needExp" type="int[]"></property>
				<property name="needPoint" type="int[]"></property>
				<property name="needPlayerLevel" type="int[]"></property>
			</object-property>

			<object-property name="kingSkills" type="SkillInfo[]">
				<property name="id" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="skillType" type="byte" comment="主动技能，被动技能"></property>
				<property name="maxLevel" type="int"></property>
				<property name="description" type="String" encoding="UTF-8" comment="UUB" />


				<!-- 学习条件，升级条件 -->
				<property name="needMoney" type="int[]"></property>
				<property name="needYuanQi" type="int[]"></property>
				<property name="needExp" type="int[]"></property>
				<property name="needPoint" type="int[]"></property>
				<property name="needPlayerLevel" type="int[]"></property>
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="NEW_QUERY_CAREER_INFO_REQ" res_name="NEW_QUERY_CAREER_INFO_RES" req_type="0x000000EC" res_type="0x700000EC" req_client_send="true"
		res_client_receive="true" comment="查询门派信息">
		<req>
			<property name="career" type="byte" comment="门派编号" />
		</req>
		<res>
			<object-property name="career" type="Career" comment="门派基本信息">
				<property name="weaponTypeLimit" type="int[]" comment="允许使用的武器类型"></property>
				<property name="name" type="String" encoding="UTF-8" comment="门派的名称"></property>
			</object-property>


			<object-property name="basicSkills" type="SkillInfo[]">
				<property name="id" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="skillType" type="byte" comment="主动技能，被动技能"></property>
				<property name="maxLevel" type="int"></property>
				<property name="description" type="String" encoding="UTF-8" comment="UUB" />


				<!-- 学习条件，升级条件 -->
				<property name="needMoney" type="int[]"></property>
				<property name="needYuanQi" type="int[]"></property>
				<property name="needLongExp" type="long[]"></property>
				<property name="needPoint" type="int[]"></property>
				<property name="needPlayerLevel" type="int[]"></property>
			</object-property>


			<object-property name="professorSkills" type="SkillInfo[]">
				<property name="id" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="skillType" type="byte" comment="主动技能，被动技能"></property>
				<property name="maxLevel" type="int"></property>
				<property name="description" type="String" encoding="UTF-8" comment="UUB" />


				<!-- 学习条件，升级条件 -->
				<property name="needMoney" type="int[]"></property>
				<property name="needYuanQi" type="int[]"></property>
				<property name="needLongExp" type="long[]"></property>
				<property name="needPoint" type="int[]"></property>
				<property name="needPlayerLevel" type="int[]"></property>
			</object-property>

			<object-property name="nuqiSkills" type="SkillInfo[]">
				<property name="id" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="skillType" type="byte" comment="主动技能，被动技能"></property>
				<property name="maxLevel" type="int"></property>
				<property name="description" type="String" encoding="UTF-8" comment="UUB" />


				<!-- 学习条件，升级条件 -->
				<property name="needMoney" type="int[]"></property>
				<property name="needYuanQi" type="int[]"></property>
				<property name="needLongExp" type="long[]"></property>
				<property name="needPoint" type="int[]"></property>
				<property name="needPlayerLevel" type="int[]"></property>
			</object-property>
			<object-property name="xinfaSkills" type="SkillInfo[]">
				<property name="id" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="skillType" type="byte" comment="主动技能，被动技能"></property>
				<property name="maxLevel" type="int"></property>
				<property name="description" type="String" encoding="UTF-8" comment="UUB" />


				<!-- 学习条件，升级条件-->
				<property name="needMoney" type="int[]"></property>
				<property name="needYuanQi" type="int[]"></property>
				<property name="needLongExp" type="long[]"></property>
				<property name="needPoint" type="int[]"></property>
				<property name="needPlayerLevel" type="int[]"></property>
			</object-property>

			<object-property name="kingSkills" type="SkillInfo[]">
				<property name="id" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="skillType" type="byte" comment="主动技能，被动技能"></property>
				<property name="maxLevel" type="int"></property>
				<property name="description" type="String" encoding="UTF-8" comment="UUB" />


				<!-- 学习条件，升级条件 -->
				<property name="needMoney" type="int[]"></property>
				<property name="needYuanQi" type="int[]"></property>
				<property name="needLongExp" type="long[]"></property>
				<property name="needPoint" type="int[]"></property>
				<property name="needPlayerLevel" type="int[]"></property>
			</object-property>
		</res>
	</prototype>
	<prototype req_name="NEW_QUERY_CAREER_INFO_BY_ID_REQ" res_name="NEW_QUERY_CAREER_INFO_BY_ID_RES" req_type="0x000001E7" res_type="0x700001E7"
		req_client_send="true" res_client_receive="true" comment="查询门派信息">
		<req>
			<property name="skillId" type="int" comment="技能id" />
		</req>
		<res>
			<object-property name="querySkill" type="SkillInfo">
				<property name="id" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="skillType" type="byte" comment="主动技能，被动技能"></property>
				<property name="maxLevel" type="int"></property>
				<property name="description" type="String" encoding="UTF-8" comment="UUB" />

				<!-- 学习条件，升级条件 -->
				<property name="needMoney" type="int[]"></property>
				<property name="needYuanQi" type="int[]"></property>
				<property name="needLongExp" type="long[]"></property>
				<property name="needPoint" type="int[]"></property>
				<property name="needPlayerLevel" type="int[]"></property>
			</object-property>
		</res>
	</prototype>

	<prototype res_name="QUERY_CAREER_XINFA_INFO_RES" res_type="0x700000EA" res_client_receive="true"
		comment="因为上面那条协议太长发不过去新加的只发心法协议">
		<res>
			<object-property name="xinfaSkills" type="SkillInfo[]">
				<property name="id" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="skillType" type="byte" comment="主动技能，被动技能"></property>
				<property name="maxLevel" type="int"></property>
				<property name="description" type="String" encoding="UTF-8" comment="UUB" />


				<!-- 学习条件，升级条件 -->
				<property name="needMoney" type="int[]"></property>
				<property name="needYuanQi" type="int[]"></property>
				<property name="needLongExp" type="long[]"></property>
				<property name="needPoint" type="int[]"></property>
				<property name="needPlayerLevel" type="int[]"></property>
			</object-property>
		</res>
	</prototype>
	
	<prototype res_name="QUERY_CAREER_JINJIE_INFO_RES" res_type="0x700000ED" res_client_receive="true"
		comment="因为上面那条协议太长发不过去新加的只发进阶协议">
		<res>
			<object-property name="professorSkills" type="SkillInfo[]">
				<property name="id" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="skillType" type="byte" comment="主动技能，被动技能"></property>
				<property name="maxLevel" type="int"></property>
				<property name="description" type="String" encoding="UTF-8" comment="UUB" />


				<!-- 学习条件，升级条件 -->
				<property name="needMoney" type="int[]"></property>
				<property name="needYuanQi" type="int[]"></property>
				<property name="needLongExp" type="long[]"></property>
				<property name="needPoint" type="int[]"></property>
				<property name="needPlayerLevel" type="int[]"></property>
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="QUERY_DUJIE_SKILL_INFO_REQ" res_name="QUERY_DUJIE_SKILL_INFO_RES" req_type="0x000000EB" 
		res_type="0x700000EB" req_client_send="true" res_client_receive="true" comment="取渡劫关于技能的信息">
		<req>
		</req>
		<res>
			<property name="dujieNum" type="int" comment="渡过几次劫" />
			<property name="skillOneLevels" type="int[]" comment="第一套技能阶段" />
			<property name="needOneDuJies" type="int[]" comment="第一套需要的渡劫阶段" />
			<property name="skillTwoLevels" type="int[]" comment="第二套技能阶段" />
			<property name="needTwoDuJies" type="int[]" comment="第二套需要的渡劫阶段" />
		</res>
	</prototype>

	<prototype req_name="QUERY_CAREER_INFO_BY_ID_REQ" res_name="QUERY_CAREER_INFO_BY_ID_RES" req_type="0x000001E6" res_type="0x700001E6"
		req_client_send="true" res_client_receive="true" comment="查询门派信息">
		<req>
			<property name="skillId" type="int" comment="技能id" />
		</req>
		<res>
			<object-property name="querySkill" type="SkillInfo">
				<property name="id" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="skillType" type="byte" comment="主动技能，被动技能"></property>
				<property name="maxLevel" type="int"></property>
				<property name="description" type="String" encoding="UTF-8" comment="UUB" />

				<!-- 学习条件，升级条件 -->
				<property name="needMoney" type="int[]"></property>
				<property name="needYuanQi" type="int[]"></property>
				<property name="needExp" type="int[]"></property>
				<property name="needPoint" type="int[]"></property>
				<property name="needPlayerLevel" type="int[]"></property>
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="QUERY_XINFA_SKILL_IDLIST_REQ" res_name="QUERY_XINFA_SKILL_IDLIST_RES"
		req_type="0x000001E8" res_type="0x700001E8" req_client_send="true" res_client_receive="true" comment="查询心法技能ID列表，主要是心法技能数据分多条协议传过去有时候会乱">
		<req>
		</req>
		<res>
			<property name="idList" type="long[]" comment="心法技能ID，有序序列"/>
		</res>
	</prototype>

	<!-- 以下为物品相关指令 -->
	<prototype req_name="QUERY_ARTICLE_REQ" res_name="QUERY_ARTICLE_RES" req_type="0x000000F3" res_type="0x700000F3" req_client_send="true"
		res_client_receive="true" comment="客户端发送物品编号，请求物品对象，可以一次请求多个物品">
		<req>
			<property name="articleIds" type="long[]" comment="物品ID" />
		</req>
		<res>
			<object-property name="articleEntities" type="ArticleEntity[]" comment="普通物品集合">
				<property name="sellPrice" type="int" comment="商人回收物品的价格" />
				<property name="colorType" type="byte" comment="颜色类型，目前是对装备有效"></property>
				<property name="articleType" type="byte" comment="物品类型"></property>
				<property name="sequelType" type="byte" comment="道具失效后的处理方式:0:不处理 1：可以续费 2：消失"></property>
				<property name="sequelPrice" type="long" comment="续费价格单位元宝"></property>
				<property name="overlap" type="boolean" comment="是否可以重叠放置"></property>
				<property name="overLapNum" type="int" comment="最大可以重叠的次数"></property>
				<property name="id" type="long" comment="物品实体的唯一标识" />
				<property name="showName" type="String" encoding="UTF-8" comment="物品的显示名称" />
				<property name="iconId" type="String" encoding="UTF-8" comment="普通物品的图标" />
				<property name="binded" type="boolean" comment="物品是否已经绑定" />
				<property name="bindStyle" type="byte" comment="绑定方式：0不绑定，1装备绑定，2拾取绑定，3不提示绑定" />
				<property name="composeArticleType" type="byte" comment="0为不可合成  1为可以合成" />
				<property name="knapsackType" type="int" comment="放入背包类型" />
				<property name="oneClass" type="String" encoding="UTF-8" comment="物品一级分类" />
				<property name="twoClass" type="String" encoding="UTF-8" comment="物品二级分类" />
			</object-property>
			<object-property name="propsEntities" type="PropsEntity[]" comment="可使用物品集合">
				<property name="id" type="long" comment="物品实体的唯一标识" />
				<property name="iconId" type="String" encoding="UTF-8" comment="普通物品的图标" />
				<property name="binded" type="boolean" comment="物品是否已经绑定" />
				<property name="bindStyle" type="byte" comment="绑定方式：0不绑定，1装备绑定，2拾取绑定，3不提示绑定" />
				<property name="composeArticleType" type="byte" comment="0为不可合成  1为可以合成" />
				<property name="sellPrice" type="int" comment="商人回收物品的价格" />
				<property name="showName" type="String" encoding="UTF-8" comment="物品的显示名称" />
				<property name="levelLimit" type="short" comment="使用道具的等级限制" />
				<property name="propsType" type="byte" comment="可使用道具的类型，主要以使用后的效果区分，如加血、加魔等" />
				<property name="categoryName" type="String" encoding="UTF-8" comment="道具分类"></property>
				<property name="fightStateLimit" type="boolean" comment="战斗状态下是否可以使用"></property>
				<property name="colorType" type="byte" comment="颜色类型，目前是对装备有效"></property>
				<property name="articleType" type="byte" comment="物品类型"></property>
				<property name="sequelType" type="byte" comment="道具失效后的处理方式:0:不处理 1：可以续费 2：消失"></property>
				<property name="sequelPrice" type="long" comment="续费价格单位元宝"></property>
				<property name="overlap" type="boolean" comment="是否可以重叠放置"></property>
				<property name="overLapNum" type="int" comment="最大可以重叠的次数"></property>
				<property name="knapsackType" type="int" comment="放入背包类型" />
				<property name="oneClass" type="String" encoding="UTF-8" comment="物品一级分类" />
				<property name="twoClass" type="String" encoding="UTF-8" comment="物品二级分类" />
			</object-property>
			<object-property name="equipmentEntities" type="EquipmentEntity[]" comment="装备集合">
				<property name="binded" type="boolean" comment="物品是否已经绑定" />
				<property name="bindStyle" type="byte" comment="绑定方式：0不绑定，1装备绑定，2拾取绑定，3不提示绑定" />
				<property name="composeArticleType" type="byte" comment="0为不可合成  1为可以合成" />
				<property name="sellPrice" type="int" comment="商人回收物品的价格" />
				<property name="levelLimit" type="short" comment="使用装备的等级限制" />
				<property name="id" type="long" comment="物品实体的唯一标识" />
				<property name="showName" type="String" encoding="UTF-8" comment="物品的显示名称" />
				<property name="iconId" type="String" encoding="UTF-8" comment="普通物品的图标" />
				<property name="equipmentType" type="byte" comment="装备类型，标记武器、头盔、铠甲等属性，同时代表此装备在装备栏中的位置。" />
				<property name="level" type="short" comment="装备自身的等级" />
				<property name="colorType" type="byte" comment="颜色类型，是装备质地的一种表达" />
				<property name="durability" type="byte" comment="装备的耐久百分比" />
				<property name="star" type="byte" comment="装备的星级" />
				<property name="inscriptionFlag" type="boolean" comment="装备是否铭刻" />
				<property name="endowments" type="int" comment="装备的资质" />
				<property name="basicPropertyValue" type="int[]" comment="装备的基本属性" />
				<property name="additionPropertyValue" type="int[]" comment="装备的附加属性" />
				<property name="inlayArticleIds" type="long[]" comment="镶嵌宝石数组，必须于下面的宝石颜色数组对应，数组长度为可镶嵌宝石数量" />
				<property name="inlayArticleColors" type="int[]" comment="镶嵌宝石颜色数组，必须于宝石数组对应" />
				<property name="createrName" type="String" encoding="UTF-8" comment="物品的制造者名称" />
				<property name="weaponType" type="byte" comment="武器类型，只有装备为武器是才有用" />
				<property name="articleType" type="byte" comment="物品类型"></property>
				<property name="sequelType" type="byte" comment="道具失效后的处理方式:0:不处理 1：可以续费 2：消失"></property>
				<property name="sequelPrice" type="long" comment="续费价格单位元宝"></property>
				<property name="developEXP" type="int" comment="当前的炼化经验"></property>
				<property name="developUpValue" type="int" comment="升级所需炼化经验"></property>
				<property name="knapsackType" type="int" comment="放入背包类型" />
				<property name="oneClass" type="String" encoding="UTF-8" comment="物品一级分类" />
				<property name="twoClass" type="String" encoding="UTF-8" comment="物品二级分类" />
				<property name="careerLimit" type="int" encoding="UTF-8" comment="玩家职业限制" />
				<property name="strongParticles" type="String[]" encoding="UTF-8" comment="强化粒子光效" />
			</object-property>
		</res>
	</prototype>





	<prototype req_name="NOTIFY_DURABILITY_CHANGE_REQ" req_type="0x000000FB" req_client_receive="true" comment="服务器通知客户端，磨损的变化">
		<req>
			<property name="ids" type="long[]" comment="物品实体的唯一标识" />
			<property name="durability" type="byte[]" comment="装备的耐久百分比" />
		</req>
	</prototype>

	<prototype req_name="NOTIFY_EQUIPMENT_CHANGE_REQ" req_type="0x000000FC" req_client_receive="true" comment="服务器通知客户端，装备道具本身属性发生了变化">
		<req>
			<object-property name="equipmentEntities" type="EquipmentEntity[]" comment="发生变化的装备">
				<property name="id" type="long" comment="物品实体的唯一标识" />
				<property name="star" type="byte" comment="装备自身星级，游戏中装备可以升级，其自身等级会变化" />
				<property name="durability" type="byte" comment="装备的耐久百分比" />
				<property name="binded" type="boolean" comment="物品是否已经绑定" />
				<property name="inscriptionFlag" type="boolean" comment="物品是否已经铭刻" />
				<property name="inlayArticleIds" type="long[]" comment="镶嵌物品ids" />
				<property name="colorType" type="byte" comment="装备颜色" />
				<property name="developEXP" type="int" comment="当前的炼化经验"></property>
				<property name="developUpValue" type="int" comment="升级所需炼化经验"></property>
				<property name="endowments" type="int" comment="资质"></property>
			</object-property>
		</req>
	</prototype>

	<prototype req_name="QUERY_ARTICLE_INFO_REQ" res_name="QUERY_ARTICLE_INFO_RES" req_type="0x000000FD" req_client_send="true"
		res_client_receive="true" res_type="0x700000FD" comment="请求物品详细描述">
		<req>
			<property name="articleId" type="long" comment="物品实体的唯一标识" />
		</req>
		<res>
			<property name="articleId" type="long" comment="物品实体的唯一标识" />
			<property name="description" type="String" encoding="UTF-8" comment="物品实体的详细描述（UUB格式）"></property>
		</res>
	</prototype>

	<prototype req_name="QUERY_SUIT_INFO_REQ" res_name="QUERY_SUIT_INFO_RES" req_type="0x000001FD" req_client_send="true" res_client_receive="true"
		res_type="0x700001FD" comment="请求星級套，顏色套详细描述">
		<req>
			<property name="suitType" type="byte" comment="0：星級套，1：顏色套,2马匹星级套，3马匹颜色套" />
			<property name="playerId" type="long" comment="玩家ID" />
		</req>
		<res>
			<property name="suitType" type="byte" comment="0：星級套，1：顏色套" />
			<property name="description" type="String" encoding="UTF-8" comment="详细描述（UUB格式）"></property>
		</res>
	</prototype>


	<!-- 装备重置 -->
	<prototype req_name="EQUIPMENT_RESET_REQ" res_name="EQUIPMENT_RESET_RES" req_type="0x000000FE" req_client_send="true" res_client_receive="true"
		res_type="0x700000FE" comment="请求装备重置">
		<req>
			<property name="index" type="int" comment="装备在背包的位置" />
			<property name="resetType" type="byte" comment="申请类型，0代表打开装备重置面板，1代表装备重置" />
			<property name="articleId" type="long" comment="物品实体的唯一标识" />
		</req>
		<res>
			<property name="index" type="int" comment="装备在背包的位置" />
			<property name="articleId" type="long" comment="物品实体的唯一标识" />
			<property name="resultStr" type="String" encoding="UTF-8" comment="提示需要付费" />
			<property name="description" type="String" encoding="UTF-8" comment="物品实体附加升级属性的详细描述（UUB格式）"></property>
		</res>
	</prototype>
	<!-- 以下与团队相关的命令 包括： 邀请玩家加入团队，发起邀请的人只能是队长或者没有加入团队的玩家，被邀请的对象只能是没有加入团队的玩家 解散 申请 提示申请 审批 申请结果 离队 更换队长 踢人 查询
-->

	<!-- 查询 客户端发送给服务器 -->
	<prototype req_name="TEAM_QUERY_REQ" res_name="TEAM_QUERY_RES" req_type="0x00000F00" res_type="0x70000F00" req_client_send="true"
		res_client_receive="true" comment="客户端向服务器发送请求，查询玩家当前所在的队伍">
		<req>
			<property name="teamId" type="int" comment="团队的ID，-1表示查询玩家当前所在的团队" />
		</req>
		<res>
			<property name="teamId" type="int" comment="团队的ID" />
			<property name="captainId" type="long" comment="队长的ID" />

			<property name="assignColorType" type="byte" comment="在队伍分配和队长分配的情况下，用于区分物品的好坏(现在没用)" />

			<object-property name="players" type="Player[]" comment="队伍里的人">
				<property name="id" type="long" comment="人物ID" />
				<property name="level" type="int" comment=""></property>
				<property name="name" type="String" encoding="UTF-8" comment=""></property>
				<property name="hp" type="int" comment=""></property>
				<property name="mp" type="int" comment=""></property>
				<property name="maxHP" type="int" comment=""></property>
				<property name="maxMP" type="int" comment=""></property>
				<property name="career" type="byte" comment="职业"></property>
			</object-property>
			<!-- <property name="members" type="long[]" comment="所有队员的ID列表，包含玩家自己和队长" /> <property name="assignRule" type="byte" comment="分配规则：分配自由拾取，队伍分配，队长分配" 
				/> <property name="assignColorType" type="byte" comment="在队伍分配和队长分配的情况下，用于区分物品的好坏" />
-->
		</res>
	</prototype>

	<!-- 邀请 客户端发送给服务器 -->
	<prototype req_name="TEAM_INVITE_REQ" req_type="0x00000F01" req_client_send="true" comment="客户端向服务器发送请求，某个玩家邀请另外一个玩家加入团队">
		<req>
			<property name="beInvitedPlayerId" type="long" comment="被邀请玩家的ID" />
		</req>
	</prototype>

	<!-- 邀请通知，某人邀请他加入团队 -->
	<prototype req_name="TEAM_INVITE_NOTIFY_REQ" req_type="0x00000F02" req_client_receive="true" comment="通知客户端，某人邀请他加入团队">
		<req>
			<property name="invitePlayer" type="long" comment="发起邀请玩家的ID" />
			<property name="invitePlayerName" type="String" encoding="UTF-8" comment="发起邀请玩家的名字" />
		</req>

	</prototype>

	<!-- 邀请通知回复，同意或者拒绝某人的邀请 -->
	<prototype req_name="TEAM_INVITE_RESULT_REQ" req_type="0x00000F03" req_client_send="true" comment="通知服务器，同意或者拒绝某人的邀请">
		<req>
			<property name="result" type="byte" comment="0标识同意，1标识拒绝" />
			<property name="invitePlayer" type="long" comment="发起邀请玩家的ID" />
		</req>

	</prototype>

	<!-- 解散 客户端发送给服务器，只有队长才能发起此消息 -->
	<prototype req_name="TEAM_DISSOLVE_REQ" req_type="0x00000F04" req_client_send="true" req_client_receive="true"
		comment="客户端向服务器发送请求，队长要求解散所在的团队。服务器也使用相同的协议通知客户端团队解散">
		<req>
		</req>
	</prototype>

	<!-- 申请 玩家向队长提交入队申请 -->
	<prototype req_name="TEAM_APPLY_JION_REQ" req_type="0x00000F05" req_client_send="true" comment="非组队玩家向队长提交入队申请">
		<req>
			<property name="captainId" type="long" comment="队长的编号" />
		</req>
	</prototype>

	<!-- 提示队长有人申请加入团队 -->
	<prototype req_name="TEAM_APPLY_NOTIFY_REQ" req_type="0x00000F06" req_client_receive="true" comment="服务器提示客户端，有人申请加入团队">
		<req>
			<property name="applyerId" type="long" comment="申请人的ID" />
			<property name="applyerName" type="String" encoding="UTF-8" comment="申请人的名字" />
		</req>
	</prototype>

	<!-- 同意或者拒绝某个人的申请 -->
	<prototype req_name="TEAM_APPLY_RESULT_REQ" req_type="0x00000F07" req_client_send="true" comment="客户端发送给服务器，同意或者拒绝申请">
		<req>
			<property name="result" type="byte" comment="0标识同意，1标识拒绝"></property>
			<property name="applyerId" type="long" comment="申请人的ID" />
		</req>

	</prototype>

	<!-- 队员离开团队 -->
	<prototype req_name="TEAM_APPLY_LEAVE_REQ" req_type="0x00000F08" req_client_send="true" comment="由客户端发起，通知某人离开团队。如果发起者不是队长，表示队员主动请求离队，否则表示队长踢人">
		<req>
			<property name="playerId" type="long" comment="离队玩家编号" />
		</req>
	</prototype>

	<!-- 队长设置某人为新的队长 -->
	<prototype req_name="TEAM_SET_CAPTAIN_REQ" req_type="0x00000F09" req_client_send="true" comment="客户端发起要求设置新的队长，只有队长能发起此请求">
		<req>
			<property name="newCaptainId" type="long" comment="新队长的ID" />
		</req>

	</prototype>

	<!-- 通知客户端队长设置某人为新的队长 -->
	<prototype req_name="TEAM_CHANGE_CAPTAIN_REQ" req_type="0x00000F0A" req_client_receive="true" comment="服务器通知客户端，您所在的团队更换队长了">
		<req>
			<property name="newCaptainId" type="long" comment="新队长的ID" />
		</req>

	</prototype>

	<!-- 队长设置团队物品分配规则 -->
	<prototype req_name="TEAM_SET_ASSIGN_RULE_REQ" req_type="0x00000F0B" req_client_send="true" req_client_receive="true" comment="队长修改团队物品分配规则。客户端、服务器均可发起">
		<req>
			<property name="assignRule" type="byte" comment="物品分配规则：0标识自由分配，1标识顺序分配" />

			<property name="colorType" type="byte" comment="区分物品好坏的颜色(现在没用)" />
		</req>
	</prototype>


	<!-- 通知团队里的玩家，某人加入团队了 -->
	<prototype req_name="TEAM_MEMBER_JOIN_REQ" req_type="0x00000F0C" req_client_receive="true" comment="服务器通知客户端，某个玩家加入到当前玩家所在的团队。新加入的玩家也会收到此指令">
		<req>
			<property name="teamId" type="int" comment="团队的ID" />
			<property name="playerId" type="long" comment="新加入的玩家ID" />
			<property name="playerName" type="String" encoding="UTF-8" comment="新加入的玩家名称" />
		</req>
	</prototype>

	<!-- 通知团队里的玩家，某人离开团队了 -->
	<prototype req_name="TEAM_MEMBER_LEAVE_REQ" req_type="0x00000F0D" req_client_receive="true" comment="服务器通知客户端，某个玩家离开到当前玩家所在的团队。新离开的玩家也会收到此指令">
		<req>
			<property name="playerId" type="long" comment="离开的玩家ID" />
			<property name="reason" type="byte" comment="离开的原因：0标识主动离开，1标识下线离开，2标识队长踢人" />
		</req>
	</prototype>

	<!-- 查询某些队员的信息 -->
	<prototype req_name="TEAM_QUERY_PLAYER_REQ" res_name="TEAM_QUERY_PLAYER_RES" req_type="0x00000F0E" res_type="0x70000F0E" req_client_send="true"
		res_client_receive="true" comment="客户端请求玩家简略信息，仅供显示。这些队友不在主玩家的广播区内">
		<req>
			<property name="teamId" type="int" comment="团队的ID" />
			<property name="members" type="long[]" comment="要查询的玩家ID" />
		</req>
		<res>
		</res>
	</prototype>
	<prototype req_name="QUERY_OTHER_PLAYER_REQ" res_name="QUERY_OTHER_PLAYER_RES" req_type="0x000000E7" res_type="0x700000E7" req_client_send="true"
		res_client_receive="true" comment="查询其他玩家的信息，主要供界面显示">
		<req>
			<property name="playerId" type="long" comment="玩家编号" />
		</req>
		<res>
			<object-property name="players" type="Player" comment="角色">
				<property name="mapName" type="String" encoding="UTF-8" comment="玩家当前所在的地图名称"></property>
				<!-- 状态 -->
				<property name="hold" type="boolean" comment="定身"></property>
				<property name="stun" type="boolean" comment="眩晕"></property>
				<property name="immunity" type="boolean" comment="免疫"></property>
				<property name="poison" type="boolean" comment="中毒"></property>
				<property name="weak" type="boolean" comment="虚弱"></property>
				<property name="invulnerable" type="boolean" comment="无敌"></property>
				<property name="cure" type="boolean" comment="缓疗状态"></property>
				<property name="shield" type="byte" comment="护盾"></property>
				<property name="fighting" type="boolean" comment="战斗状态"></property>
				<property name="flying" type="boolean" comment="飞行状态"></property>

				<property name="hp" type="int" comment=""></property>
				<property name="maxHP" type="int" comment=""></property>
				<property name="mp" type="int" comment=""></property>
				<property name="maxMP" type="int" comment=""></property>

				<property name="id" type="long" comment="玩家唯一的编号"></property>
				<property name="name" type="String" encoding="UTF-8" comment="玩家的昵称"></property>
				<property name="sex" type="byte" comment="性别"></property>
				<property name="country" type="byte" comment="国家"></property>
				<property name="countryPosition" type="int" comment="职位"></property>
				<property name="career" type="byte" comment="角色的门派或职业"></property>
				<property name="level" type="int" comment="等级"></property>
				<property name="soulLevel" type="int" comment="元神等级" />
				<property name="classLevel" type="short" comment="境界" />
				<property name="totalRmbyuanbao" type="long" comment="非绑定人民币等值元宝"></property>
				<property name="bindSilver" type="long" comment="绑定银子"></property>
				<property name="silver" type="long" comment="银子"></property>
				<property name="exp" type="long" comment="当前经验值"></property>
				<property name="nextLevelExp" type="long" comment="升级所需经验值"></property>
				<property name="nextLevelExpPool" type="long" comment="经验池最大值"></property>
				<property name="weaponType" type="byte" comment="武器类型，包括空手。可以用于技能的判断条件"></property>
				<property name="state" type="byte" comment=""></property>
				<property name="direction" type="byte" comment=""></property>

				<property name="avataRace" type="String" encoding="UTF-8" comment="客户端用来定位形象">
				</property>
				<property name="avata" type="String[]" encoding="UTF-8" comment="玩家身上的部件关键字：比如装备了明月刀，"></property>
				<property name="avataType" type="byte[]" comment="玩家身上的部件关键字"></property>

				<property name="aura" type="byte" comment="光环类型，-1标识没有光环类型"></property>
				<property name="encloser" type="byte" comment="角色周身的外罩，一种透明的光影效果"></property>
				<property name="isUpOrDown" type="boolean" comment=""></property>
				<property name="commonAttackSpeed" type="short" comment="普通攻击的速度"></property>
				<property name="commonAttackRange" type="short" comment="普通攻击的攻击距离（像素为单位）"></property>
				<property name="speed" type="short" comment="角色的移动速度，单位：像素/秒"></property>
				<property name="jiazuId" type="long" comment="家族id"></property>
				<property name="jiazuName" type="String" encoding="UTF-8" comment="家族的名字"></property>
				<property name="zongPaiName" type="String" encoding="UTF-8" comment="宗派的名字"></property>
				<property name="title" type="String" encoding="UTF-8" comment="称号"></property>

				<!-- 战斗属性 -->
				<property name="strength" type="int" comment=""></property>
				<property name="dexterity" type="int" comment=""></property>
				<property name="constitution" type="int" comment=""></property>
				<property name="spellpower" type="int" comment=""></property>
				<property name="physicalDamageUpperLimit" type="int" comment=""></property>
				<property name="physicalDamageLowerLimit" type="int" comment=""></property>
				<property name="phyDefence" type="int" comment=""></property>
				<property name="magicDefence" type="int" comment=""></property>
				<property name="dodge" type="int" comment=""></property>
				<property name="phyAttack" type="int" comment=""></property>
				<property name="magicAttack" type="int" comment=""></property>
				<property name="coolDownTimePercent" type="int" comment=""></property>
				<property name="setupTimePercent" type="int" comment=""></property>
				<property name="criticalHit" type="int" comment=""></property>
				<property name="vitality" type="int" comment="体力"></property>
				<property name="energy" type="int" comment="元气"></property>
				<property name="xp" type="int" comment="怒气值"></property>
				<property name="totalXp" type="int" comment="怒气最大值"></property>
				<property name="breakDefence" type="int" comment="破防"></property>
				<property name="breakDefenceRate" type="int" comment="总破防率"></property>
				<property name="hit" type="int" comment="命中等级"></property>
				<property name="hitRate" type="int" comment="总命中率"></property>
				<property name="dodge" type="int" comment="回避"></property>
				<property name="dodgeRate" type="int" comment="总闪避率"></property>
				<property name="accurate" type="int" comment="精准"></property>
				<property name="accurateRate" type="int" comment="总精准率"></property>
				<property name="fireAttack" type="int" comment="火攻"></property>
				<property name="fireDefence" type="int" comment="火防"></property>
				<property name="fireDefenceRate" type="int" comment="总火防率"></property>
				<property name="fireIgnoreDefence" type="int" comment="减少对方火防"></property>
				<property name="fireIgnoreDefenceRate" type="int" comment="总减少对方火防率"></property>
				<property name="blizzardAttack" type="int" comment="冰攻"></property>
				<property name="blizzardDefence" type="int" comment="冰防"></property>
				<property name="blizzardDefenceRate" type="int" comment="总冰防率"></property>
				<property name="blizzardIgnoreDefence" type="int" comment="减少对方冰防"></property>
				<property name="blizzardIgnoreDefenceRate" type="int" comment="总减少对方冰防率"></property>
				<property name="windAttack" type="int" comment="风攻"></property>
				<property name="windDefence" type="int" comment="风防"></property>
				<property name="windDefenceRate" type="int" comment="总风防率"></property>
				<property name="windIgnoreDefence" type="int" comment="减少对方风防"></property>
				<property name="windIgnoreDefenceRate" type="int" comment="总减少对方风防率"></property>
				<property name="thunderAttack" type="int" comment="雷攻"></property>
				<property name="thunderDefence" type="int" comment="雷防"></property>
				<property name="thunderDefenceRate" type="int" comment="总雷防率"></property>
				<property name="thunderIgnoreDefence" type="int" comment="减少对方雷防"></property>
				<property name="thunderIgnoreDefenceRate" type="int" comment="总减少对方雷防率"></property>
				<property name="criticalDefence" type="int" comment="会心防御"></property>
				<property name="criticalDefenceRate" type="int" comment="总会心防御率"></property>
				<property name="criticalHitRate" type="int" comment="总暴击率"></property>
				<!-- 其他属性 -->
				<property name="unallocatedSkillPoint" type="short" comment=""></property>
				<property name="skillOneLevels" type="byte[]" comment="进阶技能的等级"></property>
				<!--property name="skillTwoLevels" type="byte[]" comment="废弃各个技能的等级"></property
-->
				<!-- property name="openedAuraSkillID" type="short" comment="当前启用的光环技能编号"></property
-->
				<!-- property name="currentSuit" type="byte" comment="表明当前启用的是哪一套装备"></property
-->
				<property name="teamMark" type="byte" comment="玩家在团队的标记"></property>
				<!-- property name="homeMapName" type="String" encoding="UTF-8" comment="回城点所在的地图"></property
-->
				<!-- property name="resurrectionMapName" type="String" encoding="UTF-8" comment="复活点所在的地图"></property
-->
				<!-- property name="gangName" type="String" encoding="UTF-8" comment="玩家所加入的公会名称"></property
-->
				<!-- property name="gangTitle" type="byte" comment="玩家在公会中的职位"></property
-->
				<!-- 玩家的坐标属性 -->
				<property name="x" type="int" comment="当前x坐标" />
				<property name="y" type="int" comment="当前y坐标" />

				<property name="inBattleField" type="boolean" comment="标记用户是否在战场中" />
				<property name="battleFieldSide" type="byte" comment="玩家在战场中的哪一方，0标识中立，1标识A方，2标识B方" />

				<!-- property name="honorValue" type="int" comment="荣誉值"></property -->
				<!-- property name="titleName" type="String" encoding="UTF-8" comment="称号名称"></property> <property name="titleColorType" type="int" comment="称号的具体颜色"></property> 
					<property name="connubialName" type="String" encoding="UTF-8" comment="配偶的名字"></property> <property name="connubialId" type="long" comment="配偶的id"></property> 
					<property name="marriagedDate" type="long" comment="结婚的日期"></property> <property name="honorIconId" type="int" comment="称号ICON"> </property
-->

				<property name="avataPropsId" type="long" comment="换装道具id，此id部位0或-1即代表此人现在有时装穿在身上" />
				<property name="pkMode" type="byte" comment="0普通, 1-屠杀模式" />
				<property name="nameColorType" type="byte" comment="名字颜色类型" />
				<property name="careerBasicSkillsLevels" type="byte[]" comment="职业基本技能级别" />
				<property name="skillOneLevels" type="byte[]" comment="职业进阶技能级别" />
				<property name="nuqiSkillsLevels" type="byte[]" comment="怒气技能级别" />
				<property name="xinfaLevels" type="byte[]" comment="心法技能级别" />
				<property name="jiazuTitle" type="String" encoding="UTF-8" comment="家族称号" />
				<property name="jiazuIcon" type="String" encoding="UTF-8" comment="家族徽章资源名字" />
				<property name="sealState" type="boolean" comment="封印状态" />
				<property name="bournExp" type="int" comment="境界经验" />
				<property name="spouse" type="String" encoding="UTF-8" comment="配偶名字" />


				<property name="maxHPX" type="int" comment="加成属性maxHPX" />
				<property name="maxMPX" type="int" comment="加成属性maxMPX" />
				<property name="phyDefenceX" type="int" comment="加成属性phyDefenceX" />
				<property name="magicDefenceX" type="int" comment="加成属性magicDefenceX" />
				<property name="breakDefenceX" type="int" comment="加成属性breakDefenceX" />
				<property name="hitX" type="int" comment="加成属性hitX" />
				<property name="dodgeX" type="int" comment="加成属性dodgeX" />
				<property name="accurateX" type="int" comment="加成属性accurateX" />
				<property name="phyAttackX" type="int" comment="加成属性phyAttackX" />
				<property name="magicAttackX" type="int" comment="加成属性magicAttackX" />
				<property name="fireAttackX" type="int" comment="加成属性fireAttackX" />
				<property name="fireDefenceX" type="int" comment="加成属性fireDefenceX" />
				<property name="fireIgnoreDefenceX" type="int" comment="加成属性fireIgnoreDefenceX" />
				<property name="blizzardAttackX" type="int" comment="加成属性blizzardAttackX" />
				<property name="blizzardDefenceX" type="int" comment="加成属性blizzardDefenceX" />
				<property name="blizzardIgnoreDefenceX" type="int" comment="加成属性blizzardIgnoreDefenceX" />
				<property name="windAttackX" type="int" comment="加成属性windAttackX" />
				<property name="windDefenceX" type="int" comment="加成属性windDefenceX" />
				<property name="windIgnoreDefenceX" type="int" comment="加成属性windIgnoreDefenceX" />
				<property name="thunderAttackX" type="int" comment="加成属性thunderAttackX" />
				<property name="thunderDefenceX" type="int" comment="加成属性thunderDefenceX" />
				<property name="thunderIgnoreDefenceX" type="int" comment="加成属性thunderIgnoreDefenceX" />
				<property name="criticalHitX" type="int" comment="加成属性criticalHitX" />
				<property name="criticalDefenceX" type="int" comment="加成属性criticalDefenceX" />
			</object-property>
			<object-property name="souls" type="Soul[]" comment="角色元神信息">
				<property name="soulType" type="int" comment="元神类型" />
				<property name="career" type="byte" comment="职业" />
				<property name="grade" type="int" comment="等级" />
				<property name="maxHp" type="int" comment="最大生命" />
				<property name="maxMp" type="int" comment="最大法力" />
				<property name="strength" type="int" comment="力量" />
				<property name="spellpower" type="int" comment="智力" />
				<property name="constitution" type="int" comment="耐力" />
				<property name="dexterity" type="int" comment="敏捷" />
				<property name="hit" type="int" comment="命中" />
				<property name="dodge" type="int" comment="回避" />
				<property name="accurate" type="int" comment="精准" />
				<property name="phyAttack" type="int" comment="近战攻击强度" />
				<property name="magicAttack" type="int" comment="魔法攻击强度" />
				<property name="criticalHit" type="int" comment="暴击" />
				<property name="criticalDefence" type="int" comment="暴击防御" />
				<property name="phyDefence" type="int" comment="物理防御" />
				<property name="magicDefence" type="int" comment="魔法防御" />
				<property name="breakDefence" type="int" comment="打断防御" />
				<property name="fireAttack" type="int" comment="火焰伤害" />
				<property name="fireDefence" type="int" comment="火焰防御" />
				<property name="fireIgnoreDefence" type="int" comment="忽略火焰防御" />
				<property name="blizzardAttack" type="int" comment="冰霜伤害" />
				<property name="blizzardDefence" type="int" comment="冰霜防御" />
				<property name="blizzardIgnoreDefence" type="int" comment="忽略冰霜防御" />
				<property name="windAttack" type="int" comment="飓风伤害" />
				<property name="windDefence" type="int" comment="飓风防御" />
				<property name="windIgnoreDefence" type="int" comment="忽略飓风防御" />
				<property name="thunderAttack" type="int" comment="雷电伤害" />
				<property name="thunderDefence" type="int" comment="雷电防御" />
				<property name="thunderIgnoreDefence" type="int" comment="忽略雷电防御" />
			</object-property>
			<object-property name="soulEquipment4Client" type="SoulEquipment4Client[]" comment="玩家元神的装备信息">
				<property name="soulTyp" type="int" comment="元神类型" />
				<property name="equipment" type="long[]" comment="装备信息 -1表示没装备" />
			</object-property>
			<property name="propertyValues" type="int[]"
				comment="各个属性的最大值,顺序MHP,AP,AP2,AC,AC2,MMP,DAC,HITP,DGP,ACTP,CHP,DCHP,FAP,IAP,WAP,TAP,FRT,IRT,WRT,TRT,DFRT,DIRT,DWRT,DTRT" />
		</res>
	</prototype>

	<!-- 查询自己进队状态，队伍分配方式，附近队伍 -->
	<prototype req_name="QUERY_PERSON_TEAM_REQ" res_name="QUERY_PERSON_TEAM_RES" req_type="0x000000E8" res_type="0x700000E8" req_client_send="true"
		res_client_receive="true" comment="查询自己允许进队状态，队伍分配方式，附近的队伍,如果有队伍显示队伍的分配规则">
		<req>
		</req>
		<res>
			<property name="inteamRule" type="byte" comment="自己允许进队状态" />
			<property name="assignRule" type="byte" comment="队伍分配方式" />

			<property name="captainId" type="long[]" comment="队长id" />
			<property name="teamDes" type="String[]" encoding="UTF-8" comment="队伍描述" />
		</res>
	</prototype>

	<!-- 玩家设置进队规则 -->
	<prototype req_name="SET_INTEAM_RULE_REQ" req_type="0x000000E9" req_client_send="true" comment="玩家设置进队状态 0 自动进队 1弹提示">
		<req>
			<property name="inteamRule" type="byte" comment="玩家设置进队状态 0 自动进队 1弹提示" />
		</req>
	</prototype>


	<!-- prototype req_name="WHITEUSER_INFO_REQ" res_name="WHITEUSER_INFO_RES" req_type="0x00000F25" res_type="0x70000F25" req_client_send = "true" res_client_receive 
		= "true" comment="客户端向服务器发送白名单信息"> <req> <property name="clientId" type="String" comment="客户端的编号，此编号有客户端随机生成，长度为16的字符串" /> <property name="phone" type="String" 
		encoding="UTF-8" comment="手机号码" /> <property name="UserAgent" type="String" encoding="UTF-8" comment="手机机型" /> <property name="jarmobiletype" type="String" 
		encoding="UTF-8" comment="Jar包适配的机型或者说Jar包的适配类型" /> </req> <res> <property name="result" type="byte" comment="结果, 0-成功, 1-失败" /> </res> </prototype
-->

	<!-- 快捷键 -->
	<prototype req_name="SAVE_SHORTCUT_REQ" req_type="0x00000F30" req_client_send="true" comment="发送快捷键信息至服务器保存，不需要回复">
		<req>
			<property name="shortcutData" type="byte[]" comment="快捷键信息的二进制内容" />
		</req>
	</prototype>

	<prototype req_name="QUERY_SHORTCUT_REQ" res_name="QUERY_SHORTCUT_RES" req_type="0x00000F31" res_type="0x70000F31" req_client_send="true"
		res_client_receive="true" comment="客户端向服务器请求快捷键信息">
		<req>
		</req>
		<res>
			<property name="shortcutData" type="byte[]" comment="快捷键信息的二进制内容" />
		</res>
	</prototype>

	<!-- 聊天消息 -->
	<prototype req_name="CHAT_MESSAGE_REQ" res_name="CHAT_MESSAGE_RES" req_type="0x00000E02" res_type="0x70000E02" req_client_send="true"
		req_client_receive="true" res_client_receive="true" comment="客户端发送聊天消息">
		<req>
			<object-property name="chatMessage" type="ChatMessage" comment="聊天消息">
				<property name="groupId" type="long" comment="发送者要发送的聊天组id"></property>
				<property name="chatTime" type="long" comment="发送时间"></property>
				<property name="senderName" type="String" encoding="UTF-8" comment="发送人名称"></property>
				<property name="receiverId" type="long" comment="接受人id"></property>
				<property name="senderId" type="long" comment="发送人id"></property>
				<property name="campId" type="int" comment="发送人阵营"></property>
				<property name="receiverName" type="String" encoding="UTF-8" comment="接受人名称"></property>
				<property name="sort" type="int" comment="类型"></property>
				<property name="messageText" type="String" encoding="UTF-8" comment="消息"></property>
				<property name="chatType" type="int" comment="消息类别"></property>
			</object-property>
			<object-property name="chatMessageItem" type="ChatMessageItem" comment="聊天消息元素">
				<property name="id" type="long" comment="id"></property>
				<property name="color" type="int" comment="颜色"></property>
				<property name="name" type="String" encoding="UTF-8" comment="名称"></property>
			</object-property>
			<object-property name="chatMessageTask" type="ChatMessageTask" comment="聊天消息元素">
				<property name="name" type="String" encoding="UTF-8" comment="名称"></property>
				<property name="id" type="long" comment="id"></property>
			</object-property>
		</req>
		<res>
		</res>
	</prototype>
	
	<prototype req_name="FEE_CHAT_ALLOW_REQ" req_type="0x00000E03" req_client_receive="true" comment="通知玩家此频道是否能发言，是否有道具">
		<req>
			<property name="sort" type="byte" comment="属于哪个频道" />
			<property name="hasProps" type="boolean" comment="是否有喊话道具" />
			<property name="price" type="String" encoding="UTF-8" comment="喊话道具的价格,包含了量词，xx元宝" />
		</req>
	</prototype>
	<prototype req_name="FEE_CHAT_CONFIRM_REQ" req_type="0x00000E04" req_client_send="true" comment="玩家是否确定要喊话，如果玩家有道具，直接扣量，如果没有道具，直接在商店购买一个">
		<req>
			<property name="sort" type="byte" comment="属于哪个频道" />
			<property name="confirmed" type="boolean" comment="确认喊话" />
		</req>
	</prototype>
	<prototype req_name="CHAT_FAILED_REQ" req_type="0x00000E06" req_client_receive="true" comment="通知玩家发言失败">
		<req>
			<property name="sort" type="int" comment="所属channel"></property>
			<property name="description" type="String" encoding="UTF-8" comment="失败原因"></property>
		</req>
	</prototype>
	<prototype req_name="CHAT_CHANNEL_STATUS_REQ" req_type="0x00000E07" res_name="CHAT_CHANNEL_STATUS_RES" res_type="0x70000E07"
		req_client_send="true" res_client_receive="true" comment="获取聊天频道状态">
		<req>
		</req>
		<res>
			<property name="status" type="byte[]" comment="各频道状态， 取值:0-关闭, 1-开启，下标:0-周围,1-世界,2-私聊,3-队伍,4-工会,5-系统"></property>
		</res>
	</prototype>
	<prototype req_name="CHAT_CHANNEL_SET_REQ" req_type="0x00000E08" res_name="CHAT_CHANNEL_SET_RES" res_type="0x70000E08" req_client_send="true"
		res_client_receive="true" comment="设置聊天频道状态">
		<req>
			<property name="sort" type="byte" comment="所属channel"></property>
			<property name="status" type="byte" comment="状态， 0-关闭, 1-开启"></property>
		</req>
		<res>
			<property name="status" type="byte[]" comment="各频道状态， 取值:0-关闭, 1-开启，下标:0-周围,1-世界,2-私聊,3-队伍,4-工会,5-系统"></property>
		</res>
	</prototype>

	<prototype req_name="CHAT_VOICE_REQ" req_type="0x00000E09" res_name="CHAT_VOICE_RES" res_type="0x70000E09" req_client_send="true"
		res_client_receive="true" comment="发送语音聊天,这里面的文件大小是zip压缩后的">
		<req>
			<property name="sort" type="byte" comment="所属channel"></property>
			<property name="senderId" type="long" comment="发送人id"></property>
			<property name="receiverId" type="long" comment="接受人id"></property>
			<property name="voiceKeyID" type="String" encoding="UTF-8" comment="语音标记ID"></property>
			<property name="voiceTime" type="int" comment="语音时长(毫秒)"></property>
			<property name="voiceSize" type="int" comment="语音文件大小byte是zip压缩后的"></property>
			<property name="voiceInfoNum" type="int" comment="语音文件分段数目CHAT_VOICE_INFO_REQ这个数目"></property>
			<property name="otherInfo" type="String[]" comment="预留字段"></property>
		</req>
		<res>
			<property name="sort" type="byte" comment="所属channel"></property>
			<property name="senderId" type="long" comment="发送人id"></property>
			<property name="senderName" type="String" encoding="UTF-8" comment="发送人名称"></property>
			<property name="voiceKeyID" type="String" encoding="UTF-8" comment="语音标记ID"></property>
			<property name="voiceTime" type="int" comment="语音时长(毫秒)"></property>
			<property name="voiceSize" type="int" comment="语音文件大小byte是zip压缩后的"></property>
			<property name="voiceInfoNum" type="int" comment="语音文件分段数目CHAT_VOICE_INFO_REQ这个数目"></property>
			<property name="otherInfo" type="String[]" comment="预留字段"></property>
		</res>
	</prototype>
	
	<prototype req_name="CHAT_VOICE_INFO_REQ" req_type="0x00000E10" res_name="CHAT_VOICE_INFO_RES" res_type="0x70000E10" req_client_send="true"
		res_client_receive="true" comment="语音文件具体数据ZIP格式的,最大8KB">
		<req>
			<property name="sort" type="byte" comment="所属channel"></property>
			<property name="senderId" type="long" comment="发送人id"></property>
			<property name="receiverId" type="long" comment="接受人id"></property>
			<property name="voiceKeyID" type="String" encoding="UTF-8" comment="语音标记ID"></property>
			<property name="infoIndex" type="int" comment="语音文件块Index"></property>
			<property name="info" type="byte[]" comment="语音文件块Info"></property>
		</req>
		<res>
			<property name="sort" type="byte" comment="所属channel"></property>
			<property name="senderId" type="long" comment="发送人id"></property>
			<property name="voiceKeyID" type="String" encoding="UTF-8" comment="语音标记ID"></property>
			<property name="infoIndex" type="int" comment="语音文件块Index"></property>
			<property name="info" type="byte[]" comment="语音文件块Info"></property>
		</res>
	</prototype>
	
	<prototype req_name="CHAT_VOICE_SUCC_REQ" req_type="0x00000E0A" req_client_receive="true" comment="语音是否发送成功">
		<req>
			<property name="voiceKeyID" type="String" encoding="UTF-8" comment="语音标记ID"/>
			<property name="isSucc" type="boolean" comment="是否能成功发送"/>
		</req>
	</prototype>
	
	<!-- 任务相关的指令 -->
	<prototype req_name="TASK_QUERY_TASK_REQ" req_type="0x00000FA0" res_name="TASK_QUERY_TASK_RES" res_type="0x70000FA0" req_client_send="true"
		res_client_receive="true" comment="客户端查询某个任务详细数据">
		<req>
			<property name="taskId" type="long" comment="任务的id" />
		</req>
		<res>
			<object-property name="task" type="Task" comment="玩家正在做的任务列表，也就是已经接了，但还没有交付的任务">
				<property name="id" type="int" encoding="UTF-8" comment="ID" />
				<property name="name" type="String" encoding="UTF-8" comment="名字" />
				<property name="grade" type="int" encoding="UTF-8" comment="等级" />
				<property name="showType" type="byte" encoding="UTF-8" comment="显示类型" />
				<property name="des" type="String" encoding="UTF-8" comment="描述 " />

				<property name="unDeliverTalk" type="String" encoding="UTF-8" comment="未完成对话" />
				<property name="startNpc" type="String" encoding="UTF-8" comment="开始NPC" />
				<property name="startMap" type="String" encoding="UTF-8" comment="开始地图" />
				<property name="startMapResName" type="String" encoding="UTF-8" comment="开始地图资源名" />
				<property name="startTalk" type="String" encoding="UTF-8" comment="开始对话" />
				<property name="startX" type="int" encoding="UTF-8" comment="开始坐标-x" />
				<property name="startY" type="int" encoding="UTF-8" comment="开始坐标-y" />
				<property name="startNPCAvataRace" type="String" encoding="UTF-8" comment="开始NPC形象race" />
				<property name="startNPCAvataSex" type="String" encoding="UTF-8" comment="开始NPC形象sex" />

				<property name="endNpc" type="String" encoding="UTF-8" comment="结束NPC" />
				<property name="endMap" type="String" encoding="UTF-8" comment="结束地图" />
				<property name="endMapResName" type="String" encoding="UTF-8" comment="结束地图资源名" />
				<property name="endTalk" type="String" encoding="UTF-8" comment="结束对话" />

				<property name="notice" type="String" encoding="UTF-8" comment="温馨提示" />
				<property name="endX" type="int" encoding="UTF-8" comment="结束坐标-x" />
				<property name="endY" type="int" encoding="UTF-8" comment="结束坐标-y" />
				<property name="endNPCAvataRace" type="String" encoding="UTF-8" comment="结束NPC形象race" />
				<property name="endNPCAvataSex" type="String" encoding="UTF-8" comment="结束NPC形象sex" />

				<property name="thewCost" type="int" encoding="UTF-8" comment="体力值消耗" />
				<property name="showTarget" type="byte" encoding="UTF-8" comment="是否显示任务目标0显示1不显示" />

				<property name="dailyTaskCycle" type="int" encoding="UTF-8" comment=" 周期限定 天" />
				<property name="dailyTaskMaxNum" type="int" encoding="UTF-8" comment="同周期可完成次数上限" />
				<property name="reGetCodeDown" type="long" encoding="UTF-8" comment="跑环任务 放弃,失败后的CD" />
			</object-property>


			<object-property name="targets" type="TaskTarget[]" comment="任务目标 数组length > 1 则为或关系">
				<property name="targetByteType" type="byte" comment="任务目标类型" />
				<property name="targetName" type="String[]" encoding="UTF-8" comment="任务目标名字"></property>
				<property name="targetNum" type="int" comment="个数" />
				<property name="targetColor" type="int" comment="颜色" />
				<property name="mapName" type="String[]" encoding="UTF-8" comment="目标地图"></property>
				<property name="resMapName" type="String[]" encoding="UTF-8" comment="目标地图资源名"></property>
				<property name="x" type="int[]" comment="目标坐标" />
				<property name="y" type="int[]" comment="目标坐标" />
				<property name="showMonsterNames" type="String[]" encoding="UTF-8" comment="如果是物品掉落，哪些怪掉这个物品"></property>
			</object-property>
			<object-property name="prizes" type="TaskPrize[]" comment="任务奖励 数组length > 1 则为可选择奖励">
				<property name="prizeByteType" type="byte" comment="任务奖励类型" />
				<property name="prizeName" type="String[]" encoding="UTF-8" comment="任务奖励名字" />
				<property name="prizeNum" type="long[]" comment="任务奖励数量" />
				<property name="totalNum" type="int" comment="可选择任务数量" />
				<property name="prizeColor" type="int[]" comment="任务奖励颜色" />
				<property name="prizeId" type="long[]" comment="任务奖励ID" />
			</object-property>
		</res>
	</prototype>


	<prototype req_name="TASK_QUERY_ENTITIES_REQ" req_type="0x00000FA1" res_name="TASK_QUERY_ENTITIES_RES" res_type="0x70000FA1"
		req_client_send="true" res_client_receive="true" comment="服务器将玩家正在做的任务发送给玩家">
		<req>
		</req>
		<res>
			<object-property name="entities" type="TaskEntity[]" comment="玩家正在做的任务列表，也就是已经接了，但还没有交付的任务">
				<property name="taskId" type="long" comment="任务id" />
				<property name="status" type="int" comment="任务的状态" />
				<property name="taskName" type="String" encoding="UTF-8" comment="任务名字" />
				<property name="completed" type="int[]" comment="目标完成的情况" />
				<property name="taskDemand" type="int[]" comment="任务目标数量" />
				<property name="showType" type="byte" comment="任务类型" />
				<property name="failTime" type="long" comment="限时交付的任务有失败时间，0表示不限时" />
			</object-property>
			<property name="taskLevels" type="int[]" comment="对应各个实体的级别"></property>
		</res>
	</prototype>

	<prototype req_name="TASK_SEND_ENTITY_REQ" req_type="0x00000FA2" req_client_receive="true" comment="服务器通知客户端，某个任务实体发生了变化">
		<req>
			<property name="actionType" type="byte" comment="某个实体发生了变化，0标识已接任务发生了变化，1标识新接了一个任务，2标识交付了一个任务，3标识放弃了一个任务" />
			<object-property name="entity" type="TaskEntity" comment="玩家正在做的任务列表，也就是已经接了，但还没有交付的任务">
				<property name="taskId" type="long" comment="任务id" />
				<property name="taskName" type="String" encoding="UTF-8" comment="任务名字" />
				<property name="taskGrade" type="int" comment="任务等级" />
				<property name="status" type="int" comment="任务状态" />
				<property name="showType" type="byte" comment="任务类型" />
				<property name="taskDemand" type="int[]" comment="目标需要数量" />
				<property name="completed" type="int[]" comment="目标完成的情况" />
				<property name="failTime" type="long" comment="限时交付的任务有失败时间，0表示不限时" />
			</object-property>
		</req>
	</prototype>

	<prototype req_name="TASK_SEND_ACTION_REQ" req_type="0x00000FA3" res_name="TASK_SEND_ACTION_RES" res_type="0x70000FA3" req_client_send="true"
		res_client_receive="true" comment="客户端将操作发送给服务器">
		<req>
			<property name="actionType" type="byte" comment="客户端动作类型，0标识请求任务实体信息，1标识新接了一个任务，2标识交付了一个任务，3标识放弃了一个任务" />
			<property name="taskId" type="long" comment="任务id" />
			<property name="selectedIndex" type="String[]" encoding="UTF-8" comment="交任务的情况下，对于物品的选择" />
		</req>
		<res>
			<property name="taskId" type="long" comment="任务id" />
			<property name="actionType" type="byte" comment="客户端动作类型"></property>
			<property name="result" type="byte" comment="操作结果，0标识操作成功，其他值标识操作失败"></property>
			<property name="reason" type="String" encoding="UTF-8" comment="失败的原因"></property>
		</res>
	</prototype>

	<prototype req_name="OPEN_ACCEPT_TASK_WINDOW_REQ" req_type="0x00000FA4" req_client_receive="true" comment="服务器要求客户端自动打开接任务窗口">
		<req>
			<object-property name="task" type="Task" comment="玩家正在做的任务列表，也就是已经接了，但还没有交付的任务">
				<property name="id" type="int" encoding="UTF-8" comment="ID" />
				<property name="name" type="String" encoding="UTF-8" comment="名字" />
				<property name="grade" type="int" encoding="UTF-8" comment="等级" />
				<property name="showType" type="byte" encoding="UTF-8" comment="显示类型" />
				<property name="des" type="String" encoding="UTF-8" comment="描述 " />

				<property name="unDeliverTalk" type="String" encoding="UTF-8" comment="未完成对话" />
				<property name="startNpc" type="String" encoding="UTF-8" comment="开始NPC" />
				<property name="startMap" type="String" encoding="UTF-8" comment="开始地图" />
				<property name="startMapResName" type="String" encoding="UTF-8" comment="开始地图资源名" />
				<property name="startTalk" type="String" encoding="UTF-8" comment="开始对话" />
				<property name="startX" type="int" encoding="UTF-8" comment="开始坐标-x" />
				<property name="startY" type="int" encoding="UTF-8" comment="开始坐标-y" />
				<property name="startNPCAvataRace" type="String" encoding="UTF-8" comment="开始NPC形象race" />
				<property name="startNPCAvataSex" type="String" encoding="UTF-8" comment="开始NPC形象sex" />

				<property name="endNpc" type="String" encoding="UTF-8" comment="结束NPC" />
				<property name="endMap" type="String" encoding="UTF-8" comment="结束地图" />
				<property name="endMapResName" type="String" encoding="UTF-8" comment="结束地图资源名" />
				<property name="endTalk" type="String" encoding="UTF-8" comment="结束对话" />

				<property name="notice" type="String" encoding="UTF-8" comment="温馨提示" />
				<property name="endX" type="int" encoding="UTF-8" comment="结束坐标-x" />
				<property name="endY" type="int" encoding="UTF-8" comment="结束坐标-y" />
				<property name="endNPCAvataRace" type="String" encoding="UTF-8" comment="结束NPC形象race" />
				<property name="endNPCAvataSex" type="String" encoding="UTF-8" comment="结束NPC形象sex" />

				<property name="thewCost" type="int" encoding="UTF-8" comment="体力值消耗" />
				<property name="showTarget" type="byte" encoding="UTF-8" comment="是否显示任务目标0显示1不显示" />

				<property name="dailyTaskCycle" type="int" encoding="UTF-8" comment=" 周期限定 天" />
				<property name="dailyTaskMaxNum" type="int" encoding="UTF-8" comment="同周期可完成次数上限" />
				<property name="reGetCodeDown" type="long" encoding="UTF-8" comment="跑环任务 放弃,失败后的CD" />
			</object-property>


			<object-property name="targets" type="TaskTarget[]" comment="任务目标 数组length > 1 则为或关系">
				<property name="targetByteType" type="byte" comment="任务目标类型" />
				<property name="targetName" type="String[]" encoding="UTF-8" comment="任务目标名字"></property>
				<property name="targetNum" type="int" comment="个数" />
				<property name="targetColor" type="int" comment="颜色" />
				<property name="mapName" type="String[]" encoding="UTF-8" comment="目标地图"></property>
				<property name="resMapName" type="String[]" encoding="UTF-8" comment="目标地图资源名"></property>
				<property name="x" type="int[]" comment="目标坐标" />
				<property name="y" type="int[]" comment="目标坐标" />
				<property name="showMonsterNames" type="String[]" encoding="UTF-8" comment="如果是物品掉落，哪些怪掉这个物品"></property>
			</object-property>
			<object-property name="prizes" type="TaskPrize[]" comment="任务奖励 数组length > 1 则为可选择奖励">
				<property name="prizeByteType" type="byte" comment="任务奖励类型" />
				<property name="prizeName" type="String[]" encoding="UTF-8" comment="任务奖励名字" />
				<property name="prizeNum" type="long[]" comment="任务奖励数量" />
				<property name="totalNum" type="int" comment="可选择任务数量" />
				<property name="prizeColor" type="int[]" comment="任务奖励颜色" />
				<property name="prizeId" type="long[]" comment="任务奖励ID" />
			</object-property>
			<property name="articleId" type="long" comment="触发任务道具id" />
		</req>
	</prototype>

	<prototype req_name="TAKE_TASK_BY_ARTICLE_REQ" req_type="0x000000A8" req_client_send="true" comment="客户端发送通过道具接任务的申请">
		<req>
			<property name="articleId" type="long" comment="触发任务道具id" />
		</req>
	</prototype>

	<prototype req_name="FUNCTION_NPC_MODIFY_REQ" req_type="0x00000FA5" req_client_receive="true" comment="当前地图NPC可接任务变化">
		<req>
			<object-property name="modifyNPCs" type="FunctionNpcModify[]">
				<property name="NPCId" type="long" comment="NPCid" />
				<property name="modifyType" type="byte" comment="变化类型:0-增加任务 1-减少任务" />
				<property name="modifyNames" type="String[]" encoding="UTF-8" comment="变化的任务名字" />
				<property name="modifyIds" type="long[]" encoding="UTF-8" comment="变化的任务ID" />
				<property name="modifyTypes" type="byte[]" encoding="UTF-8" comment="变化的任务类型" />
				<property name="modifyGrades" type="int[]" encoding="UTF-8" comment="变化的任务等级" />
			</object-property>
		</req>
	</prototype>


	<prototype req_name="CAN_ACCEPT_TASK_MODIFY_REQ" req_type="0x00000FA6" req_client_receive="true" comment="可接任务列表变化">
		<req>
			<property name="modifyType" type="byte" comment="修改类型:0增加 1减少" />
			<object-property name="aavilableTaskInfos" type="AavilableTaskInfo[]">
				<property name="taskId" type="long" comment="任务ID" />
				<property name="showType" type="byte" comment="任务类型" />
				<property name="taskName" type="String" encoding="UTF-8" comment="任务名字" />
				<property name="mapName" type="String" encoding="UTF-8" comment="地图名字" />
				<property name="npcName" type="String" encoding="UTF-8" comment="NPC名字" />
				<property name="grade" type="int" encoding="UTF-8" comment="任务级别" />
				<property name="x" type="int" encoding="UTF-8" comment="X坐标" />
				<property name="y" type="int" encoding="UTF-8" comment="Y坐标" />
			</object-property>
		</req>
	</prototype>
	<prototype req_name="QUERY_CAN_ACCEPT_TASK_REQ" res_name="QUERY_CAN_ACCEPT_TASK_RES" req_type="0x00000FA7" res_type="0x70000FA7"
		req_client_send="true" res_client_receive="true" comment="查询可接任务列表">
		<req></req>
		<res>
			<object-property name="aavilableTaskInfos" type="AavilableTaskInfo[]">
				<property name="taskId" type="long" comment="任务ID" />
				<property name="showType" type="byte" comment="任务类型" />
				<property name="taskName" type="String" encoding="UTF-8" comment="任务名字" />
				<property name="mapName" type="String" encoding="UTF-8" comment="地图名字" />
				<property name="npcName" type="String" encoding="UTF-8" comment="NPC名字" />
				<property name="grade" type="int" encoding="UTF-8" comment="任务级别" />
				<property name="x" type="int" encoding="UTF-8" comment="X坐标" />
				<property name="y" type="int" encoding="UTF-8" comment="Y坐标" />
			</object-property>
		</res>
	</prototype>
	<prototype req_name="QUERY_AUTO_HOOK_USE_PROP_REQ" res_name="QUERY_AUTO_HOOK_USE_PROP_RES" req_type="0x00000FA8" res_type="0x70000FA8"
		req_client_send="true" res_client_receive="true" comment="查询自动挂机可使用道具列表">
		<req></req>
		<res>
			<property name="shopName" type="String" encoding="UTF-8" comment="商店名称" />
			<property name="shopVersion" type="int" comment="商店版本" />
			<property name="propPlayerHpGoodsId" type="int[]" comment="血药商品ID" />
			<property name="propPlayerHpName" type="String[]" encoding="UTF-8" comment="血药名称" />
			<property name="propPlayerMpGoodsId" type="int[]" comment="蓝药商品ID" />
			<property name="propPlayerMpName" type="String[]" encoding="UTF-8" comment="蓝药名称" />
			<property name="propPetHpGoodsId" type="int[]" comment="宠物血药商品ID" />
			<property name="propPetHpName" type="String[]" encoding="UTF-8" comment="宠物血药名称" />
			<property name="propPetHappyGoodsId" type="int[]" comment="宠物快乐度药品商品ID" />
			<property name="propPetHappy" type="String[]" encoding="UTF-8" comment="宠物快乐度药品名称" />
			<property name="propPetLifeGoodsId" type="int[]" comment="宠物寿命药品商品ID" />
			<property name="propPetLife" type="String[]" encoding="UTF-8" comment="宠物寿命药品名称" />
		</res>
	</prototype>

	<prototype req_name="COLLECTION_NPC_MODIFY_REQ" res_name="COLLECTION_NPC_MODIFY_RES" req_type="0x00000FA9" res_type="0x70000FA9"
		req_client_receive="true" comment="通知客户端可采集列表的变化">
		<req>
			<property name="modifyType" type="byte" comment="改变类型:0-增加;1-减少;2-设置" />
			<property name="modifyArray" type="long[]" comment="改变的列表" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="WANNA_COLLECTION_REQ" res_name="WANNA_COLLECTION_RES" req_type="0x00000FAA" res_type="0x70000FAA" req_client_send="true"
		res_client_receive="true" comment="想要采集物品">
		<req>
			<property name="npcId" type="long" comment="要采集的NPCID" />
		</req>
		<res>
			<property name="canCollection" type="boolean" comment="是否可采集" />
			<property name="collectionBarTime" type="long" comment="采集条时间" />
			<property name="npcId" type="long" comment="要采集的NPCID" />
			<property name="barDes" type="String" encoding="UTF-8" comment="读条显示的文字" />
		</res>
	</prototype>

	<prototype req_name="NOTICE_CLIENT_READ_TIMEBAR_REQ" req_type="0x00000FAB" req_client_receive="true" comment="通知客户端读一个进度条">
		<req>
			<property name="barTime" type="long" encoding="UTF-8" comment="读条时间" />
			<property name="barDes" type="String" encoding="UTF-8" comment="读条显示的文字" />
		</req>
	</prototype>

	<prototype req_name="NOTICE_CLIENT_READ_TIMEBAR_INTERRUPT_REQ" req_type="0x00000FAE" req_client_receive="true" comment="通知客户端打断进度条">
		<req>
		</req>
	</prototype>

	<prototype req_name="NOTICE_CLIENT_COUNTDOWN_REQ" req_type="0x00000FFB" req_client_receive="true" comment="通知客户端显示一个倒计时">
		<req>
			<property name="countdownType" type="byte" comment="倒计时类型" />
			<property name="leftTime" type="int" comment="剩余时间，单位秒" />
			<property name="description" type="String" encoding="UTF-8" comment="时间旁边显示的简单文字" />
		</req>
	</prototype>

	<prototype req_name="NOTICE_CLIENT_FOLLOWNPC_FARAWAY_REQ" req_type="0x00000FAC" req_client_receive="true" comment="通知客户端护送NPC太远了">
		<req>
			<property name="npcGame" type="String" encoding="UTF-8" comment="NPC所在地图名" />
			<property name="npcX" type="int" encoding="UTF-8" comment="NPC所在X" />
			<property name="npcY" type="int" encoding="UTF-8" comment="NPC所在Y" />
		</req>
	</prototype>
	<prototype req_name="NOTICE_CLIENT_FOLLOWNPC_NEAR_REQ" req_type="0x00000FAD" req_client_receive="true" comment="通知客户端靠近了护送NPC">
		<req>
		</req>
	</prototype>
	<!-- BOSS -->
	<prototype req_name="PASSPORT_RANDOM_REQ" req_type="0x0000E000" res_name="PASSPORT_RANDOM_RES" res_type="0x7000E000" req_client_send="true"
		res_client_receive="true" comment="快速注册时产生一个随机通行证,客户端不要使用这个">
		<req>
		</req>
		<res>
			<property name="id" type="long" comment="通行证id,-1为失败"></property>
			<property name="username" type="String" encoding="UTF-8" comment="通行证名称"></property>
			<property name="passwd" type="String" encoding="UTF-8" comment="密码"></property>
		</res>
	</prototype>


	<prototype req_name="PASSPORT_UPDATE_REQ" req_type="0x0000E003" res_name="PASSPORT_UPDATE_RES" res_type="0x7000E003" req_client_send="true"
		res_client_receive="true" comment="更新一个通行证">
		<req>
			<property name="id" type="long" comment="id" />
			<property name="username" type="String" encoding="UTF-8" comment="账户名" />
			<property name="passwd" type="String" encoding="UTF-8" comment="密码" />
			<property name="oldpasswd" type="String" encoding="UTF-8" comment="旧密码，如果是修改密码，那么需要使用" />
			<property name="email" type="String" encoding="UTF-8" comment="邮箱" />
			<property name="idcard" type="String" encoding="UTF-8" comment="身份证" />
			<property name="realname" type="String" encoding="UTF-8" comment="真名" />
			<property name="authquestions" type="String" encoding="UTF-8" comment="验证问题,\n分隔" />
			<property name="authanswers" type="String" encoding="UTF-8" comment="验证答案,\n分隔，位置与问题对应" />
			<property name="sex" type="int" comment="性别,男-0,女-1" />
			<property name="birthday" type="String" encoding="UTF-8" comment="生日yyyy-MM-dd" />
			<property name="mobile" type="String" encoding="UTF-8" comment="手机" />
			<property name="qq" type="String" encoding="UTF-8" comment="qq号码" />
			<property name="province" type="long" comment="省份id" />
			<property name="city" type="long" comment="城市id" />
			<property name="phone" type="String" encoding="UTF-8" comment="固话" />
			<property name="address" type="String" encoding="UTF-8" comment="联系方式" />
			<property name="postcode" type="String" encoding="UTF-8" comment="邮编" />
		</req>
		<res>
			<property name="result" type="String" encoding="UTF-8" comment="结果，如空则成功，如错误为错误信息"></property>
		</res>
	</prototype>

	<!-- deal -->
	<!-- 交易过程 -->
	<!-- 1.客户端甲方首先发起CREATE_DEAL_REQ，服务器收到后发送CREATE_DEAL_REQ给乙方，乙方同意则发CREATE_DEAL_REQ给服务器，不同意则发DEAL_CANCEL_REQ
-->
	<!-- 2.双方同意后，服务端发送DEAL_CREADTED_REQ给双方，双方可以进行交易栏设定 -->
	<!-- 3.双方的交易栏设定通过DEAL_ADD_ARTICLE_REQ、DEAL_DELETE_ARTICLE_REQ、DEAL_MOD_COINS_REQ进行，服务端收到任一方的修改，都会通知双方交易栏的改变DEAL_UPDATE_REQ
-->
	<!-- 4.双方提交交易(DEAL_AGREE_REQ)，当双方都提交时，交易达成，服务器进行物品和金钱的置换，并且通知玩家(DEAL_MAKED_REQ)
-->

	<prototype req_name="CREATE_DEAL_REQ" req_type="0x0000A001" req_client_send="true" req_client_receive="true"
		comment="创建一个deal, 服务器和客户端共享此协议，客户端用户发起交易时向服务器请求，服务器创建一个交易，并且向另一方玩家发起这个请求">
		<req>
			<property name="withPlayerId" type="long" comment="交易的玩家" />
		</req>

	</prototype>
	<prototype req_name="DEAL_CREATED_REQ" req_type="0x0000A002" req_client_receive="true" comment="通知玩家双方，交易被创建">
		<req>
			<property name="withPlayerId" type="long" comment="交易的玩家" />
			<property name="deal_tax" type="int" comment="交易税率,要除100" />
		</req>
	</prototype>
	<prototype req_name="DEAL_ADD_ARTICLE_REQ" req_type="0x0000A003" res_name="DEAL_ADD_ARTICLE_RES" res_type="0x7000A003" req_client_send="true"
		res_client_receive="true" comment="更改条件，增加物品到交易栏">
		<req>
			<property name="packageType" type="byte" comment="交易背包的类型" />
			<property name="index" type="int" comment="交易背包的格子下标" />
			<property name="entityId" type="long" comment="交易物品" />
			<property name="count" type="int" comment="交易物品的数量" />
		</req>
		<res>
			<property name="result" type="String" encoding="UTF-8" comment="结果，空为成功，不为空则值为出错信息" />
		</res>
	</prototype>

	<prototype req_name="DEAL_DELETE_ARTICLE_REQ" req_type="0x0000A004" req_client_send="true" comment="更改条件，从交易栏删减物品">
		<req>
			<property name="index" type="int" comment="删减的交易栏下标" />
		</req>
	</prototype>

	<prototype req_name="DEAL_MOD_COINS_REQ" req_type="0x0000A005" req_client_send="true" comment="更改条件，修改交易金钱">
		<req>
			<property name="coins" type="int" comment="金钱" />
		</req>

	</prototype>
	<prototype req_name="DEAL_UPDATE_REQ" req_type="0x0000A006" req_client_receive="true" comment="更改条件，通知玩家交易栏状态">
		<req>
			<property name="selfEntityIds" type="long[]" comment="自己交易栏的物品，数组长度为交易栏格子数量" />
			<property name="selfCounts" type="int[]" comment="自己交易栏的物品对应数量" />
			<property name="selfCoins" type="int" comment="自己金钱" />
			<property name="selfKnapType" type="byte[]" comment="自己交易栏的物品对应的背包栏类型" />
			<property name="selfKnapCellIndexes" type="int[]" comment="自己交易栏的物品对应的背包栏下标，客户端据此锁定/解锁背包栏的格子" />
			<property name="selfAgree" type="boolean" comment="自己是否已锁定" />
			<property name="dstEntityIds" type="long[]" comment="对方交易栏的物品，数组长度为交易栏格子数量" />
			<property name="dstCounts" type="int[]" comment="对方交易栏的物品对应数量" />
			<property name="dstCoins" type="int" comment="对方金钱" />
			<property name="dstAgree" type="boolean" comment="对方是否已锁定" />
		</req>
	</prototype>

	<prototype req_name="DEAL_AGREE_REQ" req_type="0x0000A007" req_client_send="true"
		comment="同意交易，服务器和客户端共享此协议，客户端玩家向服务端发同意请求，服务器端收到后，如果另一方还没有同意，那么向另一方发这个同意请求，如果也已经同意，则完成这次交易。">
		<req>
		</req>
	</prototype>

	<prototype req_name="DEAL_DISAGREE_REQ" req_type="0x0000A008" req_client_send="true" comment="取消同意交易状态，服务器和客户端共享此协议，玩家取消同意状态">
		<req>
		</req>
	</prototype>

	<prototype req_name="DEAL_CANCEL_REQ" req_type="0x0000A009" req_client_send="true" req_client_receive="true"
		comment="取消交易状态，服务器和客户端共享此协议，用户不接受交易请求或中途退出交易">
		<req>
			<property name="reason" type="String" encoding="UTF-8" comment="取消的原因" />
		</req>
	</prototype>

	<prototype req_name="DEAL_MAKED_REQ" req_type="0x0000A00A" req_client_receive="true" comment="交易达成，双发同意交易，物品放置彼此背包后，通知双方交易已达成">
		<req>
		</req>
	</prototype>

	<prototype req_name="DEAL_LOCK_REQ" req_type="0x0000A00B" req_client_send="true" res_name="DEAL_LOCK_RES" res_type="0x7000A00B"
		res_client_receive="true" comment="锁定交易，当锁定后如果再放入东西或点击取消锁定就解锁">
		<req>
			<property name="isLock" type="boolean" comment="锁定还是解锁定" />
		</req>
		<res>
			<property name="isLock" type="boolean" comment="锁定还是解锁定" />
			<property name="playerId" type="long" comment="锁定玩家ID" />
		</res>
	</prototype>

	<!-- cangku -->
	<prototype req_name="WAREHOUSE_GET_REQ" req_type="0x0000B001" res_name="WAREHOUSE_GET_RES" res_type="0x7000B001" req_client_send="true"
		res_client_receive="true" comment="获取一个仓库">
		<req>
		</req>
		<res>
			<property name="open" type="boolean" comment="是否打开仓库，true开启仓库，false只更新仓库" />
			<property name="entityIds" type="long[]" comment="格子物品数组，值为-1的元素表示格子为空" />
			<property name="counts" type="int[]" comment="格子物品数量数组，值为0的元素表示格子为空" />
		</res>
	</prototype>

	<prototype req_name="WAREHOUSE_GET_CARRY_REQ" req_type="0x0000B011" res_name="WAREHOUSE_GET_CARRY_RES" res_type="0x7000B011"
		req_client_send="true" res_client_receive="true" comment="随身获取一个仓库">
		<req>
		</req>
		<res>
			<property name="open" type="boolean" comment="是否打开仓库，true开启仓库，false只更新仓库" />
			<property name="entityIds" type="long[]" comment="格子物品数组，值为-1的元素表示格子为空" />
			<property name="counts" type="int[]" comment="格子物品数量数组，值为0的元素表示格子为空" />
		</res>
	</prototype>


	<prototype req_name="WAREHOUSE_MOVE_ARTICLE_REQ" req_type="0x0000B002" req_client_send="true" comment="物品移动，从普通背包到仓库，从防爆背包到仓库，从仓库到普通背包，从仓库到防爆背包，从仓库到仓库">
		<req> 
			<property name="password" type="String" encoding="UTF-8" comment="仓库密码" />
			<property name="moveType" type="int" comment="物品移动方式，0从普通背包到仓库，1从防爆背包到仓库，2从仓库到普通背包，3从仓库到防爆背包，4从仓库到仓库, 5普通背包到2号仓库    6防爆包到2号仓库  7从2号仓库到普通背包  8从2号仓库到防爆包  9从2号仓库到2号仓库" />
			<property name="knapsackIndex" type="int" comment="当移动方式不是仓库到仓库时，移动背包的索引，背包可以是普通背包可以是防爆背包" />
			<property name="cellIndexFrom" type="int" comment="对应的背包或仓库的下标" />
			<property name="cellIndexTo" type="int" comment="对应的背包或仓库的下标" />
			<property name="moveCount" type="int" comment="移动个数" />
		</req>
	</prototype>

	<prototype req_name="WAREHOUSE_ARRANGE_REQ" req_type="0x0000B005" res_name="WAREHOUSE_ARRANGE_RES" res_type="0x7000B005" req_client_send="true"
		comment="自动整理一个仓库">
		<req>
		</req>
	</prototype>

	<prototype req_name="WAREHOUSE_SET_PASSWORD_REQ" res_name="WAREHOUSE_SET_PASSWORD_RES" req_type="0x0000B006" res_type="0x7000B006"
		req_client_send="true" res_client_receive="true" comment="req为客户端向服务器发送设置密码请求，res为服务器告诉客户端打开设置密码窗口">
		<req>
			<property name="password" type="String" encoding="UTF-8" comment="仓库密码" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="WAREHOUSE_MODIFY_PASSWORD_REQ" res_name="WAREHOUSE_MODIFY_PASSWORD_RES" req_type="0x0000B007" res_type="0x7000B007"
		req_client_send="true" res_client_receive="true" comment="req为客户端向服务器发送修改密码请求，res为服务器告诉客户端打开修改密码窗口">
		<req>
			<property name="password" type="String" encoding="UTF-8" comment="仓库密码" />
			<property name="modifyPassword" type="String" encoding="UTF-8" comment="修改仓库密码" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="WAREHOUSE_INPUT_PASSWORD_REQ" res_name="WAREHOUSE_INPUT_PASSWORD_RES" req_type="0x0000B008" res_type="0x7000B008"
		req_client_send="true" res_client_receive="true" comment="req为客户端向服务器发送输入密码请求，res为服务器告诉客户端打开输入密码窗口">
		<req>
			<property name="password" type="String" encoding="UTF-8" comment="仓库密码" />
		</req>
		<res>
			<property name="description" type="String" encoding="UTF-8" comment="返回描述，描述可以为空，为空时不显示" />
		</res>
	</prototype>

	<!-- mail -->
	<prototype req_name="MAIL_LIST_REQ" req_type="0x0000C001" res_name="MAIL_LIST_RES" res_type="0x7000C001" req_client_send="true"
		res_client_receive="true" comment="获取邮件列表">
		<req>
			<property name="pageIndex" type="int" comment="第几页" />
			<property name="pageNum" type="int" comment="每页显示的数量" />
		</req>
		<res>
			<property name="ids" type="long[]" comment="邮件的id" />
			<property name="mtype" type="byte[]" comment="邮件的类型（0:系统,1:玩家）" />
			<property name="status" type="byte[]" comment="邮件的状态（0:未打开,1:打开, 2:已删除）" />
			<property name="titles" type="String[]" encoding="UTF-8" comment="邮件的标题" />
			<property name="senderNames" type="String[]" encoding="UTF-8" comment="邮件的标题" />
			<property name="expiredate" type="long[]" comment="过期时间" />
			<property name="pages" type="int" comment="总页数" />
			<property name="nowpage" type="int" comment="当前页" />
			<property name="price" type="long[]" comment="付费" />
		</res>
	</prototype>

	<prototype req_name="MAIL_LIST_CARRY_REQ" req_type="0x0000C011" res_name="MAIL_LIST_CARRY_RES" res_type="0x7000C011" req_client_send="true"
		res_client_receive="true" comment="随身获取邮件列表">
		<req>
			<property name="pageIndex" type="int" comment="第几页" />
			<property name="pageNum" type="int" comment="每页显示的数量" />
		</req>
		<res>
			<property name="ids" type="long[]" comment="邮件的id" />
			<property name="mtype" type="byte[]" comment="邮件的类型（0:系统,1:玩家）" />
			<property name="status" type="byte[]" comment="邮件的状态（0:未打开,1:打开, 2:已删除）" />
			<property name="titles" type="String[]" encoding="UTF-8" comment="邮件的标题" />
			<property name="senderNames" type="String[]" encoding="UTF-8" comment="邮件的标题" />
			<property name="expiredate" type="long[]" comment="过期时间" />
			<property name="pages" type="int" comment="总页数" />
			<property name="nowpage" type="int" comment="当前页" />
			<property name="price" type="long[]" comment="付费" />
		</res>
	</prototype>

	<prototype req_name="MAIL_LIST_BY_STATUS_REQ" req_type="0x0000C006" res_name="MAIL_LIST_BY_STATUS_RES" res_type="0x7000C006"
		req_client_send="true" res_client_receive="true" comment="获取有状态的邮件列表">
		<req>
			<property name="mailType" type="byte" comment="邮件类型,0表示全部,1表示未读,2表示已读" />
			<property name="pageIndex" type="int" comment="第几页" />
			<property name="pageNum" type="int" comment="每页显示的数量" />
		</req>
		<res>
			<property name="ids" type="long[]" comment="邮件的id" />
			<property name="mtype" type="byte[]" comment="邮件的类型（0:系统,1:玩家）" />
			<property name="status" type="byte[]" comment="邮件的状态（0:未打开,1:打开, 2:已删除）" />
			<property name="titles" type="String[]" encoding="UTF-8" comment="邮件的标题" />
			<property name="senderNames" type="String[]" encoding="UTF-8" comment="邮件的标题" />
			<property name="expiredate" type="long[]" comment="过期时间" />
			<property name="pages" type="int" comment="总页数" />
			<property name="nowpage" type="int" comment="当前页" />
			<property name="price" type="long[]" comment="付费" />
		</res>
	</prototype>
	
	<prototype req_name="MAIL_LIST_NEW_REQ" req_type="0x0000C021" res_name="MAIL_LIST_NEW_RES" res_type="0x7000C021" req_client_send="true"
		res_client_receive="true" comment="获取邮件列表">
		<req>
			<property name="mailBaseType" type="int" comment="邮件类型，0是系统邮件，1是玩家邮件" />
			<property name="pageIndex" type="int" comment="第几页" />
			<property name="pageNum" type="int" comment="每页显示的数量" />
		</req>
		<res>
			<property name="ids" type="long[]" comment="邮件的id" />
			<property name="mtype" type="byte[]" comment="邮件的类型（0:系统,1:玩家）" />
			<property name="status" type="byte[]" comment="邮件的状态（0:未打开,1:打开, 2:已删除）" />
			<property name="titles" type="String[]" encoding="UTF-8" comment="邮件的标题" />
			<property name="senderNames" type="String[]" encoding="UTF-8" comment="邮件的标题" />
			<property name="expiredate" type="long[]" comment="过期时间" />
			<property name="pages" type="int" comment="总页数" />
			<property name="nowpage" type="int" comment="当前页" />
			<property name="price" type="long[]" comment="付费" />
		</res>
	</prototype>

	<prototype req_name="MAIL_LIST_CARRY_NEW_REQ" req_type="0x0000C022" res_name="MAIL_LIST_CARRY_NEW_RES" res_type="0x7000C022" req_client_send="true"
		res_client_receive="true" comment="随身获取邮件列表">
		<req>
			<property name="mailBaseType" type="int" comment="邮件类型，0是系统邮件，1是玩家邮件" />
			<property name="pageIndex" type="int" comment="第几页" />
			<property name="pageNum" type="int" comment="每页显示的数量" />
		</req>
		<res>
			<property name="ids" type="long[]" comment="邮件的id" />
			<property name="mtype" type="byte[]" comment="邮件的类型（0:系统,1:玩家）" />
			<property name="status" type="byte[]" comment="邮件的状态（0:未打开,1:打开, 2:已删除）" />
			<property name="titles" type="String[]" encoding="UTF-8" comment="邮件的标题" />
			<property name="senderNames" type="String[]" encoding="UTF-8" comment="邮件的标题" />
			<property name="expiredate" type="long[]" comment="过期时间" />
			<property name="pages" type="int" comment="总页数" />
			<property name="nowpage" type="int" comment="当前页" />
			<property name="price" type="long[]" comment="付费" />
		</res>
	</prototype>

	<prototype req_name="MAIL_LIST_BY_STATUS_NEW_REQ" req_type="0x0000C023" res_name="MAIL_LIST_BY_STATUS_NEW_RES" res_type="0x7000C023"
		req_client_send="true" res_client_receive="true" comment="获取有状态的邮件列表">
		<req>
			<property name="mailBaseType" type="int" comment="邮件类型，0是系统邮件，1是玩家邮件" />
			<property name="mailType" type="byte" comment="邮件类型,0表示全部,1表示未读,2表示已读" />
			<property name="pageIndex" type="int" comment="第几页" />
			<property name="pageNum" type="int" comment="每页显示的数量" />
		</req>
		<res>
			<property name="ids" type="long[]" comment="邮件的id" />
			<property name="mtype" type="byte[]" comment="邮件的类型（0:系统,1:玩家）" />
			<property name="status" type="byte[]" comment="邮件的状态（0:未打开,1:打开, 2:已删除）" />
			<property name="titles" type="String[]" encoding="UTF-8" comment="邮件的标题" />
			<property name="senderNames" type="String[]" encoding="UTF-8" comment="邮件的标题" />
			<property name="expiredate" type="long[]" comment="过期时间" />
			<property name="pages" type="int" comment="总页数" />
			<property name="nowpage" type="int" comment="当前页" />
			<property name="price" type="long[]" comment="付费" />
		</res>
	</prototype>

	<prototype req_name="MAIL_GET_REQ" req_type="0x0000C002" res_name="MAIL_GET_RES" res_type="0x7000C002" req_client_send="true"
		res_client_receive="true" comment="获取邮件">
		<req>
			<property name="id" type="long" comment="邮件的id" />
		</req>
		<res>
			<property name="mtype" type="byte" comment="邮件的类型（0:系统,1:玩家）" />
			<property name="title" type="String" encoding="UTF-8" comment="邮件的标题" />
			<property name="mcontent" type="String" encoding="UTF-8" comment="邮件的内容" />
			<property name="senderId" type="long" comment="发送人id" />
			<property name="senderName" type="String" encoding="UTF-8" comment="发送人name" />
			<property name="entityIds" type="long[]" comment="邮件格子中的物品" />
			<property name="counts" type="int[]" comment="对应的数量" />
			<property name="coins" type="long" comment="邮件中的金钱" />
			<property name="senddate" type="long" comment="邮件发送的时间(ms)" />
			<property name="expiredate" type="long" comment="有效日期(ms)" />
			<property name="price" type="long" comment="价格(ms)" />
		</res>
	</prototype>

	<prototype req_name="MAIL_GETOUT_ARTICLE_REQ" req_type="0x0000C003" res_name="MAIL_GETOUT_ARTICLE_RES" res_type="0x7000C003"
		req_client_send="true" res_client_receive="true" comment="获取邮件的附件物品">
		<req>
			<property name="id" type="long" comment="邮件的id" />
			<property name="deleteFlag" type="boolean" comment="是否删除邮件" />
		</req>
		<res>
			<property name="result" type="String" encoding="UTF-8" comment="返回的结果，空为成功，不空则为出错的描述" />
		</res>
	</prototype>

	<prototype req_name="MAIL_DELETE_REQ" req_type="0x0000C004" res_name="MAIL_DELETE_RES" res_type="0x7000C004" req_client_send="true"
		res_client_receive="true" comment="删除邮件">
		<req>
			<property name="id" type="long" comment="邮件的id" />
		</req>
		<res>
			<property name="result" type="String" encoding="UTF-8" comment="返回的结果，空为成功，不空则为出错的描述" />
		</res>
	</prototype>

	<prototype req_name="MAIL_DELETE_ALL_READED_REQ" req_type="0x0000C012" res_name="MAIL_DELETE_ALL_READED_RES" res_type="0x7000C012"
		req_client_send="true" res_client_receive="true" comment="删除所有已读没有附件的邮件">
		<req>
		</req>
		<res>
			<property name="result" type="String" encoding="UTF-8" comment="返回的结果，空为成功，不空则为出错的描述" />
		</res>
	</prototype>


	<prototype req_name="MAIL_CREATE_REQ" req_type="0x0000C005" req_client_send="true" comment="创建邮件">
		<req>
			<property name="receiverName" type="String" encoding="UTF-8" comment="收件人" />
			<property name="title" type="String" encoding="UTF-8" comment="标题" />
			<property name="mcontent" type="String" encoding="UTF-8" comment="内容" />
			<property name="indexes" type="int[]" comment="格子下标" />
			<property name="count" type="int[]" comment="物品个数" />
			<property name="fangbao" type="boolean[]" comment="是否在防爆背包" />
			<property name="coins" type="long" comment="邮件中的金钱" />
			<property name="price" type="long" comment="邮件的价格" />
		</req>
	</prototype>
	
	<prototype res_name="MAIL_MSG_RES" res_type="0x7000C015" res_client_receive="true" comment="邮件相关信息">
		<res>
			<property name="mailMoney" type="int" comment="邮件金钱" />
			<property name="freeMailNum" type="int" comment="免费邮件个数" />
		</res>
	</prototype>

	<!-- 拍卖 -->
	<prototype req_name="AUCTION_LIST_REQ" req_type="0x0000D001" res_name="AUCTION_LIST_RES" res_type="0x7000D001" req_client_send="true"
		res_client_receive="true" comment="查询拍卖">
		<req>
			<property name="reqType" type="byte" cpmment="查询类型:0他人拍卖,1自己拍卖,2自己竞拍" />
			<property name="mainType" type="String" encoding="UTF-8" comment="第一分类，为空字符代表不需要做条件" />
			<property name="subType" type="String" encoding="UTF-8" comment="第二分类，为空字符代表不需要做条件" />
			<property name="level" type="int" comment="等级，为-1代表不需要做条件" />
			<property name="maxlevel" type="int" comment="最高等级，为-1代表不需要做条件" />
			<property name="color" type="int" comment="品质, 为-1代表不需要做条件" />
			<property name="name" type="String" encoding="UTF-8" comment="名称，为空字符代表不需要做条件" />
			<property name="startNum" type="int" comment="查询起始个数" />
			<property name="reqLen" type="int" comment="查询个数" />
		</req>
		<res>
			<property name="startNum" type="int" comment="起始个数" />
			<property name="allNum" type="int" comment="总个数" />
			<object-property name="auction" type="AuctionInfo4Client[]" comment="客户端显示拍卖信息">
				<property name="id" type="long" comment="ID" />
				<property name="entityId" type="long" comment="EntityId" />
				<property name="articleName" type="String" encoding="UTF-8" comment="物品名称" />
				<property name="icon" type="String" encoding="UTF-8" comment="图标" />
				<property name="count" type="int" comment="数量" />
				<property name="sellName" type="String" encoding="UTF-8" comment="出售者名称" />
				<property name="buyPlayerName" type="String" encoding="UTF-8" comment="竞拍者名称" />
				<property name="leaveTime" type="String" encoding="UTF-8" comment="剩余时间" />
				<property name="nowPrice" type="long" comment="当前竞拍价" />
				<property name="buyPrice" type="long" comment="一口价" />
				<property name="level" type="int" comment="等级" />
				<property name="color" type="int" comment="品质" />
			</object-property>
			<property name="buyTax" type="int" comment="竞拍税率" />
		</res>
	</prototype>

	<prototype req_name="AUCTION_CREATE_REQ" req_type="0x0000D002" req_client_send="true" comment="创建一个拍卖">
		<req>
			<property name="knapCellIndex" type="int" comment="对应的背包栏格子下标" />
			<property name="entityId" type="long" comment="物品id" />
			<property name="count" type="int" comment="物品数量" />
			<property name="startPrice" type="long" comment="起始价格" />
			<property name="buyPrice" type="long" comment="一口价" />
		</req>
	</prototype>

	<prototype req_name="AUCTION_BUY_REQ" req_type="0x0000D004" req_client_send="true" comment="购买拍卖品">
		<req>
			<property name="id" type="long" comment="拍卖品的id" />
			<property name="price" type="long" comment="出价" />
		</req>
	</prototype>

	<prototype req_name="AUCTION_TYPE_GET_REQ" req_type="0x0000D005" res_name="AUCTION_TYPE_GET_RES" res_type="0x7000D005" req_client_send="true"
		res_client_receive="true" comment="拍卖类型">
		<req>
		</req>
		<res>
			<object-property name="auctionOption" type="RequestOption[]" comment="分类信息">
				<property name="first" type="String" encoding="UTF-8" comment="一级名称" />
				<property name="second" type="String[]" encoding="UTF-8" comment="二级名称" />
			</object-property>
			<property name="tax" type="int" comment="拍卖交易税" />
		</res>
	</prototype>

	<prototype req_name="AUCTION_CANCEL_REQ" req_type="0x0000D006" req_client_send="true" comment="取消拍卖">
		<req>
			<property name="id" type="long" comment="拍卖品的id" />
		</req>
	</prototype>





	<!-- 商店 -->

	<prototype req_name="SHOPS_NAME_GET_REQ" req_type="0x0000EA11" res_name="SHOPS_NAME_GET_RES" res_type="0x7000EA11" req_client_send="true"
		res_client_receive="true" comment="得到商店">
		<req>
			<property name="marketType" type="byte" comment="商城的类型，1为元宝商城" />
		</req>
		<res>
			<property name="marketType" type="byte" comment="商城的类型，1为元宝商城" />
			<property name="displayShopNames" type="String[]" encoding="UTF-8" comment="商城左边标签显示的商店的名字" />
			<property name="displayShopIcons" type="String[]" encoding="UTF-8" comment="商城左边标签显示的商店的图标" />
			<property name="hiddenShopNames" type="String[]" encoding="UTF-8" comment="商城右边隐藏的商店的名字" />
		</res>
	</prototype>

	<prototype req_name="SHOP_GET_REQ" req_type="0x0000EA01" res_name="SHOP_GET_RES" res_type="0x7000EA01" req_client_send="true"
		res_client_receive="true" comment="得到商店">
		<req>
			<property name="shopName" type="String" encoding="UTF-8" comment="商店的名字" />
		</req>
		<res>
			<property name="marketType" type="byte" comment="商城的类型，1为元宝商城" />
			<property name="shopName" type="String" encoding="UTF-8" comment="商店名字" />
			<property name="version" type="int" comment="商店的版本" />
			<property name="shopType" type="byte" comment="商店类型，策划需要严格按照类型统一原则定义，一个商店卖的东西只能是一种货币类型购买，客户端根据商店类型来显示玩家拥有数" />
			<property name="coins" type="long[]" comment="" />
			<object-property name="goods" type="Goods[]" comment="商店中的商品">
				<property name="articleId" type="long" comment="物品的id"></property>
				<property name="id" type="int" comment="商品id" />
				<property name="articleName" type="String" encoding="UTF-8" comment="商品名字" />
				<property name="level" type="int" comment="如果是装备道具需要显示级别，一般物品设置为-1" />
				<property name="color" type="int" comment="商品颜色" />
				<property name="bundleNum" type="int" comment="商品每捆多少个物品" />
				<property name="payType" type="int" comment="支付方式" />
				<property name="oldPrice" type="int" comment="原价" />
				<property name="price" type="int" comment="现价" />
				<property name="littleSellIcon" type="String" encoding="UTF-8" comment="小提示图标" />
				<property name="exchangeArticleNames" type="String[]" encoding="UTF-8" comment="用于交换的物品" />
				<property name="exchangeArticleNums" type="int[]" comment="用于交换的物品的数量" />
				<property name="reputeLimit" type="boolean" comment="用于交换的物品的数量" />
				<property name="description" type="String" encoding="UTF-8" comment="商品的描述，可以用于更新商品的购买限制描述"></property>
				<property name="exchangeArticleDescription" type="String" encoding="UTF-8" comment=""></property>
			</object-property>
		</res>
	</prototype>
	
	<prototype res_name="SHOP_OTHER_INFO_RES" res_type="0x7000EA05" res_client_receive="true"
			comment="shop其他信息 跟着SHOP_GET_RES 一起发给客户端">
		<res>
			<property name="marketType" type="byte" comment="商城的类型，1为元宝商城" />
			<property name="shopName" type="String" encoding="UTF-8" comment="商店名字" />
			<property name="shopType" type="byte" comment="商店类型，策划需要严格按照类型统一原则定义，一个商店卖的东西只能是一种货币类型购买，客户端根据商店类型来显示玩家拥有数" />
			<object-property name="goods" type="Goods[]" comment="商店中的商品">
				<property name="id" type="int" comment="商品id" />
				<property name="buyBind" type="boolean" comment="商品是否绑定" />
				<property name="otherInfo" type="String[]" comment="商品其他信息，冗余字段" />
			</object-property>
		</res>
	</prototype>

	<prototype req_name="SHOP_GET_BY_QUERY_CONDITION_REQ" req_type="0x0000EA12" res_name="SHOP_GET_BY_QUERY_CONDITION_RES" res_type="0x7000EA12"
		req_client_send="true" res_client_receive="true" comment="根据条件查询到满足条件的商品组装成一个商店">
		<req>
			<property name="shopName" type="String" encoding="UTF-8" comment="商店的名字" />
			<property name="equipmentType" type="byte" comment="装备类型" />
		</req>
		<res>
			<property name="marketType" type="byte" comment="商城的类型，1为元宝商城" />
			<property name="shopName" type="String" encoding="UTF-8" comment="商店名字" />
			<property name="version" type="int" comment="商店的版本" />
			<property name="shopType" type="byte" comment="商店类型，策划需要严格按照类型统一原则定义，一个商店卖的东西只能是一种货币类型购买，客户端根据商店类型来显示玩家拥有数" />
			<property name="equipmentType" type="byte" comment="装备类型" />
			<property name="coins" type="long[]" comment="" />
			<object-property name="goods" type="Goods[]" comment="商店中的商品">
				<property name="articleId" type="long" comment="物品的id"></property>
				<property name="id" type="int" comment="商品id" />
				<property name="articleName" type="String" encoding="UTF-8" comment="商品名字" />
				<property name="level" type="int" comment="如果是装备道具需要显示级别，一般物品设置为-1" />
				<property name="color" type="int" comment="商品颜色" />
				<property name="bundleNum" type="int" comment="商品每捆多少个物品" />
				<property name="payType" type="int" comment="支付方式" />
				<property name="oldPrice" type="int" comment="原价" />
				<property name="price" type="int" comment="现价" />
				<property name="littleSellIcon" type="String" encoding="UTF-8" comment="小提示图标" />
				<property name="exchangeArticleNames" type="String[]" encoding="UTF-8" comment="用于交换的物品" />
				<property name="exchangeArticleNums" type="int[]" comment="用于交换的物品的数量" />
				<property name="reputeLimit" type="boolean" comment="用于交换的物品的数量" />
				<property name="description" type="String" encoding="UTF-8" comment="商品的描述，可以用于更新商品的购买限制描述"></property>
				<property name="exchangeArticleDescription" type="String" encoding="UTF-8" comment=""></property>
			</object-property>
		</res>
	</prototype>

	<prototype req_name="SHOP_BUY_REQ" req_type="0x0000EA02" res_name="SHOP_BUY_RES" res_type="0x7000EA02" req_client_send="true"
		res_client_receive="true" comment="购买商品">
		<req>
			<property name="shopName" type="String" encoding="UTF-8" comment="商店名称" />
			<property name="version" type="int" comment="商店的版本" />
			<property name="goodsId" type="int" comment="购买的商品的id" />
			<property name="buynum" type="int" comment="购买的数量" />
		</req>
		<res>
			<property name="shopName" type="String" encoding="UTF-8" comment="商店名称" />
			<property name="goodsId" type="int" comment="购买的商品的id" />
			<property name="description" type="String" encoding="UTF-8" comment="商品的描述，可以用于更新商品的购买限制描述"></property>
		</res>
	</prototype>

	<prototype req_name="SHOP_SELL_REQ" req_type="0x0000EA03" req_client_send="true" comment="出售商品">
		<req>
			<property name="shopName" type="String" encoding="UTF-8" comment="商店名称" />
			<property name="fangbaoFlag" type="boolean" comment="是不是防爆包" />
			<property name="knapsackIndex" type="int" comment="出售的物品对应玩家背包的下标" />
		</req>
	</prototype>

	<prototype req_name="SHOP_BUYBACK_REQ" req_type="0x0000EA04" req_client_send="true" comment="回购商品">
		<req>
			<property name="shopName" type="String" encoding="UTF-8" comment="商店名称" />
			<property name="articleEntityId" type="long" comment="需要回购商品的Id" />
			<property name="amount" type="int" comment="需要回购的数量" />
		</req>
	</prototype>


	<!-- 死亡 复活 相关的指令 -->
	<prototype req_name="PLAYER_DEAD_REQ" req_type="0x0000EAF0" req_client_receive="true" comment="服务器通知客户端，玩家死亡，客户端弹出窗口提示用户已死亡">
		<req>
			<property name="playerId" type="long" comment="玩家的ID，此ID就应该是客户端玩家的id" />
			<property name="waitTime" type="int" comment="多少秒后才能允许玩家用复活卡原地复活，此数据的单位为秒" />
		</req>
	</prototype>

	<prototype req_name="PLAYER_REVIVED_REQ" req_type="0x0000EAF1" res_name="PLAYER_REVIVED_RES" res_type="0x7000EAF1" req_client_send="true"
		res_client_receive="true" comment="玩家复活">
		<req>
			<property name="revivedType" type="byte" comment="0标识回城复活，1标识使用复活卡原地复活" />
		</req>
		<res>
			<property name="result" type="byte" comment="0标识复活成功，1标识原地复活失败，没有复活卡，2标识原地复活失败，复活卡CD中" />
			<property name="resultString" type="String" encoding="UTF-8" comment="失败的原因" />
			<property name="hp" type="int" comment="复活成功的情况下，血量" />
			<property name="mp" type="int" comment="复活成功的情况下，法力值" />
		</res>
	</prototype>

	<prototype req_name="PLAYER_REVIVED_INFO_REQ" req_type="0x0000EAF2" res_name="PLAYER_REVIVED_INFO_RES" res_type="0x7000EAF2"
		req_client_send="true" res_client_receive="true" comment="玩家复活信息">
		<req>
		</req>
		<res>
			<property name="chengfaCD" type="long" comment="惩罚CD" />
			<property name="currentReviCostYinzi" type="int" comment="当前复活需要的绑银" />
			<property name="reviCostBasicYinzi" type="int" comment="复活所需要的基本银子" />
			<property name="reviCount" type="int" comment="当前时间段复活次数" />
		</res>
	</prototype>



	<!-- prototype req_name="DIALOG_WITHNPC_REQ" req_type="0x00F0EEEE" res_name="DIALOG_WITHNPC_RES" res_type="0xF0F0EEEE" req_client_send="true" res_client_receive="true" 
		comment="与NPC对话，客户端发送给服务器，服务器给出响应，返回对话的内容"> <req> <property name="name" type="String" encoding="UTF-8" comment="npc的名字"/> </req> <res> <property name="dialogContent" 
		type="String" encoding="UTF-8" max-num="2048" comment="对话的内容"/> </res> </prototype
-->

	<!-- 窗口系统相关的协议 -->
	<prototype req_name="QUERY_WINDOW_REQ" req_type="0x00F0EEED" res_name="QUERY_WINDOW_RES" res_type="0xF0F0EEED" req_client_send="true"
		res_client_receive="true" comment="查询某个NPC身上的窗口">
		<req>
			<property name="npcId" type="long" comment="npc的Id" />
		</req>
		<res>
			<object-property name="window" type="MenuWindow" comment="npc身上的窗口">
				<property name="id" type="int" comment="窗口的Id"></property>
				<property name="npcId" type="long" comment="对应的NPCid，可以为-1，标识npc不存在"></property>
				<property name="title" type="String" encoding="UTF-8" comment="窗口的标题"></property>
				<property name="descriptionInUUB" type="String" encoding="UTF-8" comment="窗口的描述，UUB格式"></property>
				<property name="showTask" type="boolean" comment="窗口选项下面是否要追加任务选择"></property>

				<property name="destroy" type="boolean" comment="窗口选择选项的时候，是否要销毁"></property>
				<property name="width" type="int" comment="指定宽度 0为默认 超过屏幕最大宽度为屏幕最大宽度"></property>
				<property name="height" type="int" comment="指定高度 0为默认 超过屏幕最大高度为屏幕最大高度"></property>

				<property name="png" type="byte[]" comment="窗口的PNG图片"></property>
			</object-property>

			<object-property name="options" type="Option[]" comment="Window上的选项">
				<property name="iconId" type="String" encoding="UTF-8" comment="图标，空标识没有图标，如果图标不存在就不显示" />
				<property name="text" type="String" encoding="UTF-8" comment="显示的文字" />
				<property name="color" type="int" comment="文字的颜色" />
				<property name="oType" type="byte" comment="选项的类型" />
				<property name="oId" type="int" comment="选项对应的功能或者窗口的标识" />
			</object-property>
		</res>
	</prototype>

	<prototype req_name="OPTION_SELECT_REQ" req_type="0x00F0EEEC" req_client_send="true"
		comment="客户端选择了某个窗口中的某个选项，客户端要根据选项中的类型来判断是否要发送此指令，以及是否要等待QUERY_WINDOW_RES响应">
		<req>
			<property name="npcId" type="long" comment="npc的Id，如果没有就不填" />
			<property name="wId" type="int" comment="窗口的Id" />
			<property name="index" type="int" comment="选项在窗口中的下标位置" />
		</req>
	</prototype>

	<prototype req_name="CONFIRM_WINDOW_REQ" req_type="0x00F0EEEE" req_client_receive="true"
		comment="服务器要求客户端弹出一个确认窗口，要求用户确认。用户选择确认后，客户端发送OPTION_SELECT_REQ指令给服务器">
		<req>
			<property name="windowId" type="int" comment="窗口的Id"></property>
			<property name="descriptionInUUB" type="String" encoding="UTF-8" comment="窗口的描述，UUB格式"></property>

			<object-property name="options" type="Option[]" comment="Window上的选项">
				<property name="iconId" type="String" encoding="UTF-8" comment="图标，空标识没有图标，如果图标不存在就不显示" />
				<property name="text" type="String" encoding="UTF-8" comment="显示的文字" />
				<property name="color" type="int" comment="文字的颜色" />
				<property name="oType" type="byte" comment="选项的类型" />
				<property name="oId" type="int" comment="选项对应的功能或者窗口的标识" />
			</object-property>
		</req>
	</prototype>

	<prototype req_name="INPUT_WINDOW_REQ" req_type="0x00F0EEEF" req_client_receive="true"
		comment="服务器要求客户端弹出一个输入窗口，要求用户输入。用户输入确认后，客户端发送OPTION_INPUT_REQ指令给服务器">
		<req>
			<property name="windowId" type="int" comment="窗口的Id"></property>
			<property name="title" type="String" encoding="UTF-8" comment="窗口的Id"></property>
			<property name="descriptionInUUB" type="String" encoding="UTF-8" comment="窗口的描述，UUB格式"></property>
			<property name="inputType" type="byte" comment="输入内容的类型，0标识输入数字，1随意"></property>
			<property name="maxSize" type="byte" comment="输入内容的最大长度，1个汉字长度为2"></property>
			<property name="defaultContent" type="String" encoding="UTF-8" comment="默认内容"></property>
			<property name="okStr" type="String" encoding="UTF-8" comment="确认按钮上显示的文字，只有用户选择了确认按钮，才发生回复给服务器"></property>
			<property name="cancelStr" type="String" encoding="UTF-8" comment="取消按钮上显示的文字"></property>

			<property name="png" type="byte[]" comment="窗口的PNG图片"></property>
		</req>
	</prototype>
	
	<prototype req_name="INPUT_WINDOW_PNG_REQ" req_type="0x00F0EEE1" req_client_receive="true"
		comment="带图片数据的INPUT_WINDOW">
		<req>
			<property name="windowId" type="int" comment="窗口的Id"></property>
			<property name="title" type="String" encoding="UTF-8" comment="窗口的Id"></property>
			<property name="descriptionInUUB" type="String" encoding="UTF-8" comment="窗口的描述，UUB格式"></property>
			<property name="inputType" type="byte" comment="输入内容的类型，0标识输入数字，1随意"></property>
			<property name="maxSize" type="byte" comment="输入内容的最大长度，1个汉字长度为2"></property>
			<property name="defaultContent" type="String" encoding="UTF-8" comment="默认内容"></property>
			<property name="okStr" type="String" encoding="UTF-8" comment="确认按钮上显示的文字，只有用户选择了确认按钮，才发生回复给服务器"></property>
			<property name="cancelStr" type="String" encoding="UTF-8" comment="取消按钮上显示的文字"></property>

			<property name="png" type="byte[]" comment="窗口的PNG图片"></property>
		</req>
	</prototype>

	<prototype req_name="OPTION_INPUT_REQ" req_type="0x00F0EEF0" req_client_send="true" comment="客户端完成了输入后确认，客户端发送此指令给服务器">
		<req>
			<property name="wId" type="int" comment="窗口的Id" />
			<property name="inputContent" type="String" encoding="UTF-8" comment="用户输入的内容"></property>
		</req>
	</prototype>

	<!-- 车夫 -->
	<!-- prototype req_name="NPC_DELIVER_QUERY_REQ" req_type="0x00F0EEEF" res_name="NPC_DELIVER_QUERY_RES" res_type="0xF0F0EEEF" req_client_send="true" res_client_receive="true" 
		comment="查询车夫能到达的列表，客户端发送给服务器，服务器返回车夫能到达的目地地"> <req> <property name="npcId" type="int" comment="npc的Id"/> </req> <res> <property name="npcId" type="int" 
		comment="npc的Id"/> <property name="destinations" type="String[]" encoding="UTF-8" comment="能到达的目的地"></property> <property name="prices" type="int[]" comment="到达各目的地的价格，价格为游戏币"></property> 
		</res> </prototype> <prototype req_name="NPC_DELIVER_DELIVE_REQ" req_type="0x00F0EEF0" req_client_send="true" comment="传送请求"> <req> <property name="npcId" 
		type="int" comment="npc的Id"/> <property name="dIndex" type="int" comment="目的地的编号，从0开始"/> </req> </prototype
-->

	<!-- 设置家或者复活点的地点,收到响应后，客户端需要提示用户新的家或者复活点地址 -->
	<!-- prototype req_name="NPC_SETHOME_REQ" req_type="0x00F0EEF1" res_name="NPC_SETHOME_RES" res_type="0x70F0EEF1" req_client_send="true" res_client_receive="true" 
		comment="设置家或者复活点的地点,收到响应后，客户端需要提示用户新的家或者复活点地址"> <req> <property name="npcId" type="int" comment="npc的Id"/> <property name="homeFlag" type="boolean" comment="家的标记，true标识设置家，false标识设置复活点"/> 
		</req> <res> <property name="result" type="byte" comment="结果，0标识成功，1标识npc不存在，2标识玩家不在NPC身边"></property> <property name="mapName" type="String" encoding="UTF-8" 
		comment="家所在的地图的名字"/> <property name="x" type="int" comment="x坐标"/> <property name="y" type="int" comment="y坐标"/> </res> </prototype
-->


	<!-- 查询各个装备的修理装备价格 -->
	<prototype req_name="NPC_REPAIR_QUERY_REQ" req_type="0x00F0EEF2" res_name="NPC_REPAIR_QUERY_RES" res_type="0x70F0EEF2" req_client_send="true"
		res_client_receive="true" comment="查询玩家身上各个装备的修理价格">
		<req>
		</req>
		<res>
			<property name="equipmentIds" type="long[]" comment="各个装备的id"></property>
			<property name="prices" type="int[]" comment="各个装备修理的价格"></property>
			<property name="priceForAll" type="int" comment="所有装备的修理价格"></property>
			<property name="priceForCurrent" type="int" comment="当前装备在身上的装备修理价格"></property>
		</res>
	</prototype>

	<!-- 修理装备请求 -->
	<prototype req_name="NPC_REPAIR_REPAIR_REQ" req_type="0x00F0EEF3" res_name="NPC_REPAIR_REPAIR_RES" res_type="0x70F0EEF3" req_client_send="true"
		res_client_receive="true" comment="修理装备">
		<req>
			<property name="repairType" type="byte" comment="修理的内容，0标识全部修理，1标识修理当前装备武器，2标识逐个修理"></property>
			<property name="equipmentId" type="long" comment="要修理的装备"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="0标识修理成功，1标识钱不够修理"></property>
			<property name="repairType" type="byte" comment="修理的内容，0标识全部修理，1标识修理当前装备武器，2标识逐个修理"></property>
			<property name="equipmentId" type="long" comment="要修理的装备"></property>
			<property name="money" type="int" comment="修理成功说花掉的钱"></property>
		</res>
	</prototype>

	<!-- 修理装备请求 -->
	<prototype req_name="REPAIR_CARRY_REQ" req_type="0x00F0EE13" res_name="REPAIR_CARRY_RES" res_type="0x70F0EE13" req_client_send="true"
		res_client_receive="true" comment="随身修理装备">
		<req>
			<property name="repairType" type="byte" comment="修理的内容，0标识全部修理，1标识修理当前装备武器，2标识逐个修理"></property>
			<property name="equipmentId" type="long" comment="要修理的装备"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="0标识修理成功，1标识钱不够修理"></property>
			<property name="repairType" type="byte" comment="修理的内容，0标识全部修理，1标识修理当前装备武器，2标识逐个修理"></property>
			<property name="equipmentId" type="long" comment="要修理的装备"></property>
			<property name="money" type="int" comment="修理成功说花掉的钱"></property>
		</res>
	</prototype>

	<!--镶嵌指令 -->





	<!-- 装备的合成 -->
	<prototype req_name="EQUIPMENT_COMPOUND_PREPARE_REQ" req_type="0x00F1EEF0" req_client_receive="true" comment="服务器通知客户端，准备装备的合成">
		<req>
			<property name="fomulaId" type="long" comment="合成图纸的Id，此图纸必在玩家的背包中" />
			<property name="descriptionInUUB" type="String" encoding="UTF-8" comment="合成装备的描述" />
			<property name="needArticleIds" type="long[]" comment="需要的各个材料Id"></property>
			<property name="needArticleCounts" type="int[]" comment="需要的各个材料的个数"></property>
			<property name="hasArticleCounts" type="int[]" comment="玩家已经拥有需要的各个材料的个数"></property>
			<property name="price" type="int" comment="合成所需的手续费"></property>
			<property name="compound" type="boolean" comment="true标识材料齐备，可以合成，false标识不能合成"></property>
		</req>
	</prototype>

	<prototype req_name="EQUIPMENT_COMPOUND_REQ" req_type="0x00F1EEF1" res_name="EQUIPMENT_COMPOUND_RES" res_type="0x70F1EEF1" req_client_send="true"
		res_client_receive="true" comment="客户端通知服务器，要合成某个装备">
		<req>
			<property name="fomulaId" type="long" comment="合成图纸的Id，此图纸必在玩家的背包中" />
		</req>
		<res>
			<property name="result" type="byte" comment="结果，0标识合成成功，1标识合成失败"></property>
			<property name="resultString" type="String" encoding="UTF-8" comment="提示信息"></property>
		</res>
	</prototype>

	<!-- 装备的打孔 -->
	<prototype req_name="EQUIPMENT_DRILL_REQ" req_type="0x00F1EEF2" res_name="EQUIPMENT_DRILL_RES" res_type="0x70F1EEF2" req_client_send="true"
		res_client_receive="true" comment="客户端请求服务器，装备打孔的各种信息，包括需要什么材料，需要几个，用什么来提高成功率，需要多少手续费等">
		<req>
			<property name="equipmentId" type="long" comment="要升级的装备，玩家的背包中哦你必须有此装备" />
			<property name="confirmType" type="byte" comment="确认标记，0标识不打孔，只是查询装备的打孔数据,1标识要打孔。2代表给服务器发消息，想要重置，需要服务器传回重置所需物品的信息。3代表确认重置" />
			<property name="materialAmount" type="int" comment="用几个材料打孔" />
			<property name="index" type="int" comment="装备在背包中的位置" />
		</req>
		<res>
			<property name="confirmType" type="byte" comment="确认标记，0代表给服务器发消息，想要重置，需要服务器传回重置所需物品的信息。1代表确认重置" />
			<property name="result" type="byte" comment="打孔查询模式下， 0标识成功返回了信息，1标识玩家没有此装备，2标识此装备不可打孔；打孔模式下：0标识打孔成功，1标识打孔未成功，消耗了材料，2标识打孔失败"></property>
			<property name="resultString" type="String" encoding="UTF-8" comment="结果提示信息"></property>
			<property name="equipmentId" type="long" comment="要升级的装备，玩家的背包中哦你必须有此装备" />
			<property name="gemIds" type="long[]" comment="对应的各个孔上的宝石，没有宝石对应的值为-1" />
			<property name="availableDrillTimes" type="int" comment="还可以打几次孔，0标识不能再打孔了"></property>
			<property name="maxDrillTimes" type="int" comment="此装备最多能打多少次孔"></property>
			<property name="materialName" type="String" encoding="UTF-8" comment="打孔需要的材料"></property>
			<property name="materialAmount" type="int" comment="一共可以放置多少的材料"></property>
			<property name="messages" type="String[]" encoding="UTF-8" comment="成功率提示信息"></property>
			<property name="price" type="int" comment="所需的手续费"></property>
			<property name="index" type="int" comment="装备在背包中的位置" />
		</res>
	</prototype>

	<!-- 切磋相关的指令> <prototype req_name="QIECUO_INVITE_REQ" req_type="0x00F0EEF9" res_name="QIECUO_INVITE_RES" res_type="0x70F0EEF9" req_client_send="true" 
		res_client_receive="true" comment="客户端请求服务器，要与某人切磋"> <req> <property name="playerId" type="long" comment="要与切磋的玩家Id"></property> <property name="playerName" 
		type="String" encoding="UTF-8" comment="要与切磋的玩家名字"></property> </req> <res> <property name="result" type="byte" comment="结果，0标识系统已经把邀请发送给对方，1标识玩家不存在或者不在线，2标识玩家类型不匹配，不能切磋，3标识玩家拒绝切磋"></property> 
		<property name="resultString" type="String" encoding="UTF-8" comment="错误提示"></property> <property name="playerId" type="long" comment="要与切磋的玩家Id"></property> 
		<property name="playerName" type="String" encoding="UTF-8" comment="要与切磋的玩家名字"></property> </res> </prototype> <prototype req_name="QIECUO_BE_INVITED_REQ" 
		req_type="0x00F0EEFA" req_client_receive="true" comment="服务器通知客户端，某人要与其切磋，客户端应该弹出窗口询问用户是否要进行切磋"> <req> <property name="playerId" type="long" comment="要与您切磋的玩家Id"></property> 
		<property name="playerName" type="String" encoding="UTF-8" comment="要与您切磋的玩家名字"></property> </req> </prototype> <prototype req_name="QIECUO_BE_INVITED_RESPONSE_REQ" 
		req_type="0x00F0EEFB" req_client_send="true" comment="客户端通知服务器，接受或者拒绝某个玩家的要求"> <req> <property name="result" type="byte" comment="0标识接受切磋邀请，1标识拒绝切磋邀请,2标识玩家正忙"></property> 
		<property name="playerId" type="long" comment="要与切磋的玩家Id"></property> </req> </prototype> <prototype req_name="QIECUO_INVITE_RESPONSE_REQ" req_type="0x00F0EEFC" 
		req_client_receive="true" comment="服务器通知客户端，对方是否接受了您的切磋邀请"> <req> <property name="result" type="byte" comment="0标识接受切磋邀请，1标识拒绝切磋邀请,2标识玩家正忙"></property> 
		<property name="playerId" type="long" comment="要与切磋的玩家Id"></property> <property name="playerName" type="String" encoding="UTF-8" comment="要与您切磋的玩家名字"></property> 
		</req> </prototype> <prototype req_name="QIECUO_START_REQ" req_type="0x00F0EEFD" req_client_receive="true" comment="服务器通知客户端，切磋开始3秒后开始"> <req> <property 
		name="playerId" type="long" comment="要与切磋的玩家Id"></property> <property name="playerName" type="String" encoding="UTF-8" comment="要与您切磋的玩家名字"></property> 
		<property name="mapName" type="String" encoding="UTF-8" comment="切磋的地点"></property> <property name="x" type="int" comment="切磋的地点"></property> <property 
		name="y" type="int" comment="切磋的地点"></property> </req> </prototype> <prototype req_name="QIECUO_END_REQ" req_type="0x00F0EEFE" req_client_receive="true" 
		comment="服务器通知客户端，切磋结束"> <req> <property name="win" type="boolean" comment="true标识您赢了，false标识您输了"></property> <property name="playerId" type="long" comment="要与切磋的玩家Id"></property> 
		<property name="playerName" type="String" encoding="UTF-8" comment="要与您切磋的玩家名字"></property> </req> </prototype
-->

	<!-- 临时敌人相关的协议 -->
	<prototype req_name="TRANSIENTENEMY_CHANGE_REQ" req_type="0x00F0EEFF" req_client_receive="true" comment="服务器通知客户端，增加或者去除一个临时敌人">
		<req>
			<property name="action" type="byte" comment="0标识增加一个敌人，1标识删除一个敌人"></property>
			<property name="targetType" type="byte" comment="0标识玩家，1标识NPC" />
			<property name="targetId" type="long" comment="某个玩家Id或者某个怪的Id" />
		</req>
	</prototype>

	<!-- 服务器提示客户端某种信息指令 -->
	<prototype req_name="HINT_REQ" req_type="0x00F0EF00" req_client_receive="true"
		comment="服务器通知客户端，0标识2秒就消失的提示窗口，1标识信息到聊天栏, 2标识在屏幕上方显示文字，持续几秒,最多3条10秒，颜色服务器控制，3标识从屏幕中间右向左滚动 字一个个显示一个个消失，颜色服务器控制，4标识在屏幕下方从左向右显示滚动信息并带粒子, 2条，变颜色1秒，持续10秒, 5覆盖所有窗口上面的提示窗口，一定时间后消失点击不消失，并加入聊天中">
		<req>
			<property name="mode" type="byte"
				comment="0标识2秒就消失的提示窗口，1标识信息到聊天栏, 2标识在屏幕上方显示文字，持续几秒,最多3条10秒，颜色服务器控制，3标识从屏幕中间右向左滚动 字一个个显示一个个消失，颜色服务器控制，4标识在屏幕下方从左向右显示滚动信息并带粒子, 2条，变颜色1秒，持续10秒, 5覆盖所有窗口上面的提示窗口，一定时间后消失点击不消失，并加入聊天中"></property>
			<property name="hintContent" type="String" encoding="UTF-8" comment="提示信息"></property>
		</req>
	</prototype>

	<!-- 元宝交易所 > <prototype req_name="EXCHANGE_QUERY_MARKET_REQ" req_type="0x00F0EF10" res_name="EXCHANGE_QUERY_MARKET_RES" res_type="0xF0F0EF10" req_client_send="true" 
		res_client_receive="true" comment="客户端发送指令查询交易所实时行情类别"> <req> </req> <res> <property name="money" type="long" comment="交易所帐户中的金币数"></property> <property 
		name="yuanbo" type="long" comment="交易所帐户中的元宝数"></property> <property name="blockedMoney" type="long" comment="交易所帐户中的冻结金币数"></property> <property name="blockedYuanbo" 
		type="long" comment="交易所帐户中的冻结元宝数"></property> <property name="stampDuty" type="int" comment="印花税，卖方承担，基数为1000，10标识1%的印花税"></property> <property name="buyingMarket" 
		type="long[]" comment="获得买方的行情，返回的是长度为num*2的数组，表达的是long[num][2]的二维数组，其中long[][0]标识单价，long[][1]标识此单价的数量，单价从最高价到最低价排序"></property> <property name="sellingMarket" 
		type="long[]" comment="获得卖方的行情，返回的是长度为num*2的数组，表达的是long[num][2]的二维数组，其中long[][0]标识单价，long[][1]标识此单价的数量，单价从最低价到最高价排序"></property> </res> </prototype> <prototype 
		req_name="EXCHANGE_PLACE_ORDER_REQ" req_type="0x00F0EF11" res_name="EXCHANGE_PLACE_ORDER_RES" res_type="0xF0F0EF11" req_client_send="true" res_client_receive="true" 
		comment="客户端发送指令下单,下单成功，会收到响应，下单不成功，服务器会通过HINT_REQ指令提示错误，不发送响应"> <req> <property name="orderType" type="byte" comment="0标识买单，1标识卖单"></property> <property 
		name="price" type="int" comment="单价"></property> <property name="amount" type="int" comment="数量"></property> </req> <res> <property name="money" type="long" 
		comment="交易所帐户中的金币数"></property> <property name="yuanbo" type="long" comment="交易所帐户中的元宝数"></property> <property name="blockedMoney" type="long" comment="交易所帐户中的冻结金币数"></property> 
		<property name="blockedYuanbo" type="long" comment="交易所帐户中的冻结元宝数"></property> </res> </prototype> <prototype req_name="EXCHANGE_TAKE_MONEY_REQ" req_type="0x00F0EF12" 
		res_name="EXCHANGE_TAKE_MONEY_RES" res_type="0xF0F0EF12" req_client_send="true" res_client_receive="true" comment="客户端发送指令取出交易所中的钱,会收到响应，不成功，服务器会通过HINT_REQ指令提示错误，不发送响应"> 
		<req> <property name="moneyType" type="byte" comment="0金币，1标识元宝"></property> <property name="amount" type="int" comment="数量"></property> </req> <res> <property 
		name="money" type="long" comment="交易所帐户中的金币数"></property> <property name="yuanbo" type="long" comment="交易所帐户中的元宝数"></property> <property name="blockedMoney" 
		type="long" comment="交易所帐户中的冻结金币数"></property> <property name="blockedYuanbo" type="long" comment="交易所帐户中的冻结元宝数"></property> </res> </prototype> <prototype 
		req_name="EXCHANGE_QUERY_ORDER_REQ" req_type="0x00F0EF13" res_name="EXCHANGE_QUERY_ORDER_RES" res_type="0xF0F0EF13" req_client_send="true" res_client_receive="true" 
		comment="客户端查询用户的订单信息"> <req> <property name="orderType" type="byte" comment="0标识所有订单，1标识处于激活状态的订单，2标识已经完成交易的订单,3-所有的在激活状态下的订单[全部完成交易,取消]的除外"></property> 
		<property name="start" type="int" comment="开始的编号"></property> <property name="num" type="int" comment="取出多少个，0标识取出所有的"></property> </req> <res> <property 
		name="start" type="int" comment="开始的编号"></property> <property name="num" type="int" comment="返回订单的数量"></property> <property name="totalNum" type="int" 
		comment="所有订单的数量"></property> <property name="ids" type="long[]" comment="各个订单的Id"></property> <property name="prices" type="int[]" comment="各个订单的单价"></property> 
		<property name="amounts" type="int[]" comment="各个订单的数量"></property> <property name="dealAmounts" type="int[]" comment="各个订单的已经成交的数量"></property> <property 
		name="orderTypes" type="byte[]" comment="各个订单的类型，0标识买单，1标识卖单"></property> <property name="orderStates" type="byte[]" comment="各个订单的状态，0标识激活，1标识取消，2标识部分成交，3标识全部成交"></property> 
		<property name="lastModifiedDates" type="String[]" comment="各个订单最后修改时间，精确到天"></property> </res> </prototype> <prototype req_name="EXCHANGE_CANCEL_ORDER_REQ" 
		req_type="0x00F0EF14" res_name="EXCHANGE_CANCEL_ORDER_RES" res_type="0xF0F0EF14" req_client_send="true" res_client_receive="true" comment="客户端发送指令取消订单,取消订单成功，会收到响应，取消订单不成功，服务器会通过HINT_REQ指令提示错误，不发送响应"> 
		<req> <property name="orderId" type="long" comment="订单的Id"></property> </req> <res> <property name="money" type="long" comment="交易所帐户中的金币数"></property> 
		<property name="yuanbo" type="long" comment="交易所帐户中的元宝数"></property> <property name="blockedMoney" type="long" comment="交易所帐户中的冻结金币数"></property> <property 
		name="blockedYuanbo" type="long" comment="交易所帐户中的冻结元宝数"></property> </res> </prototype
-->

	<!-- 客户端获得topo结构图，用于跨地图寻路 -->
	<prototype req_name="QUERY_TOPO_DIAGRAM_REQ" req_type="0x00F1EEEE" res_name="QUERY_TOPO_DIAGRAM_RES" res_type="0xF0F1EEEE" req_client_send="true"
		res_client_receive="true" comment="查询游戏的拓扑结构">
		<req>
		</req>
		<res>
			<property name="mapNames" type="String[]" encoding="UTF-8" comment="所有的游戏英文名称" />
			<property name="displayMapNames" type="String[]" encoding="UTF-8" comment="所有的游戏中文名称" />
			<property name="neighborNums" type="byte[]" comment="各个游戏地图的邻居数目" />
			<property name="neighbors" type="short[]" max-num="2048" comment="各个地图邻居的编号，用一维表达二维的信息" />
			<property name="neighborTypes" type="short[]" max-num="2048" comment="类型" />
		</res>
	</prototype>


	<prototype req_name="CONNECT_FAILED_REQ" req_type="0x0000EB04" req_client_receive="true" comment="和服务器的连接创建失败">
		<req>
		</req>
	</prototype>
	<!-- 家族 -->
	<prototype req_name="JIAZU_CREATE_REQ" req_type="0x000AEE01" res_name="JIAZU_CREATE_RES" res_type="0x700AEE01" req_client_send="true"
		res_client_receive="true" comment="客户端请求创建家族">
		<req>
			<property name="jiazuname" type="String" encoding="UTF-8" comment="家族名称"></property>
			<property name="slogan" type="String" encoding="UTF-8" comment="家族标语"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>
	<prototype req_name="JIAZU_LIST_REQ" req_type="0x000AEE02" res_name="JIAZU_LIST_RES" res_type="0x700AEE02" req_client_send="true"
		res_client_receive="true" comment="客户端请求获取家族列表">
		<req>
			<property name="orderby" type="int" comment="排序方式,0 创建时间 1 实力榜"></property>
			<property name="isasc" type="boolean" comment="是否升序，ture是，false为降序"></property>
			<property name="keyword" type="String" encoding="UTF-8" comment="模糊查询关键字"></property>
			<property name="pagenum" type="int" comment="每页的显示数量,20"></property>
			<property name="pageindex" type="int" comment="现实第几页:0,1,2,3..."></property>
		</req>
		<res>
			<property name="jiazunames" type="String[]" encoding="UTF-8" comment="家族名称列表" />
			<property name="jiazulevels" type="int[]" comment="对应的家族级别" />
			<property name="jiazuMaster" type="String[]" encoding="UTF-8" comment="家族族长的名字" />
			<property name="jiazuFull" type="boolean[]" comment="是否已经满了" />
			<property name="slogan" type="String[]" encoding="UTF-8" comment="家族标语"></property>
			<property name="jiazumembers" type="int[]" comment="对应的家族成员数" />
			<property name="maxMember" type="int[]" comment="对应的家族最大成员数" />
			<property name="requestJiazuName" type="String" encoding="UTF-8" comment="已申请家族名称" />
		</res>
	</prototype>

	<prototype req_name="JIAZU_APPLY_REQ" req_type="0x000AEE03" res_name="JIAZU_APPLY_RES" res_type="0x700AEE03" req_client_send="true"
		res_client_receive="true" comment="客户端申请加入家族">
		<req>
			<property name="name" type="String" encoding="UTF-8" comment="申请加入家族的名称"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>
	<prototype req_name="JIAZU_QUERY_APPLY_REQ" req_type="0x000AEE04" res_name="JIAZU_QUERY_APPLY_RES" res_type="0x700AEE04" req_client_send="true"
		res_client_receive="true" comment="查询申请加入家族的列表">
		<req>
		</req>
		<res>
			<property name="playername" type="String[]" encoding="UTF-8" comment="角色的名称" />
			<property name="playerid" type="long[]" comment="角色的ID" />
			<property name="playerLevel" type="int[]" comment="角色等级" />
			<property name="career" type="int[]" comment="角色职业" />
			<property name="applyTime" type="String[]" encoding="UTF-8" comment="申请时间" />
		</res>
	</prototype>

	<prototype req_name="JIAZU_APPROVE_APPLY_REQ" req_type="0x000AEE05" res_name="JIAZU_APPROVE_APPLY_RES" res_type="0x700AEE05"
		req_client_send="true" res_client_receive="true" comment="审核加入家族">
		<req>
			<property name="playerid" type="long" comment="申请者id"></property>
			<property name="approve" type="boolean" comment="是否批准 true 批准 false 拒绝"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>

	<prototype req_name="JIAZU_EXPEL_MEMBER_REQ" req_type="0x000AEE06" res_name="JIAZU_EXPEL_MEMBER_RES" res_type="0x700AEE06" req_client_send="true"
		res_client_receive="true" comment="踢出家族">
		<req>
			<property name="playerid" type="long" comment="被踢者id"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>

	<prototype req_name="JIAZU_LEAVE_REQ" req_type="0x000AEE07" res_name="JIAZU_LEAVE_RES" res_type="0x700AEE07" req_client_send="true"
		res_client_receive="true" comment="离开家族">
		<req>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>

	<prototype req_name="JIAZU_QURRY_BASE_LIST_REQ" req_type="0x000AEE08" res_name="JIAZU_QURRY_BASE_LIST_RES" res_type="0x700AEE08"
		req_client_send="true" res_client_receive="true" comment="获取驻地申请列表">
		<res>
			<property name="totalInex" type="int" comment="第几组家族驻地" />
			<property name="canUse" type="boolean[]" comment="是否当前可用" />
			<object-property name="locations" type="SeptLocationLocation[]" comment="驻地信息">
				<property name="index" type="int" encoding="UTF-8" comment="位置索引" />
				<property name="mapName" type="String" encoding="UTF-8" comment="所在地图" />
				<property name="locationDes" type="String" encoding="UTF-8" comment="位置描述" />
				<property name="businessArea" type="String" encoding="UTF-8" comment="所属商圈" />
				<property name="specialityStr" type="String" encoding="UTF-8" comment="特产描述" />
			</object-property>
		</res>
	</prototype>

	<prototype req_name="JIAZU_BASE_REQ" req_type="0x000AEE09" res_name="JIAZU_BASE_RES" res_type="0x700AEE09" req_client_send="true"
		res_client_receive="true" comment="申请驻地">
		<req>
			<property name="baseName" type="String" encoding="UTF-8" comment="申请驻地的名字" />
			<property name="jiazuPassword" type="String" encoding="UTF-8" comment="家族密码" />
			<property name="jiazuPasswordNotice" type="String" encoding="UTF-8" comment="家族密码提示" />
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
			<property name="septStationId" type="long" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>



	<prototype req_name="JIAZU_MASTER_RESIGN_REQ" req_type="0x000AEE10" res_name="JIAZU_MASTER_RESIGN_RES" res_type="0x700AEE10"
		req_client_send="true" res_client_receive="true" comment="族长禅让">
		<req>
			<property name="playerId" type="long" comment="副族长ID"></property>
			<property name="giazuPassword" type="String" encoding="UTF-8" comment="保护密码"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>
	<prototype req_name="JIAZU_APPLY_MASTER_REQ" req_type="0x000AEE11" res_name="JIAZU_APPLY_MASTER_RES" res_type="0x700AEE11" req_client_send="true"
		res_client_receive="true" comment="副族长申请为族长">
		<req>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>
	<prototype req_name="JIAZU_DISMISS_REQ" res_name="JIAZU_DISMISS_RES" req_type="0x000AEE12" res_type="0x700AEE12" req_client_send="true"
		res_client_receive="true" comment="解散家族">
		<req>
			<property name="giazuPassword" type="String" encoding="UTF-8" comment="保护密码"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>
	<prototype req_name="JIAZU_MODIFY_SLOGAN_REQ" req_type="0x000AEE13" res_name="JIAZU_MODIFY_SLOGAN_RES" res_type="0x700AEE13"
		req_client_send="true" res_client_receive="true" comment="修改家族宗旨">
		<req>
			<property name="slogan" type="String" encoding="UTF-8" comment="家族宗旨"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="slogan" type="String" encoding="UTF-8" comment="家族宗旨" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>

	<prototype req_name="JIAZU_APPOINT_REQ" req_type="0x000AEE14" res_name="JIAZU_APPOINT_RES" res_type="0x700AEE14" req_client_send="true"
		res_client_receive="true" comment="任命家族">
		<req>
			<property name="appointPlayerID" type="long" comment="被授予职位的playerID"></property>
			<property name="jiazupassword" type="String" encoding="UTF-8" comment="家族密码"></property>
			<property name="titleID" type="int" comment="职位ID，0-族长 1－副族长 2－执法长老 3－龙血长老 4－执事长老 5－精英 6－平民"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>

	<prototype req_name="JIAZU_SET_RANK_NAME_REQ" req_type="0x000AEE15" res_name="JIAZU_SET_RANK_NAME_RES" res_type="0x700AEE15"
		req_client_send="true" res_client_receive="true" comment="设定家族称号">
		<req>
			<property name="master_alias" type="String" encoding="UTF-8" comment="族长匿名"></property>
			<property name="vice_master_alias" type="String" encoding="UTF-8" comment="副族长匿名"></property>
			<property name="law_elder_alias" type="String" encoding="UTF-8" comment="执法长老匿名"></property>
			<property name="fight_elder_alias" type="String" encoding="UTF-8" comment="龙血长老匿名"></property>
			<property name="research_elder_alias" type="String" encoding="UTF-8" comment="执事长老匿名"></property>
			<property name="elite_alias" type="String" encoding="UTF-8" comment="精英匿名"></property>
			<property name="civilian_alias" type="String" encoding="UTF-8" comment="平民匿名"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>

	<prototype req_name="JIAZU_SET_ICON_REQ" req_type="0x000AEE16" res_name="JIAZU_SET_ICON_RES" res_type="0x700AEE16" req_client_send="true"
		res_client_receive="true" comment="更改家族徽章">
		<req>
			<property name="icon_id" type="long" comment="icon ID"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>

	<prototype req_name="JIAZU_LIST_SALARY_REQ" req_type="0x000AEE17" res_name="JIAZU_LIST_SALARY_RES" res_type="0x700AEE17" req_client_send="true"
		res_client_receive="true" comment="查询工资">
		<req>
		</req>
		<res>
			<property name="salarySum" type="long" comment="本周工资的总量" />
			<property name="salaryLeft" type="long" comment="本周工资的剩余量" />
			<property name="hasPopedom" type="boolean" comment="是否有发放权限" />
			<property name="des" type="String" encoding="UTF-8" comment="描述" />
			<property name="batchDes" type="String" encoding="UTF-8" comment="批量发放描述" />
			<property name="playerName" type="String[]" encoding="UTF-8" comment="角色名" />
			<property name="playerId" type="long[]" encoding="UTF-8" comment="成员ID" />
			<property name="salary" type="long[]" comment="工资" />
			<property name="paidSalary" type="long[]" comment="实发工资" />
			<property name="lastWeekSalary" type="long[]" comment="上周工资" />
			<property name="hasPaid" type="boolean[]" comment="工资是否已发放" />
		</res>
	</prototype>

	<prototype req_name="JIAZU_SALARY_CEREMONY_REQ" req_type="0x000AEE18" res_name="JIAZU_SALARY_CEREMONY_RES" res_type="0x700AEE18"
		req_client_send="true" res_client_receive="true" comment="工资仪式">
		<req>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>

	<prototype req_name="JIAZU_QUERY_MEMBER_SALARY_REQ" req_type="0x000AEE19" res_name="JIAZU_QUERY_MEMBER_SALARY_RES" res_type="0x700AEE19"
		req_client_send="true" res_client_receive="true" comment="查询单个成员的贡献度与工资范围">
		<req>
			<property name="playerid" type="long" comment="玩家id" />
		</req>
		<res>
			<property name="playerid" type="long" comment="玩家id" />
			<property name="leftSalary" type="long" comment="家族剩余可发放工资" />
			<property name="baseSalary" type="long" comment="基础工资额" />
			<property name="maxSalary" type="long" comment="最多发送的工资额" />
		</res>
	</prototype>
	<prototype req_name="JIAZU_PAY_SALARY_REQ" req_type="0x000AEE20" res_name="JIAZU_PAY_SALARY_RES" res_type="0x700AEE20" req_client_send="true"
		res_client_receive="true" comment="发送工资">
		<req>
			<property name="playerid" type="long" comment="玩家id" />
			<property name="salary" type="long" comment="工资数" />
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
			<property name="playerid" type="long" comment="玩家id" />
			<property name="salary" type="long" comment="工资数" />
			<property name="jiazuLeftSalary" type="long" encoding="UTF-8" comment="家族剩余工资" />
		</res>
	</prototype>
	<prototype req_name="JIAZU_INFO_REQ" req_type="0x000AEE21" res_name="JIAZU_INFO_RES" res_type="0x700AEE21" req_client_send="true"
		res_client_receive="true" comment="查询家族信息">
		<req></req>
		<res>
			<property name="jiazuId" type="long" encoding="UTF-8" comment="家族ID" />
			<property name="jiazuName" type="String" encoding="UTF-8" comment="家族名字" />
			<property name="level" type="int" encoding="UTF-8" comment="家族等级" />
			<property name="slogan" type="String" encoding="UTF-8" comment="家族标语" />
			<property name="usedBedge" type="int" encoding="UTF-8" comment="当前使用的徽章" />
			<property name="constructionConsume" type="int" encoding="UTF-8" comment="家族灵脉值 " />
			<property name="titleAlias" type="String[]" encoding="UTF-8" comment="家族修改后的职位" />
			<object-property name="jiazuMembers" type="JiazuMember4Client[]" comment="家族成员类表">
				<property name="playerName" type="String" encoding="UTF-8" comment="角色名" />
				<property name="playerId" type="long" encoding="UTF-8" comment="成员ID" />
				<property name="title" type="int" encoding="UTF-8" comment="职位 " />
				<property name="playerLevel" type="int" encoding="UTF-8" comment="角色等级" />
				<property name="sex" type="byte" encoding="UTF-8" comment="角色性别" />
				<property name="contributionSalary" type="int" encoding="UTF-8" comment="贡献度" />
				<property name="contributeMoney" type="long" encoding="UTF-8" comment="捐献的钱" />
				<property name="classLevel" type="int" encoding="UTF-8" comment="境界" />
				<property name="career" type="int" encoding="UTF-8" comment="职业" />
				<property name="onLine" type="boolean" encoding="UTF-8" comment="是否在线" />
			</object-property>
			<object-property name="allBedge" type="JiazuBedge[]" comment="所有的徽章">
				<property name="id" type="int" encoding="UTF-8" comment="徽章ID" />
				<property name="name" type="String" encoding="UTF-8" comment="徽章名字" />
				<property name="resName" type="String" encoding="UTF-8" comment="徽章资源名" />
				<property name="des" type="String" encoding="UTF-8" comment="徽章描述" />
				<property name="color" type="int" encoding="UTF-8" comment="徽章颜色" />
				<property name="price" type="int" encoding="UTF-8" comment="徽章价格" />
				<property name="type" type="int" encoding="UTF-8" comment="徽章类型" />
				<property name="levelLimit" type="int" encoding="UTF-8" comment="徽章限制" />
			</object-property>
			<property name="hadBedge" type="int[]" encoding="UTF-8" comment="已获得的徽章ID" />
			<property name="switchCost" type="int" comment="切换徽章消耗" />
			<property name="septStationId" type="long" comment="驻地ID" />
			<property name="maintai" type="long" comment="维护费" />
			<property name="jiazuMoney" type="int" encoding="UTF-8" comment="家族资金 " />
			<property name="warScore" type="long" encoding="UTF-8" comment="家族武力值 " />
			<property name="prosperity" type="long" encoding="UTF-8" comment="家族繁荣度 " />
		</res>
	</prototype>

	<prototype req_name="JIAZU_BUY_BEDGE_REQ" req_type="0x000AEE23" res_name="JIAZU_BUY_BEDGE_RES" res_type="0x700AEE23" req_client_send="true"
		res_client_receive="true" comment="购买家族徽章">
		<req>
			<property name="bedgeId" type="int" encoding="UTF-8" comment="要购买的徽章ID" />
		</req>
		<res>
			<property name="bedgeId" type="int" comment="要购买的徽章ID" />
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>

	<prototype req_name="JIAZU_REPLACE_BEDGE_REQ" req_type="0x000AEE24" res_name="JIAZU_REPLACE_BEDGE_RES" res_type="0x700AEE24"
		req_client_send="true" res_client_receive="true" comment="替换徽章">
		<req>
			<property name="bedgeId" type="int" encoding="UTF-8" comment="要替换的徽章ID" />
		</req>
		<res>
			<property name="bedgeId" type="int" comment="要替换的徽章ID" />
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>

	<prototype req_name="JIAZU_QUERY_BY_ID_REQ" req_type="0x000AEE25" res_name="JIAZU_QUERY_BY_ID_RES" res_type="0x700AEE25" req_client_send="true"
		res_client_receive="true" comment="">
		<req>
			<property name="jizuId" type="long" encoding="UTF-8" comment="家族ID" />
		</req>
		<res>
			<property name="jiazuId" type="long" encoding="UTF-8" comment="家族ID" />
			<property name="jiazuName" type="String" encoding="UTF-8" comment="家族名字" />
			<property name="level" type="int" encoding="UTF-8" comment="家族等级" />
			<property name="slogan" type="String" encoding="UTF-8" comment="家族标语" />
			<property name="usedBedge" type="int" encoding="UTF-8" comment="当前使用的徽章" />
			<property name="titleAlias" type="String[]" encoding="UTF-8" comment="家族修改后的职位" />
			<object-property name="jiazuMembers" type="JiazuMember4Client[]" comment="家族成员类表">
				<property name="playerName" type="String" encoding="UTF-8" comment="角色名" />
				<property name="playerId" type="long" encoding="UTF-8" comment="成员ID" />
				<property name="title" type="int" encoding="UTF-8" comment="职位 " />
				<property name="playerLevel" type="int" encoding="UTF-8" comment="角色等级" />
				<property name="sex" type="byte" encoding="UTF-8" comment="角色性别" />
				<property name="contributionSalary" type="int" encoding="UTF-8" comment="贡献度" />
				<property name="contributeMoney" type="long" encoding="UTF-8" comment="捐献的钱" />
				<property name="classLevel" type="int" encoding="UTF-8" comment="境界" />
				<property name="career" type="int" encoding="UTF-8" comment="职业" />
				<property name="onLine" type="boolean" encoding="UTF-8" comment="是否在线" />
			</object-property>
			<property name="warScore" type="long" encoding="UTF-8" comment="家族武力值 " />
			<property name="prosperity" type="long" encoding="UTF-8" comment="家族繁荣度 " />
		</res>
	</prototype>

	<prototype req_name="JIAZU_INVITE_REQ" req_type="0x000AEE26" res_name="JIAZU_INVITE_RES" res_type="0x700AEE26" req_client_send="true"
		res_client_receive="true" comment="邀请">
		<req>
			<property name="jizuId" type="long" encoding="UTF-8" comment="家族ID" />
			<property name="playerId" type="long" encoding="UTF-8" comment="被邀请的角色ID" />
		</req>
		<res>
		</res>

	</prototype>
	<prototype req_name="JIAZU_SHOW_JIAZU_FUNCTION_REQ" req_type="0x000AEE27" res_name="JIAZU_SHOW_JIAZU_FUNCTION_RES" res_type="0x700AEE27"
		req_client_send="true" res_client_receive="true" comment="告诉客户端弹出创建家族的窗口">
		<req>
		</req>
		<res>
			<property name="action" type="byte" comment="客户端弹出信息:0-创建家族 1-查询可申请列表 2-查询可申请驻地列表 3-工资界面 4-建造建筑" />
		</res>
	</prototype>

	<prototype req_name="JIAZU_QUERY_STATION_REQ" req_type="0x000AEE28" res_name="JIAZU_QUERY_STATION_RES" res_type="0x700AEE28"
		req_client_send="true" res_client_receive="true" comment="驻地进入信息">
		<req>
		</req>
		<res>
			<property name="resName" type="String" encoding="UTF-8" comment="驻地资源名字" />
			<property name="realMapName" type="String" encoding="UTF-8" comment="真实地图名字" />
			<property name="version" type="int" encoding="UTF-8" comment="版本" />
		</res>
	</prototype>

	<prototype req_name="JIAZU_TITLE_CHANGE_REQ" req_type="0x000AEE29" res_name="JIAZU_TITLE_CHANGE_RES" res_type="0x700AEE29"
		res_client_receive="true" comment="家族职位更改">
		<req>
		</req>
		<res>
			<property name="titleLevel" type="int" encoding="UTF-8" comment="角色当前的职务等级" />
			<property name="titles" type="String[]" encoding="UTF-8" comment="更改后职位名称" />
		</res>
	</prototype>

	<prototype req_name="JIAZU_BATCH_SEND_SALARY_REQ" req_type="0x000AEE2A" res_name="JIAZU_BATCH_SEND_SALARY_RES" res_type="0x700AEE2A"
		res_client_receive="true" req_client_send="true" comment="批量发送工资">
		<req>
		</req>
		<res>
			<property name="playerId" type="long[]" encoding="UTF-8" comment="发送成功的角色ID" />
			<property name="salary" type="long[]" encoding="UTF-8" comment="角色获得的工资" />
			<property name="jiazuLeftSalary" type="long" encoding="UTF-8" comment="家族剩余工资 " />
			<property name="des" type="String" encoding="UTF-8" comment="结果" />
		</res>
	</prototype>
	<prototype req_name="JIAZU_CONTRIBUTE_MONEY_REQ" req_type="0x000AEE2B" res_name="JIAZU_CONTRIBUTE_MONEY_RES" res_type="0x700AEE2B"
		req_client_send="true" res_client_receive="true" comment="家族捐献">
		<req>
			<property name="money" type="long" encoding="UTF-8" comment="要捐献的钱数" />
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>
	<prototype res_name="JIAZU_WAREHOUSE_RES" res_type="0x700AEE2C" res_client_receive="true" comment="家族仓库">
		<res>
			<property name="isFengpei" type="boolean" comment="是否有权限分配" />
			<property name="maxNum" type="int" comment="最大数量" />
			<property name="entityIDs" type="long[]" comment="物品ID" />
			<property name="entityNums" type="int[]" comment="物品个数" />
			<property name="jiazuPNames" type="String[]" encoding="UTF-8" comment="家族成员名称" />
		</res>
	</prototype>
	<prototype req_name="JIAZU_WAREHOUSE_TOPLAYER_REQ" req_type="0x000AEE2D" req_client_send="true" res_name="JIAZU_WAREHOUSE_TOPLAYER_RES"
		res_type="0x700AEE2D" res_client_receive="true" comment="分配家族物品">
		<req>
			<property name="entityID" type="long" comment="物品ID" />
			<property name="entityNum" type="int" comment="物品个数" />
			<property name="wareHouseIndex" type="int" comment="在仓库中的位置" />
			<property name="pName" type="String" encoding="UTF-8" comment="玩家名字" />
		</req>
		<res>
			<property name="isSu" type="boolean" comment="是否成功" />
			<property name="entityID" type="long" comment="物品ID" />
			<property name="entityNum" type="int" comment="物品个数" />
			<property name="wareHouseIndex" type="int" comment="在仓库中的位置" />
		</res>
	</prototype>

	<prototype req_name="JIAZU_INFO_ADD_TIME_REQ" req_type="0x000AEE2E" res_name="JIAZU_INFO_ADD_TIME_RES" res_type="0x700AEE2E"
		req_client_send="true" res_client_receive="true" comment="查询家族信息(2012-7-9 11:33:21新增协议)">
		<req></req>
		<res>
			<property name="jiazuId" type="long" encoding="UTF-8" comment="家族ID" />
			<property name="jiazuName" type="String" encoding="UTF-8" comment="家族名字" />
			<property name="level" type="int" encoding="UTF-8" comment="家族等级" />
			<property name="slogan" type="String" encoding="UTF-8" comment="家族标语" />
			<property name="usedBedge" type="int" encoding="UTF-8" comment="当前使用的徽章" />
			<property name="constructionConsume" type="int" encoding="UTF-8" comment="家族灵脉值 " />
			<property name="titleAlias" type="String[]" encoding="UTF-8" comment="家族修改后的职位" />
			<object-property name="jiazuMembers" type="JiazuMember4Client[]" comment="家族成员类表">
				<property name="playerName" type="String" encoding="UTF-8" comment="角色名" />
				<property name="playerId" type="long" encoding="UTF-8" comment="成员ID" />
				<property name="title" type="int" encoding="UTF-8" comment="职位 " />
				<property name="playerLevel" type="int" encoding="UTF-8" comment="角色等级" />
				<property name="sex" type="byte" encoding="UTF-8" comment="角色性别" />
				<property name="contributionSalary" type="int" encoding="UTF-8" comment="贡献度" />
				<property name="contributeMoney" type="long" encoding="UTF-8" comment="捐献的钱" />
				<property name="classLevel" type="int" encoding="UTF-8" comment="境界" />
				<property name="career" type="int" encoding="UTF-8" comment="职业" />
				<property name="onLine" type="boolean" encoding="UTF-8" comment="是否在线" />
			</object-property>
			<property name="offLineTime" type="String[]" encoding="UTF-8" comment="成员离线时间,和上面对应" />
			<object-property name="allBedge" type="JiazuBedge[]" comment="所有的徽章">
				<property name="id" type="int" encoding="UTF-8" comment="徽章ID" />
				<property name="name" type="String" encoding="UTF-8" comment="徽章名字" />
				<property name="resName" type="String" encoding="UTF-8" comment="徽章资源名" />
				<property name="des" type="String" encoding="UTF-8" comment="徽章描述" />
				<property name="color" type="int" encoding="UTF-8" comment="徽章颜色" />
				<property name="price" type="int" encoding="UTF-8" comment="徽章价格" />
				<property name="type" type="int" encoding="UTF-8" comment="徽章类型" />
				<property name="levelLimit" type="int" encoding="UTF-8" comment="徽章限制" />
			</object-property>
			<property name="hadBedge" type="int[]" encoding="UTF-8" comment="已获得的徽章ID" />
			<property name="switchCost" type="int" comment="切换徽章消耗" />
			<property name="septStationId" type="long" comment="驻地ID" />
			<property name="maintai" type="long" comment="维护费" />
			<property name="jiazuMoney" type="int" encoding="UTF-8" comment="家族资金 " />
			<property name="warScore" type="long" encoding="UTF-8" comment="家族武力值 " />
			<property name="prosperity" type="long" encoding="UTF-8" comment="家族繁荣度 " />
		</res>
	</prototype>
	<!-- 家族驻地相关协议 -->
	<prototype req_name="SEPTBUILDING_CREATE_REQ" req_type="0x000EEE01" res_name="SEPTBUILDING_CREATE_RES" res_type="0x700EEE01"
		req_client_send="true" res_client_receive="true" comment="客户端请求建造建筑">
		<req>
			<property name="septId" type="long" comment="家族Id"></property>
			<property name="buildType" type="int" comment="建筑类型"></property>
			<property name="npcId" type="long" comment="建在哪个NPC身上"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>
	<prototype req_name="SEPTBUILDING_LVUP_REQ" req_type="0x000EEE02" res_name="SEPTBUILDING_LVUP_RES" res_type="0x700EEE02" req_client_send="true"
		res_client_receive="true" comment="客户端请求升级建筑">
		<req>
			<property name="septId" type="long" comment="家族Id"></property>
			<property name="npcId" type="long" comment="NPCId"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>
	<prototype req_name="SEPTBUILDING_LVDOWN_REQ" req_type="0x000EEE03" res_name="SEPTBUILDING_LVDOWN_RES" res_type="0x700EEE03"
		req_client_send="true" res_client_receive="true" comment="客户端请求降级建筑">
		<req>
			<property name="septId" type="long" comment="家族Id"></property>
			<property name="npcId" type="long" comment="NPCId"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>
	<prototype req_name="SEPTBUILDING_QUERY_CANUP_REQ" req_type="0x000EEE04" res_name="SEPTBUILDING_QUERY_CANUP_RES" res_type="0x700EEE04"
		req_client_send="true" res_client_receive="true" comment="查看可升级建筑">
		<req>
			<property name="septId" type="long" comment="家族Id"></property>
		</req>
		<res>
			<property name="npcId" type="long[]" comment="可升级建筑(NPCID)"></property>
		</res>
	</prototype>
	<prototype req_name="SEPTBUILDING_QUERY_BUILDING_INFO_REQ" req_type="0x000EEE05" res_name="SEPTBUILDING_QUERY_BUILDING_INFO_RES" res_type="0x700EEE05"
		req_client_send="true" res_client_receive="true" comment="查看建筑信息">
		<req>
			<property name="npcId" type="int" comment="NPCID" />
			<property name="infoType" type="int" comment="信息 : 0-等级(建筑等级发送 -1 表示查询等级),1-增加繁荣度,2-维修费用,3-升级所需资源,4-特殊功能" />
		</req>
		<res>
			<property name="info" type="String" comment="具体信息" encoding="UTF-8"></property>
		</res>
	</prototype>
	<prototype req_name="SEPTBUILDING_CREAT_SEPT_REQ" req_type="0x000EEE06" res_name="SEPTBUILDING_CREAT_SEPT_RES" res_type="0x700EEE06"
		req_client_send="true" res_client_receive="true" comment="创建一个默认的家族驻地">
		<req>
			<property name="septId" type="long" comment="家族Id"></property>
			<property name="mapName" type="String" encoding="UTF-8" comment="所在地图"></property>
			<property name="name" type="String" encoding="UTF-8" comment="驻地名称"></property>
			<property name="NPCId" type="long" encoding="UTF-8" comment="NPCID"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>

	<prototype req_name="SEPTBUILDING_DESTROY_REQ" req_type="0x000EEE08" res_name="SEPTBUILDING_DESTROY_RES" res_type="0x700EEE08"
		req_client_send="true" res_client_receive="true" comment="摧毁建筑">
		<req>
			<property name="npcId" type="long" comment="NPCID"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>

	<prototype req_name="SEPTBUILDING_INFO_REQ" req_type="0x000EEE09" res_name="SEPTBUILDING_INFO_RES" res_type="0x700EEE09" req_client_send="true"
		res_client_receive="true" comment="查看家族建筑信息">
		<req>
		</req>
		<res>
			<object-property name="septBuildingEntity4Clients" type="SeptBuildingEntity4Client[]" comment="家族建筑信息">
				<property name="npcId" type="long" encoding="UTF-8" comment="npcId" />
				<property name="npcName" type="String" encoding="UTF-8" comment="npcName" />
				<property name="grade" type="int" encoding="UTF-8" comment="建筑当前等级" />
				<property name="inBuild" type="boolean" encoding="UTF-8" comment="是否是建造状态" />
				<property name="buildType" type="int" encoding="UTF-8" comment="建筑类型" />
				<property name="index" type="int" encoding="UTF-8" comment="所在的位置索引" />
				<property name="x" type="int" encoding="UTF-8" comment="所在的位置x" />
				<property name="y" type="int" encoding="UTF-8" comment="所在的位置y" />
				<property name="des" type="String" encoding="UTF-8" comment="建筑的描述" />
				<property name="icon" type="String" encoding="UTF-8" comment="建筑图标" />
				<property name="depend" type="String" encoding="UTF-8" comment="建造前提" />
				<property name="dependType" type="int" encoding="UTF-8" comment="建造前提类型" />
				<property name="dependGrade" type="int" encoding="UTF-8" comment="建造前提等级" />
				<property name="lvUpCostSpirit" type="int" encoding="UTF-8" comment="升级所需灵脉值" />
				<property name="lvUpCostCoin" type="int" encoding="UTF-8" comment="升级所需金钱" />
				<property name="dailyMaintainCost" type="int" encoding="UTF-8" comment="当前维护费" />
				<property name="lvupMaintainCost" type="int" encoding="UTF-8" comment="升级后维护费" />
				<property name="currAddProsper" type="int" encoding="UTF-8" comment="当前繁荣度" />
				<property name="lvUpAddProsper" type="int" encoding="UTF-8" comment="升级后繁荣度" />
				<property name="releaseTaskNum" type="int" encoding="UTF-8" comment="升级需要建设任务数" />
			</object-property>
		</res>
	</prototype>
	<prototype req_name="JIAZU_CALL_IN_REQ" req_type="0x000EEE0A" req_client_send="true" comment="族长召集家族成员">
		<req></req>
	</prototype>
	<prototype req_name="NOTICE_CLIENT_SURFACENPC_REQ" req_type="0x000EEE0B" req_client_receive="true" comment="地物NPC信息">
		<req>
			<property name="npcIds" type="long[]" comment="地表类型NPC的ID" />
			<property name="showIndex" type="int[]" comment="地表类型NPC的显示层次" />
		</req>
	</prototype>
	<prototype req_name="NOTICE_CLIENT_JIAZUBOSS_REQ" req_type="0x000EEE0C" req_client_receive="true" comment="通知客户端打开/关闭查询家族BOSS活动按钮">
		<req>
			<property name="open" type="boolean" comment="true开/false关" />
		</req>
	</prototype>

	<prototype req_name="QUERY_JIAZUBOSS_DAMAGE_REQ" res_name="QUERY_JIAZUBOSS_DAMAGE_RES" req_type="0x000EEE0D" res_type="0x700EEE0D"
		req_client_send="true" res_client_receive="true" comment="查询伤害列表">
		<req>
		</req>
		<res>
			<property name="result" type="byte" encoding="UTF-8" comment="查询是否成功" />
			<property name="bossMaxHp" type="long" encoding="UTF-8" comment="boss最大血" />
			<property name="selfDamage" type="long" encoding="UTF-8" comment="自己的伤害" />
			<object-property name="jiazuBossDamageRecords" type="JiazuBossDamageRecord[]" comment="伤害列表">
				<property name="playerName" type="String" encoding="UTF-8" comment="角色名" />
				<property name="damage" type="long" encoding="UTF-8" comment="角色伤害" />
			</object-property>
		</res>
	</prototype>


	<!-- 摆摊 -->
	<prototype req_name="BOOTHSALE_LOOK_OVER_REQ" res_name="BOOTHSALE_LOOK_OVER_RES" req_type="0x00F00001" res_type="0x70F00001"
		req_client_send="true" res_client_receive="true" comment="查询玩家的摊位">
		<req>
			<property name="salerId" type="long" comment="摆摊人的ID" />
		</req>
		<res>
			<property name="salerId" type="long" comment="摆摊人的ID" />
			<property name="salername" type="String" encoding="UTF-8" comment="招牌"></property>
			<property name="advertising" type="String" encoding="UTF-8" comment="广告语"></property>
			<object-property name="boothInfo4Client" type="BoothInfo4Client" comment="摊位内容">
				<property name="entityId" type="long[]" comment="摊位中各个单元格放置的物体唯一标识，长度就是背包格个数，内容-1标识空格子"></property>
				<property name="counts" type="int[]" comment="摊位中各个单元格放置的物体个数，0标识没有物品"></property>
				<property name="perPrice" type="long[]" comment="物品的单价"></property>
				<property name="knapType" type="int[]" comment="物品所在原包裹"></property>
				<property name="knapIndex" type="int[]" comment="物品所在原包裹位置"></property>
			</object-property>
			<object-property name="messageBoardInfo4Client" type="MessageBoardInfo4Client[]" comment="摊位聊天版内容">
				<property name="name" type="String" encoding="UTF-8" comment="留言者"></property>
				<property name="content" type="String" encoding="UTF-8" comment="内容"></property>
				<property name="color" type="String" encoding="UTF-8" comment="文字颜色"></property>
			</object-property>
			<property name="buyTax" type="int" comment="买摆摊物品收的税率,要除100" />
		</res>
	</prototype>

	<prototype req_name="BOOTHSALE_SELECT_FOR_SALE_REQ" res_name="BOOTHSALE_SELECT_FOR_SALE_RES" req_type="0x00F00002" res_type="0x70F00002"
		req_client_send="true" res_client_receive="true" comment="选择出售物品,追售">
		<req>
			<property name="index" type="int" comment="在背包中的位置"></property>
			<property name="saleNum" type="int" comment="出售个数"></property>
			<property name="perPrice" type="long" comment="物品单价"></property>
		</req>
		<res>
			<property name="result" type="int" comment="0-成功 1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
			<property name="bagindex" type="int" comment="在背包中的位置"></property>
			<property name="index" type="int" comment="新卖东西的索引" />
			<property name="entityId" type="long" comment="新卖东西的物品ID" />
			<property name="num" type="int" comment="新卖东西的数量" />
			<property name="perPrice" type="long" comment="新卖东西的单价" />
		</res>
	</prototype>

	<prototype req_name="BOOTHSALE_CANCEL_FOR_SALE_REQ" res_name="BOOTHSALE_CANCEL_FOR_SALE_RES" req_type="0x00F00003" res_type="0x70F00003"
		req_client_send="true" res_client_receive="true" comment="取消物品出售">
		<req>
			<property name="index" type="int" comment="取消出售物品的位置"></property>
			<property name="saleNum" type="int" comment="物品个数"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
			<property name="index" type="int" comment="取消出售物品的位置" />
			<property name="pagType" type="int" comment="物品所在包裹type" />
			<property name="pagIndex" type="int" comment="物品所在包裹位置" />
		</res>
	</prototype>

	<prototype req_name="BOOTHSALE_ADVERTISING_REQ" res_name="BOOTHSALE_ADVERTISING_RES" req_type="0x00F00004" res_type="0x70F00004"
		req_client_send="true" res_client_receive="true" comment="提交广告语">
		<req>
			<property name="salername" type="String" encoding="UTF-8" comment="招牌"></property>
			<property name="advertising" type="String" encoding="UTF-8" comment="广告语"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="salername" type="String" encoding="UTF-8" comment="成功则为招牌内容,失败为失败的结果描述"></property>
			<property name="failreason" type="String" encoding="UTF-8" comment="成功则为广告语内容,失败不传" />
			<property name="cycle" type="int" comment="显示间隔,单位 秒" />
		</res>
	</prototype>

	<prototype req_name="BOOTHSALE_BUY_REQ" res_name="BOOTHSALE_BUY_RES" req_type="0x00F00005" res_type="0x70F00005" req_client_send="true"
		res_client_receive="true" comment="购买物品">
		<req>
			<property name="saler" type="long" comment="摊主ID"></property>
			<property name="index" type="int" comment="出售物品的位置"></property>
			<property name="saleNum" type="int" comment="物品个数"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>

	<prototype req_name="BOOTHSALE_LEAVE_WORD_REQ" res_name="BOOTHSALE_LEAVE_WORD_RES" req_type="0x00F00006" res_type="0x70F00006"
		req_client_send="true" res_client_receive="true" comment="给摊主留言">
		<req>
			<property name="saler" type="long" comment="摊主ID"></property>
			<property name="message" type="String" encoding="UTF-8" comment="留言内容"></property>
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>

	<prototype req_name="BOOTHSALE_CANCEL_BOOTHSALE_REQ" res_name="BOOTHSALE_CANCEL_BOOTHSALE_RES" req_type="0x00F00007" res_type="0x70F00007"
		req_client_send="true" res_client_receive="true" comment="收摊">
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>

	<prototype req_name="BOOTHSALE_BOOTHSALE_REQUEST_REQ" res_name="BOOTHSALE_BOOTHSALE_REQUEST_RES" req_type="0x00F00008" res_type="0x70F00008"
		req_client_send="true" res_client_receive="true" comment="申请摆摊">
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
			<object-property name="boothInfo4Client" type="BoothInfo4Client" comment="摊位内容,如果验证失败则传空">
				<property name="entityId" type="long[]" comment="摊位中各个单元格放置的物体唯一标识，长度就是背包格个数，内容-1标识空格子"></property>
				<property name="counts" type="int[]" comment="摊位中各个单元格放置的物体个数，0标识没有物品"></property>
				<property name="perPrice" type="long[]" comment="物品的单价"></property>
				<property name="knapType" type="int[]" comment="物品所在原包裹"></property>
				<property name="knapIndex" type="int[]" comment="物品所在原包裹位置"></property>
			</object-property>
		</res>
	</prototype>

	<!-- prototype req_name="BOOTHSALE_RESALE_REQUEST_REQ" res_name="BOOTHSALE_RESALE_REQUEST_RES" req_type="0x00F00009" res_type="0x70F00009" req_client_send="true" 
		res_client_receive="true" comment="申请追售"> </prototype
-->

	<prototype req_name="BOOTHSALE_BOOTHCHANGE_REQ" res_name="BOOTHSALE_BOOTHCHANGE_RES" req_type="0x00F00010" res_type="0x70F00010"
		res_client_receive="true" comment="摊位变化">
		<res>
			<property name="playerId" type="long" comment="摊主ID" />
			<property name="changeIndex" type="int[]" comment="摊位改变的位置" />
			<property name="changedEntityId" type="long[]" comment="改变后的物品ID" />
			<property name="changedNum" type="int[]" comment="改变后的物品数量" />
			<property name="changedPerPrice" type="long[]" comment="改变后的物品单价" />

			<object-property name="messageBoardInfo4Client" type="MessageBoardInfo4Client[]" comment="摊位聊天板新增内容">
				<property name="name" type="String" encoding="UTF-8" comment="留言者"></property>
				<property name="content" type="String" encoding="UTF-8" comment="内容"></property>
				<property name="color" type="String" encoding="UTF-8" comment="文字颜色"></property>
			</object-property>
		</res>
	</prototype>

	<prototype req_name="BOOTHSALE_LEAVE_BOOTH_REQ" res_name="BOOTHSALE_LEAVE_BOOTH_RES" req_type="0x00F00011" res_type="0x70F00011"
		req_client_send="true" res_client_receive="true" comment="离开摊位">
		<req>
			<property name="id" type="long" comment="摊主ID" />
		</req>
	</prototype>

	<prototype req_name="BOOTHSALE_QUIT_BOOTHSALE_REQUEST_REQ" res_name="BOOTHSALE_QUIT_BOOTHSALE_REQUEST_RES" req_type="0x00F00012" res_type="0x70F00012"
		req_client_send="true" res_client_receive="true" comment="取消申请摆摊">
	</prototype>

	<!-- prototype req_name="BOOTHSALE_RESALE_OVER_REQ" res_name="BOOTHSALE_RESALE_OVER_RES" req_type="0x00F00013" res_type="0x70F00013" req_client_send="true" 
		res_client_receive="true" comment="追售结束"> </prototype
-->

	<prototype req_name="BOOTHSALE_CHANAGE_ADVERTISING_REQ" res_name="BOOTHSALE_CHANAGE_ADVERTISING_RES" req_type="0x00F00014" res_type="0x70F00014"
		req_client_send="true" res_client_receive="true" comment="修改广告语">
		<req>
			<property name="advertising" type="String" encoding="UTF-8" comment="广告" />
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="成功则为广告语内容,失败为失败的结果描述" />
			<property name="cycle" type="int" comment="显示间隔,单位 秒" />
		</res>
	</prototype>
	
	<prototype req_name="BOOTHSALE_NEW_BUY_REQ" req_type="0x00F00015" req_client_send="true" comment="购买物品">
		<req>
			<property name="saler" type="long" comment="摊主ID"></property>
			<property name="entityID" type="long" comment="物品ID"></property>
			<property name="index" type="int" comment="出售物品的位置"></property>
			<property name="saleNum" type="int" comment="物品个数"></property>
		</req>
	</prototype>

	<!-- 求购 -->
	<prototype req_name="REQUESTBUY_RELEASE_REQ" res_name="REQUESTBUY_RELEASE_RES" req_type="0x00F00102" res_type="0x70F00102" req_client_send="true"
		res_client_receive="true" comment="发布求购信息">
		<req>
			<property name="mainType" type="String" encoding="UTF-8" comment="求购物品主类型" />
			<property name="subType" type="String" encoding="UTF-8" comment="求购物品子类型" />
			<property name="articleName" type="String" encoding="utf-8" comment="物品名称" />
			<property name="color" type="int" comment="物品颜色" />
			<property name="num" type="int" comment="求购数量" />
			<property name="perPrice" type="long" comment="求购单价" />
		</req>
	</prototype>

	<prototype req_name="REQUESTBUY_QUERY_SELF_REQ" res_name="REQUESTBUY_QUERY_SELF_RES" req_type="0x00F00103" res_type="0x70F00103"
		req_client_send="true" res_client_receive="true" comment="查看自己的求购">
		<req>
			<property name="startNum" type="int" comment="起始位置" />
			<property name="lenth" type="int" comment="查询长度" />
		</req>
		<res>
			<property name="startNum" type="int" comment="起始位置" />
			<property name="allNum" type="int" comment="总个数" />
			<object-property name="requestBuyInfo4Client" type="RequestBuyInfo4Client[]" comment="求购信息">
				<property name="requestBuyId" type="long" comment="求购ID" />
				<property name="mainType" type="String" encoding="UTF-8" comment="求购主类型" />
				<property name="subType" type="String" encoding="UTF-8" comment="求购子类型" />
				<property name="entityId" type="long" comment="EntityId, 装备或坐骑装备传的-1" />
				<property name="icon" type="String" encoding="UTF-8" comment="图标" />
				<property name="articleName" type="String" encoding="utf-8" comment="物品名" />
				<property name="grade" type="int" comment="等级" />
				<property name="grademax" type="int" comment="等级上限" />
				<property name="color" type="int" comment="颜色" />
				<property name="perPrice" type="long" comment="单价" />
				<property name="leftNum" type="int" comment="剩余数量" />
				<property name="releasePlayerName" type="String" encoding="utf-8" comment="求购者名字" />
				<property name="leftTime" type="String" encoding="utf-8" comment="剩余时间" />
			</object-property>
		</res>
	</prototype>
	<prototype req_name="REQUESTBUY_CANCEL_SELF_REQ" res_name="REQUESTBUY_CANCEL_SELF_RES" req_type="0x00F00104" res_type="0x70F00104"
		req_client_send="true" res_client_receive="true" comment="取消自己的求购">
		<req>
			<property name="id" type="long" comment="要取消的求购ID" />
		</req>
		<res>
			<property name="result" type="byte" comment="0成功  ,1失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败原因" />
		</res>
	</prototype>

	<prototype req_name="REQUESTBUY_QRY_HIGH_PRICE_REQ" res_name="REQUESTBUY_QRY_HIGH_PRICE_RES" req_type="0x00F00105" res_type="0x70F00105"
		req_client_send="true" res_client_receive="true" comment="试图出售物品(查看最高价)">
		<req>
			<property name="articleId" type="long" comment="要出售的物品ID" />
		</req>
		<res>
			<object-property name="requestBuyInfo4Client" type="RequestBuyInfo4Client" comment="求购信息">
				<property name="requestBuyId" type="long" comment="求购ID" />
				<property name="perPrice" type="long" comment="单价" />
				<property name="leftNum" type="int" comment="剩余数量" />
			</object-property>
		</res>
	</prototype>

	<prototype req_name="REQUESTBUY_SALE_REQ" res_name="REQUESTBUY_SALE_RES" req_type="0x00F00106" res_type="0x70F00106" req_client_send="true"
		res_client_receive="true" comment="出售物品">
		<req>
			<property name="id" type="long" comment="要出售给某个求购ID，未知发-1" />
			<property name="entityId" type="long" comment="要出售的物品ID" />
			<property name="index" type="int" comment="物品所在的位置" />
			<property name="num" type="int" comment="出售个数" />
		</req>
		<res>
			<property name="num" type="int" comment="实际出售个数(可能求购的数量不足)" />
			<property name="money" type="long" comment="实际得到的钱" />
		</res>
	</prototype>

	<prototype req_name="REQUESTBUY_QRY_BY_TERM_REQ" res_name="REQUESTBUY_QRY_BY_TERM_RES" req_type="0x00F00107" res_type="0x70F00107"
		req_client_send="true" res_client_receive="true" comment="查询当前所有符合条件的求购">
		<req>
			<property name="mainType" type="String" encoding="UTF-8" comment="求购物品主类型" />
			<property name="subType" type="String" encoding="UTF-8" comment="求购物品子类型" />
			<property name="articleName" type="String" encoding="utf-8" comment="物品名称" />
			<property name="color" type="int" comment="物品颜色 -1为要查所有颜色" />
			<property name="level" type="String" encoding="UTF-8" comment="级别" />
			<property name="startNum" type="int" comment="起始位置" />
			<property name="lenth" type="int" comment="查询长度" />
		</req>
		<res>
			<property name="startNum" type="int" comment="起始位置" />
			<property name="allNum" type="int" comment="总个数" />
			<object-property name="requestBuyInfo4Client" type="RequestBuyInfo4Client[]" comment="求购信息">
				<property name="requestBuyId" type="long" comment="求购ID" />
				<property name="mainType" type="String" encoding="UTF-8" comment="求购主类型" />
				<property name="subType" type="String" encoding="UTF-8" comment="求购子类型" />
				<property name="entityId" type="long" comment="EntityId, 装备或坐骑装备传的-1" />
				<property name="icon" type="String" encoding="UTF-8" comment="图标" />
				<property name="articleName" type="String" encoding="utf-8" comment="物品名" />
				<property name="grade" type="int" comment="等级" />
				<property name="grademax" type="int" comment="等级上限" />
				<property name="color" type="int" comment="颜色" />
				<property name="perPrice" type="long" comment="单价" />
				<property name="leftNum" type="int" comment="剩余数量" />
				<property name="releasePlayerName" type="String" encoding="utf-8" comment="求购者名字" />
				<property name="leftTime" type="String" encoding="utf-8" comment="剩余时间" />
			</object-property>
		</res>
	</prototype>
	<prototype req_name="REQUESTBUY_ASK_KNAP_REMAI_REQ" res_name="REQUESTBUY_ASK_KNAP_REMAI_RES" req_type="0x00F00108" res_type="0x70F00108"
		req_client_send="true" res_client_receive="true" comment="查询当前包裹符合热卖条件的求购">
		<res>
			<property name="entityId" type="long[]" comment="包裹中物品对应的ID" />
		</res>
	</prototype>

	<prototype req_name="REQUESTBUY_CONTIDION_TYPE_REQ" res_name="REQUESTBUY_CONTIDION_TYPE_RES" req_type="0x00f00109" res_type="0x70F00109"
		req_client_send="true" res_client_receive="true" comment="请求求购物品一级二级相关分类">
		<res>
			<object-property name="requestBuyOption" type="RequestOption[]" comment="分类信息">
				<property name="first" type="String" encoding="UTF-8" comment="一级名称" />
				<property name="second" type="String[]" encoding="UTF-8" comment="二级名称" />
			</object-property>
			<property name="level" type="String[]" encoding="UTF-8" comment="等级" />
		</res>
	</prototype>

	<prototype req_name="REQUESTBUY_GET_PROPNAME_REQ" res_name="REQUESTBUY_GET_PROPNAME_RES" req_type="0x00f0010A" res_type="0x70F0010A"
		req_client_send="true" res_client_receive="true" comment="根据1,2级分类取相关物品">
		<req>
			<property name="first" type="String" encoding="UTF-8" comment="一级分类名称" />
			<property name="second" type="String" encoding="UTF-8" comment="二级分类名称" />
		</req>
		<res>
			<property name="first" type="String" encoding="UTF-8" comment="一级分类名称" />
			<property name="second" type="String" encoding="UTF-8" comment="二级分类名称" />
			<property name="propname" type="String[]" encoding="UTF-8" comment="物品名称" />
			<property name="color" type="int[]" comment="物品品质颜色是否是单色，如果是单色传单色索引，否则传-1" />
		</res>
	</prototype>

	<prototype req_name="REQUESTBUY_GET_ENTITY_REQ" res_name="REQUESTBUY_GET_ENTITY_RES" req_type="0x00f0010B" res_type="0x70F0010B"
		req_client_send="true" res_client_receive="true" comment="查询要求购的物品的Entity对象">
		<req>
			<property name="mainType" type="String" encoding="UTF-8" comment="求购物品主类型" />
			<property name="subType" type="String" encoding="UTF-8" comment="求购物品子类型" />
			<property name="articleName" type="String" encoding="utf-8" comment="物品名称" />
			<property name="color" type="int" comment="物品颜色" />
		</req>
		<res>
			<property name="entityId" type="long" comment="EntityId, 装备或坐骑装备传的-1" />
			<property name="icon" type="String" encoding="UTF-8" comment="图标" />
			<property name="fee" type="int" comment="费用(税率)" />
			<property name="maxPrice" type="long" comment="最高求购价" />
		</res>
	</prototype>

	<prototype req_name="REQUESTBUY_FASTBUY_REQ" res_name="REQUESTBUY_FASTBUY_RES" req_type="0x00f0010C" res_type="0x70F0010C" req_client_send="true"
		res_client_receive="true" comment="查询当前快速求购列表">
		<res>
			<object-property name="requestBuyInfo4Client" type="RequestBuyInfo4Client[]" comment="求购信息">
				<property name="mainType" type="String" encoding="UTF-8" comment="求购主类型" />
				<property name="subType" type="String" encoding="UTF-8" comment="求购子类型" />
				<property name="entityId" type="long" comment="EntityId, 装备或坐骑装备传的-1" />
				<property name="icon" type="String" encoding="UTF-8" comment="图标" />
				<property name="articleName" type="String" encoding="utf-8" comment="物品名" />
				<property name="colorType" type="int" comment="物品品质颜色是否是单色，如果是单色传单色索引，否则传-1" />
			</object-property>
		</res>
	</prototype>

	<prototype req_name="REQUESTBUY_SUISHEN_REQ" req_type="0x00f0010D" req_client_send="true" res_name="REQUESTBUY_SUISHEN_RES" res_type="0x70f0010D"
		res_client_receive="true" comment="随身求购">
		<req>
		</req>
		<res>
			<property name="isOpen" type="boolean" comment="是否成功" />
		</res>
	</prototype>


	<!-- 元神 -->
	<prototype req_name="PLAYER_ACTIVATION_SOUL_REQ" res_name="PLAYER_ACTIVATION_SOUL_RES" req_type="0x00FA0100" res_type="0x70FA0100"
		req_client_send="true" res_client_receive="true" comment="激活元神">
		<req>
			<property type="int" name="soulType" comment="元神的类型" />
			<property type="int" name="career" comment="要激活的职业" />
		</req>
		<res>
			<property name="result" type="byte" comment="0 成功 1失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="0 成功 1失败" />
		</res>
	</prototype>
	<prototype req_name="PLAYER_SWITCH_SOUL_REQ" res_name="PLAYER_SWITCH_SOUL_RES" req_type="0x00FA0101" res_type="0x70FA0101" req_client_send="true"
		res_client_receive="true" comment="切换元神">
		<req>
			<property type="int" name="soulType" comment="元神的类型" />
		</req>
		<res>
			<property name="result" type="byte" comment="0 成功 1失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="0 成功 1失败" />
			<property name="switchColdDown" type="long" comment="切换元神冷却时间"></property>
		</res>
	</prototype>

	<prototype req_name="PLAYER_SOUL_CHANGE_REQ" res_name="PLAYER_SOUL_CHANGE_RES" req_type="0x00FA0102" res_type="0x70FA0102"
		res_client_receive="true" comment="元神属性变化">
		<res>
			<property name="action" type="int" comment="操作:0属性变化 1 新增" />
			<object-property name="soul" type="Soul" comment="变化的元神">
				<property name="soulType" type="int" comment="元神类型" />
				<property name="career" type="byte" comment="职业" />
				<property name="grade" type="int" comment="等级" />
				<property name="maxHp" type="int" comment="最大生命" />
				<property name="maxMp" type="int" comment="最大法力" />
				<property name="strength" type="int" comment="力量" />
				<property name="spellpower" type="int" comment="智力" />
				<property name="constitution" type="int" comment="耐力" />
				<property name="dexterity" type="int" comment="敏捷" />
				<property name="hit" type="int" comment="命中" />
				<property name="dodge" type="int" comment="回避" />
				<property name="accurate" type="int" comment="精准" />
				<property name="phyAttack" type="int" comment="近战攻击强度" />
				<property name="magicAttack" type="int" comment="魔法攻击强度" />
				<property name="criticalHit" type="int" comment="暴击" />
				<property name="criticalDefence" type="int" comment="暴击防御" />
				<property name="phyDefence" type="int" comment="物理防御" />
				<property name="magicDefence" type="int" comment="魔法防御" />
				<property name="breakDefence" type="int" comment="打断防御" />
				<property name="fireAttack" type="int" comment="火焰伤害" />
				<property name="fireDefence" type="int" comment="火焰防御" />
				<property name="fireIgnoreDefence" type="int" comment="忽略火焰防御" />
				<property name="blizzardAttack" type="int" comment="冰霜伤害" />
				<property name="blizzardDefence" type="int" comment="冰霜防御" />
				<property name="blizzardIgnoreDefence" type="int" comment="忽略冰霜防御" />
				<property name="windAttack" type="int" comment="飓风伤害" />
				<property name="windDefence" type="int" comment="飓风防御" />
				<property name="windIgnoreDefence" type="int" comment="忽略飓风防御" />
				<property name="thunderAttack" type="int" comment="雷电伤害" />
				<property name="thunderDefence" type="int" comment="雷电防御" />
				<property name="thunderIgnoreDefence" type="int" comment="忽略雷电防御" />
			</object-property>
		</res>
	</prototype>

	<!-- 充值 -->
	<prototype req_name="CARD_SAVING_REQ" req_type="0x0000EF00" res_name="CARD_SAVING_RES" res_type="0x7000EF00" req_client_send="true"
		res_client_receive="true" comment="用户充值">
		<req>
			<property name="username" type="String" encoding="UTF-8" comment="账号名" />
			<property name="cardno" type="String" encoding="UTF-8" comment="卡序列号" />
			<property name="cardpass" type="String" encoding="UTF-8" comment="卡密码" />
			<property name="mianzhi" type="int" comment="卡面值" />
			<property name="amount" type="int" comment="充值额度，客户端可直接填面值" />
			<property name="cardtype" type="int" comment="卡类型, 0-神州行,1-联通卡,2-电信卡" />
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="结果描述" />
		</res>
	</prototype>

	<prototype req_name="SAVING_HISTORY_REQ" req_type="0x0000EF01" res_name="SAVING_HISTORY_RES" res_type="0x7000EF01" req_client_send="true"
		res_client_receive="true" comment="客户端请求充值记录">
		<req>
			<property name="pagenum" type="int" comment="每页的显示数量,20"></property>
			<property name="pageindex" type="int" comment="显示第几页:0,1,2,3..."></property>
		</req>
		<res>
			<property name="savingRecord" type="String[]" encoding="UTF-8" comment="充值记录的描述" />
			<property name="savingTotalNum" type="int" comment="总充值数" />
			<property name="totalpagenum" type="int" comment="总页数" />
		</res>
	</prototype>

	<prototype req_name="SET_QUEUE_READYNUM_REQ" req_type="0x70F00000" req_client_send="true"
		comment="客户端设置网络参数,1 含义是有数据包立即发送  2 含义是有2个数据包立即发送，如果只有一个数据包，等到 0.2 * 2 = 0.4秒   3 含义是有3个数据包立即发送，如果只有一个或者两个数据包，等到 0.2 * 3 = 0.6秒">
		<req>
			<property name="selectedQueueReadyNum" type="int" comment="玩家设置的网络流量参数"></property>
			<property name="viewWidth" type="int" comment="视野的宽度"></property>
			<property name="viewHeight" type="int" comment="视野的高度"></property>
		</req>
	</prototype>

	<!-- gangwarehouse -->
	<prototype req_name="GANGWAREHOUSE_GET_REQ" req_type="0x0000EF02" res_name="GANGWAREHOUSE_GET_RES" res_type="0x7000EF02" req_client_send="true"
		res_client_receive="true" comment="获取一个帮派仓库">
		<req>
		</req>
		<res>
			<property name="entityIds1" type="long[]" comment="格子物品数组，值为-1的元素表示格子为空" />
			<property name="entityIds2" type="long[]" comment="格子物品数组，值为-1的元素表示格子为空" />
			<property name="entityIds3" type="long[]" comment="格子物品数组，值为-1的元素表示格子为空" />
			<property name="counts1" type="int[]" comment="格子物品数量数组，值为0的元素表示格子为空" />
			<property name="counts2" type="int[]" comment="格子物品数量数组，值为0的元素表示格子为空" />
			<property name="counts3" type="int[]" comment="格子物品数量数组，值为0的元素表示格子为空" />
			<property name="funds" type="long" comment="帮派资金" />
			<property name="yuanbaoToContribution" type="int" comment="元宝与贡献度的兑换比率" />
			<property name="yuanbaoToFunds" type="int" comment="元宝与帮会资金的兑换比率" />
		</res>
	</prototype>

	<prototype req_name="GANGWAREHOUSE_PUT_REQ" req_type="0x0000EF03" req_client_send="true" comment="往帮派仓库中放置一个物品">
		<req>
			<property name="privilegeType" type="byte" comment="仓库的类型 0公共 1帮主和副帮主 2帮主" />
			<property name="cellIndex" type="int" comment="格子的位置" />
		</req>
	</prototype>

	<prototype req_name="GANGWAREHOUSE_TAKE_REQ" req_type="0x0000EF04" req_client_send="true" comment="从帮派仓库中取出一个物品">
		<req>
			<property name="privilegeType" type="byte" comment="仓库的类型 0公共 1帮主和副帮主 2帮主" />
			<property name="cellIndex" type="int" comment="格子的位置" />
		</req>
	</prototype>

	<prototype req_name="GANGWAREHOUSE_ARRANGE_REQ" req_type="0x0000EF05" req_client_send="true" comment="整理帮派仓库">
		<req>
			<property name="privilegeType" type="byte" comment="仓库的类型 0公共 1帮主和副帮主 2帮主" />
		</req>
	</prototype>

	<prototype req_name="CONTRIBUTION_REQ" req_type="0x0000EF06" req_client_send="true" comment="捐款或者捐物">
		<req>
			<property name="contributionType" type="byte" comment="捐款的类型 0帮派基金" />
			<property name="amout" type="long" comment="捐款的金额" />
			<property name="cellIndex" type="int" comment="格子的位置" />
		</req>
	</prototype>

	<prototype req_name="GANG_WARE_HOUSE_JOURNAL_REQ" res_name="GANG_WARE_HOUSE_JOURNAL_RES" req_type="0x0000EF07" res_type="0x7000EF07"
		req_client_send="true" res_client_receive="true" comment="请求公会仓库日志">
		<req>
			<property name="wareHouseType" type="byte" comment="仓库类型" />
			<property name="startIndex" type="int" comment="起始行数" />
			<property name="lines" type="int" comment="长度" />
		</req>
		<res>
			<property name="total" type="int" comment="日志总条数" />
			<property name="journal" type="String[]" encoding="UTF-8" comment="日志内容" />
		</res>
	</prototype>

	<!-- 门的实现 -->
	<prototype req_name="MAP_POLYGON_MODIFY_REQ" req_type="0x0000EF08" req_client_receive="true" comment="服务器发送给客户端，通知客户端增加或者删除某个碰撞区域">
		<req>
			<property name="modityType" type="byte" comment="修改类型，0标识增加，1标识删除" />
			<property name="polygonX" type="short[]" comment="碰撞区域的X坐标" />
			<property name="polygonY" type="short[]" comment="碰撞区域的Y坐标" />
		</req>
	</prototype>

	<!-- 技能CD修正,1.防止冷却时间长的技能在服务端释放失败，导致无谓的长时间冷却。2.重新上线时通知玩家某些技能的冷却情况。 -->
	<prototype req_name="SKILL_CD_MODIFY_REQ" req_type="0x0000EF09" req_client_receive="true" comment="服务器发送给客户端，通知客户端技能CD状态，防止冷却时间长的技能在服务端释放失败，导致无谓的长时间冷却。">
		<req>
			<property name="playerid" type="long" comment="玩家ID" />
			<property name="skillid" type="short" comment="技能ID" />
			<property name="skillstate" type="byte" comment="技能状态,0开始，1-吟唱，2-攻击，3-冷却" />
			<property name="startTime" type="long" comment="技能开始执行的时间" />
		</req>
	</prototype>

	<!-- 物品CD修正,1.防止冷却时间长的技能在服务端释放失败，导致无谓的长时间冷却。2.重新上线时通知玩家某些技能的冷却情况。 -->
	<prototype req_name="PROPS_CD_MODIFY_REQ" req_type="0x0200EF09" req_client_receive="true" comment="服务器发送给客户端，通知客户端技能CD状态，防止冷却时间长的技能在服务端释放失败，导致无谓的长时间冷却。">
		<req>
			<property name="playerid" type="long" comment="玩家ID" />
			<property name="categoryName" type="String" encoding="UTF-8" comment="物品种类" />
			<property name="startTime" type="long" comment="物品种类开始执行的时间" />
			<property name="cdType" type="byte" comment="0标识设置cd，1标识取消cd"></property>
		</req>
	</prototype>

	<!-- prototype req_name="MAGIC_WEAPON_SKILL_CD_MODIFY_REQ" req_type="0x0300EF09" req_client_receive="true" comment="服务器发送给客户端，通知客户端宠物技能CD状态，防止冷却时间长的技能在服务端释放失败，导致无谓的长时间冷却。"> 
		<req> <property name="mId" type="long" comment="宠物ID"/> <property name="skillid" type="short" comment="技能ID"/> <property name="skillstate" type="byte" 
		comment="技能状态,0开始，1-吟唱，2-攻击，3-冷却"/> <property name="startTime" type="long" comment="技能开始执行的时间"/> </req> </prototype
-->


	<!-- 排行榜 -->
	<prototype req_name="GET_BILLBOARD_MENU_REQ" res_name="GET_BILLBOARD_MENU_RES" req_type="0x0000EF10" res_type="0x7000EF10" req_client_send="true"
		res_client_receive="true" comment="请求排行榜菜单">
		<req>
		</req>
		<res>
			<property name="menu" type="String[]" encoding="UTF-8" comment="主菜单" />
			<property name="submenu" type="String[]" encoding="UTF-8" comment="子菜单" />
			<property name="types" type="byte[]" comment="类型" />
			<property name="maxLines" type="int" comment="最大长度" />
		</res>
	</prototype>

	<prototype req_name="GET_BILLBOARD_REQ" res_name="GET_BILLBOARD_RES" req_type="0x0000EF11" res_type="0x7000EF11" req_client_send="true"
		res_client_receive="true" comment="请求排行榜">
		<req>
			<property name="menu" type="String" encoding="UTF-8" comment="主菜单" />
			<property name="submenu" type="String" encoding="UTF-8" comment="子菜单" />
		</req>
		<res>
			<property name="titles" type="String[]" encoding="UTF-8" comment="表头" />
			<property name="rankObject" type="String[]" encoding="UTF-8" comment="排行内容" />
			<property name="value" type="long[]" comment="数据" />
			<property name="description" type="String[]" encoding="UTF-8" comment="描述" />
			<property name="ids" type="long[]" comment="ID" />
			<property name="additionalInfo" type="int[]" comment="附加信息" />
			<property name="selfRank" type="int" comment="玩家自己的排名" />
		</res>
	</prototype>

	<prototype req_name="EQUIPMENT_JOIN_BILLBOARD_REQ" req_type="0x0000EF12" req_client_send="true" comment="请求参与排行">
		<req>
			<property name="equipmentId" type="long" comment="装备ID" />
		</req>
	</prototype>

	<!-- 充值信息 -->
	<prototype req_name="GET_CARD_CHARGE_INFO_REQ" res_name="GET_CARD_CHARGE_INFO_RES" req_type="0x0000EF13" res_type="0x7000EF13"
		req_client_send="true" res_client_receive="true" comment="请求充值卡充值信息">
		<req>
		</req>
		<res>
			<property name="cardTypeNames" type="String[]" encoding="UTF-8" comment="充值卡种类名称" />
			<property name="cardTypeIds" type="byte[]" comment="充值卡种类ID" />
			<property name="cardTypeInfos" type="String[]" encoding="UTF-8" comment="每种充值卡的说明名字" />
			<property name="facevalues" type="String[]" encoding="UTF-8" comment="每种充值卡的面值，所有面额用一个字符串，用分隔号隔开，例如10：20：30" />
			<property name="exchange" type="String[]" encoding="UTF-8" comment="兑换元宝的数量，所有兑换的数量用一个字符串，用分隔号隔开，例如120：240：360" />
		</res>
	</prototype>

	<prototype req_name="GET_SMS_CHARGE_INFO_REQ" res_name="GET_SMS_CHARGE_INFO_RES" req_type="0x0000EF14" res_type="0x7000EF14"
		req_client_send="true" res_client_receive="true" comment="请求短信充值信息">
		<req>
		</req>
		<res>
			<property name="gateway" type="String[]" encoding="UTF-8" comment="发送短信的途径，移动 联通等" />
			<property name="info" type="String[]" encoding="UTF-8" comment="信息提示" />
			<property name="exchangeRate" type="int[]" comment="兑换率，一元短信兑换多少元宝" />
			<property name="facevalues" type="String[]" encoding="UTF-8" comment="发送短信的金额，所有金额用一个字符串，用分隔号隔开，例如10：20：30" />
			<property name="msg" type="String[]" encoding="UTF-8" comment="发送的信息" />
			<property name="smsNum" type="String[]" encoding="UTF-8" comment="短信号码" />
			<property name="unitPrice" type="int[]" comment="每条短信的收费金额" />
			<property name="chargeQuota" type="int" comment="用户可发送的金额" />
			<property name="userChargeMonthlyAmount" type="int" comment="用户本月已经充值的金额" />
			<property name="userChargeDailyAmount" type="int" comment="用户本日已经充值的金额" />
			<property name="bindingMsg" type="String[]" encoding="UTF-8" comment="绑定短信发送的信息" />
			<property name="bindingSmsNum" type="String[]" encoding="UTF-8" comment="绑定短信号码" />
		</res>
	</prototype>

	<prototype req_name="SMS_CHARGE_REQ" req_type="0x0000EF15" req_client_send="true" comment="短信充值信息">
		<req>
			<property name="unitPrice" type="int" comment="短信计费金额" />
			<property name="gateway" type="int" comment="短信发送途径 0：移动 1：联通 2：电信" />
			<property name="msg" type="String" encoding="UTF-8" comment="短信内容" />
			<property name="smsNum" type="String" encoding="UTF-8" comment="短信号码" />
			<property name="userAccount" type="String" encoding="UTF-8" comment="玩家帐号" />
			<property name="smsCounts" type="int" comment="短信条数" />
		</req>

	</prototype>

	<!-- 短信操作 -->
	<prototype req_name="SMS_BIND_REQ" req_type="0x0000EF17" req_client_send="true" comment="短信操作:mode: 0-绑定手机号,1-取消绑定,2-取回账号密码" res_name="SMS_BIND_RES"
		res_type="0x7000EF17" req_client_receive="true" res_client_receive="true">
		<req>
			<property name="mode" type="byte" comment="绑定操作，mode: 0-绑定,1-取消绑定,2-取回密码"></property>
			<property name="username" type="String" encoding="UTF-8" comment="账户名" />
			<property name="passwd" type="String" encoding="UTF-8" comment="密码，取回密码时可以空字符串" />
		</req>
		<res>
			<property name="smsinfo" type="String" encoding="UTF-8" comment="短信内容,或不需要发短信的原因" />
			<property name="mode" type="byte" comment="短信操作:>=0需要发短信"></property>
		</res>
	</prototype>

	<!-- 推荐系统 -->
	<prototype req_name="NEW_RECOMMEND_REQ" res_name="NEW_RECOMMEND_RES" req_type="0x0000AF01" res_type="0x7000AF01" req_client_send="true"
		res_client_receive="true" comment="创建新的推荐，当返回的所有字段都为空是，表示服务器端发生错误，推荐失败">
		<req>
			<property name="friendMobile" type="String" encoding="UTF-8" comment="被推荐人手机号码" />
			<property name="friendName" type="String" encoding="UTF-8" comment="被推荐人姓名" />
		</req>
		<res>
			<property name="friendMobile" type="String" encoding="UTF-8" comment="被推荐人手机号码" />
			<property name="friendName" type="String" encoding="UTF-8" comment="被推荐人姓名" />
			<property name="url" type="String" encoding="UTF-8" comment="被推荐人访问的wap地址，如空则为此用户已在游戏中" />
			<property name="friendServerName" type="String" encoding="UTF-8" comment="被推荐人在游戏服务器，如不在游戏中为空" />
			<property name="friendGameUserName" type="String" encoding="UTF-8" comment="被推荐人在游戏中的账号，如不在游戏中为空" />
			<property name="friendPlayerName" type="String" encoding="UTF-8" comment="被推荐人角色名称，如不在游戏中为空" />
			<property name="friendPolcamp" type="byte" comment="被推荐人所在阵营" />
		</res>
	</prototype>

	<!-- 运营活动信息 -->
	<prototype req_name="QUERY_ACTIVITIES_INFO_REQ" res_name="QUERY_ACTIVITIES_INFO_RES" req_type="0x0000AF02" res_type="0x7000AF02"
		req_client_send="true" res_client_receive="true" comment="查询运营活动信息">
		<req>
		</req>
		<res>
			<object-property name="mon" type="ActivityItem[]" comment="周一活动信息">
				<property name="title" type="String" encoding="UTF-8" comment="活动信息"></property>
				<property name="time" type="String" encoding="UTF-8" comment="活动信息"></property>
				<property name="startMapName" type="String" encoding="UTF-8" comment="任务开始NPC所在地图"></property>
				<property name="startX" type="int" comment="任务开始NPC所在坐标X"></property>
				<property name="startY" type="int" comment="任务开始NPC所在坐标Y"></property>
				<property name="needPathfinding" type="boolean" comment="是否需要寻路"></property>
				<property name="textColor" type="int" comment="文字颜色"></property>
				<property name="activityId" type="long" comment="id"></property>
			</object-property>

			<object-property name="tue" type="ActivityItem[]" comment="周二活动信息">
				<property name="title" type="String" encoding="UTF-8" comment="活动信息"></property>
				<property name="time" type="String" encoding="UTF-8" comment="活动信息"></property>
				<property name="startMapName" type="String" encoding="UTF-8" comment="任务开始NPC所在地图"></property>
				<property name="startX" type="int" comment="任务开始NPC所在坐标X"></property>
				<property name="startY" type="int" comment="任务开始NPC所在坐标Y"></property>
				<property name="needPathfinding" type="boolean" comment="是否需要寻路"></property>
				<property name="textColor" type="int" comment="文字颜色"></property>
				<property name="activityId" type="long" comment="id"></property>
			</object-property>

			<object-property name="wed" type="ActivityItem[]" comment="周三活动信息">
				<property name="title" type="String" encoding="UTF-8" comment="活动信息"></property>
				<property name="time" type="String" encoding="UTF-8" comment="活动信息"></property>
				<property name="startMapName" type="String" encoding="UTF-8" comment="任务开始NPC所在地图"></property>
				<property name="startX" type="int" comment="任务开始NPC所在坐标X"></property>
				<property name="startY" type="int" comment="任务开始NPC所在坐标Y"></property>
				<property name="needPathfinding" type="boolean" comment="是否需要寻路"></property>
				<property name="textColor" type="int" comment="文字颜色"></property>
				<property name="activityId" type="long" comment="id"></property>
			</object-property>

			<object-property name="thu" type="ActivityItem[]" comment="周四活动信息">
				<property name="title" type="String" encoding="UTF-8" comment="活动信息"></property>
				<property name="time" type="String" encoding="UTF-8" comment="活动信息"></property>
				<property name="startMapName" type="String" encoding="UTF-8" comment="任务开始NPC所在地图"></property>
				<property name="startX" type="int" comment="任务开始NPC所在坐标X"></property>
				<property name="startY" type="int" comment="任务开始NPC所在坐标Y"></property>
				<property name="needPathfinding" type="boolean" comment="是否需要寻路"></property>
				<property name="textColor" type="int" comment="文字颜色"></property>
				<property name="activityId" type="long" comment="id"></property>
			</object-property>

			<object-property name="fri" type="ActivityItem[]" comment="周五活动信息">
				<property name="title" type="String" encoding="UTF-8" comment="活动信息"></property>
				<property name="time" type="String" encoding="UTF-8" comment="活动信息"></property>
				<property name="startMapName" type="String" encoding="UTF-8" comment="任务开始NPC所在地图"></property>
				<property name="startX" type="int" comment="任务开始NPC所在坐标X"></property>
				<property name="startY" type="int" comment="任务开始NPC所在坐标Y"></property>
				<property name="needPathfinding" type="boolean" comment="是否需要寻路"></property>
				<property name="textColor" type="int" comment="文字颜色"></property>
				<property name="activityId" type="long" comment="id"></property>
			</object-property>

			<object-property name="sat" type="ActivityItem[]" comment="周六活动信息">
				<property name="title" type="String" encoding="UTF-8" comment="活动信息"></property>
				<property name="time" type="String" encoding="UTF-8" comment="活动信息"></property>
				<property name="startMapName" type="String" encoding="UTF-8" comment="任务开始NPC所在地图"></property>
				<property name="startX" type="int" comment="任务开始NPC所在坐标X"></property>
				<property name="startY" type="int" comment="任务开始NPC所在坐标Y"></property>
				<property name="needPathfinding" type="boolean" comment="是否需要寻路"></property>
				<property name="textColor" type="int" comment="文字颜色"></property>
				<property name="activityId" type="long" comment="id"></property>
			</object-property>

			<object-property name="sun" type="ActivityItem[]" comment="周日活动信息">
				<property name="title" type="String" encoding="UTF-8" comment="活动信息"></property>
				<property name="time" type="String" encoding="UTF-8" comment="活动信息"></property>
				<property name="startMapName" type="String" encoding="UTF-8" comment="任务开始NPC所在地图"></property>
				<property name="startX" type="int" comment="任务开始NPC所在坐标X"></property>
				<property name="startY" type="int" comment="任务开始NPC所在坐标Y"></property>
				<property name="needPathfinding" type="boolean" comment="是否需要寻路"></property>
				<property name="textColor" type="int" comment="文字颜色"></property>
				<property name="activityId" type="long" comment="id"></property>
			</object-property>

		</res>
	</prototype>

	<prototype req_name="QUERY_ACTIVITIES_DETAIL_REQ" res_name="QUERY_ACTIVITIES_DETAIL_RES" req_type="0x0000AF03" res_type="0x7000AF03"
		req_client_send="true" res_client_receive="true" comment="查询运营活动细节">
		<req>
			<property name="activityId" type="long" comment="id" />
		</req>
		<res>
			<property name="activityId" type="long" />
			<property name="detail" type="String" encoding="UTF-8" />
		</res>
	</prototype>

	<prototype req_name="QUERY_NETWORKFLOW_REQ" req_type="0x0000AF05" req_client_send="true" comment="">
		<req>
		</req>
	</prototype>

	<!-- 称号 -->
	<prototype req_name="QUERY_HONOR_REQ" res_name="QUERY_HONOR_RES" req_type="0x0000AF0C" res_type="0x7000AF0C" req_client_send="true"
		res_client_receive="true" comment="客户端查询称号，服务器返回的称号信息应按显示顺序排列">
		<req>
		</req>
		<res>
			<object-property name="honors" type="Honor[]" comment="">
				<property name="sort" type="String" encoding="UTF-8" comment="称号"></property>
				<property name="name" type="String" encoding="UTF-8" comment="称号"></property>
				<property name="id" type="int" comment="称号实体的唯一标识，客户端可根据ID查询称号泡泡信息"></property>
				<property name="color" type="int" comment="称号颜色品质"></property>
				<property name="iconId" type="String" encoding="UTF-8" comment="称号ICON的ID"></property>
			</object-property>
		</res>
	</prototype>
	<prototype req_name="QUERY_HONOR_INFO_REQ" res_name="QUERY_HONOR_INFO_RES" req_type="0x0000AF0D" req_client_send="true" res_client_receive="true"
		res_type="0x7000AF0D" comment="请求称号详细描述">
		<req>
			<property name="honorId" type="int" comment="称号实体的唯一标识" />
		</req>
		<res>
			<property name="honorId" type="int" comment="称号实体的唯一标识" />
			<property name="description" type="String" encoding="UTF-8" comment="详细描述（UUB格式）"></property>
		</res>
	</prototype>

	<prototype req_name="QUERY_HONOR_INFO_BY_NAME_REQ" res_name="QUERY_HONOR_INFO_BY_NAME_RES" req_type="0x0000AF1D" req_client_send="true"
		res_client_receive="true" res_type="0x7000AF1D" comment="请求称号详细描述">
		<req>
			<property name="honorName" type="String" encoding="UTF-8" comment="称号名" />
		</req>
		<res>
			<property name="description" type="String" encoding="UTF-8" comment="详细描述（UUB格式）"></property>
		</res>
	</prototype>

	<prototype req_name="HONOR_OPRATION_REQ" req_type="0x0000AF0E" req_client_send="true" comment="客户端发起的对称号的操作，如装备、取消装备，删除等">
		<req>
			<property name="operation" type="byte" comment="操作标记：0-装备，1-取消装备，2-删除" />
			<property name="honorId" type="int" comment="称号实体的唯一标识" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="MASTERS_AND_PRENTICES_OPERATION_REQ" req_type="0x0000AF0F" req_client_send="true" comment="客户端发起的对师徒关系的操作">
		<req>
			<property name="operation" type="byte" comment="操作标记：0-收徒拜师，1-驱逐徒弟，2-叛离师门" />
			<property name="playerId" type="long" comment="对象玩家ID" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="QUERY_MASTERS_AND_PRENTICES_REQ" res_name="QUERY_MASTERS_AND_PRENTICES_RES" req_type="0x0000AF10" req_client_send="true"
		res_client_receive="true" res_type="0x7000AF10" comment="请求师徒信息">
		<req>
		</req>
		<res>
			<property name="status" type="byte" comment="玩家自己的身份：0徒弟 1师傅" />
			<property name="names" type="String[]" encoding="UTF-8" comment="徒弟或者师傅的名字" />
			<property name="ids" type="int[]" comment="玩家ID" />
			<property name="isOnline" type="byte[]" comment="是否在线 0离线 1在线" />
			<property name="infos" type="String[]" encoding="UTF-8" comment="师徒系统中的一些信息，例如徒弟个数，师德等级等，客户端只做显示" />
		</res>
	</prototype>

	<prototype req_name="QUERY_MASTERS_INFO_REQ" res_name="QUERY_MASTERS_INFO_RES" req_type="0x0000AF11" req_client_send="true"
		res_client_receive="true" res_type="0x7000AF11" comment="请求自己的身份，师德，师徒积分，拜师时间，出师时间， 师傅的 师傅名，等级，，师德，师徒积分，帮会，拜师时间，出师时间，最近上线,是否在线">
		<req>
		</req>
		<res>
			<property name="id" type="long" comment="玩家ID" />
			<property name="name" type="String" encoding="UTF-8" comment="师傅名字" />
			<property name="isOnline" type="byte" comment="是否在线 0离线 1在线" />
			<property name="uub" type="String" encoding="UTF-8" comment="自己 和 师傅信息UUB" />
			<property name="status" type="byte" comment="是否已经出师 0未出师 1已经出师" />
		</res>
	</prototype>

	<prototype req_name="QUERY_PRENTICES_INFO_REQ" res_name="QUERY_PRENTICES_INFO_RES" req_type="0x0000AF12" req_client_send="true"
		res_client_receive="true" res_type="0x7000AF12" comment="请求徒弟信息，徒弟名，等级，帮会，拜师时间，出师时间，最近上线">
		<req>
			<property name="linePage" type="int" comment="每页显示徒弟数" />
			<property name="curpage" type="int" comment="第几页" />
		</req>
		<res>
			<property name="names" type="String[]" encoding="UTF-8" comment="徒弟名字" />
			<property name="ids" type="long[]" comment="玩家ID" />
			<property name="isOnline" type="byte[]" comment="是否在线 0离线 1在线" />
			<property name="uub" type="String[]" encoding="UTF-8" comment="徒弟名，等级，师德，师徒积分，帮会，拜师时间，出师时间，最近上线" />
			<property name="isCurrent" type="boolean[]" comment="是否是当前的徒弟" />
			<property name="totalPage" type="int" comment="总页数" />
			<property name="currentPage" type="int" comment="当前页码" />
		</res>
	</prototype>

	<prototype res_name="NOTICE_DELETE_MASTERPRENTICE_RES" res_client_receive="true" res_type="0x0000AF13" comment="服务器通知客户端删除某一条师徒申请记录">
		<res>
			<property name="id" type="long" comment="记录id" />
		</res>
	</prototype>



	<!-- 战场 -->
	<prototype req_name="QUERY_BATTLEFIELDLIST_REQ" res_name="QUERY_BATTLEFIELDLIST_RES" req_type="0x0000AF20" req_client_send="true"
		res_client_receive="true" res_type="0x7000AF20" comment="查询战场列表信息">
		<req>
		</req>
		<res>
			<object-property name="battleItems" type="BattleItem[]" comment="">
				<property name="name" type="String" encoding="UTF-8" comment="战场的名称"></property>
				<property name="displayName" type="String" encoding="UTF-8" comment="战场的显示名称"></property>
				<property name="description" type="String" encoding="UTF-8" comment="战场的描述"></property>
				<property name="playerType" type="int" comment="玩家的状态　0:在战场外　1:在排队中　2：在该战场中"></property>
				<property name="waitTime" type="String" encoding="UTF-8" comment="等待的时间"></property>
			</object-property>
		</res>
	</prototype>

	<prototype req_name="BATTLEFIELD_ACTION_REQ" req_type="0x0000AF21" req_client_send="true" comment="战场排队">
		<req>
			<property name="name" type="String" encoding="UTF-8" comment="战场的名称"></property>
			<property name="actionType" type="int" comment="0-个人排队，1-个人离开排队，2-小组排队，3-离开战场"></property>
		</req>
	</prototype>

	<prototype req_name="QUERY_BATTLEFIELD_INFO_REQ" res_name="QUERY_BATTLEFIELD_INFO_RES" req_type="0x0000AF22" req_client_send="true"
		res_client_receive="true" res_type="0x7000AF22" comment="查询战场详细信息">
		<req>
		</req>
		<res>
			<property name="name" type="String" encoding="UTF-8" comment="战场的名称"></property>
			<property name="forceOpenWindow" type="boolean" comment="是否强制打开窗口"></property>
			<property name="winner" type="String" encoding="UTF-8" comment="胜利方，如果战场正在进行中，此字符串长度为0"></property>
			<object-property name="statDatas" type="BattleFieldStatData[]" comment="统计信息，按荣誉值从大到小排列">
				<property name="playerId" type="long" comment="玩家Id"></property>
				<property name="playerName" type="String" encoding="UTF-8" comment="玩家名称"></property>
				<property name="career" type="String" encoding="UTF-8" comment="职业"></property>
				<property name="playerLevel" type="int" comment="等级"></property>
				<property name="battleSide" type="int" comment="战场哪一方"></property>
				<property name="killingNum" type="int" comment="杀人次数"></property>
				<property name="killedNum" type="int" comment="死亡次数"></property>
				<property name="honorKillingNum" type="int" comment="荣誉击杀"></property>
				<property name="honorPoints" type="int" comment="荣誉点"></property>
				<property name="totalDamage" type="int" comment="伤害量"></property>
				<property name="totalEnhenceHp" type="int" comment="治疗量"></property>
				<property name="description" type="String" encoding="UTF-8" comment="详细信息"></property>
			</object-property>
		</res>
	</prototype>

	<prototype req_name="DISPLAY_INFO_ON_SCREEN" req_type="0x0000AF23" req_client_receive="true" comment="服务器让客户端在屏幕上显示文字">
		<req>
			<property name="lineContent" type="String[]" encoding="UTF-8" comment="每一行的信息信息"></property>
			<property name="lineColor" type="int[]" comment="每一行的颜色"></property>
			<property name="scroll" type="boolean" comment="是否滚动"></property>
		</req>
	</prototype>

	<prototype req_name="GANG_MAIL_CREATE_REQ" req_type="0x0000AF30" req_client_send="true" comment="帮派群发创建邮件">
		<req>
			<property name="gangTitle" type="byte" comment="收件人帮派身份限制" />
			<property name="title" type="String" encoding="UTF-8" comment="标题" />
			<property name="mcontent" type="String" encoding="UTF-8" comment="内容" />
		</req>
	</prototype>

	<prototype req_name="PLAYER_ENTER_DUELBATTLE_MONI_REQ" req_type="0x0000FF12" res_name="PLAYER_ENTER_DUELBATTLE_MONI_RES" res_type="0x7000FF12"
		req_client_send="true" res_client_receive="true" comment="玩家模拟进入比赛地图">
		<req>
			<property name="playerName" type="String" encoding="UTF-8" comment="玩家的名"></property>
		</req>
		<res>
		</res>
	</prototype>

	<!-- 以下为宠物相关协议 -->

	<prototype req_name="SET_PET_ACTIVATIONTYPE_REQ" req_type="0x00F0EF10" req_client_send="true" comment="设置宠物的行为模式">
		<req>
			<property name="petEntityId" type="long" comment="要强化的宠物道具id，玩家的背包中必须有此宠物道具id" />
			<property name="activityType" type="int" comment="0 被动式,1 主动式,2 跟随式" />
		</req>
	</prototype>

	<!-- 宠物强化 -->
	<prototype req_name="QUERY_PET_STRONG_REQ" req_type="0x00F0EE10" res_name="QUERY_PET_STRONG_RES" res_type="0x70F0EE10" req_client_send="true"
		res_client_receive="true" comment="客户端请求服务器，宠物强化的各种信息，包括需要什么材料，需要几个，用什么来提高成功率，需要多少手续费等">
		<req>
			<property name="petEntityId" type="long" comment="要强化的宠物道具id，玩家的背包中必须有此宠物道具id" />
		</req>
		<res>
			<property name="petEntityId" type="long" comment="要强化的宠物道具id，玩家的背包中必须有此宠物道具id" />
			<property name="descript" type="String" encoding="UTF-8" comment="提示（价格）" />
			<property name="strongedUUB" type="String" encoding="UTF-8" comment="强化后的装备UUB" />
			<property name="strongMaterialName" type="String[]" encoding="UTF-8" comment="可用的强化符"></property>
			<property name="strongMaterialLuck" type="int[]" comment="各颜色强化符的几率，不同名称强化符颜色相同几率一样"></property>
		</res>
	</prototype>

	<prototype req_name="PET_STRONG_REQ" req_type="0x00F0EE12" res_name="PET_STRONG_RES" res_type="0x70F0EE12" req_client_send="true"
		res_client_receive="true" comment="客户端请求服务器，宠物强化，服务端发送强化成功消息前必须再次发出QUERY_EQUIPMENT_STRONG_RES通知客户端材料变化">
		<req>
			<property name="petEntityId" type="long" comment="要强化的宠物道具id，玩家的背包中必须有此宠物道具id" />
			<property name="strongMaterialID" type="long[]" comment="强化符ID"></property>
			<property name="strongType" type="byte" comment="强化类型，0表示使用金币强化，1表示使用元宝强化"></property>
		</req>
		<res>
			<property name="equipmentId" type="long" comment="要强化的宠物，玩家的背包中必须有此宠物" />
			<property name="star" type="short" comment="强化后装备的等级"></property>
			<property name="canStrong" type="boolean" comment="是否还能强化"></property>
		</res>
	</prototype>

	<prototype req_name="PET_SKILL_CAST_REQ" req_type="0x0000FF13" req_client_receive="true" comment="服务器通知客户端，当前宠物可以施放的技能">
		<req>
			<property name="petId" type="long" comment="宠物id" />
			<property name="skillIds" type="short[]" comment="可施放的技能的Id" />
		</req>
	</prototype>

	<prototype req_name="PET_NONTARGET_SKILL_REQ" req_type="0x0000FF14" req_client_send="true" comment="客户端通知服务器，宠物无目标地施放技能">
		<req>
			<property name="targetX" type="short" comment="技能施放目标的X坐标" />
			<property name="targetY" type="short" comment="技能施放目标的Y坐标" />
			<property name="targetType" type="byte[]" comment="为了让服务器和客户端在击中目标保持一致，因此无目标技能也可以带上目标，可以传0个目标，表示周围没有目标" />
			<property name="targetId" type="long[]" comment="为了让服务器和客户端在击中目标保持一致，因此无目标技能也可以带上目标，可以传0个目标，表示周围没有目标" />
			<property name="skillId" type="short" comment="技能的Id" />
			<property name="direction" type="byte" comment="释放技能的生物朝向" />
		</req>
	</prototype>

	<prototype req_name="PET_TARGET_SKILL_REQ" req_type="0x0000FF15" req_client_send="true" comment="客户端通知服务器，宠物有目标地施放技能">
		<req>
			<property name="targetX" type="short" comment="技能施放目标的X坐标" />
			<property name="targetY" type="short" comment="技能施放目标的Y坐标" />
			<property name="targetType" type="byte[]" comment="为了让服务器和客户端在击中目标保持一致，因此无目标技能也可以带上目标，可以传0个目标，表示周围没有目标" />
			<property name="targetId" type="long[]" comment="为了让服务器和客户端在击中目标保持一致，因此无目标技能也可以带上目标，可以传0个目标，表示周围没有目标" />
			<property name="skillId" type="short" comment="技能的Id" />
			<property name="direction" type="byte" comment="释放技能的生物朝向" />
		</req>
	</prototype>



	<prototype req_name="PET_QUERY_REQ" req_type="0x0000FF16" res_name="PET_QUERY_RES" res_type="0x7000FF16" req_client_send="true"
		res_client_receive="true" comment="请求宠物信息">
		<req>
			<property name="petId" type="long" comment="宠物的id"></property>
		</req>
		<res>
			<object-property name="pet" type="Pet" comment="返回宠物实体">
				<property name="id" type="long" comment="宠物的id"></property>
				<property name="name" type="String" encoding="UTF-8" comment="宠物的名字"></property>
				<property name="ownerId" type="long" comment="宠物的主人"></property>
				<property name="category" type="String" encoding="UTF-8" comment="宠物的种类(灵狐，狂狼等)"></property>
				<property name="petSort" type="String" encoding="UTF-8" comment="宠物的分类(精怪，兽灵等)"></property>
				<property name="career" type="byte" comment="宠物的职业倾向"></property>
				<property name="character" type="byte" comment="宠物的性格"></property>
				<property name="sex" type="byte" comment="宠物的性别"></property>
				<property name="breedTimes" type="byte" comment="宠物可生育的次数"></property>
				<property name="breededTimes" type="byte" comment="宠物已经生育的次数"></property>

				<property name="identity" type="boolean" comment="是否鉴定过"></property>
				<property name="maxHappyness" type="int" comment="最大宠物的快乐值"></property>
				<property name="maxLifeTime" type="int" comment="最大宠物的寿命"></property>
				<property name="lifeTime" type="int" comment="宠物的寿命"></property>
				<property name="happyness" type="int" comment="宠物的快乐值"></property>
				<property name="level" type="short" comment="宠物的等级"></property>
				<property name="exp" type="int" comment="宠物当前的经验值"></property>
				<property name="nextLevelExp" type="int" comment="宠物升到下级的经验值"></property>
				<property name="quality" type="byte" comment="宠物的品质，非为5档，0~4：普兽（白）、灵兽（绿）、仙兽（蓝）、神兽（紫）、圣兽（橙），需要鉴定"></property>
				<property name="starClass" type="byte" comment="宠物的星级"></property>
				<property name="generation" type="byte" comment="宠物的类型、一代0，二代1"></property>
				<property name="variation" type="byte" comment="宠物是否变异，0为不变异，否则1-5为变异等级"></property>
				<property name="showStrengthQuality" type="int" comment="宠物的力量资质"></property>
				<property name="showDexterityQuality" type="int" comment="宠物的身法资质"></property>
				<property name="showSpellpowerQuality" type="int" comment="宠物的灵力资质"></property>
				<property name="showConstitutionQuality" type="int" comment="宠物的耐力资质"></property>
				<property name="showDingliQuality" type="int" comment="宠物的定力资质"></property>
				<property name="showMinStrengthQuality" type="int" comment="宠物的力量资质(最小值)"></property>
				<property name="showMinDexterityQuality" type="int" comment="宠物的身法资质(最小值)"></property>
				<property name="showMinSpellpowerQuality" type="int" comment="宠物的灵力资质(最小值)"></property>
				<property name="showMinConstitutionQuality" type="int" comment="宠物的耐力资质(最小值)"></property>
				<property name="showMinDingliQuality" type="int" comment="宠物的定力资质(最小值)"></property>
				<property name="showMaxStrengthQuality" type="int" comment="宠物的力量资质(满值)"></property>
				<property name="showMaxDexterityQuality" type="int" comment="宠物的身法资质(满值)"></property>
				<property name="showMaxSpellpowerQuality" type="int" comment="宠物的灵力资质(满值)"></property>
				<property name="showMaxConstitutionQuality" type="int" comment="宠物的耐力资质(满值)"></property>
				<property name="showMaxDingliQuality" type="int" comment="宠物的定力资质(满值)"></property>
				<property name="trainLevel" type="int" comment="宠物的携带等级"></property>
				<property name="rarity" type="byte" comment="宠物的稀有度，0-随处可见,1-百里挑一,2-千载难逢"></property>
				<property name="growthClass" type="byte" comment="宠物的成长品质"></property>
				<property name="growth" type="int" comment="宠物的成长值"></property>
				<property name="skillIds" type="int[]" comment="宠物拥有的技能ids"></property>
				<property name="activeSkillLevels" type="int[]" comment="宠物拥有的技能等级"></property>
				<property name="petPropsId" type="long" comment="宠物的幻化物品实体id"></property>
				<property name="strength" type="int" comment="宠物的力量"></property>
				<property name="dexterity" type="int" comment="宠物的身法"></property>
				<property name="spellpower" type="int" comment="宠物的灵力"></property>
				<property name="constitution" type="int" comment="宠物的耐力"></property>
				<property name="dingli" type="int" comment="宠物的定力"></property>
				<property name="showPhyAttack" type="int" comment="宠物的外功强度"></property>
				<property name="phyDefence" type="int" comment="宠物的外功防御"></property>
				<property name="showMagicAttack" type="int" comment="宠物的内功强度"></property>
				<property name="magicDefence" type="int" comment="宠物的内功防御"></property>
				<property name="maxHP" type="int" comment="宠物的最大血量"></property>
				<property name="hp" type="int" comment="宠物当前血量"></property>
				<property name="criticalHit" type="int" comment="宠物的暴击"></property>
				<property name="hit" type="int" comment="宠物的命中"></property>
				<property name="dodge" type="int" comment="宠物的闪避"></property>
				<property name="hitRate" type="int" comment="命中率"></property>
				<property name="dodgeRate" type="int" comment="闪避率"></property>
				<property name="criticalHitRate" type="int" comment="暴击率"></property>
				<property name="physicalDecrease" type="int" comment="外功防御率"></property>
				<property name="spellDecrease" type="int" comment="内功防御率"></property>
				<property name="fireDefence" type="int" comment="宠物的火防"></property>
				<property name="windDefence" type="int" comment="宠物的风防"></property>
				<property name="blizzardDefence" type="int" comment="宠物的冰防"></property>
				<property name="thunderDefence" type="int" comment="宠物的雷防"></property>
				<property name="unAllocatedPoints" type="int" comment="还没分配的属性点"></property>
				<property name="activationType" type="byte" comment="宠物的模式, 0-被动，1-主动，2-只跟随"></property>
				<property name="avataRace" type="String" encoding="UTF-8" comment="客户端用来定位形象">
				</property>
				<property name="avataSex" type="String" encoding="UTF-8" comment="客户端用来定位形象" />
				<property name="avata" type="String[]" encoding="UTF-8" comment="玩家身上的部件关键字：比如头部动画名字"></property>
				<property name="avataType" type="byte[]" comment="玩家身上的部件关键字"></property>
				<property name="commonSkillId" type="int" comment="普通攻击id"></property>
				<property name="qualityScore" type="int" comment="宠物得分"></property>
			</object-property>
			<object-property name="skillInfos" type="SkillInfo[]" comment="返回宠物技能">
				<property name="id" type="int"></property>
				<property name="skillType" type="byte"></property>
				<property name="maxLevel" type="int"></property>
				<property name="indexOfCareerThread" type="int"></property>
				<property name="needCareerThreadPoints" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="columnIndex" type="byte" comment="" />
			</object-property>

			<object-property name="petSkillReleaseProbability" type="PetSkillReleaseProbability[]" comment="返回宠物技能">
				<property name="skillId" type="int"></property>
				<property name="character" type="int"></property>
				<property name="match" type="int" comment="扩大1000"></property>
				<property name="noMatch" type="int"></property>
			</object-property>

			<property name="description" type="String[]" encoding="UTF-8" comment="" />
		</res>
	</prototype>

	<prototype req_name="PET_BREEDING_REQ" req_type="0x0000FF17" res_name="PET_BREEDING_RES" res_type="0x7000FF17" req_client_send="true"
		res_client_receive="true" comment="宠物蛋孵化">
		<req>
			<property name="eggEntityId" type="long" comment="宠物蛋的ID"></property>
		</req>
		<res>
			<property name="result" type="String" encoding="UTF-8" comment="空为成功，否则为错误信息"></property>
			<property name="entityId" type="long" comment="生成的宠物道具id"></property>
		</res>
	</prototype>

	<prototype req_name="PET_MATING_REQ" req_type="0x0000FF18" res_name="PET_MATING_RES" res_type="0x7000FF18" req_client_send="true"
		res_client_receive="true" comment="和不同玩家发起一个宠物繁殖的会话，发起方发给服务端后，服务端转发这个请求给对方客户端">
		<req>
			<property name="playerBId" type="long" comment="对方的角色id"></property>
			<property name="matingId" type="long" comment="服务器端产生的繁殖id，仅当客户端接收此请求时有含义"></property>
		</req>
		<res>
			<property name="result" type="String" encoding="UTF-8" comment="空为成功，否则为错误信息"></property>
			<property name="matingId" type="long" comment="服务器端产生的繁殖id"></property>
		</res>
	</prototype>

	<prototype req_name="PET_MATING_ADDPET_REQ" req_type="0x0000FF19" res_name="PET_MATING_ADDPET_RES" res_type="0x7000FF19" req_client_send="true"
		comment="放入自己的宠物">
		<req>
			<property name="matingId" type="long" comment="服务器端产生的繁殖id"></property>
			<property name="petPropsEntityId" type="long" comment="宠物道具的id"></property>
		</req>
	</prototype>

	<prototype req_name="PET_MATING_CHANGE_REQ" req_type="0x0000FF34" req_client_receive="true" comment="把对方提交的繁殖宠物道具id发给我，如果我已经处于确认状态，那么需要重新回到未确认状态">
		<req>
			<property name="matingId" type="long" comment="服务器端产生的繁殖id"></property>
			<property name="petPropsEntityId" type="long" comment="对方提交的宠物道具的id"></property>
		</req>
	</prototype>

	<prototype req_name="PET_MATING_CANCEL_REQ" req_type="0x0000FF35" res_name="PET_MATING_CANCEL_RES" res_type="0x7000FF35" req_client_send="true"
		req_client_receive="true" comment="取消当前的繁殖">
		<req>
			<property name="matingId" type="long" comment="服务器端产生的繁殖id"></property>
		</req>
	</prototype>

	<prototype req_name="PET_MATING_CONFIRM_REQ" req_type="0x0000FF20" res_name="PET_MATING_CONFIRM_RES" res_type="0x7000FF20" req_client_send="true"
		comment="提交宠物道具后，确认完成，当对方改变宠物道具时，本方会重新回到未确认状态">
		<req>
			<property name="matingId" type="long" comment="服务器端产生的繁殖id"></property>
		</req>
	</prototype>

	<prototype req_name="PET_MATING_SESSION_OVER_REQ" req_type="0x0000FF31" req_client_receive="true" comment="宠物繁殖会话结束">
		<req>
			<property name="result" type="String" encoding="UTF-8" comment="空为成功，否则为错误信息"></property>
		</req>
	</prototype>


	<prototype req_name="PET_IDENTIFY_QUALITY_REQ" req_type="0x0000FF21" res_name="PET_IDENTIFY_QUALITY_RES" res_type="0x7000FF21"
		req_client_send="true" res_client_receive="true" comment="宠物鉴定">
		<req>
			<property name="petEntityId" type="long" comment="所要鉴定的宠物物品id"></property>
		</req>
		<res>
			<property name="petEntityId" type="long" comment="所要鉴定的宠物物品id"></property>
			<property name="result" type="String" encoding="UTF-8" comment="空为成功，否则为错误信息"></property>
			<property name="quality" type="int" comment="鉴定后的品质"></property>
			<property name="growthClass" type="int" comment="鉴定后的成长品质"></property>
		</res>
	</prototype>

	<prototype req_name="PET_GENGUDAN_COMPOUND_REQ" req_type="0x0000FF22" res_name="PET_GENGUDAN_COMPOUND_RES" res_type="0x7000FF22"
		req_client_send="true" res_client_receive="true" comment="根骨丹合成，允许多个低等级的直接合成高等级根骨丹">
		<req>
			<property name="gengudanName" type="String" encoding="UTF-8" comment="想要合成的根骨丹名称"></property>
			<property name="sourceGengudanName" type="String" encoding="UTF-8" comment="原料根骨丹"></property>
			<property name="num" type="int" comment="原料数量"></property>
		</req>
		<res>
			<property name="result" type="String" encoding="UTF-8" comment="空为成功，否则为错误信息"></property>
			<property name="compounded" type="int" comment="合成成功的数量"></property>
			<property name="remaining" type="int" comment="剩余的原料数量"></property>
		</res>
	</prototype>

	<prototype req_name="PET_GENGU_UP_REQ" req_type="0x0000FF23" res_name="PET_GENGU_UP_RES" res_type="0x7000FF23" req_client_send="true"
		res_client_receive="true" comment="提升根骨">
		<req>
			<property name="petEntityId" type="long" comment="想要提升的宠物物品id"></property>
			<property name="genguEntityId" type="long" comment="原料根骨丹"></property>
		</req>
		<res>
			<property name="result" type="String" encoding="UTF-8" comment="空为成功，否则为错误信息"></property>
			<property name="gengu" type="int" comment="提升后宠物的根骨"></property>
		</res>
	</prototype>

	<prototype req_name="QUERY_PET_MERGE_REQ" req_type="0x0000FF37" res_name="QUERY_PET_MERGE_RES" res_type="0x7000FF37" req_client_send="true"
		res_client_receive="true" comment="宠物合体">
		<req>
			<property name="petEntityId" type="long" comment="合体的主宠物品id"></property>
		</req>
		<res>
			<property name="petEntityId" type="long" comment="合体的主宠物品id"></property>
			<property name="skillsCostDescription" type="String[]" encoding="UTF-8" comment="绑定技能花费描述，数组为绑定1,2,3个技能需要花费不同的费用描述"></property>
		</res>
	</prototype>

	<prototype req_name="PET_MERGE_REQ" req_type="0x0000FF24" req_client_send="true" res_name="PET_MERGE_RES" res_type="0x7000FF24"
		res_client_receive="true" comment="宠物合体">
		<req>
			<property name="petEntityAId" type="long" comment="合体的主宠物品id"></property>
			<property name="petEntityBId" type="long" comment="合体的副宠物品id"></property>
			<property name="petASkillId" type="int[]" comment="合体的主宠技能id"></property>
		</req>

		<res>
			<property name="mergerResult" type="String" encoding="UTF-8" comment="合体的结果"></property>
		</res>
	</prototype>

	<prototype req_name="PET_BECHILD_REQ" req_type="0x0000FF25" res_name="PET_BECHILD_RES" res_type="0x7000FF25" req_client_send="true"
		res_client_receive="true" comment="宠物还童">
		<req>
			<property name="petEntityId" type="long" comment="欲还童的宠物物品id"></property>
		</req>
		<res>
			<property name="result" type="String" encoding="UTF-8" comment="空为成功，否则为错误信息"></property>
		</res>
	</prototype>

	<prototype req_name="QUERY_PET_FEED_REQ" req_type="0x0000FF38" res_name="QUERY_PET_FEED_RES" res_type="0x7000FF38" req_client_send="true"
		res_client_receive="true" comment="喂养宠物查询">
		<res>
			<property name="articleNames" type="String[]" encoding="UTF-8" comment="宠物能够使用的物品名"></property>
			<property name="feedType" type="byte[]" comment="喂养物品的类型，如加血类型，加快乐值，加寿命0 1 2 3 0血 1 快乐 2寿命 3经验"></property>
			<property name="feedValue" type="int[]" comment="喂养物品所加的具体数值"></property>
		</res>
	</prototype>

	<prototype req_name="PET_FEED_REQ" req_type="0x0000FF26" res_name="PET_FEED_RES" res_type="0x7000FF26" req_client_send="true"
		res_client_receive="true" comment="喂养宠物">
		<req>
			<property name="petEntityId" type="long" comment="欲喂养的宠物物品id"></property>
			<property name="foodId" type="long" comment="喂养的道具id"></property>
			<property name="num" type="int" comment="喂养的道具数量，多了不退！"></property>
		</req>
		<res>
			<property name="result" type="String" encoding="UTF-8" comment="空为成功，否则为错误信息"></property>
		</res>
	</prototype>

	<prototype req_name="PET_NONTARGET_SKILL_BROADCAST_REQ" req_type="0x0000FF27" req_client_receive="true" comment="服务器向客户端广播技能使用事件，限定为使用者广播区内的所有玩家，不包括使用者本人">
		<req>
			<property name="casterId" type="long" comment="技能施放者的标识" />
			<property name="targetX" type="short" comment="技能施放目标的X坐标" />
			<property name="targetY" type="short" comment="技能施放目标的Y坐标" />
			<property name="skillId" type="int" comment="技能编号，范围是所有技能" />
			<property name="level" type="byte" comment="技能的等级" />
		</req>
	</prototype>

	<prototype req_name="PET_TARGET_SKILL_BROADCAST_REQ" req_type="0x0000FF28" req_client_receive="true" comment="服务器向客户端广播技能使用事件，限定为使用者广播区内的所有玩家，不包括使用者本人">
		<req>
			<property name="casterId" type="long" comment="技能施放者的标识" />
			<property name="targetType" type="byte" comment="目标的类型" />
			<property name="targetId" type="long" comment="目标的标识" />
			<property name="skillId" type="int" comment="技能编号，范围是所有技能" />
			<property name="level" type="byte" comment="技能的等级" />
		</req>
	</prototype>

	<prototype req_name="PET_CALLBACK_REQ" req_type="0x0000FF29" res_name="PET_CALLBACK_RES" res_type="0x7000FF29" req_client_send="true"
		comment="收回当前激活的宠物">
		<req>
		</req>
	</prototype>

	<prototype req_name="PET_QUERY_BY_ARTICLE_REQ" req_type="0x0000FF30" req_client_send="true" comment="通过宠物物品id请求宠物">
		<req>
			<property name="petEntityId" type="long" comment="宠物物品id"></property>
			<property name="isOwner" type="boolean" comment="是否查自己的"></property>
		</req>
	</prototype>

	<prototype req_name="PET_RENAME_REQ" req_type="0x0000FF32" res_name="PET_RENAME_RES" res_type="0x7000FF32" req_client_send="true"
		res_client_receive="true" comment="宠物改名">
		<req>
			<property name="petEntityId" type="long" comment="宠物物品id"></property>
			<property name="newName" type="String" encoding="UTF-8" comment="新名字"></property>
		</req>
		<res>
			<property name="petEntityId" type="long" comment="宠物物品id"></property>
			<property name="newName" type="String" encoding="UTF-8" comment="新名字"></property>
		</res>
	</prototype>

	<prototype req_name="PET_ALLOCATE_POINTS_REQ" req_type="0x0000FF33" res_name="PET_ALLOCATE_POINTS_RES" res_type="0x7000FF33"
		req_client_send="true" res_client_receive="true" comment="给宠物分配属性点">
		<req>
			<property name="petId" type="long" comment="宠物id"></property>
			<property name="points" type="int[]" comment="分配的点：0力量1灵力2身法3耐力4定力"></property>
		</req>
		<res>

			<property name="points" type="int[]" comment="累计分配的点：0力量1灵力2身法3耐力4定力"></property>
			<object-property name="pet" type="Pet" comment="加点后的宠物">
				<property name="id" type="long" comment="宠物的id"></property>

				<property name="strength" type="int" comment="宠物的力量"></property>
				<property name="dexterity" type="int" comment="宠物的身法"></property>
				<property name="spellpower" type="int" comment="宠物的灵力"></property>
				<property name="constitution" type="int" comment="宠物的耐力"></property>
				<property name="dingli" type="int" comment="宠物的定力"></property>

				<property name="showPhyAttack" type="int" comment="宠物的外功强度"></property>
				<property name="phyDefence" type="int" comment="宠物的外功防御"></property>
				<property name="showMagicAttack" type="int" comment="宠物的内功强度"></property>
				<property name="magicDefence" type="int" comment="宠物的内功防御"></property>
				<property name="maxHP" type="int" comment="宠物的最大血量"></property>
				<property name="hp" type="int" comment="宠物当前血量"></property>
				<property name="criticalHit" type="int" comment="宠物的暴击"></property>
				<property name="hit" type="int" comment="宠物的命中"></property>
				<property name="dodge" type="int" comment="宠物的闪避"></property>

				<property name="hitRate" type="int" comment="命中率"></property>
				<property name="dodgeRate" type="int" comment="闪避率"></property>
				<property name="criticalHitRate" type="int" comment="暴击率"></property>
				<property name="physicalDecrease" type="int" comment="外功防御率"></property>
				<property name="spellDecrease" type="int" comment="内功防御率"></property>

				<property name="unAllocatedPoints" type="int" comment="还没分配的属性点"></property>

			</object-property>
		</res>
	</prototype>

	<prototype req_name="OPRATE_PET_ALLOCATE_POINTS_REQ" req_type="0x0000FF89" req_client_send="true" comment="确认(true)还是取消给宠物分配属性点">
		<req>
			<property name="petId" type="long" comment="宠物id"></property>
			<property name="oprate" type="byte" comment="0确定，1取消，2关闭(也是取消但没有提示)"></property>
		</req>
	</prototype>

	<prototype req_name="PET_MATING_PERSONAL_REQ" req_type="0x0000FF36" res_name="PET_MATING_PERSONAL_RES" res_type="0x7000FF36"
		req_client_send="true" req_client_receive="true" comment="自己创建一个繁殖">
		<req>
			<property name="petPropsEntityAId" type="long" comment="宠物道具A的id"></property>
			<property name="petPropsEntityBId" type="long" comment="宠物道具B的id"></property>
		</req>
	</prototype>

	<prototype req_name="QUERY_PET_CHUZHAN_REQ" req_type="0x0000FF60" res_name="QUERY_PET_CHUZHAN_RES" res_type="0x7000FF60" req_client_send="true"
		res_client_receive="true" comment="查询背包中哪个宠物出战">
		<res>
			<property name="knapsackIndex" type="int" comment="背包位置"></property>
		</res>
	</prototype>

	<prototype req_name="PET_SEAL_REQ" req_type="0x0000FF61" req_client_send="true" comment="宠物封印">
		<req>
			<property name="petPropsId" type="long" comment="宠物道具id"></property>
		</req>
	</prototype>


	<prototype req_name="ARTICLE_OPRATE_RESULT" req_type="0x0000FF62" req_client_receive="true" comment="收回宠物时通知客户端">
		<req>
			<property name="petId" type="long" comment="收回的宠物id"></property>
		</req>
	</prototype>

	<prototype req_name="PET_REPAIR_REQ" req_type="0x0000FF63" req_client_send="true" res_name="PET_REPAIR_RES" res_type="0x7000FF63"
		res_client_receive="true" comment="宠物炼化">
		<req>
			<property name="petId" type="long" comment="宠物id"></property>
			<property name="force" type="boolean" comment="强制刷新(true),false为查看(下边不做处理)"></property>
			<property name="flushLevel" type="int" comment="刷新级别(初,中,高)"></property>
			<property name="flushType" type="boolean" comment="用钱还是用道具刷新(true银子，false道具)"></property>
		</req>
		<res>
			<property name="repairEntityIds" type="long[]" comment="三种炼妖级别的三种物品id"></property>
			<property name="repairEntityNames" type="String[]" encoding="UTF-8" comment="三种炼妖级别的三种物品name"></property>
			<property name="repairLevels" type="int[]" comment="三种炼妖级别对应的vip级别"></property>
			<property name="repairSilverNums" type="int[]" comment="三种炼妖级别对应的刷新银子数量"></property>

			<property name="repairValue" type="int" comment="炼妖值当前"></property>

			<property name="score" type="int" comment="得分"></property>
			<property name="growthClass" type="byte" comment="宠物的成长品质"></property>
			<property name="quality" type="byte" comment="宠物的品质，非为5档，0~4：普兽（白）、灵兽（绿）、仙兽（蓝）、神兽（紫）、圣兽（橙），需要鉴定"></property>
			<property name="strengthQualityInit" type="int" comment="宠物的力量初值"></property>
			<property name="dexterityQualityInit" type="int" comment="宠物的身法初值"></property>
			<property name="spellpowerQualityInit" type="int" comment="宠物的灵力初值"></property>
			<property name="constitutionQualityInit" type="int" comment="宠物的耐力初值"></property>
			<property name="dingliQualityInit" type="int" comment="宠物的定力初值"></property>
			<property name="minStrengthQualityInit" type="int" comment="宠物的力量初值(最小值)"></property>
			<property name="minDexterityQualityInit" type="int" comment="宠物的身法初值(最小值)"></property>
			<property name="minSpellpowerQualityInit" type="int" comment="宠物的灵力初值(最小值)"></property>
			<property name="minConstitutionQualityInit" type="int" comment="宠物的耐力初值(最小值)"></property>
			<property name="minDingliQualityInit" type="int" comment="宠物的定力初值(最小值)"></property>
			<property name="maxStrengthQualityInit" type="int" comment="宠物的力量初值(满值)"></property>
			<property name="maxDexterityQualityInit" type="int" comment="宠物的身法初值(满值)"></property>
			<property name="maxSpellpowerQualityInit" type="int" comment="宠物的灵力初值(满值)"></property>
			<property name="maxConstitutionQualityInit" type="int" comment="宠物的耐力初值(满值)"></property>
			<property name="maxDingliQualityInit" type="int" comment="宠物的定力初值(满值)"></property>

			<property name="showStrengthQuality" type="int" comment="宠物的力量资质"></property>
			<property name="showDexterityQuality" type="int" comment="宠物的身法资质"></property>
			<property name="showSpellpowerQuality" type="int" comment="宠物的灵力资质"></property>
			<property name="showConstitutionQuality" type="int" comment="宠物的耐力资质"></property>
			<property name="showDingliQuality" type="int" comment="宠物的定力资质"></property>
			<property name="showMinStrengthQuality" type="int" comment="宠物的力量资质(最小值)"></property>
			<property name="showMinDexterityQuality" type="int" comment="宠物的身法资质(最小值)"></property>
			<property name="showMinSpellpowerQuality" type="int" comment="宠物的灵力资质(最小值)"></property>
			<property name="showMinConstitutionQuality" type="int" comment="宠物的耐力资质(最小值)"></property>
			<property name="showMinDingliQuality" type="int" comment="宠物的定力资质(最小值)"></property>
			<property name="showMaxStrengthQuality" type="int" comment="宠物的力量资质(满值)"></property>
			<property name="showMaxDexterityQuality" type="int" comment="宠物的身法资质(满值)"></property>
			<property name="showMaxSpellpowerQuality" type="int" comment="宠物的灵力资质(满值)"></property>
			<property name="showMaxConstitutionQuality" type="int" comment="宠物的耐力资质(满值)"></property>
			<property name="showMaxDingliQuality" type="int" comment="宠物的定力资质(满值)"></property>

			<property name="replace" type="boolean" comment="是否已经替换过(true 下边不做处理)"></property>
			<property name="tempscore" type="int" comment="得分"></property>
			<property name="tempGrowthClass" type="byte" comment="宠物的成长品质"></property>
			<property name="tempQuality" type="byte" comment="宠物的品质，非为5档，0~4：普兽（白）、灵兽（绿）、仙兽（蓝）、神兽（紫）、圣兽（橙），需要鉴定"></property>
			<property name="tempstrengthQualityInit" type="int" comment="宠物的力量初值"></property>
			<property name="tempdexterityQualityInit" type="int" comment="宠物的身法初值"></property>
			<property name="tempspellpowerQualityInit" type="int" comment="宠物的灵力初值"></property>
			<property name="tempconstitutionQualityInit" type="int" comment="宠物的耐力初值"></property>
			<property name="tempdingliQualityInit" type="int" comment="宠物的定力初值"></property>
			<property name="tempminStrengthQualityInit" type="int" comment="宠物的力量初值(最小值)"></property>
			<property name="tempminDexterityQualityInit" type="int" comment="宠物的身法初值(最小值)"></property>
			<property name="tempminSpellpowerQualityInit" type="int" comment="宠物的灵力初值(最小值)"></property>
			<property name="tempminConstitutionQualityInit" type="int" comment="宠物的耐力初值(最小值)"></property>
			<property name="tempminDingliQualityInit" type="int" comment="宠物的定力初值(最小值)"></property>
			<property name="tempmaxStrengthQualityInit" type="int" comment="宠物的力量初值(满值)"></property>
			<property name="tempmaxDexterityQualityInit" type="int" comment="宠物的身法初值(满值)"></property>
			<property name="tempmaxSpellpowerQualityInit" type="int" comment="宠物的灵力初值(满值)"></property>
			<property name="tempmaxConstitutionQualityInit" type="int" comment="宠物的耐力初值(满值)"></property>
			<property name="tempmaxDingliQualityInit" type="int" comment="宠物的定力初值(满值)"></property>

			<property name="tempshowStrengthQuality" type="int" comment="宠物的力量资质"></property>
			<property name="tempshowDexterityQuality" type="int" comment="宠物的身法资质"></property>
			<property name="tempshowSpellpowerQuality" type="int" comment="宠物的灵力资质"></property>
			<property name="tempshowConstitutionQuality" type="int" comment="宠物的耐力资质"></property>
			<property name="tempshowDingliQuality" type="int" comment="宠物的定力资质"></property>
			<property name="tempshowMinStrengthQuality" type="int" comment="宠物的力量资质(最小值)"></property>
			<property name="tempshowMinDexterityQuality" type="int" comment="宠物的身法资质(最小值)"></property>
			<property name="tempshowMinSpellpowerQuality" type="int" comment="宠物的灵力资质(最小值)"></property>
			<property name="tempshowMinConstitutionQuality" type="int" comment="宠物的耐力资质(最小值)"></property>
			<property name="tempshowMinDingliQuality" type="int" comment="宠物的定力资质(最小值)"></property>
			<property name="tempshowMaxStrengthQuality" type="int" comment="宠物的力量资质(满值)"></property>
			<property name="tempshowMaxDexterityQuality" type="int" comment="宠物的身法资质(满值)"></property>
			<property name="tempshowMaxSpellpowerQuality" type="int" comment="宠物的灵力资质(满值)"></property>
			<property name="tempshowMaxConstitutionQuality" type="int" comment="宠物的耐力资质(满值)"></property>
			<property name="tempshowMaxDingliQuality" type="int" comment="宠物的定力资质(满值)"></property>
		</res>
	</prototype>

	<prototype req_name="PET_REPAIR_REPLACE_REQ" req_type="0x0000FF64" req_client_send="true" res_name="PET_REPAIR_REPLACE_RES" res_type="0x7000FF64"
		res_client_receive="true" comment="宠物炼化替换">
		<req>
			<property name="petId" type="long" comment="宠物id"></property>
		</req>
		<res>
			<property name="petId" type="long" comment="宠物id"></property>
		</res>
	</prototype>

	<!-- 成就 -->
	<prototype req_name="QUERY_ALL_ACHIEVEMENT_SERIES_REQ" req_type="0x0001FF01" res_name="QUERY_ALL_ACHIEVEMENT_SERIES_RES" res_type="0x7001FF01"
		req_client_send="true" res_client_receive="true" comment="成就所有系列查询">
		<req>
			<property name="currentPage" type="int" comment="请求页"></property>
			<property name="lineCountInPage" type="int" comment="每页显示的数量"></property>
		</req>
		<res>
			<property name="achievementSeriesIds" type="int[]" comment="成就系列id数组"></property>
			<property name="achievementSeriesNames" type="String[]" encoding="UTF-8" comment="成就系列名字数组"></property>
			<property name="colors" type="int[]" comment="成就系列颜色数组"></property>
			<property name="currentPage" type="int" comment="当前页"></property>
			<property name="allPage" type="int" comment="所有页数"></property>
		</res>
	</prototype>

	<prototype req_name="QUERY_ACHIEVEMENT_SERIES_REQ" req_type="0x0001FF02" res_name="QUERY_ACHIEVEMENT_SERIES_RES" res_type="0x7001FF02"
		req_client_send="true" res_client_receive="true" comment="某个成就系列查询">
		<req>
			<property name="achievementSeriesId" type="int" comment="成就系列id"></property>
			<property name="currentPage" type="int" comment="请求页"></property>
			<property name="lineCountInPage" type="int" comment="每页显示的数量"></property>
		</req>
		<res>
			<property name="achievementSeriesId" type="int" comment="成就系列id"></property>
			<property name="achievementIds" type="int[]" comment="成就id数组"></property>
			<property name="achievementNames" type="String[]" encoding="UTF-8" comment="成就名字数组"></property>
			<property name="colors" type="int[]" comment="成就颜色数组"></property>
			<property name="currentPage" type="int" comment="当前页"></property>
			<property name="allPage" type="int" comment="所有页数"></property>
		</res>
	</prototype>

	<prototype req_name="QUERY_ACHIEVEMENT_REQ" req_type="0x0001FF03" res_name="QUERY_ACHIEVEMENT_RES" res_type="0x7001FF03" req_client_send="true"
		res_client_receive="true" comment="某个成就查询">
		<req>
			<property name="achievementId" type="int" comment="成就id"></property>
		</req>
		<res>
			<property name="achievementId" type="int" comment="成就id"></property>
			<property name="uub" type="String" encoding="UTF-8" comment="成就描述信息"></property>
			<property name="articleIds" type="long[]" comment="奖励物品id数组"></property>
			<property name="honorName" type="String" encoding="UTF-8" comment="称号"></property>
			<property name="honorColor" type="int" comment="称号颜色"></property>
		</res>
	</prototype>

	<prototype req_name="MASTER_AND_PRENTICE_RELATIONSHIP_CHANGED_REQ" req_type="0x0001FF04" req_client_receive="true" comment="通知客户端师徒关系发生变化，提示客户端重新申请师徒关系信息">
		<req>
			<property name="changeType" type="byte" comment="变化类型，0师傅信息变化，1徒弟信息变化"></property>
		</req>
	</prototype>

	<!-- 鉴定 -->
	<prototype req_name="QUERY_EQUIPMENT_JIANDING_REQ" res_name="QUERY_EQUIPMENT_JIANDING_RES" req_type="0x0003A000" res_type="0x7003A000"
		res_client_receive="true" req_client_send="true" comment="客户端查询装备鉴定需要什么材料，只有装备才能鉴定">
		<req>
			<property name="equipmentId" type="long" comment="装备ID" />
		</req>
		<res>
			<property name="descript" type="String" encoding="UTF-8" comment="鉴定的提示（价格）" />
			<property name="materials" type="String[]" encoding="UTF-8" comment="有效的鉴定符" />
		</res>
	</prototype>
	<prototype req_name="EQUIPMENT_JIANDING_REQ" req_type="0x0003A001" req_client_send="true" comment="客户端装备鉴定">
		<req>
			<property name="equipmentId" type="long" comment="装备ID" />
			<property name="materialId" type="long" comment="鉴定材料ID" />
		</req>
	</prototype>
	<prototype res_name="NEW_JIANDING_MSG_RES" res_type="0x7003A0A0" res_client_receive="true" comment="新鉴定信息">
		<res>
			<property name="msg1" type="String" encoding="UTF-8" comment="上面提示信息" />
			<property name="msg2" type="String" encoding="UTF-8" comment="下面提示信息" />
			<property name="addNames" type="String[]" encoding="UTF-8" comment="加成名字" />
			<property name="addInt" type="int[]" comment="加成信息,每2个一组" />
			<property name="needPropNames" type="String[]" encoding="UTF-8" comment="需要物品名字" />
		</res>
	</prototype>
	<prototype req_name="NEW_JIANDING_OK_REQ" req_type="0x0003A0A1" req_client_send="true"
			res_name="NEW_JIANDING_OK_RES" res_type="0x7003A0A1" res_client_receive="true" comment="新的鉴定">
			<req>
				<property name="equipmentId" type="long" comment="装备ID" />
				<property name="propId" type="long" comment="物品ID" />
				<property name="cellIndex" type="int" comment="物品CellIndex" />
			</req>
			<res>
				<property name="equipmentId" type="long" comment="装备ID" />
				<property name="endowments" type="long" comment="鉴定后装备资质值" />
			</res>
	</prototype>
	

	<!-- 铭刻 -->
	<prototype req_name="QUERY_EQUIPMENT_INSCRIPTION_REQ" res_name="QUERY_EQUIPMENT_INSCRIPTION_RES" req_type="0x0003A002" res_type="0x7003A002"
		req_client_send="true" res_client_receive="true" comment="客户端查询装备铭刻需要什么材料，只有装备才能铭刻">
		<req>
			<property name="equipmentId" type="long" comment="装备ID" />
		</req>
		<res>
			<property name="equipmentId" type="long" comment="装备ID" />
			<property name="descript" type="String" encoding="UTF-8" comment="铭刻的提示（价格）" />
			<property name="materials" type="String[]" encoding="UTF-8" comment="有效的铭刻符" />
		</res>
	</prototype>

	<prototype req_name="EQUIPMENT_INSCRIPTION_REQ" req_type="0x0003A003" req_client_send="true" comment="客户端装备铭刻">
		<req>
			<property name="equipmentId" type="long" comment="装备ID" />
			<property name="materialId" type="long" comment="铭刻材料ID" />
		</req>
	</prototype>

	<prototype req_name="EQUIPMENT_INLAY_UUB_REQ" req_type="0x0003A020" res_name="EQUIPMENT_INLAY_UUB_RES" res_type="0x7003A020"
		req_client_send="true" res_client_receive="true" comment="客户端查询装备的宝石镶嵌效果">
		<req>
			<property name="equipmentId" type="long" comment="装备ID" />
		</req>
		<res>
			<property name="equipmentId" type="long" comment="镶嵌的装备，玩家的背包中必须有此装备" />
			<property name="inlayEffectUUB" type="String" encoding="UTF-8" comment="宝石效果UUB" />
		</res>
	</prototype>

	<prototype req_name="EQUIPMENT_INLAY_REQ" req_type="0x0003A004" req_client_send="true" comment="客户端装备镶嵌">
		<req>
			<property name="equipmentId" type="long" comment="装备ID" />
			<property name="holeIndex" type="int" comment="孔序号" />
			<property name="materialId" type="long" comment="宝石ID" />
		</req>
	</prototype>

	<prototype req_name="EQUIPMENT_OUTLAY_REQ" req_type="0x0003A005" req_client_send="true" comment="客户端装备挖宝石">
		<req>
			<property name="equipmentId" type="long" comment="装备ID" />
			<property name="holeIndex" type="int" comment="孔序号" />
		</req>
	</prototype>
	<!-- 装备强化 -->
	<prototype req_name="QUERY_EQUIPMENT_STRONG_REQ" req_type="0x00F0EEF5" res_name="QUERY_EQUIPMENT_STRONG_RES" res_type="0x70F0EEF5"
		req_client_send="true" res_client_receive="true" comment="客户端请求服务器，装备强化的各种信息，包括需要什么材料，需要几个，用什么来提高成功率，需要多少手续费等">
		<req>
			<property name="equipmentId" type="long" comment="要强化的装备，玩家的背包中必须有此装备" />
		</req>
		<res>
			<property name="equipmentId" type="long" comment="要强化的装备，玩家的背包中必须有此装备" />
			<property name="cost" type="long" comment="价格" />
			<property name="strongedUUB" type="String" encoding="UTF-8" comment="强化后的装备UUB" />
			<property name="strongMaterialName" type="String[]" encoding="UTF-8" comment="可用的强化符"></property>
			<property name="strongMaterialLuck" type="int[]" comment="各颜色强化符的几率，不同名称强化符颜色相同几率一样"></property>
		</res>
	</prototype>

	<prototype req_name="EQUIPMENT_STRONG_REQ" req_type="0x00F0EEF6" res_name="EQUIPMENT_STRONG_RES" res_type="0x70F0EEF6" req_client_send="true"
		res_client_receive="true" comment="客户端请求服务器，装备强化，服务端发送强化成功消息前必须再次发出QUERY_EQUIPMENT_STRONG_RES通知客户端材料变化">
		<req>
			<property name="equipmentId" type="long" comment="要强化的装备，玩家的背包中必须有此装备" />
			<property name="strongMaterialID" type="long[]" comment="强化符ID"></property>
			<property name="strongType" type="byte" comment="强化类型，0表示使用金币强化，1表示使用元宝强化"></property>
		</req>
		<res>
			<property name="equipmentId" type="long" comment="要强化的装备，玩家的背包中必须有此装备" />
			<property name="star" type="short" comment="强化后装备的等级"></property>
			<property name="canStrong" type="boolean" comment="是否还能强化"></property>
		</res>
	</prototype>

	<!-- 装备摘星 -->
	<prototype req_name="QUERY_EQUIPMENT_PICKSTAR_REQ" res_name="QUERY_EQUIPMENT_PICKSTAR_RES" req_type="0x0003A006" res_type="0x7003A006"
		req_client_send="true" res_client_receive="true" comment="装备摘星查询">
		<req>
			<property name="equipmentId" type="long" comment="装备id" />
		</req>
		<res>
			<property name="equipmentId" type="long" comment="装备id" />
			<property name="description" type="String" encoding="UTF-8" comment="描述可以包含金币等信息" />
		</res>
	</prototype>

	<prototype req_name="EQUIPMENT_PICKSTAR_REQ" req_type="0x0003A007" req_client_send="true" comment="装备摘星">
		<req>
			<property name="equipmentId" type="long" comment="装备id" />
		</req>
	</prototype>

	<!-- 装备装星 -->
	<prototype req_name="QUERY_EQUIPMENT_INSERTSTAR_REQ" res_name="QUERY_EQUIPMENT_INSERTSTAR_RES" req_type="0x0003A015" res_type="0x7003A015"
		req_client_send="true" res_client_receive="true" comment="装备装星查询">
		<req>
			<property name="equipmentId" type="long" comment="装备id" />
		</req>
		<res>
			<property name="equipmentId" type="long" comment="装备id" />
			<property name="description" type="String" encoding="UTF-8" comment="描述可以包含金币等信息" />
			<property name="starName" type="String" encoding="UTF-8" comment="能装的星星的名字" />
		</res>
	</prototype>

	<prototype req_name="EQUIPMENT_INSERTSTAR_REQ" req_type="0x0003A008" req_client_send="true" comment="装备装星">
		<req>
			<property name="equipmentId" type="long" comment="装备id" />
			<property name="materialId" type="long" comment="物品材料id" />
		</req>
	</prototype>

	<!-- 装备炼化 -->
	<prototype req_name="EQUIPMENT_DEVELOP_REQ" req_type="0x0003A009" req_client_send="true" res_name="EQUIPMENT_DEVELOP_RES" res_type="0x7003A009"
		res_client_receive="true" comment="装备炼化">
		<req>
			<property name="equipmentId" type="long" comment="装备id" />
			<property name="assistEquipmentId" type="long" comment="副装备id" />
		</req>
		<res>
		</res>
	</prototype>

	<!-- 查询装备绑定 -->
	<prototype req_name="QUERY_EQUIPMENT_BIND_REQ" res_name="QUERY_EQUIPMENT_BIND_RES" req_type="0x0003A010" res_type="0x7003A010"
		req_client_send="true" res_client_receive="true" comment="查询装备绑定">
		<req>
			<property name="equipmentId" type="long" comment="装备id" />
		</req>
		<res>
			<property name="equipmentId" type="long" comment="装备id" />
			<property name="description" type="String" encoding="UTF-8" comment="描述可以包含所需金币等信息" />
		</res>
	</prototype>

	<prototype req_name="EQUIPMENT_BIND_REQ" req_type="0x0003A012" req_client_send="true" comment="装备绑定">
		<req>
			<property name="equipmentId" type="long" comment="装备id" />
		</req>
	</prototype>

	<prototype req_name="EQUIPMENT_DEVELOPUP_REQ" req_type="0x0003A013" req_client_send="true" comment="装备炼化后升级">
		<req>
			<property name="equipmentId" type="long" comment="装备id" />
		</req>
	</prototype>

	<!-- 请求物品合成 -->
	<prototype req_name="ARTICLE_COMPOSE_REQ" req_type="0x000000FF" req_client_send="true" comment="请求物品合成">
		<req>
			<property name="articleIds" type="long[]" comment="物品实体的唯一标识" />
			<property name="articleCounts" type="int[]" comment="物品实体的个数" />
			<property name="composeType" type="byte" comment="合成类型，0表示使用金币合成，1表示使用元宝合成"></property>
		</req>
	</prototype>

	<!-- 物品合成查询 -->
	<prototype req_name="QUERY_ARTICLE_COMPOSE_REQ" res_name="QUERY_ARTICLE_COMPOSE_RES" req_type="0x000002FF" req_client_send="true"
		res_client_receive="true" res_type="0x700002FF" comment="放入想要合成的物品，支持一种物品合成另外一种物品，同一种物品升级颜色，装备合成即多件装备(可以是不同的)合成一件主装备，提升主装备的颜色">
		<req>
			<property name="articleId" type="long" comment="物品实体的唯一标识" />
			<property name="composeType" type="byte" comment="合成类型，0表示使用金币合成，1表示使用元宝合成"></property>
		</req>
		<res>
			<property name="idTemp" type="long" comment="合成得到的物品临时id" />
			<property name="cost" type="long" comment="合成一次所需花费" />
			<property name="description" type="String" encoding="UTF-8" comment="合成信息，比如所需金币" />
		</res>
	</prototype>

	<!-- 客户端闪光动画播放 -->
	<prototype req_name="PLAY_ANIMATION_REQ" req_type="0x000003FF" req_client_receive="true" comment="服务器想让客户端播放动画，比如装备升级成功播放动画">
		<req>
			<property name="avata" type="String" encoding="utf-8" comment="动画组名称比如人类_男" />
			<property name="action" type="String" encoding="utf-8" comment="动画名比如站_上" />
			<property name="round" type="byte" comment="动画播放次数" />
			<property name="locationType" type="byte" comment="动画播放位置类型，0为默认位置类型，1为武器强化中间孔的位置，2为鉴定炼化绑定等的武器位置，3为宠物合成主宠位置，4" />
			<property name="locationX" type="byte" value="50" comment="动画播放位置X，当播放位置类型为默认类型0时，这个值表示横坐标百分比。播放位置类型不是默认类型时，这个值没有意义" />
			<property name="locationY" type="byte" value="50" comment="动画播放位置Y，当播放位置类型为默认类型0时，这个值表示纵坐标百分比。播放位置类型不是默认类型时，这个值没有意义" />
		</req>
	</prototype>

	<!--装备栏 -->
	<prototype req_name="QUERY_EQUIPMENT_TABLE_REQ" res_name="QUERY_EQUIPMENT_TABLE_RES" req_type="0x000000F4" res_type="0x700000F4"
		req_client_send="true" res_client_receive="true" comment="查询主玩家的装备栏">
		<req />
		<res>
			<object-property name="soulEquipment4Client" type="SoulEquipment4Client[]" comment="玩家元神的装备信息">
				<property name="soulTyp" type="int" comment="元神类型" />
				<property name="equipment" type="long[]" comment="装备信息 -1表示没装备" />
			</object-property>
		</res>
	</prototype>
	<prototype req_name="NOTIFY_EQUIPMENT_TABLECHANGE_REQ" res_name="NOTIFY_EQUIPMENT_TABLECHANGE_RES" req_type="0x000000FA" res_type="0x700000FA"
		req_client_receive="true" comment="服务器通知客户端，装备栏发生了变化">
		<req>
			<property name="soulType" type="int" comment="元神类型" />
			<property name="index" type="short" comment="标识某个位置"></property>
			<property name="id" type="long" comment="装备实体的ID，如果为-1标识此位置清空" />
		</req>
	</prototype>

	<!--背包 -->
	<prototype req_name="QUERY_KNAPSACK_REQ" res_name="QUERY_KNAPSACK_RES" req_type="0x000000F5" res_type="0x700000F5" req_client_send="true"
		res_client_receive="true" comment="查询玩家的背包，整理背包也使用这个指令">
		<req>
			<property name="requestType" type="byte" comment="请求方式：0-查询所有背包，1-整理所有背包" />
		</req>
		<res>
			<object-property name="bagInfo4Client" type="BagInfo4Client[]" comment="背包内容">
				<property name="bagtype" type="byte" comment="0-第一个背包类型,1-.."></property>
				<property name="entityId" type="long[]" comment="背包中各个单元格放置的物体唯一标识，长度就是背包格个数，内容-1标识空格子"></property>
				<property name="counts" type="short[]" comment="背包中各个单元格放置的物体个数，0标识没有物品"></property>

			</object-property>
			<object-property name="categories" type="PropsCategory[]" comment="道具分类信息">
				<property name="cooldownLimit" type="long" comment="cd时间"></property>
				<property name="stalemateType" type="byte" comment="引导类型"></property>
				<property name="categoryName" type="String" encoding="UTF-8" comment="分类的名称"></property>
				<property name="stalemateTime" type="long" comment="引导时间"></property>
			</object-property>
		</res>
	</prototype>

	<!--防爆背包查询 -->
	<prototype req_name="QUERY_KNAPSACK_FB_REQ" res_name="QUERY_KNAPSACK_FB_RES" req_type="0x000001F7" res_type="0x700001F7" req_client_send="true"
		res_client_receive="true" comment="查询玩家的背包，整理背包也使用这个指令">
		<req>
		</req>
		<res>
			<!-- 下面是客户端防爆包的显示 -->
			<property name="fangbaoId" type="long" comment="防爆包道具id，-1表示没有防爆包"></property>
			<property name="fangbaomax" type="short" comment="防爆包最大扩充个数"></property>
			<property name="fangbaoEntityId" type="long[]" comment="背包中各个单元格放置的物体唯一标识，长度就是背包格个数，内容-1标识空格子"></property>
			<property name="fangbaoCounts" type="short[]" comment="背包中各个单元格放置的物体个数，0标识没有物品"></property>
		</res>
	</prototype>

	<prototype req_name="Fangbao_KNAPSACK_REQ" res_name="Fangbao_KNAPSACK_RES" req_type="0x000001F5" res_type="0x700001F5" req_client_send="true"
		res_client_receive="true" comment="查询玩家的防爆背包，删除防爆背包也使用这个指令">
		<req>
			<property name="requestType" type="byte" comment="请求方式：-1-查询防爆背包，其他值表示取下相应位置防爆背包" />
		</req>
		<res>
			<property name="knapsackArticleId" type="long" comment="返回所有防爆背包的id，-1表示该位置没有防爆包" />
		</res>
	</prototype>

	<prototype req_name="ARTICLE_OPRATION_REQ" req_type="0x000000F6" req_client_send="true" comment="客户端发起的对背包中物品进行的操作，如使用、装备、丢弃等">
		<req>
			<property name="operation" type="byte" comment="操作标记：0-使用，1-装备，2-丢弃" />
			<property name="bagIndex" type="short" comment="物品在哪个背包：包类型" />
			<property name="index" type="short" comment="物品在背包中所占格子的索引" />
			<property name="fangbaotype" type="byte" comment="0:一般包  1:防爆包" />
			<property name="soulType" type="int" comment="要操作的元神的类型 " />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="HOOK_USE_PROP_REQ" req_type="0x0000A0F6" req_client_send="true" comment="挂机使用物品">
		<req>
			<property name="bagIndex" type="short" comment="物品在哪个背包：包类型" />
			<property name="index" type="short" comment="物品在背包中所占格子的索引" />
			<property name="entityID" type="long" comment="物品ID" />
			<property name="soulType" type="int" comment="要操作的元神的类型 " />
		</req>
	</prototype>

	<prototype req_name="ARTICLE_OPRATION_MOVE_REQ" req_type="0x000001F6" req_client_send="true" comment="客户端发起的对背包中物品进行移动">
		<req>
			<property name="moveType" type="byte" comment="0:一般包移动到一般包 1:防爆包移动到防爆包 2:一般包移动到防爆包3：防爆包移动到一般包" />
			<property name="splitOutCount" type="short" comment="拆分几个出来" />
			<property name="indexFrom" type="short" comment="物品在背包中所占格子的索引" />
			<property name="indexTo" type="short" comment="物品在背包中所占格子的索引" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="REMOVE_EQUIPMENT_REQ" req_type="0x000000F7" req_client_send="true" comment="客户端发起的卸载装备的请求">
		<req>
			<property name="soulType" type="int" comment="元神类型" />
			<property name="equipmentType" type="byte" comment="装备类型" />
		</req>
	</prototype>

	<prototype req_name="REMOVE_AVATAPROPS_REQ" req_type="0x00000100" req_client_send="true" comment="客户端发起的卸载时装的请求">
		<req>
		</req>
	</prototype>

	<prototype req_name="SWITCH_SUIT_REQ" req_type="0x000000F8" req_client_send="true" comment="切换装备套的请求，启用另一套装备">
		<req>
			<property name="suit" type="byte" comment="将制定的套设置为当前的套" />
		</req>
	</prototype>

	<prototype req_name="NOTIFY_KNAPSACKCHANGE_REQ" req_type="0x000000F9" req_client_receive="true" comment="服务器通知客户端，背包某个格子发生了变化">
		<req>
			<property name="bagIndex" type="short" comment="背包的编号"></property>
			<property name="index" type="short" comment="格子的编号"></property>
			<property name="count" type="short" comment="物品的个数，为0时标识空，大于0标识有东西，下面3个数组，最多只有一个元素。"></property>
			<property name="id" type="long" comment="格子中具体的物品Id，如果没有物品，值为-1"></property>

			<property name="fangbao" type="boolean" comment="true:防爆包  "></property>

		</req>
	</prototype>

	<!-- 帮助系统 -->
	<prototype req_name="HELP_WINDOW_REQ" req_type="0x00000F21" req_client_send="true" res_name="HELP_WINDOW_RES" res_type="0x70000F21"
		res_client_receive="true" comment="窗口的帮助请求">
		<req>
			<property name="helpType" type="byte" comment="0:窗口的帮助,1-主界面的帮助" />
			<property name="id" type="String" encoding="UTF-8" comment="关键字，对窗口而言是窗口的ID" />
			<property name="screenW" type="short" comment="手机屏幕大小"></property>
			<property name="screenH" type="short" comment="手机屏幕大小"></property>
		</req>
		<res>
			<property name="helpType" type="byte" comment="0:窗口的帮助,1-主界面的帮助" />
			<property name="id" type="String" encoding="UTF-8" comment="关键字，对窗口而言是窗口的ID" />
			<object-property name="helpMessages" type="HelpMessage[]" comment="帮组信息">
				<property name="rectx" type="short" comment="矩形"></property>
				<property name="recty" type="short" comment="矩形"></property>
				<property name="rectw" type="short" comment="矩形"></property>
				<property name="recth" type="short" comment="矩形"></property>
				<property name="rectcolor" type="int" comment="矩形边颜色"></property>
				<property name="rectlinew" type="byte" comment="矩形线宽"></property>

				<property name="lineX1" type="short[]" comment="额外的线条"></property>
				<property name="lineY1" type="short[]" comment="额外的线条"></property>
				<property name="lineX2" type="short[]" comment="额外的线条"></property>
				<property name="lineY2" type="short[]" comment="额外的线条"></property>
				<property name="lineColor" type="int[]" comment="颜色"></property>
				<property name="lineW" type="byte[]" comment="线宽"></property>


				<property name="btnx" type="short" comment="按钮x"></property>
				<property name="btny" type="short" comment="按钮y"></property>
				<property name="btnFontSize" type="short" comment="按钮文字大小"></property>
				<property name="btnColor" type="int" comment="按钮文字颜色"></property>
				<property name="btnText" type="String" encoding="UTF-8" comment="分类文字"></property>

				<property name="bubbleLineX1" type="short[]" comment="按钮触发泡泡的线条"></property>
				<property name="bubbleLineY1" type="short[]" comment="按钮触发泡泡的线条"></property>
				<property name="bubbleLineX2" type="short[]" comment="按钮触发泡泡的线条"></property>
				<property name="bubbleLineY2" type="short[]" comment="按钮触发泡泡的线条"></property>
				<property name="bubbleLineColor" type="int[]" comment="颜色"></property>
				<property name="bubbleLineW" type="byte[]" comment="线宽"></property>

				<property name="bubbleContentX" type="short" comment="泡泡文字x"></property>
				<property name="bubbleContentY" type="short" comment="泡泡文字y"></property>
				<property name="bubbleContentW" type="short" comment="泡泡文字"></property>
				<property name="bubbleContentH" type="short" comment="泡泡文字"></property>

				<property name="bubbleFontSize" type="short" comment="文字大小"></property>
				<property name="bubbleTextColor" type="int" comment="文字颜色"></property>
				<property name="bubbleContent" type="String" encoding="UTF-8" comment="文字"></property>
			</object-property>
		</res>
	</prototype>


	<!-- 资源管理 -->
	<prototype req_name="RESOURCE_DATA_REQ" req_type="0x00000F20" req_client_send="true" res_name="RESOURCE_DATA_RES" res_type="0x70000F20"
		res_client_receive="true" comment="客户端的资源请求">
		<req>
			<property name="clientType" type="String" encoding="UTF-8" comment="客户端类型" />
			<property name="resType" type="byte" comment="0-错误，1-切片素材，2-部件素材，3-形象素材,4-地图，5-图片" />
			<property name="keyName" type="String" encoding="UTF-8" comment="素材名字关键字" />
			<property name="version" type="int" comment="素材版本号" />
		</req>
		<res>
			<property name="resType" type="byte" comment="0-错误，1-切片素材，2-部件素材，3-形象素材,4-地图，5-纯图片" />
			<property name="keyName" type="String" encoding="UTF-8" comment="素材名称"></property>
			<property name="result" type="byte" comment="结果，0表示成功，其他表示错误，"></property>
			<property name="resultString" type="String" encoding="UTF-8" comment="错误信息" />
			<property name="dataLength" type="int" comment="数据的大小，单位为字节" />
			<property name="packetNum" type="int" comment="数据分多少个包发送" />
		</res>
	</prototype>
	<prototype req_name="RESOURCE_DATA_REQ_PROCESS" req_type="0x00000018" res_type="0x70000018" req_client_receive="true" comment="服务器向客户端发送资源数据包">
		<req>
			<property name="resType" type="byte" comment="0-错误，1-切片素材，2-部件素材，3-形象素材,4-地图，5-纯图片" />
			<property name="keyName" type="String" encoding="UTF-8" comment="素材名称"></property>
			<property name="offsetIndex" type="int" comment="包中的数据在整个数据中的偏移量，从0开始"></property>
			<property name="data" type="byte[]" max-num="2048" comment="数据"></property>
		</req>
	</prototype>


	<!-- 坐骑 -->
	<prototype req_name="QUERY_PLAYER_HORSE_REQ" req_type="0x00000127" req_client_send="true" res_name="QUERY_PLAYER_HORSE_RES" res_type="0x70000127"
		res_client_receive="true" comment="玩家登陆查询正在骑的马，默认的马的id">
		<req>
		</req>

		<res>
			<property name="ridingHorseId" type="long" comment="正在骑的马的id"></property>
			<property name="defaultHorseId" type="long" comment="默认马的id"></property>
		</res>
	</prototype>

	<!-- 设置默认马 -->
	<prototype req_name="SET_DEFAULT_HORSE_REQ" req_type="0x00000126" req_client_send="true" res_name="SET_DEFAULT_HORSE_RES" res_type="0x70000126"
		res_client_receive="true" comment="玩家设置默认的马">
		<req>
			<property name="defaultHorseId" type="long" comment="默认马的id"></property>
		</req>

		<res>
			<property name="result" type="boolean" comment="设置成功没有"></property>
			<property name="defaultHorseId" type="long" comment="默认马的id"></property>
		</res>
	</prototype>

	<prototype req_name="QUERY_HORSE_LIST" req_type="0x00000118" res_name="QUERY_HORSE_LIST_RES" res_type="0x70000118" req_client_send="true"
		res_client_receive="true" comment="客户端向服务器发送查询马匹列表">
		<req>
		</req>

		<res>
			<object-property name="horseList" type="Horse[]" comment="返回个人马匹数组">

				<property name="horseId" type="long" comment="马的id"></property>
				<property name="horseLevel" type="int" comment="马的级别"></property>
				<property name="rank" type="int" comment="马的等阶"></property>
				<property name="horseName" type="String" encoding="UTF-8" comment="名称" />
				<property name="avata" type="String" encoding="UTF-8" comment="avata" />
				<property name="icon" type="String" encoding="UTF-8" comment="icon" />
				<property name="equipmentIds" type="long[]" comment="坐骑的装备id" />
				<property name="maxEnergy" type="int" comment="坐骑的最大体力值" />
				<property name="energy" type="int" comment="坐骑的当前体力值" />
				<property name="lastEnergyIndex" type="int" comment="体力值影响属性的百分比 5-10" />

				<property name="speed" type="int" comment="速度"></property>
				<property name="maxHP" type="int" comment="" />
				<property name="phyAttack" type="int" comment="" />
				<property name="magicAttack" type="int" comment="" />
				<property name="phyDefence" type="int" comment="" />
				<property name="magicDefence" type="int" comment="" />
				<property name="maxMP" type="int" comment="" />
				<property name="breakDefence" type="int" comment="" />
				<property name="accurate" type="int" comment="" />
				<property name="criticalDefence" type="int" comment="" />
				<property name="criticalHit" type="int" comment="" />
				<property name="hit" type="int" comment="" />
				<property name="dodge" type="int" comment="" />
				<property name="blizzardAttack" type="int" comment="" />
				<property name="blizzardDefence" type="int" comment="" />
				<property name="fireAttack" type="int" comment="" />
				<property name="fireDefence" type="int" comment="" />

				<property name="windAttack" type="int" comment="" />
				<property name="windDefence" type="int" comment="" />
				<property name="thunderAttack" type="int" comment="" />

			</object-property>
		</res>
	</prototype>


	<prototype req_name="NOTIFY_HORSE_CHANGE_REQ" req_type="0x00000119" req_client_receive="true" comment="根据坐骑心跳，服务器向客户端发送，体力值，体力值影响属性百分比">
		<req>
			<property name="horseId" type="long" comment="正在骑的马的id"></property>
			<property name="energy" type="int" comment="正在骑的马的体力值"></property>
			<property name="rate" type="int" comment="体力值影响属性的百分比 5-10" />
		</req>
	</prototype>

	<!-- 穿 ，卸马匹装备 -->
	<prototype req_name="HORSE_PUTONOROFF_REQ" req_type="0x00000120" req_client_send="true" res_name="HORSE_PUTONOROFF_RES" res_client_receive="true"
		res_type="0x70000120" comment="服务器向客户端发送，通知客户端发生了某些事情，客户端根据不同的事情，作不同的现实">
		<req>
			<property name="onOroff" type="boolean" comment="穿还是脱, 穿true"></property>
			<property name="horseId" type="long" comment="马的id"></property>
			<property name="equipmentId" type="long" comment="装备id"></property>
		</req>

		<res>
			<object-property name="horse" type="Horse" comment="返回指定马匹">

				<property name="horseId" type="long" comment="马的id"></property>
				<property name="horseName" type="String" encoding="UTF-8" comment="名称" />
				<property name="equipmentIds" type="long[]" comment="坐骑的装备id" />
				<property name="maxEnergy" type="int" comment="坐骑的最大体力值" />
				<property name="energy" type="int" comment="坐骑的当前体力值" />
				<property name="lastEnergyIndex" type="int" comment="体力值影响属性的百分比 5-10" />

				<property name="maxHP" type="int" comment="" />
				<property name="phyAttack" type="int" comment="" />
				<property name="magicAttack" type="int" comment="" />
				<property name="phyDefence" type="int" comment="" />
				<property name="magicDefence" type="int" comment="" />
				<property name="maxMP" type="int" comment="" />
				<property name="breakDefence" type="int" comment="" />
				<property name="accurate" type="int" comment="" />
				<property name="criticalDefence" type="int" comment="" />
				<property name="criticalHit" type="int" comment="" />
				<property name="hit" type="int" comment="" />
				<property name="dodge" type="int" comment="" />
				<property name="blizzardAttack" type="int" comment="" />
				<property name="blizzardDefence" type="int" comment="" />
				<property name="fireAttack" type="int" comment="" />
				<property name="fireDefence" type="int" comment="" />

				<property name="windAttack" type="int" comment="" />
				<property name="windDefence" type="int" comment="" />
				<property name="thunderAttack" type="int" comment="" />

			</object-property>
		</res>
	</prototype>


	<!-- 上下马匹 -->
	<prototype req_name="HORSE_RIDE_REQ" req_type="0x00000121" req_client_send="true" res_name="HORSE_RIDE_RES" res_type="0x70000121"
		res_client_receive="true" comment="客户端向服务端发送 上马，下马（快捷键)">
		<req>
			<property name="horseId" type="long" comment="马的id"></property>
			<property name="ride" type="boolean" comment="true 上马 false 下马"></property>
		</req>

		<res>
			<property name="horseId" type="long" comment="马的id"></property>
			<property name="ride" type="boolean" comment="true 上马 false 下马"></property>
		</res>
	</prototype>

	<!-- 查询喂马食物 -->
	<prototype req_name="QUERY_FEED_HORSE_REQ" req_type="0x00000125" req_client_send="true" res_name="QUERY_FEED_HORSE_RES" res_type="0x70000125"
		res_client_receive="true" comment="查询喂马食物 ">
		<req>
		</req>

		<res>
			<property name="names" type="String[]" encoding="UTF-8" comment="可以喂养坐骑的食物"></property>
		</res>
	</prototype>


	<!-- 喂马 -->
	<prototype req_name="FEED_HORSE_REQ" req_type="0x00000122" req_client_send="true" res_name="FEED_HORSE_RES" res_type="0x70000122"
		res_client_receive="true" comment="喂马">
		<req>
			<property name="horseId" type="long" comment="马的id"></property>
			<property name="entityId" type="long" comment="饲料"></property>
		</req>

		<res>
			<property name="horseId" type="long" comment="马的id"></property>
			<property name="energy" type="int" comment="正在骑的马的体力值"></property>
			<property name="rate" type="int" comment="体力值影响属性的百分比 5-10" />
		</res>
	</prototype>

	<!-- 查询坐骑装备 -->
	<prototype req_name="QUERY_HORSE_EQUIPMENTS_REQ" req_type="0x00000123" req_client_send="true" res_name="QUERY_HORSE_EQUIPMENTS_RES"
		res_type="0x70000123" res_client_receive="true" comment="查询坐骑装备">
		<req>
			<property name="horseId" type="long" comment="马的id"></property>
		</req>

		<res>
			<property name="equipments" type="long[]" comment="能穿的装备的id"></property>
		</res>
	</prototype>

	<!-- 使用坐骑道具成功 -->
	<prototype req_name="USE_HORSE_RESULT_REQ" req_type="0x00000124" req_client_receive="true" comment="使用坐骑道具结果">
		<req>
			<property name="horseId" type="long" comment="马的id"></property>
		</req>
	</prototype>



	<!-- 社交 -->
	<prototype req_name="GET_TYPEPLAYER_REQ" req_type="0x0000EC01" res_name="GET_TYPEPLAYER_RES" res_type="0x7000EC01" req_client_send="true"
		res_client_receive="true" comment="获取玩家列表,好友或黑名单,或仇人">
		<req>
			<property name="ptype" type="byte" comment="类型, 0-好友,1-临时好友 2-黑名单, 3-仇人" />
			<property name="page" type="int" comment="分页"></property>
			<property name="numbers" type="int" comment="每页显示几个"></property>
		</req>
		<res>
			<property name="playerSum" type="int" comment="好友总数"></property>
			<property name="playerOnline" type="int" comment="在线人数"></property>
			<property name="pageNum" type="int" comment="分页总数"></property>
			<property name="page" type="int" comment="第几页"></property>
			<property name="ptype" type="byte" comment="类型, 0-好友,1-临时好友 2-黑名单, 3-仇人,4-群组" />
			<object-property name="player_relationInfo" type="Player_RelatinInfo[]" comment="返回社会关系">
				<property name="id" type="long" comment="人物id"></property>
				<property name="career" type="byte" comment="人物职业"></property>
				<property name="name" type="String" encoding="UTF-8" comment="名字" />
				<property name="icon" type="String" encoding="UTF-8" comment="头像" />
				<property name="relationShip" type="byte" comment="0 好友 1结义 2 师 3徒 4 夫妻  -1 没有关系"></property>
				<property name="isonline" type="boolean" comment="是否在线" />
				<property name="mood" type="String" encoding="UTF-8" comment="玩家心情" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="GET_TYPEPLAYER_REQ2" req_type="0x0000EC30" res_name="GET_TYPEPLAYER_RES2" res_type="0x7000EC30" req_client_send="true"
		res_client_receive="true" comment="腾讯好友列表" >
		<req>
			<property name="ptype" type="byte" comment="类型, 0-好友,1-临时好友 2-黑名单, 3-仇人" />
			<property name="page" type="int" comment="分页"></property>
			<property name="numbers" type="int" comment="每页显示几个"></property>
		</req>
		<res>
			<property name="playerSum" type="int" comment="好友总数"></property>
			<property name="playerOnline" type="int" comment="在线人数"></property>
			<property name="pageNum" type="int" comment="分页总数"></property>
			<property name="page" type="int" comment="第几页"></property>
			<property name="ptype" type="byte" comment="类型, 0-好友,1-临时好友 2-黑名单, 3-仇人,4-群组" />
			<object-property name="player_relationInfo" type="Player_RelatinInfo[]" comment="返回社会关系">
				<property name="id" type="long" comment="人物id"></property>
				<property name="career" type="byte" comment="人物职业"></property>
				<property name="name" type="String" encoding="UTF-8" comment="名字" />
				<property name="icon" type="String" encoding="UTF-8" comment="头像" />
				<property name="relationShip" type="byte" comment="0 好友 1结义 2 师 3徒 4 夫妻  -1 没有关系"></property>
				<property name="isonline" type="boolean" comment="是否在线" />
				<property name="mood" type="String" encoding="UTF-8" comment="玩家心情" />
				<property name="tx_gamelevel" type="int" comment="腾讯魔钻是否开通" />
			</object-property>
		</res>
	</prototype>
	
	<prototype res_name="TX_GAMELEVEL_RES" res_type="0x7000EC31" res_client_receive="true" comment="腾讯魔钻信息">
		<res>
			<property name="tx_gamelevel" type="int" comment="腾讯魔钻是否开通" />
			<property name="agio" type="int" comment="打折比例 100为不打折" />
			<property name="iconPng" type="String" comment="打折图片名字" />
		</res>
	</prototype>
	
	<prototype req_name="PLAYER_HOOK_INFO_REQ" req_type="0x0000EC32" req_client_send="true"
			res_name="PLAYER_HOOK_INFO_RES" res_type="0x7000EC32" res_client_receive="true" comment="挂机通知协议，客户端操作通知服务器，服务器也可以主动通知客户端">
		<req>
			<object-property name="playerHookInfo" type="PlayerHookInfo" comment="挂机信息">
				<property name="isinHook" type="boolean" comment="自动挂机" />
				<property name="isAutoAtt" type="boolean" comment="自动打怪" />
				<property name="isUseYinZi" type="boolean" comment="是否自动用银子" />
				<property name="playerHpName" type="String" comment="恢复hp物品名字" />
				<property name="playerMpName" type="String" comment="恢复mp物品名字" />
			</object-property>
		</req>
		<res>
			<object-property name="playerHookInfo" type="PlayerHookInfo" comment="挂机信息">
				<property name="isinHook" type="boolean" comment="自动挂机" />
				<property name="isAutoAtt" type="boolean" comment="自动打怪" />
				<property name="isUseYinZi" type="boolean" comment="是否自动用银子" />
				<property name="playerHpName" type="String" comment="恢复hp物品名字" />
				<property name="playerMpName" type="String" comment="恢复mp物品名字" />
			</object-property>
		</res>
	</prototype>


	<!-- 查看个人聊天群组 -->
	<prototype req_name="GET_CHATGROUPS_REQ" req_type="0x0000EC22" res_name="GET_CHATGROUPS_RES" res_type="0x7000EC22" req_client_send="true"
		res_client_receive="true" comment="获取玩家的聊天列表组">
		<req>
		</req>
		<res>
			<property name="groupIds" type="long[]" comment="id" />
			<property name="names" type="String[]" encoding="UTF-8" comment="名字" />
		</res>
	</prototype>


	<!-- 查询群组中成员 -->
	<prototype req_name="QUERY_GROUPMEMBERS_REQ" req_type="0x0000EC17" res_name="QUERY_GROUPMEMBERS_RES" res_type="0x7000EC17" req_client_send="true"
		res_client_receive="true" comment="获取玩家列表,好友或黑名单,或仇人">
		<req>
			<property name="groupId" type="long" comment="群组id" />
		</req>
		<res>
			<object-property name="player_relationInfo" type="Player_RelatinInfo[]" comment="返回社会关系">
				<property name="id" type="long" comment="人物id"></property>
				<property name="career" type="byte" comment="人物职业"></property>
				<property name="name" type="String" encoding="UTF-8" comment="名字" />
				<property name="icon" type="String" encoding="UTF-8" comment="头像" />
				<property name="isonline" type="boolean" comment="是否在线" />
				<property name="mood" type="String" encoding="UTF-8" comment="玩家心情" />
			</object-property>
		</res>
	</prototype>


	<prototype req_name="SOCIAL_RELATION_MANAGE_REQ" req_type="0x0000EC02" req_client_send="true" res_name="SOCIAL_RELATION_MANAGE_RES"
		res_type="0x7000EC02" res_client_receive="true" comment="管理玩家的社会关系，包括好友、黑名单和仇人。操作结果用通用提示指令通知">
		<req>
			<property name="operation" type="byte" comment="0-添加，1-删除" />
			<property name="ptype" type="byte" comment="类型, 0-好友, 1-黑名单, 2-仇人" />
			<property name="playerId" type="long" comment="玩家编号，如果未知用-1" />
		</req>

		<res>
			<property name="result" type="String" encoding="UTF-8" comment="返回结果"></property>
			<property name="operation" type="byte" comment="0-添加，1-删除" />
			<property name="ptype" type="byte" comment="类型, 0-好友, 1-黑名单, 2-仇人" />
			<property name="id" type="long" comment="玩家id"></property>
		</res>
	</prototype>

	<prototype req_name="SOCIAL_REFUSE_FRIEND_REQ" req_type="0x0000EC08" req_client_send="true" comment="拒绝添加好友">
		<req>
			<property name="playerId" type="long" comment="玩家编号，如果未知用-1" />
		</req>
	</prototype>


	<prototype req_name="SOCIAL_QUERY_PLAYERINFO_REQ" req_type="0x0000EC03" req_client_send="true" res_name="SOCIAL_QUERY_PLAYERINFO_RES"
		res_type="0x7000EC03" res_client_receive="true" comment="管理玩家的社会关系，包括好友、黑名单和仇人。操作结果用通用提示指令通知">
		<req>
			<property name="playerId" type="long" comment="玩家编号，如果未知用-1" />
		</req>
		<res>
			<property name="id" type="long" comment="id" />
			<property name="name" type="String" encoding="UTF-8" comment="名字" />
			<property name="mood" type="String" encoding="UTF-8" comment="玩家心情" />
			<property name="level" type="int" comment="玩家级别" />
			<property name="career" type="String" encoding="UTF-8" comment="职业" />
			<property name="gang" type="String" encoding="UTF-8" comment="帮会" />
			<property name="jiazu" type="String" encoding="UTF-8" comment="家族" />
			<property name="honor" type="String" encoding="UTF-8" comment="称号" />
			<property name="relationShip" type="byte" comment="关系" />
			<property name="birth" type="String" encoding="UTF-8" comment="生日" />
			<property name="star" type="int" comment="星座" />
			<property name="online" type="boolean" comment="是否在线" />
			<property name="autoBack" type="byte" comment="状态" />
		</res>
	</prototype>

	<!-- 发送添加好友请求 -->
	<prototype req_name="SEND_SOCIETY_OPRATE_REQ" req_type="0x0000EC04" req_client_send="true" res_name="SEND_SOCIETY_OPRATE_RES" res_type="0x7000EC04"
		res_client_receive="true" comment="发送添加好友请求">
		<req>
			<property name="playerId" type="long" comment="玩家编号，如果未知用-1" />
		</req>

		<res>
			<property name="inviteId" type="long" comment="邀请添加好友的Id" />
			<property name="name" type="String" encoding="UTF-8" comment="好友的名" />
		</res>
	</prototype>

	<!-- 查询在线玩家信息 -->
	<prototype req_name="QUERY_FRIEND_REQ" req_type="0x0000EC05" req_client_send="true" res_name="QUERY_FRIEND_RES" res_type="0x7000EC05"
		res_client_receive="true" comment="发送查询好友请求">
		<req>
			<property name="key" type="String[]" encoding="UTF-8" comment="查询条件顺序国家，省份，城市，星座 ，职业  ，最小级别  ，最大级别" />
		</req>

		<res>
			<object-property name="player_relationInfo" type="Player_RelatinInfo[]" comment="返回社会关系">
				<property name="id" type="long" comment="人物id"></property>
				<property name="career" type="byte" comment="人物职业"></property>
				<property name="name" type="String" encoding="UTF-8" comment="名字" />
				<property name="icon" type="String" encoding="UTF-8" comment="头像" />
				<property name="relationShip" type="byte" comment="0 好友 1结义 2 师 3徒 4 夫妻  -1 没有关系"></property>
				<property name="isonline" type="boolean" comment="是否在线" />
				<property name="mood" type="String" encoding="UTF-8" comment="玩家心情" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="QUERY_FRIEND2_REQ" req_type="0x0000EC20" req_client_send="true" res_name="QUERY_FRIEND2_RES" res_type="0x7000EC20"
		res_client_receive="true" comment="发送查询好友请求">
		<req>
			<property name="key" type="String[]" encoding="UTF-8" comment="查询条件顺序 国家，省份，城市，星座 ，职业  ，最小级别  ，最大级别,名字，" />
		</req>

		<res>
			<object-property name="player_relationInfo" type="Player_RelatinInfo[]" comment="返回社会关系">
				<property name="id" type="long" comment="人物id"></property>
				<property name="career" type="byte" comment="人物职业"></property>
				<property name="name" type="String" encoding="UTF-8" comment="名字" />
				<property name="icon" type="String" encoding="UTF-8" comment="头像" />
				<property name="relationShip" type="byte" comment="0 好友 1结义 2 师 3徒 4 夫妻  -1 没有关系"></property>
				<property name="isonline" type="boolean" comment="是否在线" />
				<property name="mood" type="String" encoding="UTF-8" comment="玩家心情" />
			</object-property>
		</res>
	</prototype>

	<!-- 查询玩家额外信息 -->
	<prototype req_name="QUERY_PERSONNAL_INFO_REQ" req_type="0x0000EC07" req_client_send="true" res_name="QUERY_PERSONNAL_INFO_RES" res_type="0x7000EC07"
		res_client_receive="true" comment="查询玩家附加信息">
		<req>
		</req>

		<res>
			<property name="onlineTime" type="int" comment="在线时间" />
			<property name="seeState" type="byte" comment="可见状态 0完全公开 1仅好友可见 2完全保密" />
			<property name="brithDay" type="String" encoding="UTF-8" comment="生日" />
			<property name="age" type="int" comment="年龄" />
			<property name="star" type="int" comment="星座" />
			<property name="country" type="int" comment="国家" />
			<property name="province" type="int" comment="省" />
			<property name="city" type="int" comment="市" />
			<property name="loving" type="String" encoding="UTF-8" comment="爱好" />
			<property name="mood" type="String" encoding="UTF-8" comment="心情" />
			<property name="personShow" type="String" encoding="UTF-8" comment="个人说明" />
		</res>
	</prototype>



	<!-- 玩家设置额外信息 -->
	<prototype req_name="SET_PLAYERINFO_REQ" req_type="0x0000EC06" req_client_send="true" res_name="SET_PLAYERINFO_RES" res_type="0x7000EC06"
		res_client_receive="true" comment="设置玩家附加信息">
		<req>
			<property name="seeState" type="byte" comment="可见状态 0完全公开 1仅好友可见 2完全保密" />
			<property name="brithDay" type="String" encoding="UTF-8" comment="生日" />
			<property name="age" type="int" comment="年龄" />
			<property name="star" type="int" comment="星座" />
			<property name="country" type="int" comment="国家" />
			<property name="province" type="int" comment="省" />
			<property name="city" type="int" comment="市" />
			<property name="loving" type="String" encoding="UTF-8" comment="爱好" />
			<property name="mood" type="String" encoding="UTF-8" comment="心情" />
			<property name="personShow" type="String" encoding="UTF-8" comment="个人说明" />
		</req>

		<res>
			<property name="result" type="boolean" comment="成功 或是不成功" />
		</res>
	</prototype>

	<!-- 玩家创建聊天分组请求 -->
	<prototype req_name="CREATE_GROUP_REQ" req_type="0x0000EC09" req_client_send="true" res_name="CREATE_GROUP_RES" res_type="0x7000EC09"
		res_client_receive="true" comment="玩家创建聊天分组请求">
		<req>
		</req>

		<res>
			<property name="result" type="String" encoding="UTF-8" comment="空为成功，不空为错误信息" />
		</res>
	</prototype>

	<!-- 玩家解散聊天分组请求 -->
	<prototype req_name="DISMISS_GROUP_REQ" req_type="0x0000EC10" req_client_send="true" res_name="DISMISS_GROUP_RES" res_type="0x7000EC10"
		res_client_receive="true" comment="玩家解散聊天分组请求">
		<req>
			<property name="groupId" type="long" comment="聊天组id" />
		</req>
		<res>
			<property name="result" type="String" encoding="UTF-8" comment="空为成功，不空为错误信息" />
			<property name="groupId" type="long" comment="聊天组id" />
		</res>
	</prototype>

	<!-- 群主把某人从某分组中删除 -->
	<prototype req_name="DEL_GROUP_MEMBER_REQ" req_type="0x0000EC11" req_client_send="true" res_name="DEL_GROUP_MEMBER_RES" res_type="0x7000EC11"
		res_client_receive="true" comment="群主把某人从某分组中删除 ">
		<req>
			<property name="groupId" type="long" comment="聊天组id" />
			<property name="playerId" type="long" comment="所删除的人物id" />
		</req>

		<res>
			<property name="result" type="String" encoding="UTF-8" comment="空为成功，不空为错误信息" />
			<property name="groupId" type="long" comment="聊天组id" />
			<property name="playerId" type="long" comment="删除的人物的id" />
		</res>
	</prototype>

	<!--某人从某分组中离开 -->
	<prototype req_name="LEAVE_GROUP_REQ" req_type="0x0000EC12" req_client_send="true" res_name="LEAVE_GROUP_RES" res_type="0x7000EC12"
		res_client_receive="true" comment="某人从某分组中离开 ">
		<req>
			<property name="groupId" type="long" comment="聊天组id" />
		</req>

		<res>
			<property name="result" type="String" encoding="UTF-8" comment="空为成功，不空为错误信息" />
			<property name="groupId" type="long" comment="聊天组id" />
		</res>
	</prototype>


	<!--某人向某分组申请 -->
	<prototype req_name="APPLY_GROUP_REQ" req_type="0x0000EC13" req_client_send="true" res_name="APPLY_GROUP_RES" res_type="0x7000EC13"
		res_client_receive="true" comment="某人向某分组申请">
		<req>
			<property name="groupId" type="long" comment="聊天组id" />
		</req>

		<res>
			<property name="groupId" type="long" comment="聊天组id" />
		</res>
	</prototype>


	<!--群主向某一玩家申请添加 -->
	<prototype req_name="GROUPMASTER_APPLY_GROUP_REQ" req_type="0x0000EC14" req_client_send="true" res_name="GROUPMASTER_APPLY_GROUP_RES"
		res_type="0x7000EC14" res_client_receive="true" comment="群主向某一玩家申请添加 ">
		<req>
			<property name="groupId" type="long" comment="聊天组id" />
			<property name="playerId" type="long" comment="人物id" />
		</req>

		<res>
			<property name="groupId" type="long" comment="聊天组id" />
		</res>
	</prototype>

	<!--查询群组 -->
	<prototype req_name="QUERY_GROUP_REQ" req_type="0x0000EC18" req_client_send="true" res_name="QUERY_GROUP_RES" res_type="0x7000EC18"
		res_client_receive="true" comment="玩家查询群组 ">
		<req>
			<property name="gtype" type="byte" comment="类型  1 id查找  0 名查找"></property>
			<property name="groupId" type="long" comment="聊天组id" />
			<property name="groupName" type="String" encoding="UTF-8" comment="聊天组名" />
		</req>

		<res>
			<property name="groupId" type="long" comment="聊天组id" />
			<property name="groupName" type="String" encoding="UTF-8" comment="聊天组名" />
		</res>
	</prototype>

	<!--设置玩家的状态 （自动回复） -->
	<prototype req_name="SET_AUTOBACK_REQ" req_type="0x0000EC15" req_client_send="true" res_name="SET_AUTOBACK_RES" res_type="0x7000EC15"
		res_client_receive="true" comment="设置玩家的状态 （自动回复）">
		<req>
			<property name="auto_back" type="byte" comment="自动回复标记" />
		</req>

		<res>
			<property name="result" type="String" encoding="UTF-8" comment="空成功，不为空 失败原因" />
			<property name="auto_back" type="byte" comment="自动回复标记" />
		</res>
	</prototype>

	<!--查询玩家的状态 -->
	<prototype req_name="QUERY_AUTOBACK_REQ" req_type="0x0000EC16" req_client_send="true" res_name="QUERY_AUTOBACK_RES" res_type="0x7000EC16"
		res_client_receive="true" comment="查询玩家的状态">
		<req>
		</req>

		<res>
			<property name="result" type="String" encoding="UTF-8" comment="空成功，不为空 失败原因" />
			<property name="auto_back" type="byte" comment="自动回复标记" />
		</res>
	</prototype>


	<!-- 宗派 -->

	<!-- 创建宗派申请 -->
	<prototype req_name="CREATE_ZONGPAI_APPLY_REQ" req_type="0x0000F001" req_client_send="true" res_name="CREATE_ZONGPAI_APPLY_RES" res_type="0x7000F001"
		res_client_receive="true" comment="创建宗派申请">
		<req>
		</req>
		<res>
			<property name="result" type="String" encoding="UTF-8" comment="空成功，不为空 失败" />
		</res>
	</prototype>

	<!-- 创建宗派验证宗派名 -->
	<prototype req_name="CREATE_ZONGPAI_CHECK_NAME_REQ" req_type="0x0000F021" req_client_send="true" res_name="CREATE_ZONGPAI_CHECK_NAME_RES"
		res_type="0x7000F021" res_client_receive="true" comment="创建宗派宗派名验证">
		<req>
			<property name="name" type="String" encoding="UTF-8" comment="宗派名" />
			<property name="declaration" type="String" encoding="UTF-8" comment="宗派宣言" />
		</req>
		<res>
			<property name="result" type="String" encoding="UTF-8" comment="空为成功，不空错误提示" />
			<property name="name" type="String" encoding="UTF-8" comment="宗派名" />
			<property name="declaration" type="String" encoding="UTF-8" comment="宗派宣言" />
		</res>
	</prototype>

	<!-- 创建宗派验证输入密码 -->
	<prototype req_name="CREATE_ZONGPAI_INPUT_PASSWORD_REQ" req_type="0x0000F022" req_client_send="true" comment="创建宗派输入密码">
		<req>
			<property name="name" type="String" encoding="UTF-8" comment="宗派名" />
			<property name="declaration" type="String" encoding="UTF-8" comment="宗派宣言" />
			<property name="password" type="String" encoding="UTF-8" comment="宗派密码" />
			<property name="password2" type="String" encoding="UTF-8" comment="2次密码" />
			<property name="passwordHint" type="String" encoding="UTF-8" comment="密码提示" />
		</req>
	</prototype>


	<prototype req_name="CREATE_ZONGPAI_SUCCESS_REQ" req_type="0x7000F050" req_client_receive="true" comment="创建宗派成功">

	</prototype>


	<!-- 宗主权限判定 -->
	<prototype req_name="ZONGZHU_CHECK_REQ" req_type="0x0000F113" req_client_send="true" res_name="ZONGZHU_CHECK_RES" res_type="0x7000F113"
		res_client_receive="true" comment="修改宗派宗旨权限判定">
		<req>
			<property name="optype" type="byte" comment="操作类型" />
		</req>
		<res>
			<property name="result" type="String" encoding="UTF-8" comment="空为成功，不空错误提示" />
			<property name="optype" type="byte" comment="操作类型" />
		</res>
	</prototype>


	<!-- 解散宗派确定 -->
	<prototype req_name="DISMISS_ZONGPAI_REQ" req_type="0x0000F112" req_client_send="true" res_name="DISMISS_ZONGPAI_RES" res_type="0x7000F112"
		res_client_receive="true" comment="解散宗派">
		<req>
			<property name="password" type="String" encoding="UTF-8" comment="宗派密码" />
		</req>
		<res>
		</res>
	</prototype>

	<!-- 修改宗派宗旨确定 -->
	<prototype req_name="UPDATE_ZONGPAI_DECLARATION_REQ" req_type="0x0000F014" req_client_send="true" res_name="UPDATE_ZONGPAI_DECLARATION_RES"
		res_type="0x7000F014" res_client_receive="true" comment="修改宗派宗旨确定">
		<req>
			<property name="name" type="String" encoding="UTF-8" comment="宗派宣言" />
		</req>

		<res>
			<property name="name" type="String" encoding="UTF-8" comment="宗派宣言" />
		</res>
	</prototype>

	<!-- 逐出宗派确定 -->
	<prototype req_name="KICK_ZONGPAI_REQ" req_type="0x0000F015" req_client_send="true" comment="逐出宗派">
		<req>
			<property name="jiazuId" type="long" comment="家族id" />
		</req>
	</prototype>

	<!-- 宗主禅让确定 -->
	<prototype req_name="DEMISE_ZONGPAI_REQ" req_type="0x0000F116" req_client_send="true" res_name="DEMISE_ZONGPAI_RES" res_type="0x7000F116"
		res_client_receive="true" comment="宗主禅让">
		<req>
			<property name="jiazuId" type="long" comment="家族id" />
			<property name="password" type="String" encoding="UTF-8" commnet="宗派的密码" />
		</req>

		<res>
			<property name="password" type="String" encoding="UTF-8" commnet="宗派的密码" />
			<property name="passwordHint" type="String" encoding="UTF-8" comment="宗派的密码提示" />


			<property name="masterName" type="String" encoding="UTF-8" comment="族长name" />
			<property name="onLineNum" type="int" comment="在线人数" />
			<property name="fanrongdu" type="int" comment="繁荣度" />

			<property name="jiazuId" type="long[]" comment="家族id" />
			<property name="jiazuName" type="String[]" encoding="UTF-8" comment="家族names" />
			<property name="jiazuBar" type="String[]" encoding="UTF-8" comment="家族徽章" />
			<property name="jiazuLevel" type="byte[]" comment="家族级别" />
			<property name="playerId" type="long[]" comment="族长id" />
			<property name="playerName" type="String[]" encoding="UTF-8" comment="族长names" />
		</res>
	</prototype>

	<!-- 离开宗派申请 -->
	<prototype req_name="LEAVE_ZONGPAI_APPLY_REQ" req_type="0x0000F017" req_client_send="true" res_name="LEAVE_ZONGPAI_APPLY_RES" res_type="0x7000F017"
		res_client_receive="true" comment="离开宗派申请判断 ">
		<req>
		</req>
		<res>
			<property name="jiazuId" type="long" comment="离开的家族id" />
		</res>
	</prototype>

	<!-- 添加宗派 -->
	<prototype req_name="ADD_ZONGPAI_REQ" req_type="0x0000F018" req_client_send="true" comment="添加宗派">
		<req>
			<property name="playerId" type="long" comment="id" />
		</req>
	</prototype>

	<!-- 查询宗派 -->
	<prototype req_name="QUERY_ZONGPAI_REQ" req_type="0x0000F019" req_client_send="true" req_client_receive="true" res_name="ZONGPAI_INFO_RES"
		res_type="0x7000F019" res_client_receive="true" comment="查询宗派">
		<req>
		</req>

		<res>
			<property name="zongpaiName" type="String" encoding="UTF-8" comment="宗派name" />
			<property name="masterName" type="String" encoding="UTF-8" comment="宗派长name" />
			<property name="declaration" type="String" encoding="UTF-8" comment="宣言" />
			<property name="onLineNum" type="int" comment="在线人数" />
			<property name="fanrongdu" type="int" comment="繁荣度" />

			<property name="jiazuId" type="long[]" comment="家族id" />
			<property name="jiazuName" type="String[]" encoding="UTF-8" comment="家族names" />
			<property name="jiazuBar" type="String[]" encoding="UTF-8" comment="家族徽章" />
			<property name="jiazuLevel" type="byte[]" comment="家族级别" />
			<property name="playerId" type="long[]" comment="族长id" />
			<property name="playerName" type="String[]" encoding="UTF-8" comment="族长names" />
		</res>
	</prototype>

	<!-- 请求结义 -->
	<prototype req_name="UNITE_APPLY_REQ" req_type="0x0000F030" req_client_send="true" res_name="UNITE_APPLY_RES" res_type="0x7000F030"
		res_client_receive="true" comment="请求结义">
		<req>
		</req>
		<res>
			<property name="memberIds" type="long[]" comment="队伍中的成员id" />
		</res>
	</prototype>

	<!-- 成员同意还是不同意结义 -->
	<prototype req_name="UNITE_DISAGREE_REQ" req_type="0x0000F031" req_client_send="true" res_name="UNITE_AGREEORNO_RES" res_type="0x7000F031"
		res_client_receive="true" comment="成员同意还是不同意结义;队长不同意结义">
		<req>
		</req>

		<res>
			<property name="playerId" type="long" comment="用户id"></property>
			<property name="result" type="boolean" comment="成员同意还是不同意结义(同意为true)" />
		</res>
	</prototype>

	<!-- 客户端输入名称等信息后 队长同意 -->
	<prototype req_name="UNITE_CONFIRM_REQ" req_type="0x0000F032" req_client_send="true" comment="客户端输入名称等信息后队长同意 ">
		<req>
			<property name="title" type="String" encoding="UTF-8" comment="结义名" />
			<property name="name" type="String" encoding="UTF-8" comment="结义个人称号" />
			<property name="position" type="boolean" comment="前后位置  (大x true)" />
			<property name="memberIds" type="long[]" comment="队伍中的成员id" />
		</req>
	</prototype>

	<!-- 退出结义 -->
	<prototype req_name="UNITE_EXIT_REQ" req_type="0x0000F034" req_client_send="true" res_name="UNITE_EXIT_RES" res_type="0x7000F034"
		req_client_receive="true" comment="退出结义">
		<req>
		</req>
		<res>
		</res>
	</prototype>

	<!-- 结义解散 -->
	<prototype res_name="UNITE_DISMISS_RES" res_type="0x7000F035" res_client_receive="true" comment="结义解散">
		<res>
		</res>
	</prototype>

	<prototype req_name="UNITE_ADD_REQ" req_type="0x0000F036" req_client_send="true" comment="加入结义  返回unite_finish_res">
		<req>
		</req>
	</prototype>

	<prototype res_name="CLOSE_WINDOWS_RES" res_type="0x7000F037" res_client_receive="true" comment="关闭窗口">
		<res>
			<property name="npcId" type="int" comment="要关闭的menuwindow的npcId" />
		</res>
	</prototype>

	<!-- 拜师或是收徒请求 -->
	<prototype req_name="TAKE_MASTER_PRNTICE_REQ" req_type="0x0000F101" req_client_send="true" comment="拜师或是收徒请求">
		<req>
			<property name="opration" type="boolean" comment="拜师还是收徒(true)"></property>
			<property name="ptype" type="boolean" comment="根据名还是根据id请求,true根据id"></property>
			<property name="id" type="long" comment="师傅id"></property>
			<property name="name" type="String" encoding="UTF-8" commnet="师傅name"></property>
		</req>
	</prototype>

	<!-- 拜师或收徒成功返回信息 -->
	<prototype res_name="TAKE_MASTER_PRNTICE_RES" res_type="0x7000F101" res_client_receive="true" comment="拜师或收徒成功返回信息">
		<res>
			<property name="masterOrPrentice" type="boolean" comment="师傅(true)还是徒弟"></property>
			<property name="id" type="long" comment="玩家id"></property>
			<property name="name" type="String" encoding="UTF-8" commnet="玩家name"></property>
			<property name="career" type="byte" comment="玩家的职业"></property>
			<property name="level" type="int" comment="玩家的级别"></property>
		</res>
	</prototype>

	<!-- 判师或逐徒请求 -->
	<prototype req_name="REBEL_EVICT_REQ" req_type="0x0000F102" req_client_send="true" res_name="REBEL_EVICT_RES" res_type="0x7000F102"
		res_client_receive="true" comment="判师或逐徒请求">
		<req>
			<property name="opration" type="boolean" comment="判师或逐徒 (true)"></property>
			<property name="id" type="long" comment="玩家id"></property>
		</req>
		<res>
			<property name="id" type="long" comment="玩家id"></property>
		</res>
	</prototype>

	<!-- 发布,取消发布,拜师，收徒(true) -->
	<prototype req_name="REGESTER_CANCLE_REQ" req_type="0x0000F103" req_client_send="true" comment="发布拜师，收徒 ">
		<req>
			<property name="ptype" type="boolean" comment="发布，取消(true)"></property>
			<property name="opration" type="boolean" comment="拜师，收徒(true)"></property>
		</req>
	</prototype>
	<!-- 查询自己的师傅或徒弟 -->
	<prototype req_name="QUERY_MASTERPRENTICE_REQ" req_type="0x0000F105" req_client_send="true" res_name="QUERY_MASTERPRENTICE_RES" res_type="0x7000F105"
		res_client_receive="true" comment="查询自己的师傅或徒弟 ">
		<req>
		</req>
		<res>
			<property name="ptype" type="boolean[]" comment="(true)师傅,徒弟"></property>
			<property name="ids" type="long[]" comment="玩家的id"></property>
			<property name="names" type="String[]" encoding="UTF-8" comment="玩家的names"></property>
			<property name="careers" type="byte[]" comment="职业s"></property>
			<property name="levels" type="int[]" comment="级别s"></property>
		</res>
	</prototype>

	<!-- 查询所有的登记的师徒信息 -->
	<prototype req_name="QUERY_MASTERPRENTICEINFO_REQ" req_type="0x0000F106" req_client_send="true" res_name="QUERY_MASTERPRENTICEINFO_RES"
		res_type="0x7000F106" res_client_receive="true" comment="查询所有的登记的师徒信息  true 收徒">
		<req>
			<property name="ptype" type="boolean" comment="查询拜师还是(true)收徒"></property>
			<property name="beginNum" type="int" comment="第几页开始"></property>
		</req>
		<res>
			<property name="ptype" type="boolean" comment="查询拜师还是(true)收徒"></property>
			<property name="beginNum" type="int" comment="第几页"></property>
			<property name="maxNum" type="int" comment="总共几页"></property>
			<property name="ids" type="long[]" comment="玩家的id"></property>
			<property name="names" type="String[]" encoding="UTF-8" comment="玩家的names"></property>
			<property name="classLevels" type="short[]" comment="境界"></property>
			<property name="careers" type="byte[]" comment="职业s"></property>
			<property name="levels" type="int[]" comment="级别s"></property>
			<property name="endTimes" type="String[]" encoding="UTF-8" comment="结束时间"></property>
		</res>
	</prototype>

	<!-- 领取传功石 -->
	<prototype req_name="ACCEPT_CHUANGONG_ARTICLE_REQ" req_type="0x0000F200" req_client_send="true" comment="领取传功石">
		<req>
		</req>
	</prototype>

	<!-- 申请传功 -->
	<prototype req_name="APPLY_CHUANGONG_REQ" req_type="0x0000F201" req_client_send="true" comment="申请传功">
		<req>
			<property name="playerId" type="long" comment="向谁申请传功"></property>
		</req>
	</prototype>

	<!-- 同意传功后 -->
	<prototype res_name="AGREE_CHUANGONG_RES" res_type="0x7000F202" res_client_receive="true" comment="同意传功后返回传功id">
		<res>
			<property name="cgId" type="long" comment="传功id"></property>
			<property name="time" type="int" comment="几秒"></property>
			<property name="state" type="boolean" comment="状态：打坐(true),站立（false）"></property>
		</res>
	</prototype>

	<!-- 完成传功 -->
	<prototype req_name="FINISH_CHUANGONG_REQ" req_type="0x0000F203" req_client_send="true" res_name="FINISH_CHUANGONG_RES" res_type="0x7000F203"
		res_client_receive="true" comment="完成传功">
		<req>
			<property name="cgId" type="long" comment="传功id"></property>
		</req>

		<res>
			<property name="state" type="boolean" comment="状态：打坐(true),站立（false）"></property>
		</res>
	</prototype>

	<!-- 查询自己所有称号 -->
	<prototype req_name="QUERY_PLAYER_TITLE_REQ" req_type="0x0000F300" req_client_send="true" res_name="QUERY_PLAYER_TITLE_RES" res_type="0x7000F300"
		res_client_receive="true" comment="查询自己所有称号">
		<req>
		</req>
		<res>
			<property name="types" type="int[]" comment="类型"></property>
			<property name="names" type="String[]" encoding="UTF-8" comment="称号名称"></property>
		</res>
	</prototype>

	<!-- 设置默认称号 -->
	<prototype req_name="SET_DEFAULT_TITLE_REQ" req_type="0x0000F301" req_client_send="true" res_name="SET_DEFAULT_TITLE_RES" res_type="0x7000F301"
		res_client_receive="true" comment="设置默认称号">
		<req>
			<property name="types" type="int" comment="类型"></property>
		</req>
		<res>
			<property name="names" type="String" encoding="UTF-8" comment="称号名称"></property>
		</res>
	</prototype>

	<!-- 查询世界地图地域 -->
	<prototype req_name="QUERY_WORLD_MAP_REQ" req_type="0x0000F040" req_client_send="true" res_name="QUERY_WORLD_MAP_RES" res_type="0x7000F040"
		res_client_receive="true" comment="查询世界地图地域 ">
		<req>
			<property name="version" type="int" comment="当前版本" />
		</req>

		<res>
			<object-property name="areas" type="WorldMapArea[]" comment="世界地图地域">
				<property name="name" type="String" encoding="UTF-8" comment="地域名" />
				<property name="worldMapAreaX" type="short[]" comment="" />
				<property name="worldMapAreaY" type="short[]" comment="" />
				<property name="worldMapAreaWidth" type="short[]" comment="" />
				<property name="worldMapAreaHeight" type="short[]" comment="" />
				<property name="pressPng" type="String" encoding="UTF-8" comment="按下显示图片" />
				<property name="pressPngx" type="short" comment="" />
				<property name="pressPngy" type="short" comment="" />
			</object-property>
		</res>
	</prototype>

	<prototype req_name="QUERY_WORLD_MAP_AREAMAP_REQ" req_type="0x0000F041" req_client_send="true" res_name="QUERY_WORLD_MAP_AREAMAP_RES"
		res_type="0x7000F041" res_client_receive="true" comment="查询世界地图区域 包含的地图">
		<req>
			<property name="areaName" type="String" encoding="UTF-8" comment="地域名" />
		</req>
		<res>
			<property name="areaName" type="String" encoding="UTF-8" comment="地域名" />
			<property name="mapNames" type="String[]" encoding="UTF-8" comment="地图名字" />
			<property name="mapDisplayNames" type="String[]" encoding="UTF-8" comment="地图中文名字" />
			<property name="searched" type="boolean[]" comment="地图是否探索" />
		</res>
	</prototype>

	<prototype req_name="QUERY_MAP_SEARCH_REQ" req_type="0x0000F048" req_client_send="true" res_name="QUERY_MAP_SEARCH_RES" res_type="0x7000F048"
		res_client_receive="true" comment="查询地图是否被探索过">
		<req>
			<property name="mapName" type="String[]" encoding="UTF-8" comment="地图名" />
		</req>
		<res>
			<property name="mapNames" type="String[]" encoding="UTF-8" comment="地图名字" />
			<property name="searched" type="boolean[]" comment="地图是否探索" />
		</res>
	</prototype>

	<prototype req_name="QUERY_WORLD_MAP_AREAMAP_BY_MAPNAME_REQ" req_type="0x0000F045" req_client_send="true" res_name="QUERY_WORLD_MAP_AREAMAP_BY_MAPNAME_RES"
		res_type="0x7000F045" res_client_receive="true" comment="查询世界地图区域根据地图名">
		<req>
			<property name="mapName" type="String" encoding="UTF-8" comment="地图名" />
		</req>
		<res>
			<property name="areaName" type="String" encoding="UTF-8" comment="地域名" />
			<property name="mapNames" type="String[]" encoding="UTF-8" comment="地图名字" />
			<property name="mapDisplayNames" type="String[]" encoding="UTF-8" comment="地图中文名字" />
			<property name="searched" type="boolean[]" comment="地图是否探索" />
		</res>
	</prototype>

	<prototype req_name="QUERY_WORLD_MAP_AREAMAP_BY_PLAYER_REQ" req_type="0x0000F046" req_client_send="true" res_name="QUERY_WORLD_MAP_AREAMAP_BY_PLAYER_RES"
		res_type="0x7000F046" res_client_receive="true" comment="查询人物所在世界地图区域">
		<req>
		</req>
		<res>
			<property name="areaName" type="String" encoding="UTF-8" comment="地域名" />
			<property name="mapName" type="String" encoding="UTF-8" comment="所在地图名字" />
			<property name="mapDisplayName" type="String" encoding="UTF-8" comment="所在地图中文名字" />
		</res>
	</prototype>

	<prototype req_name="QUERY_GAMEMAP_NPCMONSTER_REQ" req_type="0x0000F042" req_client_send="true" res_name="QUERY_GAMEMAP_NPCMONSTER_RES"
		res_type="0x7000F042" res_client_receive="true" comment="查询某一地图的NPC，怪物位置数据">
		<req>
			<property name="mapname" type="String" encoding="UTF-8" comment="地图名" />
		</req>
		<res>
			<property name="mapname" type="String" encoding="UTF-8" comment="地图名" />

			<property name="npcNames" type="String[]" encoding="UTF-8" comment="npc名字" />
			<property name="functionTypes" type="int[]" comment="" />
			<property name="npcIcons" type="String[]" encoding="UTF-8" comment="npc图标名" />
			<property name="npcx" type="short[]" comment="" />
			<property name="npcy" type="short[]" comment="" />

			<property name="monsterNames" type="String[]" encoding="UTF-8" comment="怪名字" />
			<property name="monsterLv" type="int[]" comment="" />
			<property name="monsterIcons" type="String[]" encoding="UTF-8" comment="monster图标名" />
			<property name="monsterx" type="short[]" comment="" />
			<property name="monstery" type="short[]" comment="" />
		</res>
	</prototype>

	<prototype req_name="QUERY_GAMEMAP_MOVE_LIVINGOBJECT_REQ" req_type="0x0000F043" req_client_send="true" res_name="QUERY_GAMEMAP_MOVE_LIVINGOBJECT_RES"
		res_type="0x7000F043" res_client_receive="true" comment="查询某一地图的动态位置数据">
		<req>
			<property name="mapname" type="String" encoding="UTF-8" comment="地图名" />
			<property name="opens" type="boolean[]" comment="开启需要显示的内容数组，true为显示，false为不显示" />
		</req>
		<res>
			<property name="mapname" type="String" encoding="UTF-8" comment="地图名" />

			<property name="players" type="String[]" encoding="UTF-8" comment="人物" />
			<property name="playersIcon" type="String[]" encoding="UTF-8" comment="人物显示图标名" />
			<property name="playersx" type="short[]" comment="" />
			<property name="playersy" type="short[]" comment="" />

			<property name="ownerCountryx" type="short[]" comment="本国玩家" />
			<property name="ownerCountryy" type="short[]" comment="" />

			<property name="enemyCountryx" type="short[]" comment="敌国玩家" />
			<property name="enemyCountryy" type="short[]" comment="" />

		</res>
	</prototype>

	<!-- 结婚 -->
	<prototype req_name="MARRIAGE_TEST_REQ" req_type="0x00010001" req_client_send="true" comment="结婚的一个测试协议，因为目前NPC菜单还未做,主要是返回正常点NPC出的菜单项">
		<req>
		</req>
	</prototype>

	<prototype req_name="MARRIAGE_BEQSTART_REQ" req_type="0x00010002" req_client_receive="true" comment="求婚初始化">
		<req>
			<property name="sextype" type="byte" comment="0是花，1是糖" />
			<property name="Entityid" type="long[]" comment="对应的物品EntityID,零时生成" />
			<property name="name" type="String[]" encoding="UTF-8" comment="对应得具体物品名称" />
			<property name="flowerNum" type="int[]" comment="可选花的个数" />
			<property name="haveFlower" type="int[]" comment="包裹已有" />
			<property name="flowerMoney" type="long[]" comment="花的单价" />
		</req>
	</prototype>

	<prototype req_name="MARRIAGE_BEQ_REQ" req_type="0x00010003" req_client_send="true" comment="求婚">
		<req>
			<property name="selectIndex" type="byte" comment="选择哪个花" />
			<property name="playerName" type="String" encoding="UTF-8" comment="角色名称" />
			<property name="say" type="String" encoding="UTF-8" comment="输入话" />
		</req>
	</prototype>

	<prototype req_name="MARRIAGE_MENU" req_type="0x00010004" req_client_receive="true" comment="结婚相关提示框">
		<req>
			<property name="windowId" type="int" comment="窗口的Id"></property>
			<property name="message" type="String" encoding="UTF-8" comment="窗口的描述"></property>
			<object-property name="options" type="Option[]" comment="Window上的选项">
				<property name="text" type="String" encoding="UTF-8" comment="显示的文字" />
				<property name="color" type="int" comment="文字的颜色" />
				<property name="oType" type="byte" comment="选项的类型" />
				<property name="oId" type="int" comment="选项对应的功能或者窗口的标识" />
			</object-property>
		</req>
	</prototype>

	<prototype req_name="MARRIAGE_REQ" req_type="0x00010005" req_client_send="true" comment="结婚">
		<req>
			<property name="playerName" type="String" encoding="UTF-8" comment="名字" />
		</req>
	</prototype>

	<prototype req_name="MARRIAGE_ASSIGN_REQ" req_type="0x00010006" req_client_send="true" res_name="MARRIAGE_ASSIGN_RES" res_type="0x70010006"
		res_client_receive="true" comment="布置婚礼,选择婚礼规模">
		<req>
		</req>
		<res>
			<object-property name="MarriageLevels" type="MarriageLevel[]">
				<property name="name" type="String" encoding="UTF-8" comment="名字" />
				<property name="needMoneyType" type="int" comment="需要钱的类型" />
				<property name="needMoney" type="int" comment="钱" />
				<property name="propName" type="String[]" encoding="UTF-8" comment="物品名称" />
				<property name="playerNum" type="int" comment="可邀请玩家数目" />
				<property name="icon" type="String" encoding="UTF-8" comment="图标" />
			</object-property>
		</res>
	</prototype>

	<prototype req_name="MARRIAGE_ASSIGN_CHOOSE1_REQ" req_type="0x00010007" req_client_send="true" res_name="MARRIAGE_ASSIGN_CHOOSE1_RES"
		res_type="0x70010007" res_client_receive="true" comment="选择婚礼规模">
		<req>
			<property name="index" type="int" comment="选择哪个" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="MARRIAGE_ASSIGN_CHOOSE2_REQ" req_type="0x00010008" req_client_send="true" res_name="MARRIAGE_ASSIGN_CHOOSE2_RES"
		res_type="0x70010008" res_client_receive="true" comment="让客户端选择嘉宾">
		<req>
		</req>
		<res>
			<property name="isback" type="boolean" comment="是否可以返回上一步" />
			<property name="num" type="int" comment="可选宾客数目" />
			<property name="chooseType" type="byte[]" comment="谁选择的，0是我， 1是对方" />
			<property name="playerId" type="long[]" comment="选择了某个玩家" />
			<property name="playerName" type="String[]" encoding="UTF-8" comment="玩家名称" />
			<property name="playerCareer" type="byte[]" comment="玩家职业" />
		</res>
	</prototype>

	<prototype req_name="MARRIAGE_CHOOSE_GUEST_REQ" req_type="0x00010009" req_client_send="true" res_name="MARRIAGE_CHOOSE_GUEST_RES" res_type="0x70010009"
		res_client_receive="true" comment="选择嘉宾">
		<req>
			<property name="playerId" type="long" comment="选择了某个玩家" />
		</req>
		<res>
			<property name="result" type="byte" comment="0成功或1失败" />
			<property name="chooseType" type="byte" comment="谁选择的，0是我， 1是对方" />
			<property name="playerId" type="long" comment="选择了某个玩家" />
			<property name="playerName" type="String" encoding="UTF-8" comment="玩家名称" />
			<property name="career" type="byte" comment="玩家职业" />
		</res>
	</prototype>
	<prototype req_name="MARRIAGE_CANCEL_GUEST_REQ" req_type="0x00010010" req_client_send="true" res_name="MARRIAGE_CANCEL_GUEST_RES" res_type="0x70010010"
		res_client_receive="true" comment="取消嘉宾">
		<req>
			<property name="playerId" type="long" comment="选择了某个玩家" />
		</req>
		<res>
			<property name="result" type="byte" comment="0成功或1失败" />
			<property name="playerId" type="long" comment="选择了某个玩家" />
		</res>
	</prototype>

	<prototype req_name="MARRIAGE_GUEST_OVER_REQ" req_type="0x00010011" req_client_send="true" res_name="MARRIAGE_GUEST_OVER_RES" res_type="0x70010011"
		res_client_receive="true" comment="选择嘉宾完成,还是取消完成">
		<req>
			<property name="isOver" type="boolean" comment="是完成，还是取消完成" />
		</req>
		<res>
			<property name="isOver" type="boolean" comment="是完成，还是取消完成" />
		</res>
	</prototype>

	<prototype req_name="MARRIAGE_TIME_REQ" req_type="0x00010012" req_client_send="true" res_name="MARRIAGE_TIME_RES" res_type="0x70010012"
		res_client_receive="true" comment="请求设定时间">
		<req>
		</req>
		<res>
			<property name="isMain" type="boolean" comment="是不是写时间那个" />
		</res>
	</prototype>

	<prototype req_name="MARRIAGE_TIME_OK_REQ" req_type="0x00010013" req_client_send="true" comment="设定时间">
		<req>
			<property name="time" type="int" comment="婚礼多少小时后完成" />
		</req>
	</prototype>

	<prototype req_name="MARRIAGE_FINISH_REQ" req_type="0x00010014" req_client_send="true" res_name="MARRIAGE_FINISH_RES" res_type="0x70010014"
		res_client_receive="true" comment="婚礼最后确定">
		<req>
			<property name="isOk" type="boolean" comment="确定是否" />
		</req>
		<res>
			<property name="isMain" type="boolean" comment="是否是主要那个" />
			<object-property name="MarriageLevels" type="MarriageLevel">
				<property name="name" type="String" encoding="UTF-8" comment="名字" />
				<property name="needMoneyType" type="int" comment="需要钱的类型" />
				<property name="needMoney" type="int" comment="钱" />
				<property name="propName" type="String[]" encoding="UTF-8" comment="物品名称" />
				<property name="playerNum" type="int" comment="可邀请玩家数目" />
				<property name="icon" type="String" encoding="UTF-8" comment="图标" />
			</object-property>
			<property name="playerName" type="String[]" encoding="UTF-8" comment="玩家名称" />
			<property name="time" type="String" encoding="UTF-8" comment="婚礼什么时候开始" />
		</res>
	</prototype>

	<prototype res_name="MARRIAGE_BEQ_FLOWER_RES" res_type="0x70010015" res_client_receive="true" comment="求婚花">
		<res>
			<property name="sexType" type="byte" comment="男的还是女的求婚" />
			<property name="flowType" type="byte" comment="花的种类或糖的种类0-2" />
		</res>
	</prototype>

	<prototype req_name="MARRIAGE_JIAOHUAN_REQ" req_type="0x00010016" req_client_send="true" res_name="MARRIAGE_JIAOHUAN_RES" res_type="0x70010016"
		res_client_receive="true" comment="结婚交换戒指">
		<req>
			<property name="isOk" type="boolean" comment="是否确定" />
		</req>
		<res>
			<property name="otherPlayerId" type="long" comment="对方角色ID" />
			<property name="selfRingID" type="long" comment="自己戒指的ID" />
			<property name="otherRingID" type="long" comment="对象戒指的ID" />
		</res>
	</prototype>

	<prototype res_name="MARRIAGE_JIAOHUAN2OTHER_RES" res_type="0x70010017" res_client_receive="true">
		<res>
			<property name="isOk" type="boolean" comment="是否确定" />
		</res>
	</prototype>

	<prototype req_name="MARRIAGE_CANCEL_REQ" req_type="0x00010018" req_client_send="true" res_name="MARRIAGE_CANCEL_RES" res_type="0x70010018"
		res_client_receive="true" comment="结婚各个状态退出或取消通知">
		<req>
			<property name="cancelType" type="int" comment="关闭窗口类型 0设置婚礼规模， 1嘉宾，2时间" />
		</req>
		<res>
			<property name="cancelType" type="int" comment="关闭窗口类型 0设置婚礼规模， 1嘉宾，2时间" />
			<property name="message" type="String" encoding="UTF-8" comment="提示信息" />
		</res>
	</prototype>

	<prototype req_name="MARRIAGE_JOIN_HUNLI_SCREEN_REQ" req_type="0x00010019" req_client_send="true" res_name="MARRIAGE_JOIN_HUNLI_SCREEN_RES"
		res_type="0x70010019" res_client_receive="true" comment="参加婚礼">
		<req>
			<property name="infoId" type="long" comment="婚礼信息ID" />
		</req>
		<res>
			<property name="infoId" type="long[]" comment="婚礼信息ID" />
			<property name="infoMsg" type="String[]" encoding="UTF-8" comment="婚礼信息描述" />
		</res>
	</prototype>

	<prototype req_name="GET_MARRIAGE_FRIEND_REQ" req_type="0x00010020" res_name="GET_MARRIAGE_FRIEND_RES" res_type="0x70010020"
		req_client_send="true" res_client_receive="true" comment="获取可以求婚的并且在线的玩家列表">
		<req>
		</req>
		<res>
			<object-property name="player_relationInfo" type="Player_RelatinInfo[]" comment="返回社会关系">
				<property name="id" type="long" comment="人物id"></property>
				<property name="career" type="byte" comment="人物职业"></property>
				<property name="name" type="String" encoding="UTF-8" comment="名字" />
				<property name="isonline" type="boolean" comment="性别(true,男:false,女)"></property>
			</object-property>
		</res>
	</prototype>

	<prototype req_name="MARRIAGE_TARGET_MENU_REQ" req_type="0x00010021" req_client_send="true" res_name="MARRIAGE_TARGET_MENU_RES" res_type="0x70010021"
		res_client_receive="true" comment="目标头像送花和糖">
		<req>
			<property name="playerId" type="long" comment="送花对象ID" />
		</req>
		<res>
			<property name="playerId" type="long" comment="送花对象ID" />
			<property name="sextype" type="byte" comment="0是花，1是糖" />
			<property name="Entityid" type="long[]" comment="对应的物品EntityID,零时生成" />
			<property name="name" type="String[]" encoding="UTF-8" comment="对应得具体物品名称" />
			<property name="flowerNum" type="int[]" comment="可选花的个数" />
			<property name="haveFlower" type="int[]" comment="包裹已有" />
			<property name="flowerMoney" type="long[]" comment="花的单价" />
		</res>
	</prototype>

	<prototype req_name="MARRIAGE_DELAYTIME_BEGIN_REQ" req_type="0x00010022" req_client_send="true" res_name="MARRIAGE_DELAYTIME_BEGIN_RES"
		res_type="0x70010022" res_client_receive="true" comment="修改延期时间">
		<req>
			<property name="time" type="int" comment="婚礼延期时间" />
		</req>
		<res>

		</res>
	</prototype>

	<prototype req_name="MARRIAGE_TARGET_SEND_REQ" req_type="0x00010023" req_client_send="true" comment="选目标送花或糖">
		<req>
			<property name="playerId" type="long" comment="送花对象ID" />
			<property name="flowType" type="int" comment="花的类型" />
			<property name="flowNum" type="int" comment="数目索引" />
		</req>
	</prototype>


	<!-- 结婚 -->

	<!-- 国家 -->
	<prototype req_name="COUNTRY_COMMISSION_OR_RECALL_REQ" req_type="0x00000001" req_client_send="true" comment="国家任命玩家，客户端发任命协议给服务器，服务器传回任命后的结果">
		<req>
			<property name="selectType" type="byte" comment="任命或罢免0任命1罢免" />
			<property name="officialPositionType" type="int" comment="官职类型" />
			<property name="playerName" type="String" encoding="UTF-8" comment="玩家名称" />
		</req>
	</prototype>

	<prototype req_name="QUERY_COUNTRY_COMMISSION_OR_RECALL_REQ" res_name="QUERY_COUNTRY_COMMISSION_OR_RECALL_RES" req_type="0x00000AA2"
		res_type="0x70000AA2" req_client_send="true" res_client_receive="true" comment="国家任命玩家查询，客户端发任命协议给服务器，服务器传回任命后的结果，当客户端收到RES后弹出任命UI">
		<req>
		</req>
		<res>
			<object-property name="countryInfoForClients" type="CountryInfoForClient[]">
				<property name="playerId" type="long" comment="id" />
				<property name="countryPosition" type="int" comment="国家官职" />
				<property name="playerName" type="String" encoding="UTF-8" comment="名字" />
				<property name="level" type="int" comment="级别" />
				<property name="zongPaiName" type="String" encoding="UTF-8" comment="宗派名" />
				<property name="onLine" type="boolean" comment="在线" />
				<property name="biaozhang" type="boolean" comment="表彰" />
				<property name="shouxun" type="boolean" comment="授勋" />
			</object-property>
		</res>
	</prototype>

	<prototype req_name="QUERY_COUNTRY_QIUJIN_JINYAN_REQ" res_name="QUERY_COUNTRY_QIUJIN_JINYAN_RES" req_type="0x00000AAA" res_type="0x70000AAA"
		req_client_send="true" res_client_receive="true" comment="查询本国囚禁和禁言的人，在线">
		<req>
		</req>
		<res>
			<object-property name="countryQiujinAndJinyanForClients" type="CountryQiujinAndJinyanForClient[]">
				<property name="playerId" type="long" comment="id" />
				<property name="playerName" type="String" encoding="UTF-8" comment="名字" />
				<property name="lastQiujinTime" type="long" comment="囚禁剩余时间" />
				<property name="lastJinyanTime" type="long" comment="禁言剩余时间" />
			</object-property>
		</res>
	</prototype>

	<prototype req_name="COUNTRY_HONOURSOR_OR_CANCEL_REQ" req_type="0x00000002" req_client_send="true" comment="国家授勋玩家，客户端发授勋协议给服务器，服务器传回授勋后的结果">
		<req>
			<property name="selectType" type="byte" comment="授勋或撤销0授勋1撤销" />
			<property name="playerName" type="String" encoding="UTF-8" comment="玩家名称" />
		</req>
	</prototype>

	<prototype req_name="COUNTRY_COMMEND_OR_CANCEL_REQ" req_type="0x00000003" req_client_send="true" comment="国家表彰玩家，客户端发表彰协议给服务器，服务器传回表彰后的结果">
		<req>
			<property name="selectType" type="byte" comment="表彰或撤销0表彰1撤销" />
			<property name="playerName" type="String" encoding="UTF-8" comment="玩家名称" />
		</req>
	</prototype>

	<prototype req_name="QUERY_COUNTRY_VOTE_REQ" res_name="QUERY_COUNTRY_VOTE_RES" req_type="0x00000AA6" res_type="0x70000AA6" req_client_send="true"
		res_client_receive="true" comment="投票，客户端发投票协议给服务器，服务器传回投票后的结果">
		<req>
		</req>
		<res>
			<property name="totalVoteRateDes" type="String" encoding="UTF-8" comment="总投票率" />
			<property name="officerNames" type="String[]" encoding="UTF-8" comment="官员名字" />
			<property name="officerVoteRatesDes" type="String[]" encoding="UTF-8" comment="官员得票率，和官员名字数组对应" />
		</res>
	</prototype>

	<prototype req_name="COUNTRY_VOTE_REQ" req_type="0x00000006" req_client_send="true" comment="投票，客户端发投票协议给服务器">
		<req>
			<property name="votes" type="boolean[]" comment="投票数组" />
		</req>
	</prototype>

	<prototype req_name="COUNTRY_WANGZHEZHIYIN_REQ" res_name="COUNTRY_WANGZHEZHIYIN_RES" req_type="0x00000007" res_type="0x70000007"
		req_client_send="true" res_client_receive="true" comment="服务器端给客户端传回res，客户端收到res后打开地图，玩家可以点击地图上的标记传送到该地图相应位置">
		<req>
			<property name="mapName" type="String" encoding="UTF-8" comment="地图英文名" />
			<property name="x" type="int" comment="" />
			<property name="y" type="int" comment="" />
		</req>
		<res>
			<property name="mapName" type="String" encoding="UTF-8" comment="地图英文名" />
			<property name="displayMapName" type="String" encoding="UTF-8" comment="地图中文名" />
		</res>
	</prototype>

	<prototype req_name="COUNTRY_QIUJIN_REQ" req_type="0xA0000008" req_client_send="true" comment="囚禁">
		<req>
			<property name="playerName" type="String" encoding="UTF-8" comment="囚禁人的名字" />
		</req>
	</prototype>

	<prototype req_name="COUNTRY_JINYAN_REQ" req_type="0xA0000009" req_client_send="true" comment="禁言">
		<req>
			<property name="playerName" type="String" encoding="UTF-8" comment="禁言人的名字" />
		</req>
	</prototype>

	<prototype req_name="COUNTRY_JIECHU_QIUJIN_REQ" req_type="0xA000006" req_client_send="true" comment="解除囚禁">
		<req>
			<property name="playerName" type="String" encoding="UTF-8" comment="囚禁人的名字" />
		</req>
	</prototype>

	<prototype req_name="COUNTRY_JIECHU_JINYAN_REQ" req_type="0xA0000010" req_client_send="true" comment="解除禁言">
		<req>
			<property name="playerName" type="String" encoding="UTF-8" comment="禁言人的名字" />
		</req>
	</prototype>

	<prototype req_name="QUERY_COUNTRY_MAIN_PAGE_REQ" res_name="QUERY_COUNTRY_MAIN_PAGE_RES" req_type="0x00000AA0" res_type="0x70000AA0"
		req_client_send="true" res_client_receive="true" comment="国家主页面查询，服务器传回结果，当客户端收到RES后弹出国家主页面UI">
		<req>
		</req>
		<res>
			<property name="countryName" type="String" encoding="UTF-8" comment="国家名" />
			<property name="kingName" type="String" encoding="UTF-8" comment="国王，天尊" />
			<property name="dasimaName" type="String" encoding="UTF-8" comment="大司马，玄阴真圣" />
			<property name="seniorGeneralName" type="String" encoding="UTF-8" comment="大将军，纯阳真圣" />
			<property name="marshalName" type="String" encoding="UTF-8" comment="元帅，九天司命" />
			<property name="primeMinisterName" type="String" encoding="UTF-8" comment="宰相，九天司空" />
			<property name="policeByKingName" type="String" encoding="UTF-8" comment="巡捕国王任命，真武神君" />
			<property name="yushidafuByKingName" type="String" encoding="UTF-8" comment="御史大夫国王任命，道陵星君" />
			<property name="policeByMarshalName" type="String" encoding="UTF-8" comment="巡捕元帅任命，翔武神君" />
			<property name="yushidafuByPrimeMinisterName" type="String" encoding="UTF-8" comment="御史大夫宰相任命，葛玄星君" />
			<property name="ids" type="long[]" comment="各个官员的id，从国王开始，顺序为国家官职序号" />
			<property name="shouxunNames" type="String[]" encoding="UTF-8" comment="授勋的国家官员" />
			<property name="biaozhangNames" type="String[]" encoding="UTF-8" comment="表彰的国家官员" />
			...
			<property name="kingFengLuTake" type="byte" comment="国王，天尊，领取俸禄标记，0未发放，1发放未领取，2已领取俸禄" />
			<property name="dasimaFengLuTake" type="byte" comment="大司马，玄阴真圣，领取俸禄标记，0未发放，1发放未领取，2已领取俸禄" />
			<property name="seniorGeneralFengLuTake" type="byte" comment="大将军，纯阳真圣，领取俸禄标记，0未发放，1发放未领取，2已领取俸禄" />
			<property name="marshalFengLuTake" type="byte" comment="元帅，九天司命，领取俸禄标记，0未发放，1发放未领取，2已领取俸禄" />
			<property name="primeMinisterFengLuTake" type="byte" comment="宰相，九天司空，领取俸禄标记，0未发放，1发放未领取，2已领取俸禄" />
			<property name="policeByKingFengLuTake" type="byte" comment="巡捕国王任命，真武神君，领取俸禄标记，0未发放，1发放未领取，2已领取俸禄" />
			<property name="yushidafuByKingFengLuTake" type="byte" comment="御史大夫国王任命，道陵星君，领取俸禄标记，0未发放，1发放未领取，2已领取俸禄" />
			<property name="policeByMarshalFengLuTake" type="byte" comment="巡捕元帅任命，翔武神君，领取俸禄标记，0未发放，1发放未领取，2已领取俸禄" />
			<property name="yushidafuByPrimeMinisterFengLuTake" type="byte" comment="御史大夫宰相任命，葛玄星君，领取俸禄标记，0未发放，1发放未领取，2已领取俸禄" />
			<property name="vote" type="String" encoding="UTF-8" comment="国家总投票率" />
			<property name="notice" type="String" encoding="UTF-8" comment="公告" />
			<property name="guozhanZiYuan" type="long" comment="国战资源" />
		</res>
	</prototype>

	<prototype req_name="COUNTRY_LINGQU_FENGLU_REQ" req_type="0x00000AA3" req_client_send="true" comment="领取俸禄">
		<req>
		</req>
	</prototype>

	<prototype req_name="COUNTRY_FAFANG_FENGLU_REQ" req_type="0x00000AA8" req_client_send="true" comment="发放俸禄">
		<req>
		</req>
	</prototype>

	<prototype req_name="QUERY_COUNTRY_WANGZHEZHIYIN_REQ" res_name="QUERY_COUNTRY_WANGZHEZHIYIN_RES" req_type="0x00000AA4" res_type="0x70000AA4"
		req_client_send="true" res_client_receive="true" comment="国家王者之印使用次数">
		<req>
		</req>
		<res>
			<property name="countryName" type="String" encoding="UTF-8" comment="国家名" />
			<property name="kingName" type="String" encoding="UTF-8" comment="国王，天尊" />
			<property name="dasimaName" type="String" encoding="UTF-8" comment="大司马，玄阴真圣" />
			<property name="seniorGeneralName" type="String" encoding="UTF-8" comment="大将军，纯阳真圣" />
			<property name="marshalName" type="String" encoding="UTF-8" comment="元帅，九天司命" />
			<property name="primeMinisterName" type="String" encoding="UTF-8" comment="宰相，九天司空" />
			<property name="policeByKingName" type="String" encoding="UTF-8" comment="巡捕国王任命，真武神君" />
			<property name="yushidafuByKingName" type="String" encoding="UTF-8" comment="御史大夫国王任命，道陵星君" />
			<property name="policeByMarshalName" type="String" encoding="UTF-8" comment="巡捕元帅任命，翔武神君" />
			<property name="yushidafuByPrimeMinisterName" type="String" encoding="UTF-8" comment="御史大夫宰相任命，葛玄星君" />
			<property name="kingWangZhe" type="long[]" comment="国王，天尊，王者之印使用次数，二维数组，数组第一位当天使用次数，数组第二位使用历史记录" />
			<property name="dasimaWangZhe" type="long[]" comment="大司马，玄阴真圣，王者之印使用次数，二维数组，数组第一位当天使用次数，数组第二位使用历史记录" />
			<property name="seniorGeneralWangZhe" type="long[]" comment="大将军，纯阳真圣，王者之印使用次数，二维数组，数组第一位当天使用次数，数组第二位使用历史记录" />
			<property name="marshalWangZhe" type="long[]" comment="元帅，九天司命，王者之印使用次数，二维数组，数组第一位当天使用次数，数组第二位使用历史记录" />
			<property name="primeMinisterWangZhe" type="long[]" comment="宰相，九天司空，王者之印使用次数，二维数组，数组第一位当天使用次数，数组第二位使用历史记录" />
			<property name="policeByKingWangZhe" type="long[]" comment="巡捕国王任命，真武神君，王者之印使用次数，二维数组，数组第一位当天使用次数，数组第二位使用历史记录" />
			<property name="yushidafuByKingWangZhe" type="long[]" comment="御史大夫国王任命，道陵星君，王者之印使用次数，二维数组，数组第一位当天使用次数，数组第二位使用历史记录" />
			<property name="policeByMarshalWangZhe" type="long[]" comment="巡捕元帅任命，翔武神君，王者之印使用次数，二维数组，数组第一位当天使用次数，数组第二位使用历史记录" />
			<property name="yushidafuByPrimeMinisterWangZhe" type="long[]" comment="御史大夫宰相任命，葛玄星君，王者之印使用次数，二维数组，数组第一位当天使用次数，数组第二位使用历史记录" />
		</res>
	</prototype>

	<prototype req_name="QUERY_COUNTRY_YULINJUN_REQ" res_name="QUERY_COUNTRY_YULINJUN_RES" req_type="0x00000AA5" res_type="0x70000AA5"
		req_client_send="true" res_client_receive="true" comment="国家御林卫队">
		<req>
		</req>
		<res>
			<property name="countryName" type="String" encoding="UTF-8" comment="国家名" />
			<property name="yunlinjunNames" type="String[]" encoding="UTF-8" comment="御林卫队名字" />
			<property name="jiazuNames" type="String[]" encoding="UTF-8" comment="御林卫队家族" />
		</res>
	</prototype>

	<prototype req_name="QUERY_COUNTRY_JINKU_REQ" res_name="QUERY_COUNTRY_JINKU_RES" req_type="0x00000AA7" res_type="0x70000AA7"
		req_client_send="true" res_client_receive="true" comment="查询国家金库">
		<req>
		</req>
		<res>
			<property name="silver" type="long" comment="国家金库资金" />
			<property name="jiazuName" type="String" encoding="UTF-8" comment="运营镖局家族名字" />
		</res>
	</prototype>

	<prototype req_name="QUERY_COUNTRY_GONGGAO_REQ" res_name="QUERY_COUNTRY_GONGGAO_RES" req_type="0x00000AB1" res_type="0x70000AB1"
		req_client_send="true" res_client_receive="true" comment="修改国家公告">
		<req>
			<property name="notice" type="String" encoding="UTF-8" comment="国家公告" />
		</req>
		<res>
			<property name="notice" type="String" encoding="UTF-8" comment="国家公告" />
		</res>
	</prototype>

	<!--^^^^^^^^^ 国家 ^^^^^^^^^ -->
	<!-- 庄园系统 ↓↓↓↓↓↓ -->
	<prototype req_name="CAVE_QUERY_FAERYLIST_REQ" res_name="CAVE_QUERY_FAERYLIST_RES" req_type="0x0F000001" res_type="0x8F000001"
		req_client_send="true" res_client_receive="true" comment="查看所有仙境列表">
		<req>
			<property name="county" type="byte" encoding="UTF-8" comment="国家" />
		</req>
		<res>
			<property name="county" type="byte" encoding="UTF-8" comment="国家" />
			<property name="mapResName" type="String" encoding="UTF-8" comment="仙境资源名" />
			<property name="faeryNames" type="String[]" encoding="UTF-8" comment="仙境名字列表" />
			<property name="mapNames" type="String[]" encoding="UTF-8" comment="仙境地图名列表(发进入游戏用的)" />
		</res>
	</prototype>

	<prototype req_name="CAVE_OPTION_CAVE_REQ" res_name="CAVE_OPTION_CAVE_RES" req_type="0x0F000002" res_type="0x8F000002" req_client_send="true"
		res_client_receive="true" comment="仙府操作">
		<req>
			<property name="faeryId" type="long" encoding="UTF-8" comment="仙府所在仙境" />
			<property name="index" type="int" encoding="UTF-8" comment="仙府位置" />
			<property name="action" type="int" encoding="UTF-8" comment="操作 0-创建 1-解封 2-迁移" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="CAVE_LVUP_BUILDING_REQ" res_name="CAVE_LVUP_BUILDING_RES" req_type="0x0F000003" res_type="0x8F000003" req_client_send="true"
		res_client_receive="true" comment="仙府内建筑升级">
		<req>
			<property name="npcId" type="long" encoding="UTF-8" comment="仙府所在仙境" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="CAVE_DOOR_OPTION_REQ" res_name="CAVE_DOOR_OPTION_RES" req_type="0x0F000004" res_type="0x8F000004" req_client_send="true"
		res_client_receive="true" comment="对门的操作">
		<req>
			<property name="npcId" type="long" encoding="UTF-8" comment="仙府所在仙境" />
			<property name="action" type="int" encoding="UTF-8" comment="操作 0-开门 1-关门" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="CAVE_ASSART_FIELD_REQ" res_name="CAVE_ASSART_FIELD_RES" req_type="0x0F000005" res_type="0x8F000005" req_client_send="true"
		res_client_receive="true" comment="开垦田地">
		<req>
			<property name="npcId" type="long" encoding="UTF-8" comment="仙府所在仙境" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="CAVE_QUERY_ALL_PLANT_REQ" res_name="CAVE_QUERY_ALL_PLANT_RES" req_type="0x0F000006" res_type="0x8F000006"
		res_client_receive="true" comment="查询可种植列表">
		<req>
		</req>
		<res>
			<property name="npcId" type="long" encoding="UTF-8" comment="NPCID" />
			<object-property name="plantCfgs" type="PlantCfg[]" comment="可种植的列表">
				<property name="id" type="int" encoding="UTF-8" comment="ID" />
				<property name="type" type="int" encoding="UTF-8" comment="类型" />
				<property name="name" type="String" encoding="UTF-8" comment="名字" />
				<property name="fieldLvNeed" type="int" encoding="UTF-8" comment="需要田地的等级" />
				<property name="outputType" type="int" encoding="UTF-8" comment="产出类型  0-物品 1-经验 2-钱" />
				<property name="outputName" type="String" encoding="UTF-8" comment="产出物品名" />
				<property name="outputNum" type="int" encoding="UTF-8" comment="产出数量" />
				<property name="grownUpTime" type="int" encoding="UTF-8" comment="成熟时间-分钟" />
				<property name="avataA" type="String" encoding="UTF-8" comment="avataA" />
				<property name="avataB" type="String" encoding="UTF-8" comment="avataB" />
				<property name="des" type="String" encoding="UTF-8" comment="描述" />
			</object-property>
			<object-property name="resourceCollections" type="ResourceCollection[]" comment="种植成本">
				<property name="food" type="int" encoding="UTF-8" comment="需要食物" />
				<property name="wood" type="int" encoding="UTF-8" comment="需要木材" />
				<property name="stone" type="int" encoding="UTF-8" comment="需要石料" />
			</object-property>
		</res>
	</prototype>

	<prototype req_name="CAVE_PLANT_REQ" res_name="CAVE_PLANT_RES" req_type="0x0F000007" res_type="0x8F000007" req_client_send="true"
		res_client_receive="true" comment="种植">
		<req>
			<property name="npcId" type="long" encoding="UTF-8" comment="要种植的土地对应的NPCID" />
			<property name="plantId" type="int" encoding="UTF-8" comment="种植物的ID" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="CAVE_HARVEST_PLANT_REQ" res_name="CAVE_HARVEST_PLANT_RES" req_type="0x0F000008" res_type="0x8F000008" req_client_send="true"
		res_client_receive="true" comment="收获">
		<req>
			<property name="npcId" type="long" encoding="UTF-8" comment="要种植的土地对应的NPCID" />
			<property name="action" type="byte" encoding="UTF-8" comment="操作类型 0-自己摘取 ,1-偷菜" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="CAVE_CONVERT_PLANT_REQ" res_name="CAVE_CONVERT_PLANT_RES" req_type="0x0F000009" res_type="0x8F000009" req_client_send="true"
		res_client_receive="true" comment="兑换果实">
		<req>
			<property name="packageIndex" type="int" encoding="UTF-8" comment="兑换果实所在包" />
			<property name="articleEntityId" type="long" encoding="UTF-8" comment="果实的物品ID" />
			<property name="num" type="int" encoding="UTF-8" comment="兑换果实数量" />
		</req>
		<res>
			<property name="result" type="byte" comment="是否成功,0-成功,1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="是否成功,0-成功,1-失败" />
		</res>
	</prototype>


	<prototype req_name="CAVE_STORE_SIZEUP_REQ" res_name="CAVE_STORE_SIZEUP_RES" req_type="0x0F000010" res_type="0x8F000010" req_client_send="true"
		res_client_receive="true" comment="提高仓库容量">
		<req>
			<property name="resType" type="int" encoding="UTF-8" comment="要提升的资源类型" />
		</req>
		<res>
		</res>
	</prototype>


	<prototype req_name="CAVE_STORE_PET_REQ" res_name="CAVE_STORE_PET_RES" req_type="0x0F000011" res_type="0x8F000011" req_client_send="true"
		res_client_receive="true" comment="宠物存放/挂机">
		<req>
			<property name="action" type="byte" encoding="UTF-8" comment="0-存放{自己仙洞} 1-挂机{其他人仙洞}" />
			<property name="NPCId" type="long" encoding="UTF-8" comment="NPCId" />
			<property name="petId" type="long" encoding="UTF-8" comment="宠物ID" />
			<property name="index" type="int" encoding="UTF-8" comment="要存放的位置" />
		</req>
		<res>
			<property name="action" type="byte" encoding="UTF-8" comment="0-存放{自己仙洞} 1-挂机{其他人仙洞}" />
			<property name="petId" type="long" encoding="UTF-8" comment="宠物ID" />
			<property name="index" type="int" encoding="UTF-8" comment="要存放的位置" />
		</res>
	</prototype>

	<prototype req_name="CAVE_TAKEOUT_PET_REQ" res_name="CAVE_TAKEOUT_PET_RES" req_type="0x0F000012" res_type="0x8F000012" req_client_send="true"
		res_client_receive="true" comment="拿出宠物">
		<req>
			<property name="NPCId" type="long" encoding="UTF-8" comment="NPCID" />
			<property name="petId" type="long" encoding="UTF-8" comment="宠物ID" />
			<property name="action" type="byte" encoding="UTF-8" comment="0-取出存放{自己仙洞} 1-取出挂机{其他人仙洞} 2-赶走宠物{本仙洞其他人宠}" />
		</req>
		<res>
			<property name="action" type="byte" encoding="UTF-8" comment="0-存放{自己仙洞} 1-挂机{其他人仙洞}" />
			<property name="petId" type="long" encoding="UTF-8" comment="宠物ID" />
		</res>
	</prototype>

	<prototype req_name="CAVE_CHECK_PLANT_REQ" res_name="CAVE_CHECK_PLANT_RES" req_type="0x0F000013" res_type="0x8F000013" req_client_send="true"
		res_client_receive="true" comment="查看种植物成熟时间">
		<req>
			<property name="npcId" type="long" encoding="UTF-8" comment="NPCID" />
		</req>
		<res>
			<property name="NPCIds" type="long[]" encoding="UTF-8" comment="npcId" />
			<property name="harvestTime" type="long[]" encoding="UTF-8" comment="成熟时间" />
		</res>
	</prototype>

	<prototype req_name="CAVE_CANCEL_SCHEDULE_REQ" res_name="CAVE_CANCEL_SCHEDULE_RES" req_type="0x0F000014" res_type="0x8F000014"
		req_client_send="true" res_client_receive="true" comment="取消工作">
		<req>
			<property name="buildingType" type="int" encoding="UTF-8" comment="建筑类型" />
			<property name="optionType" type="int" encoding="UTF-8" comment="操作类型" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="CAVE_INFO_REQ" res_name="CAVE_INFO_RES" req_type="0x0F000015" res_type="0x8F000015" req_client_send="true"
		res_client_receive="true" comment="查看仙府信息">
		<req>
		</req>
		<res>
			<object-property name="curResource" type="ResourceCollection" comment="当前资源">
				<property name="food" type="int" encoding="UTF-8" comment="食物" />
				<property name="wood" type="int" encoding="UTF-8" comment="木材" />
				<property name="stone" type="int" encoding="UTF-8" comment="石料" />
			</object-property>
			<object-property name="maintenanceCost" type="ResourceCollection" comment="维护资源">
				<property name="food" type="int" encoding="UTF-8" comment="食物" />
				<property name="wood" type="int" encoding="UTF-8" comment="木材" />
				<property name="stone" type="int" encoding="UTF-8" comment="石料" />
			</object-property>
			<object-property name="currMaxResource" type="ResourceCollection" comment="资源上限">
				<property name="food" type="int" encoding="UTF-8" comment="食物" />
				<property name="wood" type="int" encoding="UTF-8" comment="木材" />
				<property name="stone" type="int" encoding="UTF-8" comment="石料" />
			</object-property>

			<property name="name" type="String[]" encoding="UTF-8" comment="建筑名字" />
			<property name="types" type="int[]" encoding="UTF-8" comment="建筑类型" />
			<property name="grade" type="int[]" encoding="UTF-8" comment="等级" />
			<object-property name="upgradeCost" type="ResourceCollection[]" comment="lvup资源">
				<property name="food" type="int" encoding="UTF-8" comment="食物" />
				<property name="wood" type="int" encoding="UTF-8" comment="木材" />
				<property name="stone" type="int" encoding="UTF-8" comment="石料" />
			</object-property>
			<property name="depend" type="String[]" encoding="UTF-8" comment="升级条件" />
		</res>
	</prototype>

	<prototype req_name="CAVE_ELECTRIC_ATTACK_REQ" res_name="CAVE_ELECTRIC_ATTACK_RES" req_type="0x0F000016" res_type="0x8F000016"
		res_client_receive="true" comment="点击周围玩家">
		<req>
			<property name="npcId" type="long" encoding="UTF-8" comment="点击的植物" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="CAVE_LEVEL_UP_MOTICE_REQ" res_name="CAVE_LEVEL_UP_MOTICE_RES" req_type="0x0F000017" res_type="0x8F000017"
		res_client_receive="true" comment="向客户端弹出升级提示界面">
		<req>
		</req>
		<res>
			<property name="npcId" type="long" encoding="UTF-8" comment="当前NPCID" />
			<property name="buildingName" type="String" encoding="UTF-8" comment="建筑名字" />
			<property name="level" type="int" encoding="UTF-8" comment="当前等级" />
			<object-property name="curResource" type="ResourceCollection" comment="当前资源">
				<property name="food" type="int" encoding="UTF-8" comment="食物" />
				<property name="wood" type="int" encoding="UTF-8" comment="木材" />
				<property name="stone" type="int" encoding="UTF-8" comment="石料" />
			</object-property>
			<object-property name="upgradeCost" type="ResourceCollection" comment="升级需要资源">
				<property name="food" type="int" encoding="UTF-8" comment="食物" />
				<property name="wood" type="int" encoding="UTF-8" comment="木材" />
				<property name="stone" type="int" encoding="UTF-8" comment="石料" />
			</object-property>
			<property name="costTime" type="int" encoding="UTF-8" comment="升级所需时间(分钟)" />
			<property name="buidingDes" type="String" encoding="UTF-8" comment="升级描述信息" />
		</res>
	</prototype>


	<prototype req_name="CAVE_QUERY_SCHEDULE_REQ" res_name="CAVE_QUERY_SCHEDULE_RES" req_type="0x0F000018" res_type="0x8F000018"
		req_client_send="true" res_client_receive="true" comment="工作进度">
		<req>
		</req>
		<res>
			<property name="currScheduleNum" type="int" encoding="UTF-8" comment="当前使用了的进度数" />
			<property name="maxScheduleNum" type="int" encoding="UTF-8" comment="最多进度数" />
			<object-property name="schedules" type="CaveSchedule[]" comment="正在执行的工作进度">
				<property name="name" type="String" encoding="UTF-8" comment="名字" />
				<property name="optionType" type="int" encoding="UTF-8" comment="操作类型" />
				<property name="buildingType" type="int" encoding="UTF-8" comment="建筑类型" />
				<property name="lastTime" type="long" encoding="UTF-8" comment="进度总时间" />
				<property name="leftTime" type="long" encoding="UTF-8" comment="剩余时间" />
			</object-property>
			<object-property name="currResource" type="ResourceCollection" comment="当前资源">
				<property name="food" type="int" encoding="UTF-8" comment="需要食物" />
				<property name="wood" type="int" encoding="UTF-8" comment="需要木材" />
				<property name="stone" type="int" encoding="UTF-8" comment="需要石料" />
			</object-property>
			<object-property name="currMaxResource" type="ResourceCollection" comment="资源上限">
				<property name="food" type="int" encoding="UTF-8" comment="食物" />
				<property name="wood" type="int" encoding="UTF-8" comment="木材" />
				<property name="stone" type="int" encoding="UTF-8" comment="石料" />
			</object-property>
		</res>
	</prototype>
	<prototype req_name="CAVE_QUERY_PETSTORE_REQ" res_name="CAVE_QUERY_PETSTORE_RES" req_type="0x0F000019" res_type="0x8F000019"
		res_client_receive="true" comment="查看宠物存放仓库信息">
		<req>
		</req>
		<res>
			<property name="action" type="byte" encoding="UTF-8" comment="0-存放{自己仙洞} 1-挂机{其他人仙洞}" />
			<property name="NPCId" type="long" encoding="UTF-8" comment="NPCId" />
			<property name="grade" type="int" encoding="UTF-8" comment="宠物仓库等级" />
			<property name="petIds" type="long[]" encoding="UTF-8" comment="存放的宠物ID" />
			<property name="storePetNums" type="int[]" encoding="UTF-8" comment="每个级别可存放的数量" />
			<property name="ownerId" type="long" encoding="UTF-8" comment="主人ID" />
		</res>
	</prototype>
	<prototype req_name="CAVE_QUERY_PETHOOK_REQ" res_name="CAVE_QUERY_PETHOOK_RES" req_type="0x0F000020" res_type="0x8F000020"
		res_client_receive="true" comment="查看宠物挂机拦信息">
		<req>
		</req>
		<res>
			<property name="maxNum" type="int" encoding="UTF-8" comment="可存放的数量" />
			<property name="action" type="byte" encoding="UTF-8" comment="0-存放{自己仙洞} 1-挂机{其他人仙洞}" />
			<property name="NPCId" type="long" encoding="UTF-8" comment="NPCId" />
			<property name="ownerId" type="long" encoding="UTF-8" comment="主人ID" />
			<object-property name="petHookInfos" type="PetHookInfo[]" comment="宠物挂机信息">
				<property name="petOwnerName" type="String" encoding="UTF-8" comment="宠物主人" />
				<property name="petId" type="long" encoding="UTF-8" comment="宠物ID" />
				<property name="articleId" type="long" encoding="UTF-8" comment="物品ID" />
				<property name="petGrade" type="int" encoding="UTF-8" comment="宠物等级" />
				<property name="petName" type="String" encoding="UTF-8" comment="宠物名" />
				<property name="hookTime" type="long" encoding="UTF-8" comment="挂机开始时间" />
				<property name="exp" type="long" encoding="UTF-8" comment="已获得经验" />
			</object-property>

			<property name="indexs" type="int[]" comment="位置信息" />
		</res>
	</prototype>


	<prototype req_name="CAVE_OPEN_COUNTYLIST_REQ" res_name="CAVE_OPEN_COUNTYLIST_RES" req_type="0x0F000021" res_type="0x8F000021"
		res_client_receive="true" comment="打开国家列表">
		<req>
		</req>
		<res>
			<property name="countyIndex" type="byte[]" encoding="UTF-8" comment="国家索引" />
			<property name="countyName" type="String[]" encoding="UTF-8" comment="国家名字" />
		</res>
	</prototype>

	<prototype req_name="CAVE_QUERY_SELFFAERY_REQ" res_name="CAVE_QUERY_SELFFAERY_RES" req_type="0x0F000022" res_type="0x8F000022"
		res_client_receive="true" comment="查看自己洞府所在仙境">
		<req>
		</req>
		<res>
			<property name="mapResName" type="String" encoding="UTF-8" comment="仙境资源名" />
			<property name="mapName" type="String" encoding="UTF-8" comment="仙境地图名列表(发进入游戏用的)" />
		</res>
	</prototype>

	<prototype req_name="CAVE_NOTICE_CONVERTARTICLE_REQ" res_name="CAVE_NOTICE_CONVERTARTICLE_RES" req_type="0x0F000023" res_type="0x8F000023"
		res_client_receive="true" comment="通知客户端打开果实兑换资源界面">
		<req>
		</req>
		<res>
		</res>
	</prototype>
	<prototype req_name="CAVE_HOOK_PET_REQ" res_name="CAVE_HOOK_PET_RES" req_type="0x0F000024" res_type="0x8F000024" req_client_send="true"
		res_client_receive="true" comment="宠物存放/挂机">
		<req>
			<property name="action" type="byte" encoding="UTF-8" comment="0-存放{自己仙洞} 1-挂机{其他人仙洞}" />
			<property name="NPCId" type="long" encoding="UTF-8" comment="NPCId" />
			<property name="petId" type="long" encoding="UTF-8" comment="宠物ID" />
			<property name="index" type="int" encoding="UTF-8" comment="要存放的位置" />
		</req>
		<res>
			<property name="action" type="byte" encoding="UTF-8" comment="0-存放{自己仙洞} 1-挂机{其他人仙洞}" />
			<property name="index" type="int" encoding="UTF-8" comment="要存放的位置" />
			<object-property name="petHookInfos" type="PetHookInfo" comment="宠物挂机信息">
				<property name="petOwnerName" type="String" encoding="UTF-8" comment="宠物主人" />
				<property name="petId" type="long" encoding="UTF-8" comment="宠物ID" />
				<property name="articleId" type="long" encoding="UTF-8" comment="物品ID" />
				<property name="petGrade" type="int" encoding="UTF-8" comment="宠物等级" />
				<property name="petName" type="String" encoding="UTF-8" comment="宠物名" />
				<property name="hookTime" type="long" encoding="UTF-8" comment="挂机开始时间" />
				<property name="exp" type="long" encoding="UTF-8" comment="已获得经验" />
			</object-property>
		</res>
	</prototype>

	<prototype req_name="CAVE_FIND_SELFCAVE_REQ" res_name="CAVE_FIND_SELFCAVE_RES" req_type="0x0F000025" res_type="0x8F000025" req_client_send="true"
		res_client_receive="true" comment="查询自己庄园所在的坐标--门牌的坐标">
		<req>
		</req>
		<res>
			<property name="x" type="int" comment="X" />
			<property name="y" type="int" comment="Y" />
		</res>
	</prototype>

	<prototype req_name="CAVE_LEAVE_CAVE_REQ" res_name="CAVE_LEAVE_CAVE_RES" req_type="0x0F000026" res_type="0x8F000026" req_client_send="true"
		comment="离开庄园">
		<req>
		</req>
		<res>
		</res>
	</prototype>
	<prototype req_name="CAVE_SHOW_TOOLBAR_REQ" res_name="CAVE_SHOW_TOOLBAR_RES" req_type="0x0F000027" res_type="0x8F000027"
		res_client_receive="true" comment="弹出工具栏">
		<req>
		</req>
		<res>
		</res>
	</prototype>
	<prototype req_name="CAVE_QUERY_EXCHANGE_REQ" res_name="CAVE_QUERY_EXCHANGE_RES" req_type="0x0F00002A" res_type="0x8F00002A"
		req_client_send="true" res_client_receive="true" comment="查看兑换资源数量">
		<req>
			<property name="requestIds" type="long[]" encoding="UTF-8" comment="要查询的物品ID" />
		</req>
		<res>
			<property name="responseIds" type="long[]" encoding="UTF-8" comment="物品ID" />
			<object-property name="resources" type="ResourceCollection[]" comment="种植成本">
				<property name="food" type="int" encoding="UTF-8" comment="需要食物" />
				<property name="wood" type="int" encoding="UTF-8" comment="需要木材" />
				<property name="stone" type="int" encoding="UTF-8" comment="需要石料" />
			</object-property>
		</res>
	</prototype>
	<prototype req_name="CAVE_ACCELERATE_REQ" res_name="CAVE_ACCELERATE_RES" req_type="0x0F00002B" res_type="0x8F00002B" req_client_send="true"
		res_client_receive="true" comment="加速">
		<req>
			<property name="buildingType" type="int" encoding="UTF-8" comment="建筑类型" />
			<property name="optionType" type="int" encoding="UTF-8" comment="操作类型" />
		</req>
		<res>
			<property name="currScheduleNum" type="int" encoding="UTF-8" comment="当前使用了的进度数" />
			<property name="maxScheduleNum" type="int" encoding="UTF-8" comment="最多进度数" />
			<object-property name="schedules" type="CaveSchedule[]" comment="正在执行的工作进度">
				<property name="name" type="String" encoding="UTF-8" comment="名字" />
				<property name="optionType" type="int" encoding="UTF-8" comment="操作类型" />
				<property name="buildingType" type="int" encoding="UTF-8" comment="建筑类型" />
				<property name="lastTime" type="long" encoding="UTF-8" comment="进度总时间" />
				<property name="leftTime" type="long" encoding="UTF-8" comment="剩余时间" />
			</object-property>
			<object-property name="currResource" type="ResourceCollection" comment="当前资源">
				<property name="food" type="int" encoding="UTF-8" comment="需要食物" />
				<property name="wood" type="int" encoding="UTF-8" comment="需要木材" />
				<property name="stone" type="int" encoding="UTF-8" comment="需要石料" />
			</object-property>
			<object-property name="currMaxResource" type="ResourceCollection" comment="资源上限">
				<property name="food" type="int" encoding="UTF-8" comment="食物" />
				<property name="wood" type="int" encoding="UTF-8" comment="木材" />
				<property name="stone" type="int" encoding="UTF-8" comment="石料" />
			</object-property>
		</res>
	</prototype>
	<prototype req_name="CAVE_SIMPLE_REQ" res_name="CAVE_SIMPLE_RES" req_type="0x0F00002C" res_type="0x8F00002C" req_client_send="true"
	res_client_receive="true" comment="查看仙府简信息,是否有仙府,仙府状态">
		<res>
			<property name="caveStatus" type="int" encoding="UTF-8" comment="仙府状态:-1无仙府.0:正常.1:封印.2:删除.3:锁定"/>
			<property name="caveStatusDes" type="String" encoding="UTF-8" comment="仙府状态描述"/>
		</res>
	</prototype>

	<prototype req_name="CAVE_READ_DYNAMIC_REQ" res_name="CAVE_READ_DYNAMIC_RES" req_type="0x0F00002D" res_type="0x8F00002D" req_client_send="true"
	res_client_receive="fasle" comment="通知服务器玩家阅读了动态">
		<req>
			<property name="lasetDynameicTime" type="long" encoding="UTF-8" comment="最后一条动态信息的时间"/>
		</req>
	</prototype>
	
	<prototype req_name="CAVE_DETAILED_INFO_REQ" res_name="CAVE_DETAILED_INFO_RES" req_type="0x0F00002E" res_type="0x8F00002E" req_client_send="true"
	res_client_receive="true" comment="获得仙府的详细信息">
		<req>
		</req>
		<res>
			<property name="caveValid" type="boolean" encoding="UTF-8" comment="仙府是否有效.无效则不用显示下面信息"/>
			
			<property name="currScheduleNum" type="int" encoding="UTF-8" comment="当前使用了的进度数" />
			<property name="maxScheduleNum" type="int" encoding="UTF-8" comment="最多进度数" />
			<property name="increaseScheduleLastTime" type="long" encoding="UTF-8" comment="增加进度剩余时间,0表示无" />
			
			<object-property name="schedules" type="CaveScheduleForClient[]" comment="正在执行的工作进度">
				<property name="name" type="String" encoding="UTF-8" comment="名字" />
				<property name="optionType" type="int" encoding="UTF-8" comment="操作类型" />
				<property name="buildingType" type="int" encoding="UTF-8" comment="建筑类型" />
				<property name="lastTime" type="long" encoding="UTF-8" comment="进度总时间" />
				<property name="leftTime" type="long" encoding="UTF-8" comment="剩余时间" />
				<property name="scheduleIcon" type="String" encoding="UTF-8" comment="队列icon" />
				<property name="scheduleDescription" type="String" encoding="UTF-8" comment="队列描述" />
			</object-property>
	
			
			<object-property name="currResource" type="ResourceCollection" comment="当前资源">
				<property name="food" type="int" encoding="UTF-8" comment="需要食物" />
				<property name="wood" type="int" encoding="UTF-8" comment="需要木材" />
				<property name="stone" type="int" encoding="UTF-8" comment="需要石料" />
			</object-property>
			<object-property name="currMaxResource" type="ResourceCollection" comment="资源上限">
				<property name="food" type="int" encoding="UTF-8" comment="食物" />
				<property name="wood" type="int" encoding="UTF-8" comment="木材" />
				<property name="stone" type="int" encoding="UTF-8" comment="石料" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="CAVE_DYNAMIC_REQ" res_name="CAVE_DYNAMIC_RES" req_type="0x0F000050" res_type="0x8F000050" req_client_send="true"
	res_client_receive="true" comment="获取仙府动态">
		<req>
		</req>
		<res>
			<object-property name="readMsgs" type="CaveDynamic[]" encoding="UTF-8" comment="已读消息">
				<property name="time" type="long" encoding="UTF-8" comment="消息时间"/>
				<property name="message" type="String" encoding="UTF-8" comment="消息内容"/>
			</object-property>
			<object-property name="unreadMsgs" type="CaveDynamic[]" encoding="UTF-8" comment="未读消息">
				<property name="time" type="long" encoding="UTF-8" comment="消息时间"/>
				<property name="message" type="String" encoding="UTF-8" comment="消息内容"/>
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="CAVE_DYNAMIC_NOTICE_REQ" res_name="CAVE_DYNAMIC_NOTICE_RES" req_type="0x0F000051" res_type="0x8F000051" req_client_receive="true"
	comment="仙府动态数量提示">
		<req>
			<property name="dynamicNum" type="int" encoding="UTF-8" comment="未读消息数量"/>
		</req>
	</prototype>
	
	<prototype req_name="CAVE_QUERY_PLANT_REQ" res_name="CAVE_QUERY_PLANT_RES" req_type="0x0F000052" res_type="0x8F000052" res_client_receive="true" comment="查询可种植列表">
		<req>
		</req>
		<res>
			<property name="npcId" type="long" encoding="UTF-8" comment="NPCID" />
			<property name="npcLevel" type="int" encoding="UTF-8" comment="NPC等级" />
			<object-property name="plantCfgs" type="PlantCfg[]" comment="可种植的列表">
				<property name="id" type="int" encoding="UTF-8" comment="ID" />
				<property name="type" type="int" encoding="UTF-8" comment="类型" />
				<property name="name" type="String" encoding="UTF-8" comment="名字" />
				<property name="fieldLvNeed" type="int" encoding="UTF-8" comment="需要田地的等级" />
				<property name="outputType" type="int" encoding="UTF-8" comment="产出类型  0-物品 1-经验 2-钱" />
				<property name="outputName" type="String" encoding="UTF-8" comment="产出物品名" />
				<property name="outputNum" type="int" encoding="UTF-8" comment="产出数量" />
				<property name="grownUpTime" type="int" encoding="UTF-8" comment="成熟时间-分钟" />
				<property name="avataA" type="String" encoding="UTF-8" comment="avataA" />
				<property name="avataB" type="String" encoding="UTF-8" comment="avataB" />
				<property name="des" type="String" encoding="UTF-8" comment="描述" />
			</object-property>
			<property name="plantCost" type="String[]" encoding="UTF-8" comment="种植消耗" />
		</res>
	</prototype>
	
	<prototype req_name="CAVE_QUERY_RESOURCECOLLECTIO_REQ" res_name="CAVE_QUERY_RESOURCECOLLECTION_RES" req_type="0x0F000053" res_type="0x8F000053" res_client_receive="true" comment="获得仙府资源">
		<req>
		</req>
		<res>
			<object-property name="currCollections" type="ResourceCollection" comment="当前资源">
				<property name="food" type="int" encoding="UTF-8" comment="食物" />
				<property name="wood" type="int" encoding="UTF-8" comment="木材" />
				<property name="stone" type="int" encoding="UTF-8" comment="石料" />
			</object-property>
			<object-property name="maxCollections" type="ResourceCollection" comment="资源上限">
				<property name="food" type="int" encoding="UTF-8" comment="食物" />
				<property name="wood" type="int" encoding="UTF-8" comment="木材" />
				<property name="stone" type="int" encoding="UTF-8" comment="石料" />
			</object-property>
		</res>
	</prototype>
	
	<!-- 庄园系统 ↑↑↑↑↑↑ -->

	<!-- 境界系统 ↓↓↓↓↓↓ -->
	<prototype req_name="BOURN_LEVELUP_REQ" res_name="BOURN_LEVELUP_RES" req_type="0x0F100001" res_type="0x8F100001" req_client_send="true"
		res_client_receive="true" comment="境界升级">
		<req>
		</req>
		<res>
			<property name="result" type="byte" comment="是否成功,0-成功,1-失败" />
			<property name="failreason" type="String" encoding="UTF-8" comment="是否成功,0-成功,1-失败" />
		</res>
	</prototype>

	<prototype req_name="BOURN_ZEZEN_REQ" res_name="BOURN_ZEZEN_RES" req_type="0x0F100002" res_type="0x8F100002" req_client_send="true"
		comment="境界打坐">
		<req>
			<property name="option" type="byte" comment="打坐操作,0:开始,1:取消" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="BOURN_REFRESH_TASK_REQ" res_name="BOURN_REFRESH_TASK_RES" req_type="0x0F100003" res_type="0x8F100003" req_client_send="true"
		res_client_receive="true" comment="刷新任务">
		<req>
			<property name="option" type="byte" comment="打坐操作,0:经验刷新,1:道具刷新" />
		</req>
		<res>
			<property name="star" type="int" comment="刷新后任务的星级" />
			<property name="taskId" type="long" comment="刷新后任务ID" />
		</res>
	</prototype>

	<prototype req_name="BOURN_INFO_REQ" res_name="BOURN_INFO_RES" req_type="0x0F100004" res_type="0x8F100004" req_client_send="true"
		res_client_receive="true" comment="查看境界信息 ">
		<req>
		</req>
		<res>
			<property name="lvupBournExp" type="long" comment="升级所需境界经验" />
			<property name="bournDes" type="String" encoding="UTF-8" comment="当前境界的描述" />
			<property name="maxBournTaskNum" type="int" encoding="UTF-8" comment="当前VIP等级可完成日常任务上限" />
			<property name="leftZazenTime" type="long" encoding="UTF-8" comment="剩余打坐时间" />
		</res>
	</prototype>

	<prototype req_name="BOURN_OF_TRAINING_REQ" res_name="BOURN_OF_TRAINING_RES" req_type="0x0F100005" res_type="0x8F100005" req_client_send="true"
		res_client_receive="true" comment="境界修炼">
		<req>
		</req>
		<res>
			<object-property type="Task[]" name="tasks" comment="所有境界的任务">
				<property name="id" type="long" encoding="UTF-8" comment="任务ID" />
				<property name="name" type="String" encoding="UTF-8" comment="任务NAME" />
				<property name="bourn" type="int" encoding="UTF-8" comment="任务境界限制（所属的境界）" />
				<property name="minGradeLimit" type="int" encoding="UTF-8" comment="任务最低等级限制" />
			</object-property>
			<property type="byte[]" name="taskStatus" comment="任务状态" />
		</res>
	</prototype>

	<prototype req_name="BOURN_OF_PURIFY_REQ" res_name="BOURN_OF_PURIFY_RES" req_type="0x0F100006" res_type="0x8F100006" req_client_send="true"
		res_client_receive="true" comment="杂念">
		<req>
		</req>
		<res>
			<property name="taskId" type="long" encoding="UTF-8" comment="当前任务的ID" />
			<property name="des" type="String" encoding="UTF-8" comment="描述" />
			<property name="star" type="int" encoding="UTF-8" comment="当前任务的星级" />
			<property name="refreshExpCost" type="long" encoding="UTF-8" comment="刷新任务经验消耗" />
			<property name="refreshCoinCost" type="long" encoding="UTF-8" comment="刷新任务元宝消耗" />
			<property name="starDes" type="String[]" encoding="UTF-8" comment="各个星级任务的描述" />
		</res>
	</prototype>
	<prototype req_name="NOTICE_CLIENT_DELIVER_TASK_REQ" req_type="0x0F100007" req_client_receive="true" comment="通知客户端交付某个任务">
		<req>
			<property name="taskId" type="long" comment="要交付的任务" />
		</req>
	</prototype>
	<prototype req_name="NOTICE_DELIVER_BOURN_TASK_NUM_REQ" req_type="0x0F100008" req_client_receive="true" comment="完成的杂念任务">
		<req>
			<property name="deliverBournTaskNum" type="int" encoding="UTF-8" comment="完成的杂念任务" />
		</req>
	</prototype>
	<!-- 境界系统 ↑↑↑↑↑↑ -->

	<prototype req_name="QUERY_SEAL_REQ" res_name="QUERY_SEAL_RES" req_type="0x0F000128" res_type="0x8F000128" req_client_send="true"
		res_client_receive="true" comment="查询封印">
		<req>
		</req>
		<res>
			<property name="taskId" type="long" comment="封印任务" />
			<property name="descriptions" type="String[]" encoding="UTF-8" comment="面板描述，长度为4" />
			<property name="articleEntityId" type="long[]" comment="物品id数组" />
		</res>
	</prototype>

	<prototype req_name="TAKE_SEAL_TASK_REQ" req_type="0x0F000130" req_client_send="true" comment="接取封印任务">
		<req>
		</req>
	</prototype>

	<prototype req_name="QUERY_FLOPNPC_REQ" res_name="QUERY_FLOPNPC_RES" req_type="0x0F000129" res_type="0x8F000129" req_client_send="true"
		res_client_receive="true" comment="查询掉落NPC">
		<req>
			<property name="NPCId" type="long[]" comment="" />
		</req>
		<res>
			<property name="NPCId" type="long[]" comment="" />
			<property name="oneClassNames" type="String[]" encoding="UTF-8" comment="掉落物品一级分类类名" />
			<property name="colors" type="int[]" comment="掉落物品颜色" />
		</res>
	</prototype>

	<prototype req_name="LEVELUP_REQ" req_type="0x0F000126" req_client_send="true" comment="玩家主动升级">
		<req>
		</req>
	</prototype>

	<prototype req_name="EQUIPMENT_SHOW_TOOLBAR_CHUJIJIANDING_REQ" req_type="0x0F000028" req_client_receive="true" comment="弹出初级鉴定">
		<req>
		</req>
		<res>
		</res>
	</prototype>
	<prototype req_name="EQUIPMENT_SHOW_TOOLBAR_ZHUANGBEIJIANDING_REQ" req_type="0x0F000029" req_client_receive="true" comment="弹出装备鉴定">
		<req>
		</req>
		<res>
		</res>
	</prototype>
	<prototype req_name="EQUIPMENT_SHOW_TOOLBAR_ZHUANGBEIMINGKE_REQ" req_type="0x0F000030" req_client_receive="true" comment="弹出装备铭刻">
		<req>
		</req>
		<res>
		</res>
	</prototype>
	<prototype req_name="EQUIPMENT_SHOW_TOOLBAR_ZHUANGBEIFUXING_REQ" req_type="0x0F000031" req_client_receive="true" comment="弹出装备附星">
		<req>
		</req>
		<res>
		</res>
	</prototype>
	<prototype req_name="EQUIPMENT_SHOW_TOOLBAR_ZHUANGBEIBANGDING_REQ" req_type="0x0F000032" req_client_receive="true" comment="弹出装备绑定">
		<req>
		</req>
		<res>
		</res>
	</prototype>
	<prototype req_name="EQUIPMENT_SHOW_TOOLBAR_ZHUANGBEIZHAIXING_REQ" req_type="0x0F000033" req_client_receive="true" comment="弹出装备摘星">
		<req>
		</req>
		<res>
		</res>
	</prototype>
	<prototype req_name="EQUIPMENT_SHOW_TOOLBAR_ZHUANGBEISHENGJI_REQ" req_type="0x0F000034" req_client_receive="true" comment="弹出装备升级">
		<req>
		</req>
		<res>
		</res>
	</prototype>
	<prototype req_name="EQUIPMENT_SHOW_TOOLBAR_BAOSHIHECHENG_REQ" req_type="0x0F000035" req_client_receive="true" comment="弹出装备镶嵌">
		<req>
		</req>
		<res>
		</res>
	</prototype>
	<prototype req_name="EQUIPMENT_SHOW_TOOLBAR_BAOSHIXIANGQIAN_REQ" req_type="0x0F000036" req_client_receive="true" comment="弹出宝石镶嵌">
		<req>
		</req>
		<res>
		</res>
	</prototype>
	<prototype req_name="EQUIPMENT_SHOW_TOOLBAR_BAOSHIWAQU_REQ" req_type="0x0F000037" req_client_receive="true" comment="弹出宝石挖取">
		<req>
		</req>
		<res>
		</res>
	</prototype>
	<prototype req_name="FUCK_TRANSPORT_GAME" req_type="0x0F000038" req_client_send="true" comment="跳地图">
		<req>
			<property name="mapName" type="String" encoding="UTF-8" comment="目标地图名" />
		</req>
		<res>
		</res>
	</prototype>

	<!-- 新手 ↓↓↓↓↓ -->
	<prototype res_name="FIND_WAY2TASK_RES" res_type="0x0F200001" res_client_receive="true" comment="寻路，指定某个任务">
		<res>
			<property name="taskId" type="long" comment="任务ID" />
			<property name="taskState" type="int" comment="任务状态" />
		</res>
	</prototype>

	<prototype res_name="ENTITY_MSG" res_type="0x0F200002" res_client_receive="true" comment="具体entity对象的描述，加一些按钮">
		<res>
			<property name="knapIndex" type="int" comment="背包中的索引" />
			<object-property name="equipmentEntities" type="EquipmentEntity" comment="装备集合">
				<property name="id" type="long" comment="物品实体的唯一标识" />
				<property name="showName" type="String" encoding="UTF-8" comment="物品的显示名称" />
				<property name="iconId" type="String" encoding="UTF-8" comment="普通物品的图标" />
				<property name="colorType" type="byte" comment="颜色类型，是装备质地的一种表达" />
			</object-property>
			<property name="msg" type="String" encoding="UTF-8" comment="大泡泡内容" />
		</res>
	</prototype>

	<prototype res_name="SKILL_MSG" res_type="0x0F200003" res_client_receive="true" comment="技能描述">
		<res>
			<property name="skillId" type="int" comment="技能ID" />
			<property name="skillName" type="String" encoding="UTF-8" comment="技能名字" />
			<property name="skillIcon" type="String" encoding="UTF-8" comment="技能图标" />
			<property name="msg" type="String" encoding="UTF-8" comment="描述" />
		</res>
	</prototype>

	<prototype res_name="PROP_MSG" res_type="0x0F200005" res_client_receive="true" comment="具体prop对象的描述，加一些按钮">
		<res>
			<property name="knapIndex" type="int" comment="背包中的索引" />
			<property name="num" type="int" comment="数量" />
			<property name="id" type="long" comment="物品实体的唯一标识" />
			<property name="showName" type="String" encoding="UTF-8" comment="物品的显示名称" />
			<property name="iconId" type="String" encoding="UTF-8" comment="普通物品的图标" />
			<property name="colorType" type="byte" comment="颜色类型" />
			<property name="msg" type="String" encoding="UTF-8" comment="大泡泡内容" />
		</res>
	</prototype>

	<prototype res_name="NEXT_TASK_OPEN" res_type="0x0F200004" res_client_receive="true" comment="下个任务">
		<res>
			<object-property name="task" type="Task" comment="玩家正在做的任务列表，也就是已经接了，但还没有交付的任务">
				<property name="id" type="int" encoding="UTF-8" comment="ID" />
				<property name="name" type="String" encoding="UTF-8" comment="名字" />
				<property name="grade" type="int" encoding="UTF-8" comment="等级" />
				<property name="showType" type="byte" encoding="UTF-8" comment="显示类型" />
				<property name="des" type="String" encoding="UTF-8" comment="描述 " />

				<property name="unDeliverTalk" type="String" encoding="UTF-8" comment="未完成对话" />
				<property name="startNpc" type="String" encoding="UTF-8" comment="开始NPC" />
				<property name="startMap" type="String" encoding="UTF-8" comment="开始地图" />
				<property name="startMapResName" type="String" encoding="UTF-8" comment="开始地图资源名" />
				<property name="startTalk" type="String" encoding="UTF-8" comment="开始对话" />
				<property name="startX" type="int" encoding="UTF-8" comment="开始坐标-x" />
				<property name="startY" type="int" encoding="UTF-8" comment="开始坐标-y" />
				<property name="startNPCAvataRace" type="String" encoding="UTF-8" comment="开始NPC形象race" />
				<property name="startNPCAvataSex" type="String" encoding="UTF-8" comment="开始NPC形象sex" />

				<property name="endNpc" type="String" encoding="UTF-8" comment="结束NPC" />
				<property name="endMap" type="String" encoding="UTF-8" comment="结束地图" />
				<property name="endMapResName" type="String" encoding="UTF-8" comment="结束地图资源名" />
				<property name="endTalk" type="String" encoding="UTF-8" comment="结束对话" />

				<property name="notice" type="String" encoding="UTF-8" comment="温馨提示" />
				<property name="endX" type="int" encoding="UTF-8" comment="结束坐标-x" />
				<property name="endY" type="int" encoding="UTF-8" comment="结束坐标-y" />
				<property name="endNPCAvataRace" type="String" encoding="UTF-8" comment="结束NPC形象race" />
				<property name="endNPCAvataSex" type="String" encoding="UTF-8" comment="结束NPC形象sex" />

				<property name="thewCost" type="int" encoding="UTF-8" comment="体力值消耗" />

				<property name="dailyTaskCycle" type="int" encoding="UTF-8" comment=" 周期限定 天" />
				<property name="dailyTaskMaxNum" type="int" encoding="UTF-8" comment="同周期可完成次数上限" />
				<property name="reGetCodeDown" type="long" encoding="UTF-8" comment="跑环任务 放弃,失败后的CD" />
			</object-property>


			<object-property name="targets" type="TaskTarget[]" comment="任务目标 数组length > 1 则为或关系">
				<property name="targetByteType" type="byte" comment="任务目标类型" />
				<property name="targetName" type="String[]" encoding="UTF-8" comment="任务目标名字"></property>
				<property name="targetNum" type="int" comment="个数" />
				<property name="targetColor" type="int" comment="颜色" />
				<property name="mapName" type="String[]" encoding="UTF-8" comment="目标地图"></property>
				<property name="resMapName" type="String[]" encoding="UTF-8" comment="目标地图资源名"></property>
				<property name="x" type="int[]" comment="目标坐标" />
				<property name="y" type="int[]" comment="目标坐标" />
				<property name="showMonsterNames" type="String[]" encoding="UTF-8" comment="如果是物品掉落，哪些怪掉这个物品"></property>
			</object-property>
			<object-property name="prizes" type="TaskPrize[]" comment="任务奖励 数组length > 1 则为可选择奖励">
				<property name="prizeByteType" type="byte" comment="任务奖励类型" />
				<property name="prizeName" type="String[]" encoding="UTF-8" comment="任务奖励名字" />
				<property name="prizeNum" type="long[]" comment="任务奖励数量" />
				<property name="totalNum" type="int" comment="可选择任务数量" />
				<property name="prizeColor" type="int[]" comment="任务奖励颜色" />
				<property name="prizeId" type="long[]" comment="任务奖励ID" />
			</object-property>
		</res>
	</prototype>

	<!-- 新手 ↑↑↑↑↑↑ -->
	<!-- 活动↓↓↓↓↓↓↓↓ -->

	<prototype req_name="SHOW_MEMBER_FORLUCK_REQ" req_type="0x0F300003" req_client_receive="true" comment="弹出分配树上果实的菜单">
		<req>
			<property name="frontDes" type="String" encoding="UTF-8" comment="菜单前的描述" />
			<property name="endDes" type="String" encoding="UTF-8" comment="菜单后的描述" />
			<property name="npcId" type="long" encoding="UTF-8" comment="果树NPC的ID" />
			<object-property name="jiazuMembers" type="JiazuMember4Client[]" comment="家族成员类表">
				<property name="playerName" type="String" encoding="UTF-8" comment="角色名" />
				<property name="playerId" type="long" encoding="UTF-8" comment="成员ID" />
				<property name="title" type="int" encoding="UTF-8" comment="职位 " />
				<property name="playerLevel" type="int" encoding="UTF-8" comment="角色等级" />
				<property name="sex" type="byte" encoding="UTF-8" comment="角色性别" />
			</object-property>
			<property name="hasPickuped" type="boolean[]" encoding="UTF-8" comment="是否已经摘取过了" />
		</req>
	</prototype>

	<prototype req_name="HANDOUT_FORLUCK_TREE_REQ" res_name="HANDOUT_FORLUCK_TREE_RES" req_type="0x0F300004" res_type="0x8F300004"
		req_client_send="true" res_client_receive="true" comment="分配树上的祝福果">
		<req>
			<property name="npcId" type="long" encoding="UTF-8" comment="果树NPC的ID" />
			<property name="playerId" type="long" encoding="UTF-8" comment="要分配的角色ID" />
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="npcId" type="long" encoding="UTF-8" comment="果树NPC的ID" />
			<property name="playerId" type="long" encoding="UTF-8" comment="要分配的角色ID" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>

	<prototype req_name="CHECK_STORAGE_FORLUCK_REQ" req_type="0x0F300006" req_client_receive="true" comment="查看仓库中的果实-通过OPTION触发：客户端只接收">
		<req>
			<property name="frontDes" type="String" encoding="UTF-8" comment="上面的描述" />
			<property name="articleName" type="String" encoding="UTF-8" comment="果实的名字" />
			<property name="nums" type="int[]" encoding="UTF-8" comment="已有的各颜色果实的个数" />
			<property name="endDes" type="String" encoding="UTF-8" comment="下面的描述" />
			<object-property name="jiazuMembers" type="JiazuMember4Client[]" comment="家族成员类表">
				<property name="playerName" type="String" encoding="UTF-8" comment="角色名" />
				<property name="playerId" type="long" encoding="UTF-8" comment="成员ID" />
				<property name="title" type="int" encoding="UTF-8" comment="职位 " />
				<property name="playerLevel" type="int" encoding="UTF-8" comment="角色等级" />
				<property name="sex" type="byte" encoding="UTF-8" comment="角色性别" />
			</object-property>
		</req>
	</prototype>
	<prototype req_name="HANDOUT_FORLUCK_STORAGE_REQ" res_name="HANDOUT_FORLUCK_STORAGE_RES" req_type="0x0F300007" res_type="0x8F300007"
		res_client_receive="true" req_client_send="true" comment="分配仓库的祝福果">
		<req>
			<property name="playerId" type="long" encoding="UTF-8" comment="要分配给的角色" />
			<property name="nums" type="int[]" encoding="UTF-8" comment="各种颜色分配的个数 index为颜色" />
		</req>
		<res>
			<property name="result" type="byte" comment="结果,0-成功，1-失败" />
			<property name="leftNums" type="int[]" comment="分配后仓库剩余的数量" />
			<property name="failreason" type="String" encoding="UTF-8" comment="失败的结果描述" />
		</res>
	</prototype>

	<prototype req_name="NOTICE_CLIENT_EXCHANGE_FORLUCK_REQ" req_type="0x0F300008" req_client_receive="true" comment="通知客户端弹出兑换祝福果窗口">
		<req>
			<property name="articleName" type="String" encoding="UTF-8" comment="要兑换的物品的名字" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="ACTIVITY_FORLUCK_FRUIT_EXCHANGE_REQ" req_type="0x0F300009" req_client_send="true" comment="兑换祝福果">
		<req>
			<property name="articleId" type="long" encoding="UTF-8" comment="要兑换的物品的ID" />
			<property name="articleNum" type="int" encoding="UTF-8" comment="要兑换的物品数量" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="BOTTLE_OPEN_INFO_REQ" req_type="0x0F300010" req_client_receive="true" comment="使用瓶子后查看瓶子中的信息">
		<req>
			<property name="articleId" type="long" comment="瓶子id" />
			<property name="articleIds" type="long[]" comment="瓶子中物品的临时id" />
			<property name="articleNums" type="int[]" comment="瓶子中物品的数量" />
			<property name="selectArticleIndexs" type="int[]" comment="瓶子中选中的物品的序号" />
			<property name="openFlag" type="boolean" comment="瓶子是否开启" />
		</req>
	</prototype>

	<prototype req_name="BOTTLE_OPEN_REQ" req_type="0x0F300012" req_client_send="true" comment="客户端发出开瓶子信息">
		<req>
			<property name="articleId" type="long" comment="开启瓶子id" />
		</req>
	</prototype>

	<prototype req_name="BOTTLE_PICK_ARTICLE_REQ" req_type="0x0F300013" req_client_send="true" comment="得到瓶子里开启的物品">
		<req>
			<property name="articleId" type="long" comment="开启瓶子id" />
		</req>
	</prototype>

	<prototype req_name="CLIFFORD_START_REQ" req_type="0x0F300016" res_name="CLIFFORD_START_RES" res_type="0x8F300016" req_client_send="true"
		res_client_receive="true" comment="祈福开始或重新祈福">
		<req>
			<property name="cliffordType" type="byte" comment="0为开始祈福，1为重新开始祈福" />
		</req>
		<res>
			<property name="openedArticleIds" type="long[]" comment="祈福中的物品id，-1表示这个" />
			<property name="openedArticleNums" type="int[]" comment="祈福中的物品数量" />
			<property name="hasFreeCliffordNum" type="int" comment="免费祈福次数" />
			<property name="lookOverArticleIndexs" type="int[]" comment="祈福查看后，查看到的物品位置" />
			<property name="needArticleName" type="String" encoding="UTF-8" comment="祈福需要物品   名" />
			<property name="haveArticleCount" type="int" comment="祈福需要物品   拥有个数  " />
			<property name="canCliffordNum" type="int" comment="可以祈福次数" />
		</res>
	</prototype>

	<prototype req_name="CLIFFORD_REQ" req_type="0x0F300017" req_client_send="true" comment="祈福开始或重新祈福">
		<req>
			<property name="cliffordType" type="byte" comment="0为单次祈福，1为全部祈福" />
			<property name="cliffordIndex" type="byte" comment="祈福位置" />
		</req>
	</prototype>

	<prototype req_name="CLIFFORD_LOOKOVER_REQ" req_type="0x0F300018" req_client_send="true" comment="查看未祈福的剩余物品">
		<req>
		</req>
	</prototype>

	<prototype req_name="TOURNAMENT_TIME_REQ" req_type="0x0F300019" req_client_receive="true" comment="比武时间显示">
		<req>
			<property name="leftTime" type="int" comment="剩余时间，单位秒" />
			<property name="timeType" type="byte" comment="时间类型，0比武场剩余进入时间，1开始前的倒计时，2回合即将结束的倒计时" />
		</req>
	</prototype>

	<prototype req_name="TOURNAMENT_START_REQ" req_type="0x0F300020" req_client_receive="true" comment="比武回合开始">
		<req>
			<property name="roundIndex" type="byte" comment="第几回合，1代表第一回合" />
			<property name="names" type="String[]" encoding="UTF-8" comment="比武玩家名字" />
			<property name="careers" type="byte[]" comment="比武玩家职业" />
		</req>
	</prototype>

	<prototype req_name="TOURNAMENT_END_REQ" req_type="0x0F300021" req_client_receive="true" comment="比武回合结束">
		<req>
			<property name="winOrLost" type="byte" comment="输或赢，0为赢，1为输" />
		</req>
	</prototype>

	<prototype req_name="TOURNAMENT_QUERY_SIDE_REQ" req_type="0x0F300025" req_client_receive="true" comment="比武双方通知">
		<req>
			<property name="sideA" type="long" comment="A方比武玩家id" />
			<property name="sideB" type="long" comment="B方比武玩家id" />
		</req>
	</prototype>

	<prototype req_name="TOURNAMENT_RANK_REQ" req_type="0x0F300026" req_client_receive="true" comment="比武排名面板">
		<req>
			<object-property name="tournamentRankDataClients" type="TournamentRankDataClient[]" comment="比武排名数组">
				<property name="country" type="byte" comment="比武玩家国家" />
				<property name="id" type="long" comment="比武玩家id" />
				<property name="name" type="String" encoding="UTF-8" comment="比武玩家名字" />
				<property name="career" type="byte" comment="比武玩家职业" />
				<property name="level" type="short" comment="比武玩家等级" />
				<property name="point" type="int" comment="比武玩家积分" />
				<property name="win" type="int" comment="比武玩家胜场" />
				<property name="lost" type="int" comment="比武玩家失败场数" />
			</object-property>

			<property name="myRankInWeek" type="String" encoding="UTF-8" comment="我的本周排名" />
			<property name="myPointInWeek" type="int" comment="我的本周积分" />
			<property name="myWinsInWeek" type="int" comment="我的本周胜场" />
			<property name="myLostsInWeek" type="int" comment="我的本周失败场数" />
			<property name="canTakeReward" type="boolean" comment="是否可以领取比武奖励" />
		</req>
	</prototype>

	<prototype req_name="TOURNAMENT_REWARD_REQ" res_name="TOURNAMENT_REWARD_RES" req_type="0x0F300027" res_type="0x8F300027" req_client_send="true"
		res_client_receive="true" comment="比武奖励面板">
		<req>
		</req>
		<res>
			<property name="canTakeReward" type="boolean" comment="是否可以领取比武奖励" />
			<object-property name="rewards" type="TournamentRewardDataClient[]" comment="比武奖励数组">
				<property name="rankRange" type="int[]" comment="比武排名区间(闭区间)" />
				<property name="rewardDes" type="String" encoding="UTF-8" comment="比武奖励描述" />
				<property name="articleEntityIds" type="long[]" comment="比武奖励物品" />
				<property name="articleEntityCounts" type="int[]" comment="比武奖励物品个数" />
			</object-property>
		</res>
	</prototype>

	<prototype req_name="TOURNAMENT_REWARD_SELF_REQ" res_name="TOURNAMENT_REWARD_SELF_RES" req_type="0x0F300128" res_type="0x8F300128"
		req_client_send="true" res_client_receive="true" comment="个人比武奖励面板">
		<req>
		</req>
		<res>
			<object-property name="reward" type="TournamentRewardDataClient" comment="比武奖励">
				<property name="rankRange" type="int[]" comment="比武排名区间(闭区间)" />
				<property name="rewardDes" type="String" encoding="UTF-8" comment="比武奖励描述" />
				<property name="articleEntityIds" type="long[]" comment="比武奖励物品" />
				<property name="articleEntityCounts" type="int[]" comment="比武奖励物品个数" />
			</object-property>
		</res>
	</prototype>

	<prototype req_name="TOURNAMENT_TAKE_REWARD_REQ" req_type="0x0F30002A" req_client_send="true" comment="比武领取奖励">
		<req>
		</req>
	</prototype>

	<prototype req_name="CONTINUE_KILL_REQ" req_type="0x0F30002B" req_client_receive="true" comment="连斩信息">
		<req>
			<property name="killCount" type="int" comment="连斩数" />
			<property name="killInfo" type="String" encoding="UTF-8" comment="连斩信息" />
			<property name="endTime" type="long" comment="倒计时" />
			<property name="sound" type="String" encoding="UTF-8" comment="连斩的声音" />
		</req>
	</prototype>

	<prototype req_name="SEND_VILLAGE_CIRCLE_REQ" req_type="0x0F300022" req_client_receive="true" comment="发送村庄战争圆圈信息">
		<req>
			<property name="xs" type="int[]" comment="圆圈们的x" />
			<property name="ys" type="int[]" comment="圆圈们的y" />
			<property name="range" type="int" comment="圆圈的半径" />
		</req>
	</prototype>

	<prototype req_name="SEND_VILLAGE_CIRCLE_DIS_REQ" req_type="0x0F300023" req_client_receive="true" comment="发送村庄战争圆圈消失消息">
		<req>
		</req>
	</prototype>

	<prototype req_name="SEND_VILLAGE_STATE_REQ" req_type="0x0F100025" req_client_receive="true" comment="发送村庄战争状态信息">
		<req>
			<property name="state" type="byte" comment="村庄站状态,0表示开始,1表示结束" />
			<property name="description" type="String" encoding="UTF-8" comment="描述" />
			<property name="sideAName" type="String" encoding="UTF-8" comment="获胜方名字" />
			<property name="sideAIcon" type="String" encoding="UTF-8" comment="获胜方图标" />
			<property name="sideBName" type="String" encoding="UTF-8" comment="失败方名字" />
			<property name="sideBIcon" type="String" encoding="UTF-8" comment="失败方图标" />
		</req>
	</prototype>

	<prototype req_name="SEND_CITYFIGHT_STATE_REQ" req_type="0x0F100026" req_client_receive="true" comment="发送城市战争状态信息">
		<req>
			<property name="state" type="byte" comment="城市战争状态,0表示开始,1表示结束" />
			<property name="description" type="String" encoding="UTF-8" comment="描述" />
			<property name="sideAName" type="String" encoding="UTF-8" comment="获胜方名字" />
			<property name="sideAIcon" type="String" encoding="UTF-8" comment="获胜方图标" />
			<property name="sideBName" type="String" encoding="UTF-8" comment="失败方名字" />
			<property name="sideBIcon" type="String" encoding="UTF-8" comment="失败方图标" />
		</req>
	</prototype>

	<prototype req_name="ACTIVITY_FARMING_PLATE_REQ" req_type="0x0F300014" req_client_receive="true" comment="通知客户端弹出圆盘">
		<req>
			<property name="resultId" type="int" encoding="UTF-8" comment="转盘的结果Id" />
			<property name="allIds" type="int[]" encoding="UTF-8" comment="盘子内所有物品ID" />
			<property name="allNames" type="String[]" encoding="UTF-8" comment="盘子内所有物品名称" />
			<property name="taskIndex" type="int" encoding="UTF-8" comment="任务索引-要接的下一个任务" />
			<property name="runTime" type="long" encoding="UTF-8" comment="盘子转的时间" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="ACTIVITY_FARMING_PLATE_RESPONSE_REQ" req_type="0x0F300015" req_client_send="true" comment="反馈给服务器，转盘结束">
		<req>
			<property name="resultId" type="int" encoding="UTF-8" comment="转盘的结果Id" />
			<property name="taskIndex" type="int" encoding="UTF-8" comment="任务索引-要接的下一个任务" />
		</req>
		<res>
		</res>
	</prototype>
	<!-- 活动↑↑↑↑↑↑↑↑ -->

	<!-- 仙缘活动 -->

	<prototype res_name="ENTER_GETACTIVITY_RES" res_type="0x700F0000" res_client_receive="true">
		<res>
			<property name="activityType" type="byte" comment="国内仙缘(0),国外仙缘(1),国内论道(2),国外论道(3)"></property>
		</res>
	</prototype>

	<prototype req_name="GET_FATEACTIVITY_REQ" req_type="0x000F0001" req_client_send="true" res_name="GET_FATEACTIVITY_RES" res_type="0x700F0001"
		res_client_receive="true" comment="得到进行中的仙缘活动">
		<req>
			<property name="activityType" type="byte" comment="国内仙缘(0),国外仙缘(1),国内论道(2),国外论道(3)"></property>
			<property name="flush" type="boolean" comment="刷新"></property>
			<property name="rechoose" type="boolean" comment="重选"></property>
		</req>
		<res>
			<property name="activityType" type="byte" comment="国内仙缘(0),国外仙缘(1),国内论道(2),国外论道(3)"></property>
			<property name="playerRole" type="boolean" comment="玩家的角色（邀请方(true)还是被邀请方）"></property>
			<property name="activityState" type="byte" comment="活动的状态，根据状态不同显示重选1，还是刷新0"></property>
			<property name="descript" type="String" encoding="UTF-8" comment="描述"></property>
			<property name="id" type="long" comment="玩家唯一的编号(只有显示重选，放弃有用)"></property>
			<property name="name" type="String" encoding="UTF-8" comment="玩家的昵称(只有显示重选，放弃有用)"></property>
			<property name="country" type="byte" comment="国家"></property>
			<object-property name="nodoPlayer" type="Player[]" comment="没有做过的玩家">
				<property name="id" type="long" comment="玩家唯一的编号"></property>
				<property name="name" type="String" encoding="UTF-8" comment="玩家的昵称"></property>
				<property name="career" type="byte" comment="玩家的职业"></property>
			</object-property>
			<object-property name="didPlayer" type="Player[]" comment="已经做过的玩家">
				<property name="id" type="long" comment="玩家唯一的编号"></property>
				<property name="name" type="String" encoding="UTF-8" comment="玩家的昵称"></property>
				<property name="career" type="byte" comment="玩家的职业"></property>
			</object-property>
			<property name="time" type="long" comment="距离刷新时间"></property>
		</res>
	</prototype>

	<prototype req_name="CHOOSE_ACTIVITY_REQ" req_type="0x000F0002" req_client_send="true" res_name="CHOOSE_ACTIVITY_RES" res_type="0x700F0002"
		res_client_receive="true" comment="选择活动">
		<req>
			<property name="activityType" type="byte" comment="国内仙缘(0),国外仙缘(1),国内论道(2),国外论道(3)"></property>
			<property name="playerId" type="long" comment="被邀请的人的id"></property>
		</req>

		<res>
			<property name="keyContent" type="String" encoding="UTF-8" comment="显示的话"></property>
			<property name="levelContent" type="String[]" encoding="UTF-8" comment="级别"></property>
			<property name="activityType" type="byte" comment="国内仙缘(0),国外仙缘(1),国内论道(2),国外论道(3)"></property>

		</res>
	</prototype>


	<prototype req_name="REAL_CHOOSE_ACTIVITY_REQ" req_type="0x000F0003" req_client_send="true" res_name="REAL_CHOOSE_ACTIVITY_RES" res_type="0x700F0003"
		res_client_receive="true" comment="真正选择活动">
		<req>
			<property name="playerId" type="long" comment="被选择做活动玩家的id"></property>
			<property name="activityType" type="byte" comment="国内仙缘(0),国外仙缘(1),国内论道(2),国外论道(3)"></property>
			<property name="level" type="int" comment="邀请活动的级别"></property>
		</req>

		<res>
			<property name="activityId" type="long" comment="活动id"></property>
			<property name="activityType" type="byte" comment="国内仙缘(0),国外仙缘(1),国内论道(2),国外论道(3)"></property>
			<property name="keyContent" type="String" encoding="UTF-8" comment="显示的话"></property>
			<property name="successNum" type="int" comment="接受成功次数"></property>
			<property name="level" type="int" comment="邀请活动的级别"></property>
		</res>
	</prototype>

	<prototype req_name="AGREE_ACTIVITY_REQ" req_type="0x000F0004" req_client_send="true" comment="被邀请方同意活动">
		<req>
			<property name="activityId" type="long" comment="活动id"></property>
			<property name="activityType" type="byte" comment="国内仙缘(0),国外仙缘(1),国内论道(2),国外论道(3)"></property>
			<property name="successNum" type="int" comment="接受成功次数"></property>
			<property name="level" type="int" comment="邀请活动的级别"></property>
		</req>
	</prototype>

	<prototype req_name="DISAGREE_ACTIVITY_REQ" req_type="0x000F0005" req_client_send="true" comment="被邀请方不同意活动">
		<req>
			<property name="activityId" type="long" comment="活动id"></property>
		</req>
	</prototype>


	<prototype req_name="GIVEUP_ACTIVITY_REQ" req_type="0x000F0006" req_client_send="true" res_name="GIVEUP_ACTIVITY_RES" res_type="0x700F0006"
		res_client_receive="true" comment="放弃活动">
		<req>
			<property name="activityType" type="byte" comment="国内仙缘(0),国外仙缘(1),国内论道(2),国外论道(3)"></property>
		</req>
		<res>
			<property name="activityType" type="byte" comment="国内仙缘(0),国外仙缘(1),国内论道(2),国外论道(3)"></property>
		</res>
	</prototype>

	<prototype res_name="BEGIN_ACTIVITY_RES" res_type="0x700F0007" res_client_receive="true" comment="开始活动">
		<res>
			<property name="activityType" type="byte" comment="国内仙缘(0),国外仙缘(1),国内论道(2),国外论道(3)"></property>
			<property name="x" type="long" comment="x坐标"></property>
			<property name="y" type="long" comment="y坐标"></property>
			<property name="time" type="int" comment="秒"></property>
		</res>
	</prototype>

	<prototype res_name="FINISH_ACTIVITY_RES" res_type="0x700F0008" res_client_receive="true" comment="完成活动">
		<res>
			<property name="activityType" type="byte" comment="国内仙缘(0),国外仙缘(1),国内论道(2),国外论道(3)"></property>
		</res>
	</prototype>


	<prototype res_name="SEEM_HINT_RES" res_type="0x700FF000" res_client_receive="true" comment="类似hint_req">
		<res>
			<property name="hintType" type="byte" comment="国内仙缘(0),国外仙缘(1),国内论道(2),国外论道(3)"></property>
			<property name="keyContent" type="String" encoding="UTF-8" comment="显示的话"></property>
		</res>
	</prototype>


	<!-- 答题 -->
	<prototype res_name="POP_WAIT_TIME_RES" res_type="0x700F0105" res_client_receive="true" comment="点击同意答题，倒计时时间">
		<res>
			<property name="firstWaitTime" type="int" comment="倒计时时间"></property>
			<property name="contents" type="String" encoding="utf-8" comment="答题描述"></property>
		</res>
	</prototype>


	<prototype res_name="POP_QUIZ_RES" res_type="0x700F0100" res_client_receive="true" comment="弹出题（题干，选项，名次）">
		<res>
			<property name="number" type="int" comment="这次活动的第几题"></property>
			<object-property name="subject" type="Subject" comment="题目">
				<property name="subjectId" type="int" comment="题目编号"></property>
				<property name="trunk" type="String" encoding="UTF-8" comment="题干"></property>
				<property name="branchA" type="String" encoding="UTF-8" comment="答案A"></property>
				<property name="branchB" type="String" encoding="UTF-8" comment="答案B"></property>
				<property name="branchC" type="String" encoding="UTF-8" comment="答案C"></property>
				<property name="branchD" type="String" encoding="UTF-8" comment="答案D"></property>
			</object-property>
			<property name="remainTime" type="int" comment="剩余时间(秒)"></property>
			<property name="remainQuizNum" type="int" comment="剩余题数"></property>
			<property name="helpNum" type="int" comment="可用帮助的次数"></property>
			<property name="amplifierNum" type="int" comment="可用放大镜的次数"></property>

		</res>
	</prototype>

	<prototype req_name="ANSWER_QUIZ_REQ" req_type="0x000F0101" req_client_send="true" res_name="ANSWER_QUIZ_RES" res_type="0x700F0101"
		res_client_receive="true" comment="回答问题">
		<req>
			<property name="answerType" type="byte" comment="指定答案0，帮助1，放大镜2"></property>
			<property name="answerKey" type="byte" comment="答案0,1,2,3"></property>
		</req>
		<res>
			<property name="rightOrWrong" type="boolean" comment="回答对或者错误"></property>
			<property name="answerKey" type="byte" comment="正确答案"></property>

			<property name="playerIds" type="long[]" comment="玩家id"></property>
			<property name="names" type="String[]" encoding="UTF-8" comment="玩家的名字"></property>
			<property name="scores" type="int[]" comment="得分情况"></property>

			<property name="remainTime" type="int" comment="剩余时间(秒)"></property>
			<property name="personScore" type="int" comment="个人当前得分"></property>
			<property name="personRank" type="int" comment="个人排名"></property>
			<property name="obtainCulture" type="int" comment="得到的文采值"></property>
			<property name="sumCulture" type="int" comment="累计文采值"></property>
		</res>
	</prototype>


	<prototype res_name="ANSWER_USE_PROPS_RES" res_type="0x700F0104" res_client_receive="true" comment="回答问题使用道具返回">
		<res>
			<property name="answerType" type="byte" comment="帮助1，放大镜2"></property>
		</res>

	</prototype>


	<prototype res_name="ANSWER_QUIZ_FINISH_RES" res_type="0x700F0102" res_client_receive="true" comment="回答问题完毕">
		<res>
		</res>
	</prototype>

	<prototype req_name="ANSWER_QUIZ_CANCEL_REQ" req_type="0x000F0103" req_client_send="true" res_name="ANSWER_QUIZ_CANCEL_RES" res_type="0x700F0103"
		res_client_receive="true" comment="玩家关闭答题活动">
		<req>
		</req>
		<res>
		</res>
	</prototype>


	<prototype res_name="QUERY_SPECIAL_EQUIPMENT_RES" res_type="0x700F0200" res_client_receive="true" comment="查询特殊装备">
		<res>
			<property name="equpmentType" type="boolean" comment="是那个特殊装备:鸿天帝宝(true)"></property>
			<property name="equpmentTypeName" type="String" encoding="UTF-8" comment="是那个特殊装备:鸿天帝宝,伏天古宝"></property>

			<property name="isAppears" type="boolean[]" comment="是否已经出现,fasle没有出现，下边属性没意义"></property>
			<property name="equpmentNames" type="String[]" encoding="UTF-8" comment="已经出现的特殊装备名称"></property>
			<property name="equpmentLevels" type="int[]" comment="特殊装备级别"></property>
			<property name="equpmentClasses" type="int[]" comment="特殊装备境界"></property>
			<property name="equpmentOnwerNames" type="String[]" encoding="UTF-8" comment="装备所属于玩家的姓名"></property>
			<property name="equpmentShowType" type="int[]" comment="0.斧子1.禅杖2.刺3.轮4.毛笔5.法剑6.法杖7.幡...8:头盔,9护肩,10胸,11护腕,12腰带,13靴子,14首饰,15项链,16戒指,"></property>
		</res>
	</prototype>

	<prototype req_name="QUERY_ONE_SPECIAL_EQUIPMENT_REQ" req_type="0x000F0201" req_client_send="true" res_name="QUERY_ONE_SPECIAL_EQUIPMENT_RES"
		res_type="0x700F0201" res_client_receive="true" comment="查询指定某一特殊特殊装备">
		<req>
			<property name="equpmentType" type="boolean" encoding="UTF-8" comment="是那个特殊装备:鸿天帝宝(true)"></property>
			<property name="equpmentName" type="String" encoding="UTF-8" comment="特殊装备名称"></property>
		</req>


		<res>
			<property name="equpmentName" type="String" encoding="UTF-8" comment="特殊装备名称"></property>
			<property name="icon" type="String" encoding="UTF-8" comment="装备图标"></property>
			<property name="equpmentLevel" type="int" comment="特殊装备级别"></property>
			<property name="equpmentClass" type="int" comment="特殊装备境界"></property>
			<property name="storyDescribe" type="String" encoding="UTF-8" comment="特殊装备故事描述"></property>
			<property name="equipmentInfo" type="String" encoding="UTF-8" comment="特殊装备描述"></property>
			<property name="ownerNames" type="String[]" encoding="UTF-8" comment="拥有者名字"></property>
			<property name="ownerCareer" type="byte[]" comment="拥有者职业"></property>
			<property name="ownerCountry" type="byte[]" comment="拥有者国家"></property>
			<property name="ownerLevel" type="int[]" comment="拥有者等级"></property>
			<property name="ownerClassLevel" type="short[]" comment="拥有者境界"></property>
		</res>
	</prototype>


	<prototype res_name="USE_EXPLORE_RESOURCEMAP_RES" res_type="0x700F0300" res_client_receive="true" comment="使用寻宝藏宝图道具，得到是那个地图">
		<res>
			<property name="x" type="int" comment="显示那个地图片段的x"></property>
			<property name="y" type="int" comment="显示那个地图片段的y"></property>
			<property name="showMap" type="String" encoding="UTF-8" comment="显示的中文地图名"></property>
			<property name="country" type="byte" comment="国家"></property>
		</res>
	</prototype>

	<prototype res_name="USE_EXPLOREPROPS_RES" res_type="0x700F0301" res_client_receive="true"
		comment="使用寻宝道具，得到在那个位置:很远 ((byte)0),附近((byte)1),正上方((byte)2),右上方((byte)3),右边((byte)4),
			右下方((byte)5),正下方((byte)6),左下方((byte)7),左边((byte)8),左上方((byte)9);">
		<res>
			<property name="success" type="boolean" comment="寻宝成功"></property>
			<property name="position" type="byte" comment="位置索引，左，右"></property>
		</res>
	</prototype>


	<prototype req_name="SPECIAL_DEAL_REQ" req_type="0x000F0302" req_client_send="true" comment="一种特殊的交易">
		<req>
			<property name="playerAId" type="long" comment="交换人的id"></property>
			<property name="playerBId" type="long" comment="交换人的id"></property>
		</req>
	</prototype>

	<prototype res_name="SPECIAL_DEAL_AGREE_RES" res_type="0x700F0303" res_client_receive="true" comment="一种特殊的交易">
		<res>
			<property name="specialDealId" type="long" comment="交换实体的id"></property>
			<property name="exchangeArticles" type="long[]" comment="玩家可以往交换栏拖的物品"></property>
		</res>
	</prototype>

	<prototype req_name="SPECIAL_DEAL_ADD_ARTICLE_REQ" req_type="0x000F0304" req_client_send="true" res_name="SPECIAL_DEAL_ADD_ARTICLE_RES"
		res_type="0x700F0304" res_client_receive="true" comment="更改条件，增加物品到交换栏">
		<req>
			<property name="dealId" type="long" comment="交换id" />
			<property name="entityId" type="long" comment="交换物品" />
		</req>
		<res>
			<property name="entityId" type="long" comment="交换物品" />
		</res>
	</prototype>


	<prototype req_name="SPECIAL_DEAL_DEL_ARTICLE_REQ" req_type="0x000F0305" req_client_send="true" res_name="SPECIAL_DEAL_DEL_ARTICLE_RES"
		res_type="0x700F0305" res_client_receive="true" comment="更改条件，把物品从交换栏脱下">
		<req>
			<property name="dealId" type="long" comment="交换id" />
			<property name="entityId" type="long" comment="交换物品" />
		</req>
		<res>
			<property name="entityId" type="long" comment="交换物品" />
		</res>
	</prototype>

	<prototype req_name="SPECIAL_DEAL_FINISH_REQ" req_type="0x000F0306" req_client_send="true" res_name="SPECIAL_DEAL_FINISH_RES" res_type="0x700F0306"
		res_client_receive="true" comment="交换生成的新物品">
		<req>
			<property name="dealId" type="long" comment="交换id" />
			<property name="entityId" type="long" comment="交换物品id" />
		</req>
		<res>
			<property name="oprate" type="boolean" comment="完成，还是取消完成" />
		</res>
	</prototype>

	<prototype req_name="CLOSE_DEAL_REQ" req_type="0x000F0307" req_client_send="true" res_name="CLOSE_DEAL_RES" res_type="0x700F0307"
		res_client_receive="true" comment="关闭交换">
		<req>
			<property name="dealId" type="long" comment="交换Id" />
		</req>
		<res>
			<property name="dealId" type="long" comment="交换Id" />
		</res>
	</prototype>

	<prototype req_name="SEND_MAP_SOUND_REQ" req_type="0x0F300028" req_client_receive="true" comment="发送地图音乐信息">
		<req>
			<property name="mapName" type="String" encoding="UTF-8" comment="地图" />
			<property name="sound" type="String" encoding="UTF-8" comment="音乐" />
			<property name="playCount" type="int" comment="播放次数" />
		</req>
	</prototype>

	<prototype req_name="NOTICE_CLIENT_NEWPLAYER_LEAD_REQ" req_type="0x0F300029" req_client_receive="true" comment="通知客户端新手引导">
		<req>
			<property name="windowNames" type="String[]" encoding="UTF-8" comment="窗口名" />
			<property name="activeXs" type="String[]" encoding="UTF-8" comment="控件名" />
			<property name="showMessages" type="String[]" encoding="UTF-8" comment="显示文字" />
			<property name="outStackEvents" type="int[]" encoding="UTF-8" comment="出栈事件" />
			<property name="prioritys" type="int[]" encoding="UTF-8" comment="左右优先" />
			<property name="types" type="int[]" encoding="UTF-8" comment="类型" />
		</req>
	</prototype>

	<!--↓ 热点相关协议↓ -->
	<prototype res_name="NOTIFY_HOTSPOT_CHANGE_RES" res_type="0x0F400001" res_client_receive="true" comment="通知客户端热点数据变化">
		<res>
			<property name="allLen" type="int" comment="热点总个数" />
			<object-property name="hotspotClientInfos" type="HotspotClientInfo[]" comment="以开启的热点，客户端需要的热点数据">
				<property name="hotspotID" type="int" comment="热点ID" />
				<property name="name" type="String" encoding="UTF-8" comment="名称，标题" />
				<property name="icon" type="String" encoding="UTF-8" comment="图标" />
				<property name="isSee" type="boolean" comment="是否看过" />
				<property name="isOver" type="boolean" comment="是否完成" />
			</object-property>
		</res>
	</prototype>

	<prototype req_name="HOTSPOT_SEE_REQ" req_type="0x0F400002" req_client_send="true" res_name="HOTSPOT_SEE_RES" res_type="0x8F400002"
		res_client_receive="true" comment="查看某个热点">
		<req>
			<property name="hotspotID" type="int" comment="热点ID" />
		</req>
		<res>
			<property name="hotspotID" type="int" comment="热点ID" />
			<property name="hotspotMsg" type="String" encoding="UTF-8" comment="热点信息" />
		</res>
	</prototype>

	<prototype res_name="HOTSPOT_OVER_RES" res_type="0x8F400003" res_client_receive="true" comment="热点完成">
		<res>
			<property name="hotspotID" type="int" comment="热点ID" />
			<property name="icon" type="String" encoding="UTF-8" comment="图标" />
		</res>
	</prototype>

	<prototype res_name="HOTSPOT_OPEN_RES" res_type="0x8F400004" res_client_receive="true" comment="热点开启">
		<res>
			<property name="hotspotID" type="int" comment="热点ID" />
			<property name="icon" type="String" encoding="UTF-8" comment="图标" />
		</res>
	</prototype>

	<!--↑ 热点相关协议↑ -->

	<prototype req_name="SEQUENCE_NUM_PARAMETERS_REQ" req_type="0x0F300030" req_client_receive="true" comment="通知客户端生成序列号的4个参数">
		<req>
			<property name="parameters" type="long[]" comment="4个参数" />
		</req>
	</prototype>

	<prototype req_name="QUERY_INVALID_TIME_REQ" res_name="QUERY_INVALID_TIME_RES" req_type="0x0F300031" res_type="0x8F300031" req_client_send="true"
		res_client_receive="true" comment="查询物品到期时间">
		<req>
			<property name="articleId" type="long" comment="物品id" />
		</req>
		<res>
			<property name="articleId" type="long" comment="物品id" />
			<property name="invalidTime" type="long" comment="到期时间点,-1表示无有效期" />
		</res>
	</prototype>

	<prototype req_name="PLAY_SOUND_REQ" req_type="0x0F300033" req_client_receive="true" comment="要求客户端播放声音">
		<req>
			<property name="soundName" type="String" encoding="UTF-8" comment="声音文件名" />
			<property name="playFlag" type="boolean" comment="是否播放声音" />
			<property name="loopFlag" type="boolean" comment="是否循环播放" />
		</req>
	</prototype>

	<prototype req_name="PLAYER_PROPERTY_MAX_VALUE_INFO_REQ" req_type="0x0F300035" req_client_receive="true" comment="通知客户端这个人物角色的最大属性面板值">
		<req>
			<property name="career" type="int" comment="职业" />
			<property name="propertyValues" type="int[]"
				comment="各个属性的最大值,顺序MHP,AP,AP2,AC,AC2,MMP,DAC,HITP,DGP,ACTP,CHP,DCHP,FAP,IAP,WAP,TAP,FRT,IRT,WRT,TRT,DFRT,DIRT,DWRT,DTRT" />
		</req>
	</prototype>


	<prototype res_name="NOTICE_NPC_FLASH_RES" res_type="0x8F300032" res_client_receive="true" comment="告诉客户端那个npc闪光">
		<res>
			<property name="npcId" type="long" comment="闪光的npcId" />
		</res>
	</prototype>

	<prototype res_name="PUSH_CONFIRMACTION_ACTIVITY_RES" res_type="0x8F3000A5" res_client_receive="true" comment="某一激活码活动数据">
		<res>
			<object-property name="activitys" type="GameActivity" comment="所有有效的活动列表">
				<property name="id" type="long" encoding="UTF-8" comment="活动ID" />
				<property name="name" type="String" encoding="UTF-8" comment="活动名字" />
				<property name="description" type="String" encoding="UTF-8" comment="活动描述" />
				<property name="startTime" type="long" encoding="UTF-8" comment="活动开始时间" />
				<property name="endTime" type="long" encoding="UTF-8" comment="活动结束时间" />
				<property name="eachUserExchangeTimes" type="int" encoding="UTF-8" comment="每个用户可兑换的上限" />

				<property name="propNames" type="String[]" encoding="UTF-8" comment="物品名字" />
				<property name="nums" type="long[]" encoding="UTF-8" comment="物品数量" />
				<property name="colors" type="int[]" encoding="UTF-8" comment="物品颜色" />
				<property name="binds" type="boolean[]" encoding="UTF-8" comment="是否绑定" />
			</object-property>
		</res>
	</prototype>
	<prototype req_name="EXCHANGE_CONFIRMACTION_CODE_REQ" res_name="EXCHANGE_CONFIRMACTION_CODE_RES" req_type="0x0F3000A6" res_type="0x8F3000A6"
		req_client_send="true" res_client_receive="true" comment="兑换激活码">
		<req>
			<property name="activityId" type="long" encoding="UTF-8" comment="要兑换的活动ID" />
			<property name="code" type="String" encoding="UTF-8" comment="要兑换的激活码" />
		</req>
		<res>
			<property name="result" type="int" encoding="UTF-8" comment="是否成功,0:成功,>=1:失败" />
			<property name="notice" type="String" encoding="UTF-8" comment="兑换结果描述" />
		</res>
	</prototype>

	<prototype req_name="CREATE_FEEDBACK_REQ" req_type="0x0F400030" req_client_send="true" comment="用户创建一个反馈信息">
		<req>
			<property name="feedbackType" type="int" comment="类型" />
			<property name="subject" type="String" encoding="UTF-8" comment="标题" />
			<property name="fcontent" type="String" encoding="UTF-8" comment="内容" />
		</req>
	</prototype>

	<prototype req_name="QUERY_FEEDBACK_LIST_REQ" req_type="0x0F400031" req_client_send="true" res_name="QUERY_FEEDBACK_LIST_RES" res_type="0x8F400031"
		res_client_receive="true" comment="玩家查询自己创建的反馈">
		<req>
		</req>
		<res>
			<object-property name="feedback" type="Feedback[]">
				<property name="id" type="long"></property>
				<property name="playerState" type="int"></property>
				<property name="feedbackType" type="int"></property>
				<property name="beginDate" type="long"></property>
				<property name="subject" type="String" encoding="UTF-8" comment="标题" />
			</object-property>
		</res>
	</prototype>

	<prototype req_name="QUERY_SPECIAL_FEEDBACK_REQ" req_type="0x0F400032" req_client_send="true" res_name="QUERY_SPECIAL_FEEDBACK_RES"
		res_type="0x8F400032" res_client_receive="true" comment="玩家查询指定某一反馈">
		<req>
			<property name="id" type="long"></property>
		</req>
		<res>
			<object-property name="reply" type="Reply[]">
				<property name="gmName" type="String" encoding="UTF-8" comment="名字，空为玩家自己" />
				<property name="sendDate" type="long"></property>
				<property name="fcontent" type="String" encoding="UTF-8" comment="内容" />
			</object-property>
		</res>
	</prototype>


	<prototype req_name="REPLY_SPECIAL_FEEDBACK_REQ" req_type="0x0F400033" req_client_send="true" comment="玩家回复一个反馈">
		<req>
			<property name="id" type="long"></property>
			<property name="fcontent" type="String" encoding="UTF-8" comment="内容" />
		</req>
	</prototype>

	<prototype res_name="REPLY_SPECIAL_FEEDBACK_RES" res_type="0x8F400034" res_client_receive="true" comment="通知玩家gm回复你一个反馈">
		<res>
			<property name="id" type="long"></property>
		</res>
	</prototype>

	<prototype req_name="JUDGE_SPECIAL_FEEDBACK_REQ" req_type="0x0F400035" req_client_send="true" res_name="JUDGE_SPECIAL_FEEDBACK_RES"
		res_type="0x8F400035" res_client_receive="true" comment="玩家评价">

		<req>
			<property name="id" type="long"></property>
			<property name="judge" type="int" comment="评价级别" />
		</req>
		<res>
			<property name="id" type="long"></property>
		</res>
	</prototype>


	<prototype res_name="FEEDBACK_NOTICE_CLIENT_ALLJUDGE_RES" res_type="0x8F400135" res_client_receive="true" comment="通知客户端所有的评价id">
		<res>
			<property name="judgeIds" type="long[]" comment="所有的评价id"></property>
		</res>
	</prototype>
	<prototype res_name="FEEDBACK_NOTICE_CLIENT_RES" res_type="0x8F400136" res_client_receive="true" comment="通知客户端有gm回复评价等">
		<res>
			<property name="noticeType" type="boolean" comment="true有通知，false处理完了没通知"></property>
		</res>
	</prototype>


	<prototype res_name="NOTICE_CLIENT_PLAY_PARTICLE_RES" res_type="0x8F300033" res_client_receive="true" comment="通知客户端播放一个粒子效果">
		<res>
			<object-property name="particleDatas" type="ParticleData[]" comment="要播放的粒子的集合">
				<property name="targetId" type="long" encoding="UTF-8" comment="目标ID" />
				<property name="particleName" type="String" encoding="UTF-8" comment="粒子的名字" />
				<property name="delayTime" type="long" encoding="UTF-8" comment="持续时间" />
				<property name="upValue" type="double" encoding="UTF-8" comment="上下偏移量" />
				<property name="leftValue" type="double" encoding="UTF-8" comment="左右偏移量" />
				<property name="frontValue" type="double" encoding="UTF-8" comment="前后偏移量" />
			</object-property>
		</res>
	</prototype>

	<!-- 四方神兽 -->
	<prototype req_name="SIFANG_TEST_NPCMENU_REQ" req_type="0x00100001" req_client_send="true" comment="四方神兽测试协议，返回NPC菜单项">
		<req>
		</req>
	</prototype>
	<prototype res_name="SIFANG_ENLIST_PLAYER_RES" res_type="0x70100002" res_client_receive="true" comment="设定参赛玩家">
		<res>
			<property name="sifangType" type="int" comment="活动类型" />
			<property name="maxNum" type="int" comment="可以选择的玩家总数" />
			<object-property name="sifangPlayers" type="SiFangSimplePlayerInfo[]" comment="可以被选的家族成员">
				<property name="playerId" type="long" comment="id" />
				<property name="playerName" type="String" encoding="UTF-8" comment="名字" />
				<property name="career" type="int" comment="职业" />
				<property name="playerLevel" type="int" comment="等级" />
			</object-property>
			<property name="chooseID" type="long[]" comment="选中的玩家ID" />
		</res>
	</prototype>

	<prototype req_name="SIFANG_OVER_MSG_REQ" req_type="0x00100003" req_client_send="true" res_name="SIFANG_OVER_MSG_RES" res_type="0x70100003"
		res_client_receive="true" comment="四方神兽活动结果查询">
		<req>
		</req>
		<res>
			<property name="sifangType" type="int" comment="活动类型" />
			<property name="winIndex" type="int" comment="胜利那个" />
			<property name="selfIndex" type="int" comment="自己那个" />
			<object-property name="overInfo" type="SiFangOverInfo[]" comment="结束信息">
				<property name="JiaZuName" type="String" encoding="UTF-8" comment="家族名字" />
				<property name="leftNum" type="int" comment="剩余人数" />
				<property name="killNum" type="int" comment="击杀人数" />
				<property name="reward" type="int" comment="奖励" />
			</object-property>
		</res>
	</prototype>

	<prototype req_name="SIFANG_CHOOSE_PLAYER_REQ" req_type="0x00100004" req_client_send="true" res_name="SIFANG_CHOOSE_PLAYER_RES" res_type="0x70100004"
		res_client_receive="true" comment="选择玩家参赛">
		<req>
			<property name="sifangType" type="int" comment="活动类型" />
			<property name="playerId" type="long" comment="玩家ID" />
			<property name="ChoOrDel" type="boolean" comment="选上还是删除，true为选上" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype res_name="SIFANG_SHOW_INFO_BUTTON_RES" res_type="0x70100005" res_client_receive="true" comment="让客户端显示按钮">
		<res>
		</res>
	</prototype>

	<prototype res_name="SIFANG_SHOW_START_TIME_RES" res_type="0x70100006" res_client_receive="true" comment="让客户端显示倒计时">
		<res>
			<property name="timeO" type="int" comment="倒计时 秒" />
		</res>
	</prototype>

	<!-- 四方神兽 -->

	<prototype req_name="RECOMEND_COUNTRY_REQ" req_type="0x0F600036" req_client_receive="true" comment="推荐国家">
		<req>
			<property name="country" type="byte" comment="国家" />
		</req>
	</prototype>

	<prototype req_name="RANDOM_NAME_REQ" req_type="0x0F400036" req_client_send="true" res_name="RANDOM_NAME_RES" res_type="0x8F400036"
		res_client_receive="true" comment="客户端随机一个名字">
		<req>
			<property name="career" type="byte" comment="职业" />
		</req>
		<res>
			<property name="name" type="String" encoding="utf-8" comment="服务器随机的名字" />
		</res>
	</prototype>

	<prototype req_name="EXPEND_KNAPSACK_REQ" req_type="0x0F600068" req_client_send="true" comment="客户端申请扩展背包格">
		<req>
			<property name="knapsackIndex" type="int" comment="扩展到第几个格子" />
		</req>
	</prototype>


	<prototype req_name="GET_DESCRIPTION_BY_ARTICLE_REQ" req_type="0x0F600056" req_client_send="true" res_name="GET_DESCRIPTION_BY_ARTICLE_RES"
		res_type="0x8F600056" res_client_receive="true" comment="客户端通过一个名字得到物品的基本信息">
		<req>
			<property name="articleName" type="String" encoding="utf-8" comment="物品名" />
		</req>
		<res>
			<property name="articleName" type="String" encoding="utf-8" comment="物品名" />
			<property name="icon" type="String" encoding="utf-8" comment="物品icon" />
			<property name="description" type="String" encoding="utf-8" comment="物品基本描述" />
		</res>
	</prototype>

	<prototype req_name="CHANGE_GAME_DISPLAYNAME_REQ" req_type="0x0F600057" req_client_receive="true" comment="通知客户端修改地图的显示名字">
		<req>
			<property name="gameName" type="String" encoding="UTF-8" comment="地图名字" />
			<property name="displayName" type="String" encoding="UTF-8" comment="要显示的名字" />
		</req>
	</prototype>


	<prototype res_name="NOTICE_TEAM_CHANGE_RES" res_type="0x8F600057" res_client_receive="true" comment="队伍成员变化通知其他人	0: hp;1: maxHP;2: mp;3: maxMP;4:level">
		<res>
			<object-property name="teamChangeNotice" type="TeamChangeNotice[]">
				<property name="playerId" type="long" comment="玩家id" />
				<property name="changeType" type="int" comment="变化的类型" />
				<property name="nowValue" type="int" comment="变化后的值" />
			</object-property>
		</res>
	</prototype>



	<!-- 千层塔相关的协议 开始 -->
	<!-- 打开千层塔的界面，客户端收到此协议后应该打开界面 -->
	<prototype req_name="QIANCENGTA_OPEN_INFO_REQ" req_type="0x0F700001" req_client_receive="true" comment="通知客户端打开千层塔">
		<req>
			<property name="daoOpens" type="boolean[]" comment="六道开启情况 长度为6" />
			<property name="daoIndex" type="int" comment="当前道的下标，从0开始" />
			<property name="daoName" type="String" encoding="UTF-8" comment="道的名字" />
			<property name="cengIndex" type="int" comment="要进入的道里面的层，从0开始" />
			<property name="maxCeng" type="int" comment="此道最多多少层" />
			<property name="hiddenCengOpen" type="boolean" comment="隐藏层是否开启" />
			<property name="maxReachCengIndex" type="int" comment="此用户在本道里历史到达的最高层，开始为-1" />
			<property name="currentMonsters" type="String[]" encoding="UTF-8" comment="要进入层的怪物信息" />
			<property name="rewardRamStrs" type="String[]" encoding="UTF-8" comment="当前层奖励几率串" />
			<property name="rewardStrs" type="String[]" encoding="UTF-8" comment="当前层奖励内容字符串" />
			<property name="rewardColors" type="int[]" comment="奖励物品颜色" />
			<property name="totalFlushTimes" type="int" comment="今日已刷新次数" />
			<property name="freeFlushTimesEveryDay" type="int" comment="今日可免费刷新次数，totalFlushTimes>=freeFlushTimesEveryDay标识免费次数用完" />
			<property name="maxFlushTimesEveryDay" type="int" comment="今日最大刷新次数" />
			<property name="costSilver" type="long" comment="付费刷新，每次扣多少钱，单位为文" />
			<property name="isInAutoPata" type="boolean" comment="是否正在自动爬塔" />
			<property name="hasRewards" type="boolean" comment="本道是否有奖励为领取" />
		</req>
	</prototype>

	<!-- 客户端主动请求更新界面信息点击塔的道的时候发，此协议的响应是QIANCENGTA_OPEN_INFO_REQ -->
	<prototype req_name="QIANCENGTA_QUERY_INFO_REQ" req_type="0x0F700002" req_client_send="true" comment="客户端主动请求更新界面信息">
		<req>
			<property name="playerId" type="long" comment="玩家ID" />
			<property name="daoIndex" type="int" comment="道的下标，从0开始" />
		</req>
	</prototype>

	<!-- 刷新，如果成功，客户端会收到QIANCENGTA_OPEN_INFO_REQ -->
	<prototype req_name="QIANCENGTA_FLUSH_REQ" req_type="0x0F700003" req_client_send="true" comment="刷新">
		<req>
			<property name="playerId" type="long" comment="玩家ID" />
			<property name="daoIndex" type="int" comment="道的下标，从0开始" />
		</req>
	</prototype>

	<!-- 自动爬塔，如果成功，客户端会收到QIANCENGTA_OPEN_INFO_REQ -->
	<prototype req_name="QIANCENGTA_AUTO_PATA_REQ" req_type="0x0F700004" res_name="QIANCENGTA_AUTO_PATA_RES" res_type="0x8F700004"
		req_client_send="true" res_client_receive="true" comment="自动爬塔">
		<req>
			<property name="playerId" type="long" comment="玩家ID" />
			<property name="daoIndex" type="int" comment="道的下标，从0开始" />
			<property name="action" type="int" comment="1标识自动爬塔，2标识取消自动爬塔" />
		</req>
		<res>
			<property name="action" type="int" comment="1标识自动爬塔，2标识取消自动爬塔" />
			<property name="result" type="int" comment="0成功，其他错误" />
			<property name="resultString" type="String" encoding="UTF-8" comment="错误原因" />
		</res>
	</prototype>

	<!-- 挑战爬塔，如果成功，客户端会收到跳地图的协议 -->
	<prototype req_name="QIANCENGTA_MANUAL_PATA_REQ" req_type="0x0F700005" req_client_send="true" comment="挑战">
		<req>
			<property name="playerId" type="long" comment="玩家ID" />
			<property name="daoIndex" type="int" comment="道的下标，从0开始 " />
			<property name="cengIndex" type="int" comment="挑战的层，从0开始  -1未隐藏层" />
		</req>
	</prototype>

	<!-- 领取成功后 客户端会收到 QIANCENGTA_REWARD_INFO_RES -->
	<prototype req_name="QIANCENGTA_GET_REWARD_REQ" req_type="0x0F700006" req_client_send="true" comment="领取奖励">
		<req>
			<property name="playerId" type="long" comment="玩家ID" />
			<property name="isOver" type="boolean" comment="是否是手动爬塔的领取，如果是就不会返回QIANCENGTA_REWARD_INFO_REQ" />
			<property name="daoIndex" type="int" comment="道的下标，从0开始" />
			<property name="cengIndex" type="int" comment="层的下表， 从0开始， -100为全部领取" />
		</req>
	</prototype>

	<prototype req_name="QIANCENGTA_REWARD_INFO_REQ" req_type="0x0F700007" req_client_send="true" res_name="QIANCENGTA_REWARD_INFO_RES"
		res_type="0x8F700007" res_client_receive="true" comment="取千层塔某道的奖励">
		<req>
			<property name="playerId" type="long" comment="玩家ID" />
			<property name="daoIndex" type="int" comment="道的下标，从0开始" />
		</req>
		<res>
			<object-property name="rewards" type="RewardMsg[]" comment="奖励">
				<property name="cengIndex" type="int" comment="层数 0 开始" />
				<property name="rewardid" type="long[]" comment="奖励EntityID" />
				<property name="nums" type="int[]" comment="数目" />
			</object-property>
		</res>
	</prototype>

	<prototype res_name="QIANCHENGTA_MANUAL_OVER_RES" res_type="0x8F700010" res_client_receive="true" comment="手动爬塔胜利后">
		<res>
			<property name="daoIndex" type="int" comment="道的下标，从0开始" />
			<property name="daoName" type="String" encoding="UTF-8" comment="道的名字" />
			<property name="cengMsg" type="String" encoding="UTF-8" comment="信息" />
			<property name="rewardsExp" type="int" comment="奖励经验" />
			<object-property name="rewards" type="RewardMsg" comment="奖励">
				<property name="cengIndex" type="int" comment="层数 0 开始" />
				<property name="rewardid" type="long[]" comment="奖励EntityID" />
				<property name="nums" type="int[]" comment="数目" />
			</object-property>
		</res>
	</prototype>

	<prototype res_name="QIANCHENGTA_MANUAL_MSG_RES" res_type="0x8F700011" res_client_receive="true" comment="塔的说明信息">
		<res>
			<property name="daoIndex" type="int" comment="道的下标，从0开始" />
			<property name="daoName" type="String" encoding="UTF-8" comment="道的名字" />
			<property name="cengIndex" type="int" comment="层数 0 开始" />
			<property name="cengMsg" type="String" encoding="UTF-8" comment="信息" />
		</res>
	</prototype>

	<prototype req_name="QIANCHENGTA_MANUAL_START_REQ" req_type="0x0F700012" req_client_send="true" res_name="QIANCHENGTA_MANUAL_START_RES"
		res_type="0x8F700012" res_client_receive="true" comment="手动爬塔正式开始，开始刷怪">
		<req>
		</req>
		<res>
			<property name="startTime" type="int" comment="几毫秒后开始" />
			<property name="cengTime" type="long" comment="倒计时时长" />
		</res>
	</prototype>

	<prototype res_name="QIANCHENGTA_MANUAL_FAIL_RES" res_type="0x8F700013" res_client_receive="true" coment="手动爬塔失败">
		<res>
			<property name="daoIndex" type="int" comment="道的下标，从0开始" />
			<property name="daoName" type="String" encoding="UTF-8" comment="道的名字" />
			<property name="cengIndex" type="int" comment="层数 0 开始" />
			<property name="shibaiMsg" type="String" encoding="UTF-8" comment="失败说明" />
		</res>
	</prototype>
	<prototype req_name="QIANCHENGTA_MANUAL_BACKHOME_REQ" req_type="0x8F700014" req_client_send="true" coment="手动爬塔传送回原来地点">
		<req></req>
	</prototype>

	<!-- 千层塔相关的协议 结束 -->
	
	<!-- 新的千层塔相关的协议 开始 -->
	
	<!-- 打开千层塔的界面，客户端收到此协议后应该打开界面 -->
	<prototype req_name="NEWQIANCENGTA_OPEN_INFO_REQ" req_type="0x0F710001" req_client_receive="true" comment="通知客户端打开千层塔">
		<req>
			<property name="nanduType" type="int" comment="难度Type 0是普通 1是困难 2是深渊" />
			<property name="canAuto" type="boolean" comment="是否可以自动爬塔" />
			<property name="daoOpens" type="boolean[]" comment="六道开启情况 长度为6" />
			<property name="daoIndex" type="int" comment="当前道的下标，从0开始" />
			<property name="daoName" type="String" encoding="UTF-8" comment="道的名字" />
			<property name="cengIndex" type="int" comment="要进入的道里面的层，从0开始" />
			<property name="maxCeng" type="int" comment="此道最多多少层" />
			<property name="hiddenCengOpen" type="boolean" comment="隐藏层是否开启" />
			<property name="maxReachCengIndex" type="int" comment="此用户在本道里历史到达的最高层，开始为-1" />
			<property name="currentMonsters" type="String[]" encoding="UTF-8" comment="要进入层的怪物信息" />
			<property name="cengRewardIDs" type="long[]" comment="本层奖励" />
			<property name="totalFlushTimes" type="int" comment="今日已刷新次数" />
			<property name="freeFlushTimesEveryDay" type="int" comment="今日可免费刷新次数，totalFlushTimes>=freeFlushTimesEveryDay标识免费次数用完" />
			<property name="maxFlushTimesEveryDay" type="int" comment="今日最大刷新次数" />
			<property name="costSilver" type="long" comment="付费刷新，每次扣多少钱，单位为文" />
			<property name="isInAutoPata" type="boolean" comment="是否正在自动爬塔" />
			<property name="hasRewards" type="boolean" comment="本道是否有奖励为领取" />
			<property name="rewardEntityIDs" type="long[]" comment="本道奖励tempEntityID" />
			<property name="firstRewardIDs" type="long[]" comment="本道首次奖励IDs" />
			<property name="firstRewardNums" type="int[]" comment="本道首次奖励Nums" />
			<property name="firstIsGet" type="boolean" comment="本道首次奖励是否领取" />
		</req>
	</prototype>

	<!-- 客户端主动请求更新界面信息点击塔的道的时候发，此协议的响应是NEWQIANCENGTA_OPEN_INFO_REQ -->
	<prototype req_name="NEWQIANCENGTA_QUERY_INFO_REQ" req_type="0x0F710002" req_client_send="true" comment="客户端主动请求更新界面信息">
		<req>
			<property name="playerId" type="long" comment="玩家ID" />
			<property name="nanduType" type="int" comment="难度Type 0是普通 1是困难 2是深渊" />
			<property name="daoIndex" type="int" comment="道的下标，从0开始" />
		</req>
	</prototype>
	
	<!-- 刷新，如果成功，客户端会收到QIANCENGTA_OPEN_INFO_REQ -->
	<prototype req_name="NEWQIANCENGTA_FLUSH_REQ" req_type="0x0F710003" req_client_send="true" comment="刷新">
		<req>
			<property name="playerId" type="long" comment="玩家ID" />
			<property name="nanduType" type="int" comment="难度Type 0是普通 1是困难 2是深渊" />
			<property name="daoIndex" type="int" comment="道的下标，从0开始" />
		</req>
	</prototype>
	
	<!-- 自动爬塔，如果成功，客户端会收到NEWQIANCENGTA_OPEN_INFO_REQ -->
	<prototype req_name="NEWQIANCENGTA_AUTO_PATA_REQ" req_type="0x0F710004" res_name="NEWQIANCENGTA_AUTO_PATA_RES" res_type="0x8F710004"
		req_client_send="true" res_client_receive="true" comment="自动爬塔">
		<req>
			<property name="playerId" type="long" comment="玩家ID" />
			<property name="nanduType" type="int" comment="难度Type 0是普通 1是困难 2是深渊" />
			<property name="daoIndex" type="int" comment="道的下标，从0开始" />
			<property name="action" type="int" comment="1标识自动爬塔，2标识取消自动爬塔" />
		</req>
		<res>
			<property name="nanduType" type="int" comment="难度Type 0是普通 1是困难 2是深渊" />
			<property name="action" type="int" comment="1标识自动爬塔，2标识取消自动爬塔" />
			<property name="result" type="int" comment="0成功，其他错误" />
			<property name="resultString" type="String" encoding="UTF-8" comment="错误原因" />
		</res>
	</prototype>
	
	<!-- 挑战爬塔，如果成功，客户端会收到跳地图的协议 -->
	<prototype req_name="NEWQIANCENGTA_MANUAL_PATA_REQ" req_type="0x0F710005" req_client_send="true" comment="挑战">
		<req>
			<property name="playerId" type="long" comment="玩家ID" />
			<property name="nanduType" type="int" comment="难度Type 0是普通 1是困难 2是深渊" />
			<property name="daoIndex" type="int" comment="道的下标，从0开始 " />
			<property name="cengIndex" type="int" comment="挑战的层，从0开始  -1未隐藏层" />
		</req>
	</prototype>
	
	<!-- 领取成功后 客户端会收到 NEWQIANCENGTA_REWARD_INFO_RES -->
	<prototype req_name="NEWQIANCENGTA_GET_REWARD_REQ" req_type="0x0F710006" req_client_send="true" comment="领取奖励">
		<req>
			<property name="playerId" type="long" comment="玩家ID" />
			<property name="nanduType" type="int" comment="难度Type 0是普通 1是困难 2是深渊" />
			<property name="isOver" type="boolean" comment="是否是手动爬塔的领取，如果是就不会返回NEWQIANCENGTA_REWARD_INFO_REQ" />
			<property name="daoIndex" type="int" comment="道的下标，从0开始" />
			<property name="cengIndex" type="int" comment="层的下表， 从0开始， -100为全部领取" />
		</req>
	</prototype>
	
	<prototype req_name="NEWQIANCENGTA_REWARD_INFO_REQ" req_type="0x0F710007" req_client_send="true" res_name="NEWQIANCENGTA_REWARD_INFO_RES"
		res_type="0x8F710007" res_client_receive="true" comment="取千层塔某道的奖励">
		<req>
			<property name="playerId" type="long" comment="玩家ID" />
			<property name="nanduType" type="int" comment="难度Type 0是普通 1是困难 2是深渊" />
			<property name="daoIndex" type="int" comment="道的下标，从0开始" />
		</req>
		<res>
			<property name="nanduType" type="int" comment="难度Type 0是普通 1是困难 2是深渊" />
			<object-property name="rewards" type="RewardMsg[]" comment="奖励">
				<property name="cengIndex" type="int" comment="层数 0 开始" />
				<property name="rewardid" type="long[]" comment="奖励EntityID" />
				<property name="nums" type="int[]" comment="数目" />
			</object-property>
		</res>
	</prototype>
	
	<prototype res_name="NEWQIANCHENGTA_MANUAL_OVER_RES" res_type="0x8F710010" res_client_receive="true" comment="手动爬塔胜利后">
		<res>
			<property name="nanduType" type="int" comment="难度Type 0是普通 1是困难 2是深渊" />
			<property name="daoIndex" type="int" comment="道的下标，从0开始" />
			<property name="daoName" type="String" encoding="UTF-8" comment="道的名字" />
			<property name="cengMsg" type="String" encoding="UTF-8" comment="信息" />
			<property name="rewardsExp" type="int" comment="奖励经验" />
			<object-property name="rewards" type="RewardMsg" comment="奖励">
				<property name="cengIndex" type="int" comment="层数 0 开始" />
				<property name="rewardid" type="long[]" comment="奖励EntityID" />
				<property name="nums" type="int[]" comment="数目" />
			</object-property>
		</res>
	</prototype>
	
	<prototype res_name="NEWQIANCHENGTA_MANUAL_MSG_RES" res_type="0x8F710011" res_client_receive="true" comment="塔的说明信息">
		<res>
			<property name="nanduType" type="int" comment="难度Type 0是普通 1是困难 2是深渊" />
			<property name="daoIndex" type="int" comment="道的下标，从0开始" />
			<property name="daoName" type="String" encoding="UTF-8" comment="道的名字" />
			<property name="cengIndex" type="int" comment="层数 0 开始" />
			<property name="cengMsg" type="String" encoding="UTF-8" comment="信息" />
		</res>
	</prototype>

	<prototype res_name="NEWQIANCHENGTA_MANUAL_FAIL_RES" res_type="0x8F710013" res_client_receive="true" comment="手动爬塔失败">
		<res>
			<property name="nanduType" type="int" comment="难度Type 0是普通 1是困难 2是深渊" />
			<property name="daoIndex" type="int" comment="道的下标，从0开始" />
			<property name="daoName" type="String" encoding="UTF-8" comment="道的名字" />
			<property name="cengIndex" type="int" comment="层数 0 开始" />
			<property name="shibaiMsg" type="String" encoding="UTF-8" comment="失败说明" />
		</res>
	</prototype>
	
	<prototype req_name="NEWQIANCENGTA_GET_FIRST_REWARD_REQ" req_type="0x0F710014" req_client_send="true"
		res_name="NEWQIANCENGTA_GET_FIRST_REWARD_RES" res_type="0x0F710015" res_client_receive="true" comment="领取首次通道奖励">
		<req>
			<property name="nanduType" type="int" comment="难度Type 0是普通 1是困难 2是深渊" />
			<property name="daoIndex" type="int" comment="道的下标，从0开始" />
		</req>
		<res>
			<property name="result" type="int" comment="0成功，其他错误" />
			<property name="resultString" type="String" encoding="UTF-8" comment="错误原因" />
		</res>
	</prototype>
	
	<!-- 新的千层塔相关的协议 结束 -->
	
	<prototype req_name="TRY_CLIENT_MSG_A_REQ" req_type="0x00FFA001" req_client_send="true" comment="Android协议">
		<req>
			<property name="msgs" type="String[]" comment="信息"/>
		</req>
	</prototype>
	
	<prototype req_name="TRY_CLIENT_MSG_I_REQ" req_type="0x00FFA002" req_client_send="true" comment="IOS协议">
		<req>
			<property name="msgs" type="String[]" comment="信息"/>
		</req>
	</prototype>
	
	<prototype req_name="TRY_CLIENT_MSG_W_REQ" req_type="0x00FFA005" req_client_send="true" comment="Win8协议">
		<req>
			<property name="msgs" type="String[]" comment="信息"/>
		</req>
	</prototype>
	
	<prototype req_name="CLIENT_MSG_A_REQ" req_type="0x00FFA003" req_client_send="true"
		res_name="CLIENT_MSG_A_RES" res_type="0x70FFA003" res_client_receive="true" comment="A信息">
		<req>
			<property name="ClientMsgs" type="String[]" comment="信息"/>
		</req>
		<res>
			<property name="serverMsgs" type="String[]" comment="信息"/>
		</res>
	</prototype>
	
	<prototype req_name="CLIENT_MSG_I_REQ" req_type="0x00FFA004" req_client_send="true"
		res_name="CLIENT_MSG_I_RES" res_type="0x70FFA004" res_client_receive="true" comment="I信息">
		<req>
			<property name="ClientMsgs" type="String[]" comment="信息"/>
		</req>
		<res>
			<property name="serverMsgs" type="String[]" comment="信息"/>
		</res>
	</prototype>
	
	<prototype req_name="CLIENT_MSG_W_REQ" req_type="0x00FFA006" req_client_send="true"
		res_name="CLIENT_MSG_W_RES" res_type="0x70FFA006" res_client_receive="true" comment="Win8信息">
		<req>
			<property name="ClientMsgs" type="String[]" comment="信息"/>
		</req>
		<res>
			<property name="serverMsgs" type="String[]" comment="信息"/>
		</res>
	</prototype>

	<!-- 公告 -->
	<prototype req_name="GET_EFFECT_NOTICE_REQ" req_type="0x0F700008" req_client_send="true" res_name="EFFECT_NOTICE_RES" res_type="0x8F700008"
		res_client_receive="true" comment="查询公告，登陆返回公告，弹出临时公告">
		<req>
		</req>
		<res>
			<object-property name="notice" type="Notice">
				<property name="noticeType" type="int" comment="临时通知0   循环通知1" />
				<property name="noticeName" type="String" encoding="UTF-8" comment="公告名称" />
				<property name="content" type="String" encoding="UTF-8" comment="公告内容，会有颜色白绿蓝紫橙" />
				<property name="havaBindSivler" type="boolean" comment="havaBindSivler" />
				<property name="bindSivlerNum" type="int" comment="绑银数量" />
			</object-property>
		</res>
	</prototype>

	<prototype req_name="OBTAIN_NOTICE_SIVLER_REQ" req_type="0x0F700009" req_client_send="true" res_name="OBTAIN_NOTICE_SIVLER_RES" res_type="0x8F700009"
		res_client_receive="true" comment="领取公告的绑银">
		<req>
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="ACTIVITY_INFO_RES" req_type="0x0F70000A" req_client_receive="true" comment="活动信息面板">
		<req>
			<property name="title" type="String" encoding="UTF-8" comment="标题" />
			<property name="icons" type="String[]" encoding="UTF-8" comment="图标" />
			<property name="names" type="String[]" encoding="UTF-8" comment="名字" />
			<property name="notices" type="String[]" encoding="UTF-8" comment="内容" />
		</req>
	</prototype>

	<prototype req_name="GET_BILLBOARD_MENUS_REQ" req_type="0x0070001A" req_client_send="true" res_name="GET_BILLBOARD_MENUS_RES" res_type="0x0F70001A"
		res_client_receive="true" comment="打开排行榜">
		<req>
		</req>
		<res>
			<object-property name="billboardMenus" type="BillboardMenu[]" comment="排行榜菜单">
				<property name="menuName" type="String" encoding="UTF-8" comment="主菜单" />
				<property name="subMenus" type="String[]" encoding="UTF-8" comment="子菜单" />
				<property name="menuMaxNum" type="int" comment="主菜单最大长度" />
				<property name="subMenuMaxNum" type="int" comment="子菜单最大长度" />
			</object-property>
		</res>
	</prototype>

	<prototype req_name="GET_ONE_BILLBOARD_REQ" req_type="0x0070002A" req_client_send="true" res_name="GET_ONE_BILLBOARD_RES" res_type="0x0F70002A"
		res_client_receive="true" comment="得到指定排行榜数据">
		<req>
			<property name="menu" type="String" encoding="UTF-8" comment="主菜单" />
			<property name="subMenu" type="String" encoding="UTF-8" comment="子菜单" />
		</req>
		<res>
			<property name="titles" type="String[]" encoding="UTF-8" comment="表头" />
			<property name="titleNum" type="int[]" comment="表头每个最大长度" />
			<object-property name="billboardDates" type="BillboardDate[]" comment="榜单数据">
				<property name="type" type="int" comment="类型玩家,宠物,家族" />
				<property name="dateId" type="long" comment="玩家,宠物,家族id" />
				<property name="dateValues" type="String[]" encoding="UTF-8" comment="具体的值" />
			</object-property>
			<property name="description" type="String" encoding="UTF-8" comment="描述" />
			<property name="selfRank" type="String" encoding="UTF-8" comment="自己排名" />
		</res>
	</prototype>

	<prototype req_name="REQUEST_ACHIEVEMENT_LIST_REQ" req_type="0x0070002B" req_client_send="true" res_name="REQUEST_ACHIEVEMENT_LIST_RES"
		res_type="0x0F70002B" res_client_receive="true" comment="查询成就分类列表">
		<req></req>
		<res>
			<property name="totalAchievement" type="int" comment="总成就数" />
			<property name="doneAchievement" type="int" comment="已达成成就数" />
			<property name="achievementDegree" type="long" comment="成就点数" />

			<object-property name="leftMenus" type="LeftMenu[]" comment="成就左侧列表">
				<property name="mainName" type="String" encoding="UTF-8" comment="一级菜单名字" />
				<property name="subNames" type="String[]" encoding="UTF-8" comment="二级菜单名字" />
			</object-property>
		</res>
	</prototype>

	<prototype req_name="REQUEST_ACHIEVEMENT_DONE_REQ" req_type="0x0070002C" req_client_send="true" res_name="REQUEST_ACHIEVEMENT_DONE_RES"
		res_type="0x0F70002C" res_client_receive="true" comment="查询某一类成就完成情况">
		<req>
			<property name="mainName" type="String" encoding="UTF-8" comment="主分类" />
			<property name="subName" type="String" encoding="UTF-8" comment="子分类" />
		</req>
		<res>
			<property name="mainName" type="String" encoding="UTF-8" comment="主分类" />
			<property name="subName" type="String" encoding="UTF-8" comment="子分类" />
			<object-property name="achievements" type="Achievement[]" comment="所有成就列表">
				<property name="id" type="int" encoding="UTF-8" comment="ID" />
				<property name="num" type="long" encoding="UTF-8" comment="需要数量" />
				<property name="name" type="String" encoding="UTF-8" comment="名字" />
				<property name="des" type="String" encoding="UTF-8" comment="描述" />
				<property name="fullDes" type="String" encoding="UTF-8" comment="详细描述" />
				<property name="prizeArticle" type="String" encoding="UTF-8" comment="奖励物品名字" />
				<property name="prizeTitle" type="String" encoding="UTF-8" comment="奖励称号" />
				<property name="prizeAchievementNum" type="long" encoding="UTF-8" comment="奖励成就点" />
				<property name="icon" type="String" encoding="UTF-8" comment="icon" />
				<property name="showSchedule" type="boolean" encoding="UTF-8" comment="是否显示进度" />
			</object-property>
			<property name="isDone" type="boolean[]" commnet="是否已经达成了" />
			<property name="hasNum" type="int[]" commnet="已经完成了多少,已达成的,此值无用,用上面成就的值" />
		</res>
	</prototype>
	<prototype req_name="REQUEST_ONE_DONE_ACHIEVEMENT_REQ" req_type="0x0070002D" req_client_send="true" res_name="REQUEST_ONE_DONE_ACHIEVEMENT_RES"
		res_type="0x0F70002D" res_client_receive="true" comment="查询某个人已经完成的成就信息">
		<req>
			<property name="playerId" type="long" commnet="查询的玩家的ID" />
			<property name="achievementId" type="int" commnet="查询的成就id,成就ID,不是实体ID" />
		</req>
		<res>
			<property name="playerId" type="long" commnet="查询的玩家的ID" />
			<property name="achievementId" type="int" commnet="查询的成就id,成就ID,不是实体ID" />
			<property name="doneTime" type="String" encoding="UTF-8" commnet="完成成就时间,转化了格式的时间" />
			<object-property name="achievement" type="Achievement" comment="查询的成就">
				<property name="id" type="int" encoding="UTF-8" comment="ID" />
				<property name="num" type="long" encoding="UTF-8" comment="需要数量" />
				<property name="name" type="String" encoding="UTF-8" comment="名字" />
				<property name="des" type="String" encoding="UTF-8" comment="描述" />
				<property name="fullDes" type="String" encoding="UTF-8" comment="详细描述" />
				<property name="prizeArticle" type="String" encoding="UTF-8" comment="奖励物品名字" />
				<property name="prizeTitle" type="String" encoding="UTF-8" comment="奖励称号" />
				<property name="prizeAchievementNum" type="long" encoding="UTF-8" comment="奖励成就点" />
				<property name="icon" type="String" encoding="UTF-8" comment="icon" />
				<property name="showSchedule" type="boolean" encoding="UTF-8" comment="是否显示进度" />
			</object-property>
		</res>
	</prototype>

	<prototype req_name="NOTICE_CLIENT_DONE_ACHIEVEMENT_REQ" req_type="0x0070002E" req_client_receive="true" comment="通知角色达成成就">
		<req>
			<object-property name="achievement" type="Achievement" comment="查询的成就">
				<property name="id" type="int" encoding="UTF-8" comment="ID" />
				<property name="num" type="long" encoding="UTF-8" comment="需要数量" />
				<property name="name" type="String" encoding="UTF-8" comment="名字" />
				<property name="des" type="String" encoding="UTF-8" comment="描述" />
				<property name="fullDes" type="String" encoding="UTF-8" comment="详细描述" />
				<property name="prizeArticle" type="String" encoding="UTF-8" comment="奖励物品名字" />
				<property name="prizeTitle" type="String" encoding="UTF-8" comment="奖励称号" />
				<property name="prizeAchievementNum" type="long" encoding="UTF-8" comment="奖励成就点" />
				<property name="icon" type="String" encoding="UTF-8" comment="icon" />
				<property name="showSchedule" type="boolean" encoding="UTF-8" comment="是否显示进度" />
			</object-property>
		</req>
	</prototype>

	<prototype req_name="VIP_REQ" req_type="0x00800001" req_client_send="true" res_name="VIP_RES" res_type="0x70800001" res_client_receive="true"
		comment="查询VIP信息">
		<req>
		</req>
		<res>
			<object-property name="vipDatas" type="VIPData[]" comment="vip信息">
				<property name="vipLevel" type="int" comment="vip级别" />
				<property name="needCost" type="int" comment="需要花费" />
				<property name="vipIcon" type="String" encoding="UTF-8" comment="" />
				<property name="articleId" type="long" comment="每天可以领取的宝箱Id" />
				<property name="description" type="String" encoding="UTF-8" comment="详细描述" />
			</object-property>
			<property name="yinziPerRMB" type="int" commnet="每分钱对应的银子" />
			<property name="vipRewardFlag" type="boolean" commnet="今天是否领取过奖励" />
		</res>
	</prototype>
	
	<prototype req_name="VIP_2_REQ" req_type="0x00F0EF69" req_client_send="true" res_name="VIP_2_RES" res_type="0x70F0EF69" res_client_receive="true"
		comment="查询VIP信息">
		<req>
		</req>
		<res>
			<object-property name="vipDatas" type="VIPData2[]" comment="vip信息">
				<property name="vipLevel" type="int" comment="vip级别" />
				<property name="needCost" type="long" comment="需要花费" />
				<property name="vipIcon" type="String" encoding="UTF-8" comment="" />
				<property name="articleId" type="long" comment="每天可以领取的宝箱Id" />
				<property name="description" type="String" encoding="UTF-8" comment="详细描述" />
			</object-property>
			<property name="yinziPerRMB" type="int" commnet="每分钱对应的银子" />
			<property name="vipRewardFlag" type="boolean" commnet="今天是否领取过奖励" />
		</res>
	</prototype>

	<prototype req_name="GET_VIP_REWARD_REQ" req_type="0x00800002" req_client_send="true" comment="获得vip奖励">
		<req>
		</req>
	</prototype>
	<prototype req_name="VIP_PULL_FRIEND_REQ" req_type="0x00800003"
		 req_client_send="true" comment="VIP拉好友传送">
		<req>
			<property name="targetId" type="long" comment="目标玩家Id" />
		</req>
	</prototype>


	<!-- 国战 -->
	<prototype req_name="GUOZHAN_ORDERS_REQ" req_type="0x00EE0001" req_client_send="true" res_name="GUOZHAN_ORDERS_RES" res_type="0x70EE0001"
		res_client_receive="true" comment="获得所有国战命令，包括预设的三条">
		<req>
		</req>
		<res>
			<property name="icon" type="String[]" encoding="UTF-8" commnet="使用的图标" />
			<property name="name" type="String[]" encoding="UTF-8" commnet="命令名称" />
			<property name="message" type="String[]" encoding="UTF-8" commnet="命令的内容" />
			<property name="removable" type="boolean[]" commnet="是否可以删除" />
		</res>
	</prototype>

	<prototype req_name="GUOZHAN_ADD_ORDER_REQ" req_type="0x00EE0002" req_client_send="true" res_name="GUOZHAN_ADD_ORDER_RES" res_type="0x70EE0002"
		res_client_receive="true" comment="添加一条命令，返回添加后的命令列表">
		<req>
			<property name="name" type="String" encoding="UTF-8" commnet="命令名称" />
			<property name="message" type="String" encoding="UTF-8" commnet="命令的内容" />
		</req>
		<res>
			<property name="icon" type="String[]" encoding="UTF-8" commnet="使用的图标" />
			<property name="name" type="String[]" encoding="UTF-8" commnet="命令名称" />
			<property name="message" type="String[]" encoding="UTF-8" commnet="命令的内容" />
			<property name="removable" type="boolean[]" commnet="是否可以删除" />
		</res>
	</prototype>

	<prototype req_name="GUOZHAN_REMOVE_ORDER_REQ" req_type="0x00EE0003" req_client_send="true" res_name="GUOZHAN_REMOVE_ORDER_RES" res_type="0x70EE0003"
		res_client_receive="true" comment="删除一条命令，返回删除后的列表">
		<req>
			<property name="index" type="int" commnet="删除的下标" />
		</req>
		<res>
			<property name="icon" type="String[]" encoding="UTF-8" commnet="使用的图标" />
			<property name="name" type="String[]" encoding="UTF-8" commnet="命令名称" />
			<property name="message" type="String[]" encoding="UTF-8" commnet="命令的内容" />
			<property name="removable" type="boolean[]" commnet="是否可以删除" />
		</res>
	</prototype>

	<prototype req_name="GUOZHAN_CONTROL_PANNEL_REQ" req_type="0x00EE0004" req_client_send="true" res_name="GUOZHAN_CONTROL_PANNEL_RES"
		res_type="0x70EE0004" res_client_receive="true" comment="国战的主控制面板，不同的角色具有不同的权限">
		<req>
		</req>
		<res>
			<property name="description" type="String" encoding="UTF-8" commnet="顶部描述文字" />
			<property name="bossName" type="String[]" encoding="UTF-8" commnet="boss的名字" />
			<property name="bossIcon" type="String[]" encoding="UTF-8" commnet="boss的icon" />
			<property name="bossHP" type="int[]" commnet="boss的生命剩余量，百分比" />
			<property name="bossCanAddHP" type="boolean[]" commnet="是否可对boss治疗" />
			<property name="bossAddHPLeftTimes" type="int[]" commnet="给boss加血剩余次数" />
			<property name="bossAddHPTotalTimes" type="int[]" commnet="给boss加血总次数" />
			<property name="leftTime" type="int" commnet="离国战结束剩余的时间，秒" />
			<property name="canDelayTime" type="boolean" commnet="是否可以延时" />
			<property name="delayLeftTimes" type="int" commnet="延时剩余次数" />
			<property name="delayTotalTimes" type="int" commnet="延时总次数" />
			<property name="canPullPlayer" type="boolean" commnet="是否可以拉人" />
			<property name="pullPlayerLeftTimes" type="int" commnet="拉人剩余次数" />
			<property name="pullPlayerTotalTimes" type="int" commnet="拉人总次数" />
			<property name="bornPointName" type="String[]" encoding="UTF-8" commnet="复活点名称" />
			<property name="bornPointBelong" type="String[]" encoding="UTF-8" commnet="复活点归属" />
			<property name="orderIcon" type="String[]" encoding="UTF-8" commnet="命令使用的图标，国王才有" />
			<property name="orderName" type="String[]" encoding="UTF-8" commnet="命令名称，国王才有" />
			<property name="pubOrderName" type="String[]" encoding="UTF-8" commnet="发布的命令名称" />
			<property name="pubOrderMessage" type="String[]" encoding="UTF-8" commnet="发布的命令内容" />
			<property name="guozhanResource" type="long" commnet="剩余的国战资源" />
		</res>
	</prototype>

	<prototype req_name="GUOZHAN_MAKE_ORDER_REQ" req_type="0x00EE0005" req_client_send="true" res_client_receive="false" comment="国王发布命令">
		<req>
			<property name="index" type="int" commnet="命令的下标" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="IOS_CLIENT_MSG_REQ" req_type="0x00FFB005" req_client_send="true" comment="IOS协议">
		<req>
			<property name="msgs" type="String[]" comment="信息"/>
		</req>
	</prototype>

	<prototype req_name="GUOZHAN_CURE_BOSS_REQ" req_type="0x00EE0006" req_client_send="true" res_name="GUOZHAN_CURE_BOSS_RES" res_type="0x70EE0006"
		res_client_receive="true" comment="治疗boss">
		<req>
			<property name="index" type="int" commnet="治疗的boss下标" />
		</req>
		<res>
			<property name="bossHP" type="int" commnet="治疗后该boss的生命剩余量，百分比" />
		</res>
	</prototype>

	<prototype req_name="GUOZHAN_DEALY_REQ" req_type="0x00EE0007" req_client_send="true" res_name="GUOZHAN_DEALY_RES" res_type="0x70EE0007"
		res_client_receive="true" comment="国战延时">
		<req>
		</req>
		<res>
			<property name="leftTime" type="int" commnet="延时后剩余的时间，秒" />
		</res>
	</prototype>

	<prototype req_name="GUOZHAN_PULL_PLAYER_REQ" req_type="0x00EE0008" req_client_send="true" res_client_receive="false" comment="国战拉人">
		<req>
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="GUOZHAN_INFO_REQ" req_type="0x00EE0009" req_client_receive="true" comment="国战信息">
		<req>
			<property name="info" type="String" encoding="UTF-8" commnet="信息文字" />
		</req>
	</prototype>

	<prototype req_name="GUOZHAN_HISTORY_REQ" req_type="0x00EE0010" req_client_send="true" res_name="GUOZHAN_HISTORY_RES" res_type="0x70EE0010"
		res_client_receive="true" comment="国战历史">
		<req>
		</req>
		<res>
			<property name="historyId" type="long[]" commnet="国战历史的id，通过此查询详情" />
			<property name="guozhanTime" type="String[]" encoding="UTF-8" commnet="国战时间" />
			<property name="attackCountry" type="String[]" encoding="UTF-8" commnet="宣战方" />
			<property name="defendCountry" type="String[]" encoding="UTF-8" commnet="防守方" />
			<property name="result" type="String[]" encoding="UTF-8" commnet="战果" />
		</res>
	</prototype>

	<prototype req_name="GUOZHAN_LIST_REQ" req_type="0x00EE0011" req_client_send="true" res_name="GUOZHAN_LIST_RES" res_type="0x70EE0011"
		res_client_receive="true" comment="国战查询">
		<req>
		</req>
		<res>
			<property name="guozhanTime" type="String[]" encoding="UTF-8" commnet="国战时间" />
			<property name="attackCountry" type="String[]" encoding="UTF-8" commnet="宣战方" />
			<property name="defendCountry" type="String[]" encoding="UTF-8" commnet="防守方" />
		</res>
	</prototype>

	<prototype req_name="GUOZHAN_STAT_REQ" req_type="0x00EE0012" req_client_send="true" res_name="GUOZHAN_STAT_RES" res_type="0x70EE0012"
		res_client_receive="true" comment="国战统计">
		<req>
		</req>
		<res>
			<property name="country" type="String[]" encoding="UTF-8" commnet="国家" />
			<property name="kingName" type="String[]" encoding="UTF-8" commnet="国王名字" />
			<property name="winNum" type="int[]" commnet="国战胜利次数" />
			<property name="loseNum" type="int[]" commnet="国战失败次数" />
		</res>
	</prototype>

	<prototype req_name="GUOZHAN_RESULT_REQ" req_type="0x00EE0013" req_client_receive="true" comment="国战结果">
		<req>
			<property name="result" type="String" encoding="UTF-8" commnet="结果描述" />
			<property name="winCountry" type="String" encoding="UTF-8" commnet="获胜的国家" />
			<property name="attackCountry" type="String" encoding="UTF-8" commnet="进攻国家" />
			<property name="attackName" type="String[]" encoding="UTF-8" commnet="进攻方玩家" />
			<property name="attackKillNum" type="int[]" commnet="进攻方斩杀数" />
			<property name="defendCountry" type="String" encoding="UTF-8" commnet="防守国家" />
			<property name="defendName" type="String[]" encoding="UTF-8" commnet="防守方玩家" />
			<property name="defendKillNum" type="int[]" commnet="防守方斩杀数" />
			<property name="damage" type="long" commnet="伤害输出" />
			<property name="killNum" type="int" commnet="击杀数" />
			<property name="gongxun" type="int" commnet="获得功勋值" />
			<property name="exp" type="long" commnet="获得经验数" />
			<property name="attacker" type="boolean" commnet="是否是进攻方" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="GUOZHAN_DETAIL_REQ" req_type="0x00EE0014" req_client_send="true" res_name="GUOZHAN_DETAIL_RES" res_type="0x70EE0014"
		res_client_receive="true" comment="国战详情">
		<req>
			<property name="historyId" type="long" commnet="国战历史id" />
		</req>
		<res>
			<property name="winCountry" type="String" encoding="UTF-8" commnet="获胜的国家" />
			<property name="attackCountry" type="String" encoding="UTF-8" commnet="进攻国家" />
			<property name="attackName" type="String[]" encoding="UTF-8" commnet="进攻方玩家" />
			<property name="attackKillNum" type="int[]" commnet="进攻方斩杀数" />
			<property name="defendCountry" type="String" encoding="UTF-8" commnet="防守国家" />
			<property name="defendName" type="String[]" encoding="UTF-8" commnet="防守方玩家" />
			<property name="defendKillNum" type="int[]" commnet="防守方斩杀数" />
		</res>
	</prototype>

	<prototype req_name="GUOZHAN_MAP_POINT_REQ" req_type="0x00EE0015" req_client_send="true" res_name="GUOZHAN_MAP_POINT_RES" res_type="0x70EE0015"
		res_client_receive="true" comment="查询国战小地图上几个点的信息，对于玩家，两个点如果都被本方占据，则连接为实线，否则虚线；对于玩家，如果点被本方占据，则显示旗子，否则显示x">
		<req>
		</req>
		<res>
			<property name="playerGuozhanType" type="byte" commnet="玩家在国战属于哪一方：0-进攻方， 1-防守方" />
			<property name="canMakeOrder" type="boolean" commnet="是否可以发布命令" />
			<object-property name="mapPoints" type="GuozhanMapPoint[]" comment="国战地图中的点">
				<property name="id" type="int" commnet="点的id" />
				<property name="mapName" type="String" encoding="UTF-8" commnet="点在游戏中地图名称" />
				<property name="name" type="String" encoding="UTF-8" commnet="点的名称" />
				<property name="bigBoss" type="boolean" commnet="是否是大boss" />
				<property name="littleBoss" type="boolean" commnet="是否是小boss" />
				<property name="x" type="int" commnet="点在国战小地图上的坐标x" />
				<property name="y" type="int" commnet="点在国战小地图上的坐标y" />
				<property name="ownerType" type="byte" commnet="当前拥有方：0-进攻方， 1-防守方，进攻方则插旗子" />
				<property name="ownerCountryId" type="byte" commnet="1：昊天，2：无尘， 3：苍月" />
			</object-property>
			<property name="lineAIds" type="int[]" commnet="国战中线路A的点的id，顺序默认为进攻方顺序，防守方为倒序" />
			<property name="lineBIds" type="int[]" commnet="国战中线路B的点的id，顺序默认为进攻方顺序，防守方为倒序" />
			<property name="currentAimId" type="int" commnet="当前本方的目标(命令)点, -1代表当前没有发布小地图命令" />
		</res>
	</prototype>

	<prototype req_name="GUOZHAN_MAP_ORDER_REQ" req_type="0x00EE0016" req_client_send="true" res_name="GUOZHAN_MAP_ORDER_RES" res_type="0x70EE0016"
		res_client_receive="true" comment="国战指挥员在国战小地图上发布命令">
		<req>
			<property name="aimId" type="int" commnet="命令中要进攻或防守的点id" />
		</req>
		<res>
			<property name="result" type="byte" commnet="结果：0-成功， 1-不能进攻或防守被敌对方隔开的点" />
		</res>
	</prototype>

	<prototype req_name="GUOZHAN_MAP_ORDER_MAKED_REQ" req_type="0x00EE0017" req_client_receive="true" comment="通知国战小地图命令发布了">
		<req>
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="GUOZHAN_RETURN_BACK_REQ" req_type="0x00EE0018" req_client_send="true" comment="回到本国边境复活点">
		<req>
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="GUOZHAN_RESULT_NEW_REQ" req_type="0x00EE0019" req_client_receive="true" comment="国战结果(新)">
		<req>
			<property name="result" type="String" encoding="UTF-8" commnet="结果描述" />
			<property name="winCountry" type="String" encoding="UTF-8" commnet="获胜的国家" />
			<property name="attackCountry" type="String" encoding="UTF-8" commnet="进攻国家" />
			<property name="attackName" type="String[]" encoding="UTF-8" commnet="进攻方玩家" />
			<property name="attackKillNum" type="int[]" commnet="进攻方斩杀数" />
			<property name="defendCountry" type="String" encoding="UTF-8" commnet="防守国家" />
			<property name="defendName" type="String[]" encoding="UTF-8" commnet="防守方玩家" />
			<property name="defendKillNum" type="int[]" commnet="防守方斩杀数" />
			<property name="damage" type="long" commnet="伤害输出" />
			<property name="killNum" type="int" commnet="击杀数" />
			<property name="gongxun" type="int" commnet="获得功勋值" />
			<property name="exp" type="long" commnet="获得经验数" />
			<property name="attacker" type="boolean" commnet="是否是进攻方" />
			<property name="npcNames" type="String[]" encoding="UTF-8" commnet="NPC名字" />
			<property name="npcStatus" type="int[]" commnet="NPC状态, 0-存活(占领)， 1-被击杀(未战领)" />
		</req>
		<res>
		</res>
	</prototype>

	<prototype req_name="GUOZHAN_CONTROL_PANNEL_NEW_REQ" req_type="0x00EE0020" req_client_send="true" res_name="GUOZHAN_CONTROL_PANNEL_NEW_RES"
		res_type="0x70EE0020" res_client_receive="true" comment="国战的主控制面板，不同的角色具有不同的权限(新)">
		<req>
		</req>
		<res>
			<property name="description" type="String" encoding="UTF-8" commnet="顶部描述文字" />
			<property name="bossName" type="String[]" encoding="UTF-8" commnet="boss的名字" />
			<property name="bossIcon" type="String[]" encoding="UTF-8" commnet="boss的icon" />
			<property name="bossHP" type="int[]" commnet="boss的生命剩余量，百分比" />
			<property name="bossStatus" type="int[]" commnet="Boss状态，0-未占领， 1-占领, 2-未击杀, 3-已击杀" />
			<property name="bossCanAddHP" type="boolean[]" commnet="是否可对boss治疗" />
			<property name="bossAddHPLeftTimes" type="int[]" commnet="给boss加血剩余次数" />
			<property name="bossAddHPTotalTimes" type="int[]" commnet="给boss加血总次数" />
			<property name="leftTime" type="int" commnet="离国战结束剩余的时间，秒" />
			<property name="canDelayTime" type="boolean" commnet="是否可以延时" />
			<property name="delayLeftTimes" type="int" commnet="延时剩余次数" />
			<property name="delayTotalTimes" type="int" commnet="延时总次数" />
			<property name="canPullPlayer" type="boolean" commnet="是否可以拉人" />
			<property name="pullPlayerLeftTimes" type="int" commnet="拉人剩余次数" />
			<property name="pullPlayerTotalTimes" type="int" commnet="拉人总次数" />
			<property name="bornPointName" type="String[]" encoding="UTF-8" commnet="复活点名称" />
			<property name="bornPointBelong" type="String[]" encoding="UTF-8" commnet="复活点归属" />
			<property name="orderIcon" type="String[]" encoding="UTF-8" commnet="命令使用的图标，国王才有" />
			<property name="orderName" type="String[]" encoding="UTF-8" commnet="命令名称，国王才有" />
			<property name="pubOrderName" type="String[]" encoding="UTF-8" commnet="发布的命令名称" />
			<property name="pubOrderMessage" type="String[]" encoding="UTF-8" commnet="发布的命令内容" />
			<property name="guozhanResource" type="long" commnet="剩余的国战资源" />
		</res>
	</prototype>

	<prototype req_name="ACTIVITY_LIST_REQ" res_name="ACTIVITY_LIST_RES" req_type="0x00EEE001" res_type="0x70EEE001" req_client_send="true"
		res_client_receive="true" comment="活动列表">
		<req></req>
		<res>
			<object-property name="activityIntroduces" type="ActivityIntroduce[]" comment="活动介绍">
				<property name="id" type="int" encoding="UTF-8" comment="ID" />
				<property name="icon" type="String" encoding="UTF-8" comment="图标" />
				<property name="showType" type="int" encoding="UTF-8" comment="显示类型" />
				<property name="openTimeDistance" type="String" encoding="UTF-8" comment="时间间隔" />
				<property name="name" type="String" encoding="UTF-8" comment="名字" />
				<property name="startGame" type="String" encoding="UTF-8" comment="地图名(资源)" />
				<property name="startGameCnName" type="String" encoding="UTF-8" comment="地图中文名" />
				<property name="startNpc" type="String" encoding="UTF-8" comment="npc名字" />
				<property name="startX" type="int" encoding="UTF-8" comment="X坐标" />
				<property name="startY" type="int" encoding="UTF-8" comment="Y坐标" />
				<property name="des" type="String" encoding="UTF-8" comment="描述" />
				<property name="activityAdd" type="int" encoding="UTF-8" comment="增加活跃度" />
				<property name="lables" type="String[]" encoding="UTF-8" comment="所属的列表" />
				<property name="levelLimit" type="int" encoding="UTF-8" comment="等级限制.等级小于这个等级不寻路" />
				<property name="star" type="int" encoding="UTF-8" comment="星" />
				<property name="activityType" type="int" encoding="UTF-8" comment="活动类型,0:日常，1:限时" />
				<property name="activityState" type="int" encoding="UTF-8" comment="活动状态,0:什么都显示,1:已完成,2:进行中,3:即将开启" />
				<property name="doType" type="int" encoding="UTF-8" comment="执行类型,0:默认是客户端寻路,1:服务端操作" />
			</object-property>
			<property name="showColor" type="int[]" comment="显示的颜色" />
			<property name="doneDes" type="String[]" encoding="UTF-8" comment="完成度显示" />
		</res>
	</prototype>

	<prototype req_name="GET_PLAYERTITLES_REQ" res_name="GET_PLAYERTITLES_RES" req_type="0x00EEE002" res_type="0x70EEE002" req_client_send="true"
		res_client_receive="true" comment="查看个人称号">
		<req>
		</req>
		<res>
			<object-property name="playerTitles" type="PlayerTitle[]" comment="个人称号">

				<property name="titleType" type="int" comment="称号类型" />
				<property name="titleName" type="String" encoding="UTF-8" comment="称号名称" />
				<property name="color" type="int" comment="称号颜色" />

			</object-property>
		</res>
	</prototype>

	<prototype req_name="SETDEFAULT_PLAYERTITLE_REQ" req_type="0x00EEE003" req_client_send="true" comment="设置个人默认称号">
		<req>
			<property name="titleType" type="int" comment="称号类型" />
		</req>
	</prototype>

	<prototype res_name="CREATE_SPECIALEQUIPMENT_BROADCAST_RES" res_type="0x70EEE004" res_client_receive="true" comment="生成混沌万灵榜广播">
		<res>
			<property name="equipmentName" type="String" encoding="UTF-8" comment="装备名称" />
			<property name="equpmentShowType" type="int" comment="装备类型" />
			<property name="billType" type="int" comment="榜单类型(0天榜,1地榜)" />
			<property name="rank" type="int" comment="第几名" />
		</res>
	</prototype>


	<prototype req_name="QUERY_PWD_PROTECT_REQ" res_name="QUERY_PWD_PROTECT_RES" req_type="0x00EEEE01" res_type="0x70EEEE01" req_client_send="true"
		res_client_receive="true" comment="查看密保信息">
		<req>
		</req>
		<res>
			<property name="oldQuestion" type="String" encoding="UTF-8" comment="旧问题,空串表示是第一次设置" />
			<property name="allQuestion" type="String[]" encoding="UTF-8" comment="所有的问题" />
		</res>
	</prototype>

	<prototype req_name="SET_PWD_PROTECT_REQ" res_name="SET_PWD_PROTECT_RES" req_type="0x00EEEE02" res_type="0x70EEEE02" req_client_send="true"
		res_client_receive="true" comment="设置密保">
		<req>
			<property name="oldQuestion" type="String" encoding="UTF-8" comment="旧问题,空串表示是第一次设置" />
			<property name="oldAnswer" type="String" encoding="UTF-8" comment="旧答案,空串表示是第一次设置" />
			<property name="newQuestion" type="String" encoding="UTF-8" comment="新的问题" />
			<property name="newAnswer" type="String" encoding="UTF-8" comment="新的答案" />

		</req>
		<res>
			<property name="result" type="byte" comment="是否设置成功:0-成功,1-失败" />
			<property name="resultString" type="String" encoding="UTF-8" comment="错误信息" />
		</res>
	</prototype>

	<prototype req_name="QUERY_CHARGE_LIST_REQ" res_name="QUERY_CHARGE_LIST_RES" req_type="0x00EEEE03" res_type="0x70EEEE03" req_client_send="true"
		res_client_receive="true" comment="查询充值左侧列表">
		<req>
			<property name="channel" type="String" encoding="UTF-8" comment="渠道" />
		</req>
		<res>
			<object-property name="chargeModes" type="ChargeMode[]" comment="所有充值方式的列表">
				<property name="modeName" type="String" encoding="UTF-8" comment="充值渠道:协议回传使用" />
				<property name="modeShowName" type="String" encoding="UTF-8" comment="充值渠道:显示使用" />
			</object-property>
		</res>
	</prototype>
	<prototype req_name="QUERY_CHARGE_MONEY_CONFIGURE_REQ" res_name="QUERY_CHARGE_MONEY_CONFIGURE_RES" req_type="0x00EEEE04" res_type="0x70EEEE04"
		req_client_send="true" res_client_receive="true" comment="查询充值信息">
		<req>
			<property name="channel" type="String" encoding="UTF-8" comment="渠道" />
			<property name="modeName" type="String" encoding="UTF-8" comment="充值方式" />
		</req>
		<res>
			<object-property name="chargeModes" type="ChargeMode" comment="充值方式">
				<property name="modeName" type="String" encoding="UTF-8" comment="充值渠道:协议回传使用" />
				<property name="modeShowName" type="String" encoding="UTF-8" comment="充值渠道:显示使用" />
				<property name="topDescription" type="String" encoding="UTF-8" comment="上部描述 " />
				<property name="footDescription" type="String" encoding="UTF-8" comment="下部描述 " />
				<property name="buttonText" type="String" encoding="UTF-8" comment="按钮显示文字 " />
				<property name="chargeTexts" type="String[]" encoding="UTF-8" comment="充值框文字" />
				<property name="particularDes" type="String" encoding="UTF-8" comment="详细的描述" />
			</object-property>
			<object-property name="chargeMoneyConfigures" type="ChargeMoneyConfigure[]" comment="充值金额列表">
				<property name="id" type="String" encoding="UTF-8" comment="ID" />
				<property name="type" type="int" encoding="UTF-8" comment="类型:0固定面值,1输入面值" />
				<property name="showText" type="String" encoding="UTF-8" comment="显示的文字" />
				<property name="denomination" type="long" encoding="UTF-8" comment="面值" />
				<property name="description" type="String" encoding="UTF-8" comment="点击时的描述" />
				<property name="specialConf" type="String" encoding="UTF-8" comment="特殊配置" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="CHARGE_REQ" res_name="CHARGE_RES" req_type="0x00EEEE05" res_type="0x70EEEE05" req_client_send="true"
		res_client_receive="true" comment="充值">
		<req>
			<property name="channel" type="String" encoding="UTF-8" comment="渠道" />
			<property name="os" type="String" encoding="UTF-8" comment="平台" />

			<property name="modeName" type="String" encoding="UTF-8" comment="充值方式" />
			<property name="id" type="String" encoding="UTF-8" comment="充值金额ID(chargeMoneyConfigures.getId())" />
			<property name="chargeParms" type="String[]" encoding="UTF-8" comment="充值参数,账号,密码,等等...." />
		</req>
		<res>
			<property name="notice" type="String" encoding="UTF-8" comment="提示" />
		</res>
	</prototype>
	<prototype req_name="QUERY_ORDER_LIST_REQ" res_name="QUERY_ORDER_LIST_RES" req_type="0x00EEEE07" res_type="0x70EEEE07" req_client_send="true"
		res_client_receive="true" coment="获取充值记录(倒序)">
		<req>
			<property name="pageIndex" type="int" encoding="UTF-8" comment="页码" />
			<property name="pageSize" type="int" encoding="UTF-8" comment="每页条数" />
		</req>
		<res>
			<property name="pageIndex" type="int" encoding="UTF-8" comment="页码" />
			<property name="pageSize" type="int" encoding="UTF-8" comment="每页条数" />
			<property name="maxPageIndex" type="int" encoding="UTF-8" comment="最大页数" />
			<property name="orderList" type="String[]" encoding="UTF-8" comment="充值记录" />
		</res>
	</prototype>

	<prototype req_name="AY_ARGS_REQ" res_name="A_ARGS_RES" req_type="0x00EEEE08" res_type="0x70EEEE08" req_client_send="true"
		res_client_receive="true" coment="获得支付宝参数">
		<req></req>
		<res>
			<property name="partnerID" type="String" encoding="UTF-8" comment="合作商ID" />
			<property name="sellerID" type="String" encoding="UTF-8" comment="账户ID" />
			<property name="aliPublicKey" type="String" encoding="UTF-8" comment="支付宝公钥" />
			<property name="ownPublicKey" type="String" encoding="UTF-8" comment="商户公钥" />
			<property name="ownPrivateKey" type="String" encoding="UTF-8" comment="商户私钥" />
			<property name="notifyUrl" type="String" encoding="UTF-8" comment="回调接口" />
		</res>
	</prototype>

	<prototype req_name="A_GET_ORDERID_REQ" res_name="A_GET_ORDERID_RES" req_type="0x00EEEE09" res_type="0x70EEEE09" req_client_send="true"
		res_client_receive="true" coment="获得支付宝订单">
		<req>
			<property name="channel" type="String" encoding="UTF-8" comment="当前客户端渠道" />
			<property name="payAmount" type="long" comment="支付额度，单位：分" />
		</req>
		<res>
			<property name="orderId" type="String" encoding="UTF-8" comment="订单号" />
			<property name="orderInfo" type="String" encoding="UTF-8" comment="订单信息加密" />
			<property name="publicKey" type="String" encoding="UTF-8" comment="公钥" />
			<property name="payAmount" type="long" comment="支付额度，单位：分" />
		</res>
	</prototype>
	
	<prototype req_name="NOTICE_CLIENT_APP_CHARGE_REQ" req_type="0x00EEEEAA" req_client_receive="true" comment="通知客户端苹果充值请求已经收到">
		<req>
			<property name="appstorereceipt" type="String" encoding="UTF-8" comment="appstore验证串"/>
			<property name="serverName" type="String" encoding="UTF-8" comment="服务器名字"/>
			<property name="playerId" type="long" encoding="UTF-8" comment="角色ID"/>
			<property name="params" type="String[]" encoding="UTF-8" comment="备用"/>
		</req>
	</prototype>



	<prototype req_name="SET_VIEW_PORT" req_type="0x00EEEE0A" req_client_send="true" comment="客户端设置视野">
		<req>
			<property name="viewWidth" type="int" comment="视野的宽度"></property>
			<property name="viewHeight" type="int" comment="视野的高度"></property>
		</req>
	</prototype>

	<prototype req_name="SET_CLIENT_DISPLAY_FLAG" req_type="0x00EEEE0B" req_client_send="true" comment="客户端设置显示屏蔽">
		<req>
			<property name="showPlayer" type="boolean" comment="显示玩家"></property>
			<property name="showSameCountryPlayer" type="boolean" comment="显示本国玩家"></property>
			<property name="showGreenNamePlayer" type="boolean" comment="显示绿名玩家"></property>
			<property name="showNpc" type="boolean" comment="显示NPC"></property>
			<property name="showMonster" type="boolean" comment="显示怪"></property>
			<property name="showOtherPlayerSkill" type="boolean" comment="显示其他玩家技能"></property>
			<property name="showChat" type="boolean" comment="显示聊天"></property>
		</req>
	</prototype>

	<prototype req_name="JIU1_GET_CHARGE_ORDER_REQ" res_name="JIU1_GET_CHARGE_ORDER_RES" req_type="0x00EEEE0C" res_type="0x70EEEE0C"
		req_client_send="true" res_client_receive="true" coment="获取91订单号">
		<req>
			<property name="modeName" type="String" encoding="UTF-8" comment="充值方式" />
			<property name="id" type="String" encoding="UTF-8" comment="充值金额ID(chargeMoneyConfigures.getId())" />
			<property name="channel" type="String" encoding="UTF-8" comment="渠道" />
			<property name="os" type="String" encoding="UTF-8" comment="平台" />
		</req>
		<res>
			<property name="result" type="int" comment="是否成功,0-成功,1-失败" />
			<property name="chargeOrder" type="String" encoding="UTF-8" comment="正确返回则为订单号,否则为错误提示" />
			<property name="money" type="long" encoding="UTF-8" comment="钱数,分" />
		</res>
	</prototype>


	<prototype req_name="NOTIFY_OPEN_WINDOW_REQ" req_type="0xA0000036" req_client_receive="true" comment="通知客户端打开某个窗口">
		<req>
			<property name="openWindowType" type="int" comment="打开窗口类型，0充值窗口，后面可以继续添加" />
		</req>
	</prototype>

	<prototype req_name="YINGYONGHUI_GET_CHARGE_ORDER_REQ" res_name="YINGYONGHUI_GET_CHARGE_ORDER_RES" req_type="0x00EEEE0D" res_type="0x70EEEE0D"
		req_client_send="true" res_client_receive="true" coment="获取应用会订单号">
		<req>
			<property name="modeName" type="String" encoding="UTF-8" comment="充值方式" />
			<property name="id" type="String" encoding="UTF-8" comment="充值金额ID(chargeMoneyConfigures.getId())" />
			<property name="channel" type="String" encoding="UTF-8" comment="渠道" />
			<property name="os" type="String" encoding="UTF-8" comment="平台" />
		</req>
		<res>
			<property name="result" type="int" comment="是否成功,0-成功,1-失败" />
			<property name="chargeOrder" type="String" encoding="UTF-8" comment="正确返回则为订单号,否则为错误提示" />
			<property name="money" type="long" encoding="UTF-8" comment="钱数,分" />
			<property name="waresId" type="String" encoding="UTF-8" comment="商品代码" />
			<property name="chargePoint" type="int" encoding="UTF-8" comment="计费点代码" />
		</res>
	</prototype>

	<prototype req_name="ORDER_STATUS_CHANGE_REQ" req_type="0x00EEEE0E" req_client_send="true" coment="订单状态更新">
		<req>
			<property name="orderId" type="String" encoding="UTF-8" comment="订单号" />
			<property name="channel" type="String" encoding="UTF-8" comment="渠道串" />
			<property name="status" type="String" encoding="UTF-8" comment="此订单的状态" />
			<property name="statusDesp" type="String" encoding="UTF-8" comment="状态说明" />
		</req>
		<res>
		</res>
	</prototype>
	<prototype req_name="LENOVO_GET_CHARGE_ORDER_REQ" res_name="LENOVO_GET_CHARGE_ORDER_RES" req_type="0x00EEEE0F" res_type="0x70EEEE0F"
		req_client_send="true" res_client_receive="true" coment="联想乐逗获取订单号">
		<req>
			<property name="modeName" type="String" encoding="UTF-8" comment="充值方式" />
			<property name="channel" type="String" encoding="UTF-8" comment="渠道" />
			<property name="os" type="String" encoding="UTF-8" comment="平台" />
		</req>
		<res>
			<property name="result" type="int" comment="是否成功,0-成功,1-失败" />
			<property name="chargeOrder" type="String" encoding="UTF-8" comment="正确返回则为订单号,否则为错误提示" />
		</res>
	</prototype>
	<prototype req_name="UCSDK_NOTICE_CHARGE_REQ" res_name="UCSDK_NOTICE_CHARGE_RES" req_type="0x00EEEE1E" res_type="0x70EEEE1E"
		req_client_send="true" res_client_receive="true" coment="UCSDK通知充值完成">
		<req>
			<property name="channel" type="String" encoding="UTF-8" comment="渠道" />
			<property name="os" type="String" encoding="UTF-8" comment="平台" />
			<property name="orderId" type="String" encoding="UTF-8" comment="订单号" />
		</req>
		<res>
			<property name="result" type="int" comment="是否成功,0-成功,1-失败" />
			<property name="chargeOrder" type="String" encoding="UTF-8" comment="正确返回则为订单号,否则为错误提示" />
		</res>
	</prototype>

	<prototype req_name="APPSTORE_SAVING_VERIFY_REQ" res_name="APPSTORE_SAVING_VERIFY_RES" req_type="0x00EE9901" res_type="0x70EE9901"
		req_client_send="true" res_client_receive="true" coment="苹果是否可充值">
		<req>
			<property name="channel" type="String" encoding="UTF-8" comment="当前客户端渠道" />
			<property name="verifyStr" type="String" encoding="UTF-8" comment="校验的特征码:uuid:xxxmacaddr:xxx" />
		</req>
		<res>
			<property name="result" type="int" comment="结果: 0-成功， 1-失败" />
			<property name="description" type="String" encoding="UTF-8" comment="结果描述，空为成功" />
		</res>
	</prototype>
	
	<prototype req_name="NOTICE_OPEN_URL_ARGS_REQ" req_client_receive="true" req_type="0x00EEEF12" coment="通知客户端打开一个URL">
		<req>
			<property name="url" type="String" encoding="UTF-8" comment="要访问的地址" />
			<property name="args" type="String" encoding="UTF-8" comment="参数,需要与客户端商议"/>
		</req>
	</prototype>

	<prototype req_name="IAPPPAY_GET_CHARGE_ORDER_REQ" res_name="IAPPPAY_GET_CHARGE_ORDER_RES" req_type="0x00EE9902" res_type="0x70EE9902"
		req_client_send="true" res_client_receive="true" coment="爱贝充值">
		<req>
			<property name="modeName" type="String" encoding="UTF-8" comment="充值方式" />
			<property name="id" type="String" encoding="UTF-8" comment="充值金额ID(chargeMoneyConfigures.getId())" />
			<property name="channel" type="String" encoding="UTF-8" comment="渠道" />
			<property name="os" type="String" encoding="UTF-8" comment="平台" />
		</req>
		<res>
			<property name="result" type="int" comment="是否成功,0-成功,1-失败" />
			<property name="chargeOrder" type="String" encoding="UTF-8" comment="正确返回则为订单号,否则为错误提示" />
			<property name="money" type="long" encoding="UTF-8" comment="钱数,分" />
			<property name="waresId" type="String" encoding="UTF-8" comment="商品代码" />
			<property name="chargePoint" type="int" encoding="UTF-8" comment="计费点代码" />
		</res>
	</prototype>

	<prototype req_name="DEFAULT_GET_CHARGEORDER_REQ" res_name="DEFAULT_GET_CHARGEORDER_RES" req_type="0x00EEEEE0" res_type="0x70EEEEE0"
		req_client_send="true" res_client_receive="true" coment="默认的充值获取订单号">
		<req>
			<property name="modeName" type="String" encoding="UTF-8" comment="充值卡名字" />
			<property name="channel" type="String" encoding="UTF-8" comment="渠道" />
			<property name="os" type="String" encoding="UTF-8" comment="客户端平台" />
			<property name="id" type="String" encoding="UTF-8" comment="充值ID" />
		</req>
		<res>
			<property name="result" type="int" comment="结果,0-成功 1失败" />
			<property name="denomination" type="long" comment="" />
			<property name="chargeOrder" type="String" encoding="UTF-8" comment="充值ID" />
		</res>
	</prototype>

	<prototype req_name="GET_CHARGE_ORDER_MULTIIO_REQ" res_name="GET_CHARGE_ORDER_MULTIIO_RES" req_type="0x00EEEEE1" res_type="0x70EEEEE1"
		req_client_send="true" res_client_receive="true" coment="多参数获取订单号">
		<req>
			<property name="modeName" type="String" encoding="UTF-8" comment="充值卡名字" />
			<property name="funtionName" type="String" encoding="UTF-8" comment="购买功能名字" />
			<property name="channel" type="String" encoding="UTF-8" comment="渠道" />
			<property name="os" type="String" encoding="UTF-8" comment="客户端平台" />
			<property name="id" type="String" encoding="UTF-8" comment="充值ID" />
			<property name="muitiParms" type="String[]" encoding="UTF-8" comment="其他充值参数(C-S约定)" />
		</req>
		<res>
			<property name="result" type="int" comment="结果,0-成功 1失败" />
			<property name="mess" type="String" comment="计费点的描述" />
			<property name="denomination" type="long" comment="" />
			<property name="chargeOrder" type="String" encoding="UTF-8" comment="充值ID" />
			<property name="muitiResults" type="String[]" encoding="UTF-8" comment="其他返回参数(C-S约定)" />
		</res>
	</prototype>

	<prototype res_name="NOTICE_ACTIVITY_STATUS_RES" res_type="0x70EEEE13" res_client_receive="true" coment="通知采花活动开始还是完成">
		<res>
			<property name="isBegin" type="boolean"  comment="活动开始(true),开始显示图标，结束关闭图标"/>
			<property name="activityIcon" type="String"  encoding="UTF-8" comment="活动图标"/>
			<property name="activityType" type="int"  comment="活动类型,1采花"/>
			<property name="activityName" type="String"  encoding="UTF-8" comment="活动类型"/>
			<property name="numDes" type="String" encoding="UTF-8"  comment="今天采几:最多采几"/>
			<property name="remainTime" type="int"  comment="剩余时间(秒)-1不显示"/>
		</res>
	</prototype>
	
	<prototype req_name="QUERY_EXCHANGE_REQ" res_name="QUERY_EXCHANGE_RES" req_type="0x00EEEE14" req_client_send="true" res_type="0x70EEEE14" res_client_receive="true" coment="打开兑换窗口">
		<req>
			<property name="exchangeType" type="int"  comment="打开那种兑换"/>
		</req>
		
		<res>
			<property name="articleIds" type="long[]"  comment="可以兑换的物品id"/>
			<property name="exchangeResults" type="long[]"  comment="那个物品的经验等"/>
			<property name="resultDes" type="String[]"  encoding="UTF-8" comment="物品可兑换的描述"/>
			<property name="des" type="String[]"  encoding="UTF-8" comment="物品可兑换的描述"/>
			<property name="exchangeType" type="int"  comment="那种兑换，采花等"/>
		</res>
	</prototype>
	
	<prototype req_name="EXCHANGE_REQ" res_name="EXCHANGE_RES" req_type="0x00EEEE15" req_client_send="true" res_type="0x70EEEE15" res_client_receive="true"  coment="兑换">
		<req>
			<property name="exchangeType" type="int"  comment="那种兑换"/>
			<property name="entityIds" type="long[]"  comment="兑换的物品id"/>
			<property name="entityNums" type="int[]"  comment="对应兑换的数量"/>
		</req>
		
		<res>
			<property name="success" type="boolean"  comment="兑换成功还是失败"/>
			<property name="entityIds" type="long[]"  comment="兑换的物品id"/>
			<property name="entityNums" type="int[]"  comment="对应兑换的数量，-1表示没有删除"/>
		</res>
	</prototype>
	
	<!-- 副本弹窗 -->
	<prototype req_name="DOWNCITY_PREPARE_WINDOW_REQ" req_type="0x00EEEAB0"
		req_client_receive="true" coment="副本准备窗口，会给队里每个人都弹出这个窗口">
		<req>
			<property name="title" type="String" encoding="UTF-8" comment="副本名字" />
			<property name="playerIds" type="long[]" comment="队员id" />
			<property name="status" type="byte[]" comment="每个人的状态，0表示没有准备，1表示准备好，2表示不去" />
			<property name="description" type="String" encoding="UTF-8" comment="描述" />
		</req>
	</prototype>
	
	<prototype req_name="DOWNCITY_PLAYER_STATUS_CHANGE_REQ" req_type="0x00EEEAB1"
		req_client_send="true" coment="副本准备窗口中队员的状态发生改变">
		<req>
			<property name="status" type="byte" comment="每个人的状态，0表示没有准备，1表示准备好，2表示不去" />
		</req>
	</prototype>
	
	<prototype req_name="DOWNCITY_CREATE_REQ" req_type="0x00EEEAB2"
		req_client_send="true" coment="创建副本，并进入">
		<req>
		</req>
	</prototype>
	
	<!-- 吞噬 -->
	<prototype req_name="QUERY_TUNSHI_REQ" res_name="QUERY_TUNSHI_RES" req_type="0x00EEEABA"
		req_client_send="true" res_type="0x70EEEABA" res_client_receive="true" coment="吞噬查询">
		<req>
			<property name="articleId" type="long" comment="要查询物品id" />
		</req>
		
		<res>
			<property name="articleId" type="long"  comment="要查询物品id"/>
			<property name="currentHunLiang" type="int"  comment="当前魂量"/>
			<property name="maxHunLiang" type="int"  comment="最大魂量"/>
		</res>
	</prototype>

	<prototype req_name="TUNSHI_REQ" res_name="TUNSHI_RES" req_type="0x00EEEABB"
		req_client_send="true" res_type="0x70EEEABB" res_client_receive="true" coment="吞噬申请">
		<req>
			<property name="mainArticleId" type="long" comment="主要器灵id" />
			<property name="materialArticleId" type="long" comment="辅助器灵id" />
			<property name="mainBagType" type="byte" comment="主要器灵的背包类型，即在哪个背包" />
			<property name="materialBagType" type="byte" comment="辅助器灵的背包类型，即在哪个背包" />
			<property name="tunshiType" type="byte" comment="0单独吞噬，1全部吞噬" />
		</req>
		
		<res>
			<property name="mainArticleId" type="long"  comment="主要器灵id"/>
			<property name="currentHunLiang" type="int"  comment="当前魂量"/>
			<property name="maxHunLiang" type="int"  comment="最大魂量"/>
		</res>
	</prototype>
	
	<prototype req_name="QUERY_XILIAN_REQ" res_name="QUERY_XILIAN_RES" req_type="0x00EEEABC"
		req_client_send="true" res_type="0x70EEEABC" res_client_receive="true" coment="洗脸查询">
		<req>
			<property name="articleId" type="long" comment="要查询物品id" />
		</req>
		
		<res>
			<property name="articleId" type="long"  comment="要查询物品id"/>
			<property name="qilingType" type="int"  comment="器灵类型"/>
			<property name="currentPropValue" type="String" encoding="UTF-8" comment="当前器灵属性值描述"/>
			<property name="propValueRange" type="String"  encoding="UTF-8" comment="洗练范围描述"/>
			<property name="expXiLianDes" type="String"  encoding="UTF-8" comment="用经验洗脸描述"/>
			<property name="yinziXiLianDes" type="String"  encoding="UTF-8" comment="用银子洗练描述"/>
		</res>
	</prototype>
	
	<prototype req_name="XILIAN_REQ" req_type="0x00EEEABD"
		req_client_send="true" coment="洗练申请">
		<req>
			<property name="articleId" type="long" comment="要查询物品id" />
			<property name="xilianType" type="byte" comment="0用经验洗脸，1用银子洗脸" />
		</req>
	</prototype>
	
	<prototype req_name="QILING_INLAY_REQ" req_type="0x00EEEABE" req_client_send="true" comment="客户端装备镶嵌器灵">
		<req>
			<property name="equipmentId" type="long" comment="装备ID" />
			<property name="holeIndex" type="int" comment="孔序号" />
			<property name="materialId" type="long" comment="器灵ID" />
		</req>
	</prototype>

	<prototype req_name="QILING_OUTLAY_REQ" req_type="0x00EEEABF" req_client_send="true" comment="客户端装备挖器灵">
		<req>
			<property name="equipmentId" type="long" comment="装备ID" />
			<property name="holeIndex" type="int" comment="孔序号" />
		</req>
	</prototype>
	
	<prototype req_name="QUERY_LIANQI_REQ" res_name="QUERY_LIANQI_RES" req_type="0x00EEAABA"
		req_client_send="true" res_type="0x70EEAABA" res_client_receive="true" coment="炼器查询">
		<req>
			<property name="articleId" type="long" comment="要查询物品id" />
		</req>
		
		<res>
			<property name="articleId" type="long"  comment="要查询物品id"/>
			<property name="needArticle" type="String" encoding="UTF-8" comment="炼器所需物品"/>
			<property name="basicCost" type="long" comment="炼器基本花费"/>
			<property name="bindCosts" type="long[]" comment="炼器锁定属性槽的花费，数组表示锁定一个花费多少银子，锁定两个花费多少银子，锁定三个花费多少银子"/>
		</res>
	</prototype>
	
	<prototype req_name="LIANQI_REQ" res_name="LIANQI_RES" req_type="0x00EEAABB"
		req_client_send="true" res_type="0x70EEAABB" res_client_receive="true" coment="炼器申请">
		<req>
			<property name="articleId" type="long" comment="要查询物品id" />
			<property name="materialId" type="long" comment="炼器材料id" />
			<property name="bindIndexs" type="byte[]" comment="绑定index" />
		</req>
		
		<res>
			<property name="articleId" type="long"  comment="要查询物品id"/>
			<property name="success" type="boolean" comment="炼器结果，true表示成功，false表示失败"/>
		</res>
	</prototype>
	
	<prototype req_name="QUERY_EQUIPMENT_QILING_REQ" res_name="QUERY_EQUIPMENT_QILING_RES" req_type="0x00EEAABC"
		req_client_send="true" res_type="0x70EEAABC" res_client_receive="true" coment="装备上的器灵查询">
		<req>
			<property name="equipmentId" type="long" comment="要查询装备id" />
		</req>
		
		<res>
			<property name="equipmentId" type="long"  comment="要查询装备id"/>
			<property name="qilingType" type="int[]" comment="装备拥有的器灵孔的类型"/>
			<property name="qilingIds" type="long[]"  comment="装备拥有的器灵孔中的器灵id"/>
			<property name="description" type="String" encoding="UTF-8" comment="装备上器灵信息描述"/>
		</res>
	</prototype>
	
	<prototype req_name="QUERY_KNAPSACK_QILING_REQ" res_name="QUERY_KNAPSACK_QILING_RES" req_type="0x00EEAABD"
		req_client_send="true" res_type="0x70EEAABD" res_client_receive="true" coment="器灵背包查询">
		<req>
		</req>
		
		<res>
			<!-- 下面是客户端器灵仓库的显示 -->
			<property name="qilingCellmax" type="short" comment="背包最大扩充个数"></property>
			<property name="qilingEntityId" type="long[]" comment="背包中各个单元格放置的物体唯一标识，长度就是背包格个数，内容-1标识空格子"></property>
			<property name="qilingCounts" type="short[]" comment="背包中各个单元格放置的物体个数，0标识没有物品"></property>
		</res>
	</prototype>
	
	<prototype req_name="OPEN_QILING_WINDOW_REQ" req_type="0x00EEAABF"
		req_client_receive="true" coment="打开器灵窗口">
		<req>
		<property name="index" type="byte" comment="开启窗口位置"></property>
		</req>
	</prototype>
	
	<prototype req_name="KNAPSACK_QILING_MOVE_REQ" req_type="0x00EEAABE"
		req_client_send="true" coment="器灵移动">
		<req>
			<property name="qilingId" type="long"  comment="要移动的器灵id"/>
			<property name="moveType" type="byte"  comment="0把器灵移动到背包，1把器灵移动到器灵包"/>
		</req>
	</prototype>

	<prototype req_name="QUERY_VIP_DISPLAY_REQ" res_name="QUERY_VIP_DISPLAY_RES" req_type="0x01EE9902" res_type="0x81EE9902"
		req_client_send="true" res_client_receive="true" coment="查询vip是否显示">
		<req>
			<property name="clientId" type="String" encoding="UTF-8" comment="当前客户端clientId" />
			<property name="phoneType" type="String" encoding="UTF-8" comment="当前客户端phoneType" />
			<property name="platform" type="String" encoding="UTF-8" comment="当前客户端platform" />
			<property name="userType" type="String" encoding="UTF-8" comment="当前客户端userType" />
			<property name="channel" type="String" encoding="UTF-8" comment="当前客户端channel" />
			<property name="uiidmacaddress" type="String" encoding="UTF-8" comment="当前客户端uiidmacaddress" />
		</req>
		<res>
			<property name="display" type="boolean" comment="true显示，false不显示" />
		</res>
	</prototype>	
		
	<prototype req_name="SUPER_GM_REQ" res_name="SUPER_GM_RES" req_type="0x00EEEE10" res_type="0x70EEEE10" req_client_send="true" res_client_receive="true" coment="超级GM游戏内对玩家能操作的功能">
		<req>
		</req>
		<res>
			<property name="options" type="String[]" encoding="UTF-8" comment="配置的按钮将显示在玩家交互菜单里，对非GM玩家返回0长度数组" />
		</res>
	</prototype>

	<prototype req_name="SUPER_GM_SELECT_REQ" req_type="0x00EEEE11" req_client_send="true" coment="超级GM游戏内对玩家操作,操作的结果用HintReq返回">
		<req>
			<property name="playerId" type="long" comment="要操作的玩家ID" />
			<property name="options" type="String" encoding="UTF-8" comment="选择的按钮" />
		</req>
	</prototype>
	
	<prototype req_name="NOTICE_OPEN_URL_REQ" req_client_receive="true" req_type="0x00EEEE12" coment="通知客户端打开一个URL">
		<req>
			<property name="url" type="String" encoding="UTF-8" comment="要访问的地址"/>
		</req>
	</prototype>
	
	<!-- 新反馈 start-->
	<prototype req_name="FEEDBACK_HOME_PAGE_REQ" res_name="FEEDBACK_HOME_PAGE_RES" req_type="0x00EEEE21" res_type="0x70EEEE21" req_client_send="true" res_client_receive="true" coment="首界面">
		<req>
			<property name="username" type="String" encoding="UTF-8" comment="用户名"></property>
		</req>
		<res>
			<property name="queueCountMess" type="String" encoding="UTF-8" comment="当前排队数量信息"></property>
			<property name="gmServiceMess" type="String" encoding="UTF-8" comment="客服帮助提示信息" />
			<property name="showNumLimit" type="int" comment="最大显示数量" />
			<object-property name="feedbacks" type="NewFeedback[]">
				<property name="id" type="long" comment="反馈唯一标识"></property>
				<property name="playerState" type="int" comment="玩家的状态:等待回复,有新回复,评分"></property>
				<property name="waitCount" type="int" comment="该反馈的排队位数"></property>
				<property name="title" type="String" encoding="UTF-8" comment="标题" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="FEEDBACK_DELETE_REQ" res_name="FEEDBACK_DELETE_RES" req_type="0x00EEEE22" res_type="0x70EEEE22" req_client_send="true" res_client_receive="true" coment="删除反馈">
		<req>
			<property name="id" type="long" comment="反馈唯一标识"></property>
		</req>
		<res>
			<property name="id" type="long" comment="反馈唯一标识"></property>
			<property name="resultMess" type="String" encoding="UTF-8" comment="成功失败原因" />
			<property name="result" type="byte" comment="结果, 0-成功, 1-失败" />
		</res>
	</prototype>
	
	<prototype req_name="FEEDBACK_SCORE_REQ" res_name="FEEDBACK_SCORE_RES" req_type="0x00EEEE23" res_type="0x70EEEE23" req_client_send="true" res_client_receive="true" coment="评分">
		<req>
			<property name="id" type="long" comment="反馈唯一标识"></property>
			<property name="select" type="int" comment="评分选项"></property>
		</req>
		<res>
			<property name="id" type="long" comment="反馈唯一标识"></property>
			<property name="result" type="int" comment="处理：(0:成功，1:失败)"></property>
			<property name="resultMess" type="String" encoding="UTF-8" comment="评分成功失败信息"></property>
		</res>
	</prototype>
	
	<prototype req_name="FEEDBACK_PLAYER_TALK_REQ" res_name="FEEDBACK_PLAYER_TALK_RES" req_type="0x00EEEE24" res_type="0x70EEEE24" req_client_send="true" res_client_receive="true" coment="玩家说话">
		<req>
			<property name="id" type="long" comment="反馈唯一标识"></property>
			<object-property name="talk" type="GmTalk">
				<property name="name" type="String" encoding="UTF-8" comment="客服编号或者玩家角色名" />
				<property name="sendDate" type="long" comment="发送日期"></property>
				<property name="talkcontent" type="String" encoding="UTF-8" comment="内容" />
			</object-property>
		</req>
		<res>
			<property name="feedbackId" type="long" comment="反馈唯一标识"></property>
			<property name="gmtalkId" type="long" comment="谈话唯一标识"></property>
			<property name="sendDate" type="long" comment="发送日期"></property>
			<property name="result" type="byte" comment="结果, 0-成功, 1-失败" />
			<property name="resultMess" type="String" encoding="UTF-8" comment="成功或失败原因"></property>
		</res>
	</prototype>
	
	<prototype res_name="FEEDBACK_GM_TALK_RES" res_type="0x70EEEE25" res_client_receive="true" coment="客服说话">
		<res>
			<property name="id" type="long" comment="反馈唯一标识"></property>
			<object-property name="talk" type="GmTalk">
				<property name="id" type="long" comment="谈话唯一标识"></property>
				<property name="name" type="String" encoding="UTF-8" comment="客服编号或者玩家角色名" />
				<property name="sendDate" type="long" comment="发送日期"></property>
				<property name="talkcontent" type="String" encoding="UTF-8" comment="内容" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="FEEDBACK_LOOK_REQ" res_name="FEEDBACK_LOOK_RES" req_type="0x00EEEE26" res_type="0x70EEEE26" req_client_send="true" res_client_receive="true" coment="查看反馈">
		<req>
			<property name="id" type="long" comment="反馈唯一标识"></property>
		</req>
		<res>
			<property name="id" type="long" comment="反馈唯一标识"></property>
			<property name="resultMess" type="String" encoding="UTF-8" comment="成功失败原因" />
			<property name="result" type="byte" comment="结果, 0-成功, 1-失败" />
			<object-property name="talk" type="GmTalk[]">
				<property name="id" type="long" comment="反馈唯一标识"></property>
				<property name="name" type="String" encoding="UTF-8" comment="客服编号或者玩家角色名" />
				<property name="sendDate" type="long" comment="发送日期"></property>
				<property name="talkcontent" type="String" encoding="UTF-8" comment="内容" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="FEEDBACK_LOOK_SCORE_REQ" res_name="FEEDBACK_LOOK_SCORE_RES" req_type="0x00EEEE27" res_type="0x70EEEE27" req_client_send="true" res_client_receive="true" coment="查看评分">
		<req>
			<property name="id" type="long" comment="反馈唯一标识"></property>
		</req>
		<res>
			<property name="id" type="long" comment="反馈唯一标识"></property>
			<property name="scoreMess" type="String" encoding="UTF-8" comment="评分描述" />
		</res>
	</prototype>
	
	<prototype req_name="FEEDBACK_COMMIT_REQ" res_name="FEEDBACK_COMMIT_RES" req_type="0x00EEEE28" res_type="0x70EEEE28" req_client_send="true" res_client_receive="true" coment="是否让提交">
		<req>
			<property name="username" type="String" encoding="UTF-8" comment="用户名"></property>
		</req>
		<res>
			<property name="id" type="long" comment="反馈唯一标识"></property>
			<property name="result" type="byte" comment="结果, 0-成功, 1-失败" />
			<property name="resultMess" type="String" encoding="UTF-8" comment="是否让提交原因信息" />
		</res>
	</prototype>
	<!-- 新反馈 end-->
	
	<!-- 锁魂相关协议 start -->
	<prototype res_name="ARTICLEPROTECT_MSG_RES" res_type="0x700EFE01" res_client_receive="true" comment="给客户端发他自己的装备锁魂情况">
		<res>
			<object-property name="msgs" type="ArticleProtectClientInfo[]" comment="玩家的锁魂信息">
				<property name="articleType" type="int" comment="数据类型"/>
				<property name="articleID" type="long" comment="物品iD"/>
				<property name="state" type="int" comment="状态"/>
				<property name="removeTime" type="long" comment="移除时间"/>
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="ARTICLEPROTECT_BLOCK_REQ" req_type="0x000EFE02" req_client_send="true" comment="锁魂">
		<req>
			<property name="entityID" type="long" comment="需要锁魂物品ID" />
			<property name="entityIndex" type="int" comment="需要锁魂物品背包Index" />
			<property name="propID" type="long" comment="锁魂石头ID" />
			<property name="propIndex" type="int" comment="锁魂石头背包Index" />
		</req>
	</prototype>
	
	<prototype req_name="ARTICLEPROTECT_UNBLOCK_REQ" req_type="0x000EFE03" req_client_send="true" comment="解锁魂">
		<req>
			<property name="entityID" type="long" comment="需要解锁魂物品ID" />
			<property name="entityIndex" type="int" comment="需要解锁魂物品背包Index" />
			<property name="propID" type="long" comment="解锁魂石头ID" />
			<property name="propIndex" type="int" comment="解锁魂石头背包Index" />
		</req>
	</prototype>
	
	<prototype req_name="ARTICLEPROTECT_OTHERMSG_REQ" req_type="0x000EFE04" req_client_send="true"
		 res_name="ARTICLEPROTECT_OTHERMSG_RES" res_type="0x700EFE04" res_client_receive="true" comment="关于锁魂的一些信息">
		<req></req>
		<res>
			<property name="suohunMsg" type="String" encoding="UTF-8" comment="锁魂说明" />
			<property name="jiehunMsg" type="String" encoding="UTF-8" comment="解魂说明" />
			<property name="suohunPropName1" type="String" encoding="UTF-8" comment="锁魂道具A" />
			<property name="suohunPropName2" type="String" encoding="UTF-8" comment="锁魂道具B" />
			<property name="jiehunPropName" type="String" encoding="UTF-8" comment="解魂道具" />
		</res>
	</prototype>
	
	<!-- 锁魂相关协议 end -->
	
	<!-- 外挂相关协议 start -->
	<prototype req_name="ANDROID_PROCESS_REQ" req_type="0x000EAE01" req_client_send="true"
		res_name="ANDROID_PROCESS_RES" res_type="0x700EAE01" res_client_receive="true" comment="取安卓进程信息,发送res到客户端客户端会再取一次发过来">
		<req>
			<property name="platform" type="String" encoding="UTF-8" comment="平台"/>
			<property name="clientID" type="String" encoding="UTF-8" comment="clientID"/>
			<property name="otherGPU" type="String" encoding="UTF-8" comment="otherGPU"/>
			<property name="realPlatform" type="String" encoding="UTF-8" comment="真实机型"/>
			<property name="androidProcesss" type="String[]" encoding="UTF-8" comment="进程信息" />
		</req>
		<res>
		</res>
	</prototype>
	
	<prototype req_name="RSA_DATA_REQ" req_type="0x000EAE02" req_client_send="true" comment="apk密钥">
		<req>
			<property name="clientID" type="String" encoding="UTF-8" comment="clientID"/>
			<property name="clientVersion" type="String" encoding="UTF-8" comment="clientID"/>
			<property name="platform" type="String" encoding="UTF-8" comment="平台"/>
			<property name="realPlatform" type="String" encoding="UTF-8" comment="真实机型"/>
			<property name="GPU" type="String" encoding="UTF-8" comment="GPU"/>
			<property name="otherGPU" type="String" encoding="UTF-8" comment="otherGPU"/>
			<property name="rsa_data" type="byte[]" comment="密钥文件数据" />
		</req>
	</prototype>
	
	<prototype req_name="GET_RSA_DATA_REQ" req_type="0x000EAE03" req_client_send="true"
		res_name="GET_RSA_DATA_RES" res_type="0x700EAE03" res_client_receive="true" comment="服务器去取密钥文件">
		<req>
			<property name="clientID" type="String" encoding="UTF-8" comment="clientID"/>
			<property name="clientVersion" type="String" encoding="UTF-8" comment="clientID"/>
			<property name="platform" type="String" encoding="UTF-8" comment="平台"/>
			<property name="realPlatform" type="String" encoding="UTF-8" comment="真实机型"/>
			<property name="GPU" type="String" encoding="UTF-8" comment="GPU"/>
			<property name="otherGPU" type="String" encoding="UTF-8" comment="otherGPU"/>
			<property name="rsa_data" type="byte[]" comment="密钥文件数据" />
		</req>
		<res>
		</res>
	</prototype>
	
	<prototype res_name="OPEN_PHONENUM_SHOW_RES" res_type="0x700EAE04" res_client_receive="true" comment="是否开启绑定解绑手机号">
		<res>
			<property name="isOpen" type="boolean" comment="true是开始，false是不开启"/>
			<property name="isBind" type="boolean" comment="true是绑定，false是未绑定"/>
		</res>
	</prototype>
	
	<prototype req_name="TRY_BING_PHONENUM_REQ" req_type="0x000EAE05" req_client_send="true"
		res_name="TRY_BING_PHONENUM_RES" res_type="0x700EAE05" res_client_receive="true" comment="尝试去绑定手机">
		<req>
		</req>
		<res>
			<property name="msg" type="String" encoding="UTF-8" comment="绑定手机号相关信息"/>
			<property name="jiaoyanTime" type="long" comment="可以校验的剩余时间"/>
			<property name="sendSpace" type="int" comment="发送间隔"/>
			<property name="sendMsg" type="String" encoding="UTF-8" comment="发送后显示的信息"/>
		</res>
	</prototype>
	
	<prototype req_name="TRY_SEND_PHONTNUM_REQ" req_type="0x000EAE06" req_client_send="true"
		res_name="TRY_SEND_PHONTNUM_RES" res_type="0x700EAE06" res_client_receive="true" comment="尝试获取校验码">
		<req>
			<property name="phoneNum" type="String" encoding="UTF-8" comment="手机号"/>
		</req>
		<res>
			<property name="isOK" type="boolean" comment="是否成功"/>
			<property name="errorMsg" type="String" encoding="UTF-8" comment="错误信息"/>
		</res>
	</prototype>
	
	<prototype req_name="BING_PHONENUM_REQ" req_type="0x000EAE07" req_client_send="true"
		res_name="BING_PHONENUM_RES" res_type="0x700EAE07" res_client_receive="true" comment="绑定手机">
		<req>
			<property name="phoneNum" type="String" encoding="UTF-8" comment="手机号"/>
			<property name="jiaoYanMa" type="String" encoding="UTF-8" comment="校验码"/>
		</req>
		<res>
			<property name="isOK" type="boolean" comment="是否成功"/>
			<property name="errorMsg" type="String" encoding="UTF-8" comment="错误信息"/>
		</res>
	</prototype>
	
	<prototype req_name="TRY_UNBING_PHONENUM_REQ" req_type="0x000EAE08" req_client_send="true"
		res_name="TRY_UNBING_PHONENUM_RES" res_type="0x700EAE08" res_client_receive="true" comment="尝试去解绑手机">
		<req>
		</req>
		<res>
			<property name="msg" type="String" encoding="UTF-8" comment="解绑手机号相关信息"/>
			<property name="phoneNum" type="String" encoding="UTF-8" comment="手机号"/>
			<property name="sendSpace" type="int" comment="发送间隔"/>
			<property name="sendMsg" type="String" encoding="UTF-8" comment="发送后显示的信息"/>
		</res>
	</prototype>
	
	<prototype req_name="TRY_SEND_UNBIND_REQ" req_type="0x000EAE09" req_client_send="true"
		res_name="TRY_SEND_UNBIND_RES" res_type="0x700EAE09" res_client_receive="true" comment="尝试获取解绑校验码">
		<req>
		</req>
		<res>
			<property name="isOK" type="boolean" comment="是否成功"/>
			<property name="errorMsg" type="String" encoding="UTF-8" comment="错误信息"/>
		</res>
	</prototype>
	
	<prototype req_name="UNBIND_PHONENUM_REQ" req_type="0x000EAE10" req_client_send="true"
		res_name="UNBIND_PHONENUM_RES" res_type="0x700EAE10" res_client_receive="true" comment="解绑手机号">
		<req>
			<property name="jiaoYanMa" type="String" encoding="UTF-8" comment="校验码"/>
		</req>
		<res>
			<property name="isOK" type="boolean" comment="是否成功"/>
			<property name="errorMsg" type="String" encoding="UTF-8" comment="错误信息"/>
		</res>
	</prototype>
	
	<prototype req_name="PHONENUM_ASK_REQ" req_type="0x000EAE11" req_client_send="true"
		res_name="PHONENUM_ASK_RES" res_type="0x700EAE11" res_client_receive="true" comment="手机号绑定答题">
		<req>
			<property name="phoneNum" type="String" encoding="UTF-8" comment="手机号"/>
			<property name="jiaoYanMa" type="String" encoding="UTF-8" comment="校验码"/>
		</req>
		<res>
			<property name="msg" type="String" encoding="UTF-8" comment="答题手机号相关信息"/>
			<property name="phoneNum" type="String" encoding="UTF-8" comment="手机号"/>
			<property name="jiaoyanTime" type="long" comment="可以校验的剩余时间"/>
			<property name="sendSpace" type="int" comment="发送间隔"/>
			<property name="sendMsg" type="String" encoding="UTF-8" comment="发送后显示的信息"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_PHONE_INFO_1_REQ" req_type="0x000EAE12" req_client_receive="true"
			res_name="GET_PHONE_INFO_1_RES" res_type="0x700EAE12" res_client_send="true" comment="取客户端信息">
		<req>
			<property name="serverValue" type="String[]" encoding="UTF-8" comment="服务器给客户端发送信息"/>
		</req>
		<res>
			<property name="clientValue" type="String[]" encoding="UTF-8" comment="客户端返回信息"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_PHONE_INFO_2_REQ" req_type="0x000EAE13" req_client_receive="true"
			res_name="GET_PHONE_INFO_2_RES" res_type="0x700EAE13" res_client_send="true" comment="取客户端信息">
		<req>
			<property name="serverValue" type="String[]" encoding="UTF-8" comment="服务器给客户端发送信息"/>
		</req>
		<res>
			<property name="clientValue" type="String[]" encoding="UTF-8" comment="客户端返回信息"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_PHONE_INFO_3_REQ" req_type="0x000EAE14" req_client_receive="true"
			res_name="GET_PHONE_INFO_3_RES" res_type="0x700EAE14" res_client_send="true" comment="取客户端信息">
		<req>
			<property name="serverValue" type="String[]" encoding="UTF-8" comment="服务器给客户端发送信息"/>
		</req>
		<res>
			<property name="clientValue" type="String[]" encoding="UTF-8" comment="客户端返回信息"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_PHONE_INFO_4_REQ" req_type="0x000EAE15" req_client_receive="true"
			res_name="GET_PHONE_INFO_4_RES" res_type="0x700EAE15" res_client_send="true" comment="取客户端信息">
		<req>
			<property name="serverValue" type="String[]" encoding="UTF-8" comment="服务器给客户端发送信息"/>
		</req>
		<res>
			<property name="clientValue" type="String[]" encoding="UTF-8" comment="客户端返回信息"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_PHONE_INFO_5_REQ" req_type="0x000EAE16" req_client_receive="true"
			res_name="GET_PHONE_INFO_5_RES" res_type="0x700EAE16" res_client_send="true" comment="取客户端信息">
		<req>
			<property name="serverValue" type="String[]" encoding="UTF-8" comment="服务器给客户端发送信息"/>
		</req>
		<res>
			<property name="clientValue" type="String[]" encoding="UTF-8" comment="客户端返回信息"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_PHONE_INFO_6_REQ" req_type="0x000EAE17" req_client_receive="true"
			res_name="GET_PHONE_INFO_6_RES" res_type="0x700EAE17" res_client_send="true" comment="取客户端信息">
		<req>
			<property name="serverValue" type="String[]" encoding="UTF-8" comment="服务器给客户端发送信息"/>
		</req>
		<res>
			<property name="clientValue" type="String[]" encoding="UTF-8" comment="客户端返回信息"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_PHONE_INFO_7_REQ" req_type="0x000EAE18" req_client_receive="true"
			res_name="GET_PHONE_INFO_7_RES" res_type="0x700EAE18" res_client_send="true" comment="取客户端信息">
		<req>
			<property name="serverValue" type="String[]" encoding="UTF-8" comment="服务器给客户端发送信息"/>
		</req>
		<res>
			<property name="clientValue" type="String[]" encoding="UTF-8" comment="客户端返回信息"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_PHONE_INFO_8_REQ" req_type="0x000EAE19" req_client_receive="true"
			res_name="GET_PHONE_INFO_8_RES" res_type="0x700EAE19" res_client_send="true" comment="取客户端信息">
		<req>
			<property name="serverValue" type="String[]" encoding="UTF-8" comment="服务器给客户端发送信息"/>
		</req>
		<res>
			<property name="clientValue" type="String[]" encoding="UTF-8" comment="客户端返回信息"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_PHONE_INFO_9_REQ" req_type="0x000EAE20" req_client_receive="true"
			res_name="GET_PHONE_INFO_9_RES" res_type="0x700EAE20" res_client_send="true" comment="取客户端信息">
		<req>
			<property name="serverValue" type="String[]" encoding="UTF-8" comment="服务器给客户端发送信息"/>
		</req>
		<res>
			<property name="clientValue" type="String[]" encoding="UTF-8" comment="客户端返回信息"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_PHONE_INFO_10_REQ" req_type="0x000EAE21" req_client_receive="true"
			res_name="GET_PHONE_INFO_10_RES" res_type="0x700EAE21" res_client_send="true" comment="取客户端信息">
		<req>
			<property name="serverValue" type="String[]" encoding="UTF-8" comment="服务器给客户端发送信息"/>
		</req>
		<res>
			<property name="clientValue" type="String[]" encoding="UTF-8" comment="客户端返回信息"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_PHONE_INFO_11_REQ" req_type="0x000EAE22" req_client_receive="true"
			res_name="GET_PHONE_INFO_11_RES" res_type="0x700EAE22" res_client_send="true" comment="取客户端信息">
		<req>
			<property name="serverValue" type="String[]" encoding="UTF-8" comment="服务器给客户端发送信息"/>
		</req>
		<res>
			<property name="clientValue" type="String[]" encoding="UTF-8" comment="客户端返回信息"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_CLIENT_INFO_REQ" req_type="0x000EAE23" req_client_receive="true"
			res_name="GET_CLIENT_INFO_RES" res_type="0x700EAE23" res_client_send="true" comment="取客户端信息">
		<req>
			<property name="serverValue" type="String[]" encoding="UTF-8" comment="服务器给客户端发送信息"/>
		</req>
		<res>
			<property name="clientValue" type="String[]" encoding="UTF-8" comment="客户端返回信息"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_CLIENT_INFO_1_REQ" req_type="0x000EAE24" req_client_receive="true"
			res_name="GET_CLIENT_INFO_1_RES" res_type="0x700EAE24" res_client_send="true" comment="取客户端信息">
		<req>
			<property name="serverValue" type="String[]" encoding="UTF-8" comment="服务器给客户端发送信息"/>
		</req>
		<res>
			<property name="clientValue" type="String[]" encoding="UTF-8" comment="客户端返回信息"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_CLIENT_INFO_2_REQ" req_type="0x000EAE25" req_client_receive="true"
			res_name="GET_CLIENT_INFO_2_RES" res_type="0x700EAE25" res_client_send="true" comment="取客户端信息">
		<req>
			<property name="serverValue" type="String[]" encoding="UTF-8" comment="服务器给客户端发送信息"/>
		</req>
		<res>
			<property name="clientValue" type="String[]" encoding="UTF-8" comment="客户端返回信息"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_CLIENT_INFO_3_REQ" req_type="0x000EAE26" req_client_receive="true"
			res_name="GET_CLIENT_INFO_3_RES" res_type="0x700EAE26" res_client_send="true" comment="取客户端信息">
		<req>
			<property name="serverValue" type="String[]" encoding="UTF-8" comment="服务器给客户端发送信息"/>
		</req>
		<res>
			<property name="clientValue" type="String[]" encoding="UTF-8" comment="客户端返回信息"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_CLIENT_INFO_4_REQ" req_type="0x000EAE27" req_client_receive="true"
			res_name="GET_CLIENT_INFO_4_RES" res_type="0x700EAE27" res_client_send="true" comment="取客户端信息">
		<req>
			<property name="serverValue" type="String[]" encoding="UTF-8" comment="服务器给客户端发送信息"/>
		</req>
		<res>
			<property name="clientValue" type="String[]" encoding="UTF-8" comment="客户端返回信息"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_CLIENT_INFO_5_REQ" req_type="0x000EAE28" req_client_receive="true"
			res_name="GET_CLIENT_INFO_5_RES" res_type="0x700EAE28" res_client_send="true" comment="取客户端信息">
		<req>
			<property name="serverValue" type="String[]" encoding="UTF-8" comment="服务器给客户端发送信息"/>
		</req>
		<res>
			<property name="clientValue" type="String[]" encoding="UTF-8" comment="客户端返回信息"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_CLIENT_INFO_6_REQ" req_type="0x000EAE29" req_client_receive="true"
			res_name="GET_CLIENT_INFO_6_RES" res_type="0x700EAE29" res_client_send="true" comment="取客户端信息">
		<req>
			<property name="serverValue" type="String[]" encoding="UTF-8" comment="服务器给客户端发送信息"/>
		</req>
		<res>
			<property name="clientValue" type="String[]" encoding="UTF-8" comment="客户端返回信息"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_CLIENT_INFO_7_REQ" req_type="0x000EAE30" req_client_receive="true"
			res_name="GET_CLIENT_INFO_7_RES" res_type="0x700EAE30" res_client_send="true" comment="取客户端信息">
		<req>
			<property name="serverValue" type="String[]" encoding="UTF-8" comment="服务器给客户端发送信息"/>
		</req>
		<res>
			<property name="clientValue" type="String[]" encoding="UTF-8" comment="客户端返回信息"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_CLIENT_INFO_8_REQ" req_type="0x000EAE31" req_client_receive="true"
			res_name="GET_CLIENT_INFO_8_RES" res_type="0x700EAE31" res_client_send="true" comment="取客户端信息">
		<req>
			<property name="serverValue" type="String[]" encoding="UTF-8" comment="服务器给客户端发送信息"/>
		</req>
		<res>
			<property name="clientValue" type="String[]" encoding="UTF-8" comment="客户端返回信息"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_CLIENT_INFO_9_REQ" req_type="0x000EAE32" req_client_receive="true"
			res_name="GET_CLIENT_INFO_9_RES" res_type="0x700EAE32" res_client_send="true" comment="取客户端信息">
		<req>
			<property name="serverValue" type="String[]" encoding="UTF-8" comment="服务器给客户端发送信息"/>
		</req>
		<res>
			<property name="clientValue" type="String[]" encoding="UTF-8" comment="客户端返回信息"/>
		</res>
	</prototype>
	
	<prototype req_name="VALIDATE_INFO_REQ" req_type="0x000EAE33" req_client_receive="true"
			res_name="VALIDATE_INFO_RES" res_type="0x700EAE33" res_client_send="true" comment="答题信息">
		<req>
			<property name="validateType" type="int" comment="题目类型，2种，选一致(图片一致0，动画一致1，粒子一致2，文字一致3),选答案(4)"/>
			<property name="windowMsg" type="int[]" comment="窗口相关  x,y,w,h,倒计时,"/>
			<property name="validateDate" type="String[]" encoding="UTF-8" comment="题目date"/>
		</req>
		<res>
			<property name="validateAnswer" type="String" encoding="UTF-8" comment="题目Andswer"/>
		</res>
	</prototype>
	
	<!-- 外挂相关协议 end -->
	
	<prototype req_name="GET_RMB_REWARDMSG_REQ" req_type="0x000EB101" req_client_send="true"
		res_name="GET_RMB_REWARDMSG_RES" res_type="0x700EB101" res_client_receive="true" comment="客户端取首充和累计充值活动数据">
		<req>
		</req>
		<res>
			<property name="showPlayerLevel" type="int" comment="多少级显示" />
			<property name="rmbToMoneyBiLi" type="long" comment="1元人民币对应的银子比例" />
			<property name="chongzhiMoney" type="long" comment="累计充值金额" />
			<object-property name="shouchong" type="RmbRewardClientData" comment="首充活动">
				<property name="dataID" type="int" comment="活动ID"/>
				<property name="needMoney" type="long" comment="活动需要钱"/>
				<property name="entityID" type="long[]" comment="奖励物品ID"/>
				<property name="entityNums" type="int[]" comment="奖励物品个数"/>
				<property name="rewardRare" type="boolean[]" comment="是否珍贵"/>
				<property name="isGetBefore" type="boolean" comment="是否领取过"/>
				<property name="showType" type="int" comment="显示类型 0是元，1是银子"/>
				<property name="showMoney" type="long" comment="显示数值"/>
			</object-property>
			<object-property name="leijis" type="RmbRewardClientData[]" comment="累计活动">
				<property name="dataID" type="int" comment="活动ID"/>
				<property name="needMoney" type="long" comment="活动需要钱"/>
				<property name="entityID" type="long[]" comment="奖励物品ID"/>
				<property name="entityNums" type="int[]" comment="奖励物品个数"/>
				<property name="rewardRare" type="boolean[]" comment="是否珍贵"/>
				<property name="isGetBefore" type="boolean" comment="是否领取过"/>
				<property name="showType" type="int" comment="显示类型 0是元，1是银子"/>
				<property name="showMoney" type="long" comment="显示数值"/>
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="GET_RMBREWARD_REQ" req_type="0x000EB102" req_client_send="true"
		res_name="GET_RMBREWARD_RES" res_type="0x700EB102" res_client_receive="true" comment="客户端发送领取某个活动奖励">
		<req>
			<property name="dataID" type="int" comment="活动ID"/>
		</req>
		<res>
			<property name="isSuccess" type="boolean" comment="是否成功"/>
			<property name="result" type="String" encoding="UTF-8" comment="如果失败，里面是提示"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_WEEKANDMONTH_INFO_REQ" req_type="0x000EB103" req_client_send="true"
		res_name="GET_WEEKANDMONTH_INFO_RES" res_type="0x700EB103" res_client_receive="true" comment="客户端请求周月反馈活动信息">
		<req>
		</req>
		<res>
			<property name="showPlayerLevel" type="int" comment="多少级显示" />
			<object-property name="weekActivitys" type="WeekAndMonthClientData[]" comment="周活动">
				<property name="dataID" type="int" comment="活动ID"/>
				<property name="type" type="int" comment="活动类型"/>
				<property name="showRMBMoney" type="long" comment="显示RMB"/>
				<property name="needMoney" type="long" comment="活动需要钱"/>
				<property name="startTime" type="String" encoding="UTF-8" comment="活动开始时间"/>
				<property name="endTime" type="String" encoding="UTF-8" comment="活动结束时间"/>
				<property name="rewardEntityIDs" type="long[]" comment="奖励物品ID"/>
				<property name="rewardEntityNums" type="int[]" comment="奖励物品个数"/>
				<property name="rewardRare" type="boolean[]" comment="是否珍贵"/>
				<property name="buyEntityIDs" type="long[]" comment="奖励物品ID"/>
				<property name="buyEntityNums" type="int[]" comment="奖励物品个数"/>
				<property name="buyRare" type="boolean[]" comment="是否珍贵"/>
				<property name="buyPrice" type="long" comment="购买价格"/>
				<property name="totalMoney" type="long" comment="累计充值"/>
				<property name="totalRMB" type="long" comment="累计充值RMB"/>
				<property name="getValue" type="int" comment="-1代表不能领取，0代表能领取，1代表已经领取"/>
				<property name="canBuy" type="int" comment="-1代表不能购买, 0代表能购买, 1代表已经购买"/>
			</object-property>
			<object-property name="monthActivitys" type="WeekAndMonthClientData[]" comment="月活动">
				<property name="dataID" type="int" comment="活动ID"/>
				<property name="type" type="int" comment="活动类型"/>
				<property name="showRMBMoney" type="long" comment="显示RMB"/>
				<property name="needMoney" type="long" comment="活动需要钱"/>
				<property name="startTime" type="String" encoding="UTF-8" comment="活动开始时间"/>
				<property name="endTime" type="String" encoding="UTF-8" comment="活动结束时间"/>
				<property name="rewardEntityIDs" type="long[]" comment="奖励物品ID"/>
				<property name="rewardEntityNums" type="int[]" comment="奖励物品个数"/>
				<property name="rewardRare" type="boolean[]" comment="是否珍贵"/>
				<property name="buyEntityIDs" type="long[]" comment="奖励物品ID"/>
				<property name="buyEntityNums" type="int[]" comment="奖励物品个数"/>
				<property name="buyRare" type="boolean[]" comment="是否珍贵"/>
				<property name="buyPrice" type="long" comment="购买价格"/>
				<property name="totalMoney" type="long" comment="累计充值"/>
				<property name="totalRMB" type="long" comment="累计充值RMB"/>
				<property name="getValue" type="int" comment="-1代表不能领取，0代表能领取，1代表已经领取"/>
				<property name="canBuy" type="int" comment="-1代表不能购买, 0代表能购买, 1代表已经购买"/>
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="GET_WEEKMONTH_REWARD_REQ" req_type="0x000EB104" req_client_send="true"
		res_name="GET_WEEKMONTH_REWARD_RES" res_type="0x700EB104" res_client_receive="true" comment="领取或购买周月活动奖励">
		<req>
			<property name="dataID" type="int" comment="活动ID"/>
			<property name="handleType" type="int" comment="操作类型，0是领取，1是购买"/>
		</req>
		<res>
			<property name="isSuccess" type="boolean" comment="是否成功"/>
			<property name="dataID" type="int" comment="活动ID"/>
			<property name="handleType" type="int" comment="操作类型，0是领取，1是购买"/>
			<property name="result" type="String" encoding="UTF-8" comment="如果失败，里面是提示"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_WEEKACTIVITY_REQ" req_type="0x000EB105" req_client_send="true"
		res_name="GET_WEEKACTIVITY_RES" res_type="0x700EB105" res_client_receive="true" comment="新充值活动信息">
		<req>
		</req>
		<res>
			<property name="dataID" type="int" comment="活动ID"/>
			<property name="msg" type="String" encoding="UTF-8" comment="活动说明"/>
			<property name="time" type="String" encoding="UTF-8" comment="活动时间"/>
			<object-property name="activitys" type="WeekClientActivity[]" comment="周充值活动">
				<property name="title" type="String" encoding="UTF-8" comment="标题"/>
				<property name="rewardEntityIDs" type="long[]" comment="奖励物品ID"/>
				<property name="rewardEntityNums" type="int[]" comment="奖励物品个数"/>
				<property name="needValue" type="long" comment="需要值"/>
			</object-property>
			<property name="playerChongZhi" type="long" comment="玩家充值金额"/>
			<property name="playerNum" type="int" comment="玩家满足条件次数"/>
			<property name="isGetRewards" type="boolean[]" comment="是否领取过"/>
		</res>
	</prototype>
	
	<prototype req_name="GET_WEEK_REWARD_REQ" req_type="0x000EB106" req_client_send="true"
		res_name="GET_WEEK_REWARD_RES" res_type="0x700EB106" res_client_receive="true" comment="新充值活动奖励领取">
		<req>
			<property name="dataID" type="int" comment="活动ID"/>
			<property name="dataType" type="int" comment="活动类型  1今天 8短的那个天 9长的那个天"/>
		</req>
		<res>
			<property name="isSuccess" type="boolean" comment="是否成功"/>
			<property name="dataID" type="int" comment="活动ID"/>
			<property name="dataType" type="int" comment="活动类型  1今天 8短的那个天 9长的那个天"/>
			<property name="result" type="String" encoding="UTF-8" comment="如果失败，里面是提示"/>
		</res>
	</prototype>
	
	<prototype res_name="WEEKACTIVITY_STATE_RES" res_type="0x700EB107" res_client_receive="true" comment="新充值活动状态">
		<res>
			<property name="isStart" type="boolean" comment="是否有活动"/>
			<property name="isShowPar" type="boolean" comment="是否显示粒子"/>
		</res>
	</prototype>
	
	<prototype req_name="CURRENT_ACTIVITY_REQ" req_type="0x0E0EAE01" req_client_receive="true" coment="通知客户端当前服务器有哪些活动正在开启">
		<req>
			<object-property name="activitys" type="ActivityNotice[]">
				<property name="activityId" type="int" encoding="UTF-8" comment="活动ID"/>
				<property name="activityName" type="String" encoding="UTF-8" comment="活动名字"/>
				<property name="iconName" type="String" encoding="UTF-8" comment="icon的名字"/>
				<property name="needSignup" type="boolean" encoding="UTF-8" comment="是否需要报名"/>
				<property name="des" type="String" encoding="UTF-8" comment="描述"/>
			</object-property>
		</req>
	</prototype>
	<prototype req_name="SIGNUP_ACTIVITY_REQ" req_type="0x0E0EAE02" res_name="SIGNUP_ACTIVITY_RES" res_type="0x8E0EAE01" req_client_send="true" res_client_receive="true" coment="参加某个活动">
		<req>
			<property name="activityId" type="int" encoding="UTF-8" comment="活动ID"/>
		</req>
		<res>
			<property name="result" type="int" encoding="UTF-8" comment="结果:0-成功,1-失败"/>
			<property name="resultMess" type="String" encoding="UTF-8" comment="对结果的描述"/>
		</res>
	</prototype>
	
<!-- 新元神 start-->
	<prototype req_name="SOUL_MESSAGE_REQ" req_type="0x0E0EAE03" res_name="SOUL_MESSAGE_RES" res_type="0x8E0EAE03" req_client_send="true" res_client_receive="true" coment="元神界面信息">
		<req>
			<property name="playerid" type="long" encoding="UTF-8" comment="otherPlayerID" />
		</req>
		<res>
			<property name="action" type="int" comment="0成功 1失败" />
			<property name="showButton" type="int" comment="是否展示升级按钮，0：是 ，1：否" />
			<property name="result" type="String" encoding="UTF-8" comment="成功失败原因,用户界面信息显示"/>
			<property name="currGrade" type="int" comment="当前属性等级" />
			<property name="currCostExp" type="long" comment="下一级升级所需经验" />
			<property name="upgraderesult" type="String" encoding="UTF-8" comment="不能升级原因"/>
			
			<object-property name="souldatas" type="SoulData[]">
				<property name="level" type="int" comment="等级"/>
				<property name="color" type="String" encoding="UTF-8" comment="颜色"/>
				<property name="title" type="String" encoding="UTF-8" comment="标题"/>
				<property name="percent" type="int[]" encoding="UTF-8" comment="所占比例" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="SOUL_UPGRADE_REQ" req_type="0x0E0EAE04" req_client_send="true" coment="元神升级">
		<req>
		</req>
	</prototype>
	<!-- 新元神 end-->
	
	<!-- 登录活动start -->
	<prototype res_name="LOGIN_ACTIVITY_MESS_RES" res_type="0x8E0EAE04" res_client_receive="true" coment="活动首界面信息">
		<res>
			<property name="continueDayMess" type="String" encoding="UTF-8" comment="连续登录了几天描述"/>
			<property name="activityMess" type="String" encoding="UTF-8" comment="活动信息描述"/>
			<property name="indexday" type="int" encoding="UTF-8" comment="第几天登录"/>
			<property name="getstatus" type="String[]" encoding="UTF-8" comment="lingquzhuangtai" />
			
			<object-property name="loginActivitys" type="LoginActivityArticle[]">
				<property name="status" type="int" encoding="UTF-8" comment="状态"/>
				<property name="pnums" type="int" encoding="UTF-8" comment="图片数量"/>
				<property name="days" type="String" encoding="UTF-8" comment="第几天"/>
				<property name="clieckMess" type="String" encoding="UTF-8" comment="物品泡泡信息"/>
				<property name="showMess" type="String" encoding="UTF-8" comment="活动信息"/>
				<property name="iconid" type="String" encoding="UTF-8" comment="图片id"/>
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="LOGIN_ACTIVITY_GET_REQ" req_type="0x0E0EAE05" req_client_send="true" coment="领取奖励">
		<req>
			<property type="int" name="articleIndex" comment="领取某个奖励" />
		</req>
	</prototype>
	
	<prototype res_name="CONTINUE_ACTIVITY_MESS_RES" res_type="0x8E0EAE05" res_client_receive="true" coment="活动首界面信息">
		<res>
			<property name="continueDays" type="int" encoding="UTF-8" comment="连续登录了几天"/>
			<property name="turnCardNums" type="int" encoding="UTF-8" comment="翻拍次数"/>
			<property name="activityHelp" type="String" encoding="UTF-8" comment="活动说明信息"/>
			<property name="ids" type="long[]" encoding="UTF-8" comment="九宫格物品id"/>
			<property name="stats" type="int[]" encoding="UTF-8" comment="九宫格物品状态(0:未翻开-1:已领取)"/>
			<property name="noticeMess" type="String" encoding="UTF-8" comment="公告信息"/>
		</res>
	</prototype>
	
	<prototype req_name="CONTINUE_ACTIVITY_GET_REQ" req_type="0x0E0EAE06" req_client_send="true" coment="领取奖励">
		<req>
			<property type="int" name="articleIndex" comment="领取某个奖励"/>
			<property type="long" name="id" comment="奖励id"/>
		</req>
	</prototype>
	
	<!-- 登录活动end -->
	
	<prototype req_name="NEED_CHANGE_NAME_REQ" req_client_receive="true" res_client_receive="true" req_type="0x0E0EAA03" coment="是否要改名">
		<req>
			<property name="notice" type="String" encoding="UTF-8" comment="提示"/>
			<property name="needChangeIds" type="long[]" encoding="UTF-8" comment="要改名的角色名称列表"/>
		</req>
	</prototype>
	
	<prototype req_name="CHANGE_PLAYER_NAME_REQ" res_name="CHANGE_PLAYER_NAME_RES" req_client_send="true" res_client_receive="true" req_type="0x0E0EAA04" res_type="0x8E0EAA04" coment="改名-合服后使用">
		<req>
			<property name="playerId" type="long" encoding="UTF-8" comment="要改名的玩家ID" />
			<property name="newName" type="String" encoding="UTF-8" comment="新名字" />
		</req>
		<res>
			<property name="playerId" type="long" encoding="UTF-8" comment="要改名的玩家ID" />
			<property name="newName" type="String" encoding="UTF-8" comment="新名字" />
			<property name="result" type="int" encoding="UTF-8" comment="0-成功,1-失败"/>
			<property name="notice" type="String" encoding="UTF-8" comment="提示"/>
		</res>
	</prototype>
	
	<!-- 仙缘论道功能扩展 -->
	<prototype req_name="CALL_FRIEND_DRINKING_REQ" res_name="CALL_FRIEND_DRINKING_RES" req_client_send="true" res_client_receive="true" req_type="0x0E0EAA05" res_type="0x8E0EAA05" coment="改名-合服后使用">
		<req>
			<property name="activityType" type="byte" comment="国内仙缘(0),国外仙缘(1),国内论道(2),国外论道(3)"></property>
		</req>
		<res>
			<property name="contentMess" type="String" encoding="UTF-8" comment="提示内容"/>
			<property name="activityType" type="byte" comment="国内仙缘(0),国外仙缘(1),国内论道(2),国外论道(3)"></property>
		</res>
	</prototype>
	
	<prototype req_name="DRINKING_FRIEND_DO_REQ" req_client_send="true" res_client_receive="true" req_type="0x0E0EAA06" coment="改名-合服后使用">
		<req>
			<property name="doType" type="byte" comment="立即前去(0),取消(1),稍等(2)"></property>
			<property name="activityType" type="byte" comment="国内仙缘(0),国外仙缘(1),国内论道(2),国外论道(3)"></property>
		</req>
	</prototype>
	
	<!-- 宠物迷城 -->
	<prototype res_name="PET_DAO_DATA_RES" res_client_receive="true" res_type="0x8E0EAA06" coment="宠物迷城基础数据">
		<res>
			<object-property name="petdatas" type="PetData[]">
					<property name="level" type="int" comment="等级"></property>
					<property name="daotype" type="int" encoding="UTF-8" comment="迷城类型(0:普通  1:豪华  2:至尊)"/>
					<property name="petname" type="String[]" comment="宠物名集"></property>
					<property name="petnames" type="String[]" comment="客户端图鉴需要的"></property>
					<property name="iconname" type="String[]" comment="宠物icon名字"></property>
					<property name="costsilver" type="long" encoding="UTF-8" comment="花费银子数"/>
					<property name="desc" type="String" comment="描述"></property>
					<property name="isopen" type="boolean" comment="是否开放"></property>
			</object-property>	
		</res>
	</prototype>
	
	<prototype req_name="ENTER_PET_DAO_REQ" req_client_send="true" req_type="0x0E0EAA24" coment="进入宠物迷城">
		<req>
			<property name="minlevel" type="int" encoding="UTF-8" comment="最小等级限制"/>
			<property name="daotype" type="int" encoding="UTF-8" comment="迷城类型(0:普通  1:豪华  2:至尊)"/>
		</req>
	</prototype>
	
	<prototype req_name="PET_JIN_JIE_REQ" req_client_send="true" req_type="0x0E0EAA54" 
		res_name="PET_JIN_JIE_RES" res_client_receive="true" res_type="0x8E0EAA54" coment="宠物进阶">
		<req>
			<property name="petId" type="long" comment="宠物ID"></property>
		</req>
		<res>
			<property name="newGrade" type="int" comment="新的进阶等级"></property>
		</res>
	</prototype>
	
	<prototype req_name="PET_LIST_REQ" req_client_send="true" req_type="0x0E0EAA55" 
		res_name="PET_LIST_RES" res_client_receive="true" res_type="0x8E0EAA55" coment="宠物图鉴列表">
		<res>
			<property name="havePets" type="String" comment="获得过的宠物，用#连接起来的宠物统计名称"></property>
			<object-property name="petList" type="GradePet[]">
					<property name="name" type="String" encoding="UTF-8" comment="名称"></property>
					<property name="progName" type="String" encoding="UTF-8" comment="程序用的名称、统计名称"></property>
					<property name="icon" type="String" comment="宠物icon名字"></property>
			</object-property>
			<property name="scaleArr" type="int[]" comment="各个进阶等级缩放比率"></property>
		</res>
	</prototype>
	
	<prototype req_name="PET_FIND_CUR_INDEX_REQ" req_client_send="true" req_type="0x0E0EAA5A" 
		res_name="PET_FIND_CUR_INDEX_RES" res_client_receive="true" res_type="0x8E0EAA5A" coment="获得图鉴默认位置">
		<req>
		</req>
		<res>
			<property name="index" type="int" comment="图鉴默认位置"></property>
		</res>
	</prototype>
	
	<prototype req_name="PET_DETAIL_REQ" req_client_send="true" req_type="0x0E0EAA56" 
		res_name="PET_DETAIL_RES" res_client_receive="true" res_type="0x8E0EAA56" coment="宠物图鉴详情">
		<req>
			<property name="progName" type="String" comment="程序用的名称、统计名称"></property>
		</req>
		<res>
			<object-property name="petDetail" type="GradePet">
					<property name="progName" type="String" encoding="UTF-8" comment="程序用的名称、统计名称"></property>
					<property name="name" type="String" comment="宠物名字"></property>
					<property name="maxGrade" type="int" comment=""></property>
					<property name="lv4Avatar" type="String" comment=""></property>
					<property name="lv7Avatar" type="String" comment=""></property>
					<property name="jiChuJiNengDesc" type="String"  encoding="UTF-8" comment=""></property>
					<property name="tianFuJiNengDesc" type="String"  encoding="UTF-8" comment=""></property>
					<property name="gainFrom" type="String"  encoding="UTF-8" comment=""></property>
					<property name="bornSkill" type="int[]" comment="两个天生技能的ID"></property>
					<property name="icons" type="String[]"  encoding="UTF-8" comment="两个天生技能的icon"></property>
					<property name="skDesc" type="String[]"  encoding="UTF-8" comment="两个天生技能的泡泡"></property>
					<property name="baseAvatar" type="String" encoding="UTF-8" comment=""></property>
					<property name="character" type="int" encoding="UTF-8" comment="性格"></property>
					<property name="takeLevel" type="int" encoding="UTF-8" comment="携带等级"></property>
					<property name="rarity" type="int" encoding="UTF-8" comment="稀有度"></property>
					<property name="minValues" type="int[]" encoding="UTF-8" comment="5个属性的最低值"></property>
					<property name="maxValues" type="int[]" encoding="UTF-8" comment="最高值"></property>
					<property name="partBody" type="String[]" encoding="UTF-8" comment="粒子，[0~8]"></property>
					<property name="partBodyY" type="int[]" encoding="UTF-8" comment=""></property>
					<property name="partFoot" type="String[]" encoding="UTF-8" comment=""></property>
					<property name="partFootY" type="int[]" encoding="UTF-8" comment=""></property>
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="PET_CHONG_BAI_REQ" req_client_send="true" req_type="0x0E0EAA57" 
		res_name="PET_CHONG_BAI_RES" res_client_receive="true" res_type="0x8E0EAA58" coment="宠物崇拜">
		<req>
			<property name="petId" type="long" comment="宠物ID"></property>
		</req>
		<res>
				<property name="tgtPetId" type="long" comment="目标崇拜宠物id"></property>
				<property name="ownerName" type="String"  encoding="UTF-8" comment="主人名称"></property>
		</res>
	</prototype>
	
	<prototype  req_name="PET_BOOK_UI_REQ" req_client_send="true" req_type="0x0E0EAA59"
		res_name="PET_BOOK_UI_RES" res_client_receive="true" res_type="0x8E0EAA59" coment="使用宠物技能书后打开传承界面">
		<req></req>
		<res>
				<property name="bookName" type="String" comment="技能书名称"></property>
				<property name="baseNames" type="String[]" comment="基础技能书名称"></property>
				<property name="talentNames" type="String[]" comment="天赋技能书名称"></property>
				<property name="holeNames" type="String[]" comment="开孔技能书名称"></property>
				<property name="allTakeSkillBookNames" type="String[]" comment="所有技能抽取符名称"></property>
				<property name="lockSkillNames" type="String[]" comment="技能锁定符名称"></property>
				<property name="openSlotNeedBooks" type="int[]" comment="开孔天赋需要技能书个数"></property>
		</res>
	</prototype>
	
	<prototype  req_name="PET_SKILL_TAKE_REQ" req_client_send="true" req_type="0x0E0EAA60"
		res_name="PET_SKILL_TAKE_RES" res_client_receive="true" res_type="0x8E0EAA60" coment="抽取宠物技能">
		<req>
			<property name="petId" type="long" comment="宠物ID"></property>
			<property name="fuBagIndex" type="long" comment="抽取符的entityId"></property>
			<property name="tgtSkillIndex" type="int" comment="第几个技能"></property>
		</req>
		<res>
			<property name="petId" type="long" comment="宠物ID"></property>
			<property name="fuBagIndex" type="long" comment="抽取符在背包中的位置"></property>
			<property name="tgtSkillIndex" type="int" comment="第几个技能"></property>
		</res>
	</prototype>
	
	<prototype  req_name="PET_TALENT_UP_REQ" req_client_send="true" req_type="0x0E0EAA61"
		res_name="PET_TALENT_UP_RES" res_client_receive="true" res_type="0x8E0EAA61" coment="开启宠物天赋">
		<req>
			<property name="petId" type="long" comment="宠物ID"></property>
			<property name="bookInBagIdx" type="long" comment="技能书在背包中的位置"></property>
			<property name="bind1Index" type="int" comment="第一个绑定技能"></property>
			<property name="bind2Index" type="int" comment="第二个绑定技能"></property>
			<property name="tkA" type="long" comment="绑定符A id"></property>
			<property name="tkB" type="long" comment="绑定符B id"></property>
		</req>
		<res>
			<property name="petId" type="long" comment="宠物ID"></property>
			<property name="changedIndex" type="int" comment="发生改变的技能下标"></property>
			<property name="icon" type="String" comment="技能图标"></property>
		</res>
	</prototype>
	<prototype  req_name="PET_SKILL_UP_REQ" req_client_send="true" req_type="0x0E0EAA62"
		res_name="PET_SKILL_UP_RES" res_client_receive="true" res_type="0x8E0EAA62" coment="宠物技能升级">
		<req>
			<property name="petId" type="long" comment="宠物ID"></property>
			<property name="bookInBagIdx" type="long" comment="技能书在背包中的位置"></property>
			<property name="typeCode" type="int" comment="1：基础技能；2：天赋技能"></property>
			<property name="skillIndex" type="int" comment="技能下标"></property>
		</req>
		<res>
			<property name="petId" type="long" comment="宠物ID"></property>
			<property name="retCode" type="int" comment="返回码 "></property>
			<property name="String" type="String" comment="信息"></property>
		</res>
	</prototype>
	<prototype req_name="PET2_QUERY_BY_ARTICLE_REQ" req_type="0x0E0EAA63" req_client_send="true" comment="通过宠物物品id请求宠物">
		<req>
			<property name="petEntityId" type="long" comment="宠物物品id"></property>
			<property name="isOwner" type="boolean" comment="是否查自己的"></property>
		</req>
	</prototype>
	<prototype req_name="PET3_QUERY_BY_ARTICLE_REQ" req_type="0x0E0EAA7E" req_client_send="true" comment="通过宠物物品id请求宠物">
		<req>
			<property name="petEntityId" type="long" comment="宠物物品id"></property>
			<property name="isOwner" type="boolean" comment="是否查自己的"></property>
		</req>
	</prototype>
	<prototype req_name="PET2_LiZi_REQ" req_type="0x0E0EAA7F" req_client_send="true" 
		res_name="PET2_LiZi_RES" res_type="0x8E0EAA7F"	res_client_receive="true" comment="请求宠物粒子信息">
		<req>
			<property name="petId" type="long" comment="宠物的id"></property>
		</req>
		<res>
			<object-property name="pet" type="Pet" comment="返回宠物实体">
				<property name="id" type="long" comment="宠物的id"></property>
				<property name="name" type="String" encoding="UTF-8" comment="宠物的名字"></property>
				<property name="ownerId" type="long" comment="宠物的主人"></property>
				<property name="category" type="String" encoding="UTF-8" comment="宠物的种类(灵狐，狂狼等)"></property>
				<property name="petSort" type="String" encoding="UTF-8" comment="宠物的分类(精怪，兽灵等)"></property>
				<property name="career" type="byte" comment="宠物的职业倾向"></property>
				<property name="character" type="byte" comment="宠物的性格"></property>
				<property name="sex" type="byte" comment="宠物的性别"></property>
				<property name="breedTimes" type="byte" comment="宠物可生育的次数"></property>
				<property name="breededTimes" type="byte" comment="宠物已经生育的次数"></property>

				<property name="identity" type="boolean" comment="是否鉴定过"></property>
				<property name="maxHappyness" type="int" comment="最大宠物的快乐值"></property>
				<property name="maxLifeTime" type="int" comment="最大宠物的寿命"></property>
				<property name="lifeTime" type="int" comment="宠物的寿命"></property>
				<property name="happyness" type="int" comment="宠物的快乐值"></property>
				<property name="level" type="short" comment="宠物的等级"></property>
				<property name="exp" type="int" comment="宠物当前的经验值"></property>
				<property name="nextLevelExp" type="int" comment="宠物升到下级的经验值"></property>
				<property name="quality" type="byte" comment="宠物的品质，非为5档，0~4：普兽（白）、灵兽（绿）、仙兽（蓝）、神兽（紫）、圣兽（橙），需要鉴定"></property>
				<property name="starClass" type="byte" comment="宠物的星级"></property>
				<property name="generation" type="byte" comment="宠物的类型、一代0，二代1"></property>
				<property name="variation" type="byte" comment="宠物是否变异，0为不变异，否则1-5为变异等级"></property>
				<property name="showStrengthQuality" type="int" comment="宠物的力量资质"></property>
				<property name="showDexterityQuality" type="int" comment="宠物的身法资质"></property>
				<property name="showSpellpowerQuality" type="int" comment="宠物的灵力资质"></property>
				<property name="showConstitutionQuality" type="int" comment="宠物的耐力资质"></property>
				<property name="showDingliQuality" type="int" comment="宠物的定力资质"></property>
				<property name="showMinStrengthQuality" type="int" comment="宠物的力量资质(最小值)"></property>
				<property name="showMinDexterityQuality" type="int" comment="宠物的身法资质(最小值)"></property>
				<property name="showMinSpellpowerQuality" type="int" comment="宠物的灵力资质(最小值)"></property>
				<property name="showMinConstitutionQuality" type="int" comment="宠物的耐力资质(最小值)"></property>
				<property name="showMinDingliQuality" type="int" comment="宠物的定力资质(最小值)"></property>
				<property name="showMaxStrengthQuality" type="int" comment="宠物的力量资质(满值)"></property>
				<property name="showMaxDexterityQuality" type="int" comment="宠物的身法资质(满值)"></property>
				<property name="showMaxSpellpowerQuality" type="int" comment="宠物的灵力资质(满值)"></property>
				<property name="showMaxConstitutionQuality" type="int" comment="宠物的耐力资质(满值)"></property>
				<property name="showMaxDingliQuality" type="int" comment="宠物的定力资质(满值)"></property>
				<property name="trainLevel" type="int" comment="宠物的携带等级"></property>
				<property name="rarity" type="byte" comment="宠物的稀有度，0-随处可见,1-百里挑一,2-千载难逢"></property>
				<property name="growthClass" type="byte" comment="宠物的成长品质"></property>
				<property name="growth" type="int" comment="宠物的成长值"></property>
				<property name="skillIds" type="int[]" comment="宠物拥有的技能ids"></property>
				<property name="activeSkillLevels" type="int[]" comment="宠物拥有的技能等级"></property>
				<property name="petPropsId" type="long" comment="宠物的幻化物品实体id"></property>
				<property name="strength" type="int" comment="宠物的力量"></property>
				<property name="dexterity" type="int" comment="宠物的身法"></property>
				<property name="spellpower" type="int" comment="宠物的灵力"></property>
				<property name="constitution" type="int" comment="宠物的耐力"></property>
				<property name="dingli" type="int" comment="宠物的定力"></property>
				<property name="showPhyAttack" type="int" comment="宠物的外功强度"></property>
				<property name="phyDefence" type="int" comment="宠物的外功防御"></property>
				<property name="showMagicAttack" type="int" comment="宠物的内功强度"></property>
				<property name="magicDefence" type="int" comment="宠物的内功防御"></property>
				<property name="maxHP" type="int" comment="宠物的最大血量"></property>
				<property name="hp" type="int" comment="宠物当前血量"></property>
				<property name="criticalHit" type="int" comment="宠物的暴击"></property>
				<property name="hit" type="int" comment="宠物的命中"></property>
				<property name="dodge" type="int" comment="宠物的闪避"></property>
				<property name="hitRate" type="int" comment="命中率"></property>
				<property name="dodgeRate" type="int" comment="闪避率"></property>
				<property name="criticalHitRate" type="int" comment="暴击率"></property>
				<property name="physicalDecrease" type="int" comment="外功防御率"></property>
				<property name="spellDecrease" type="int" comment="内功防御率"></property>
				<property name="fireDefence" type="int" comment="宠物的火防"></property>
				<property name="windDefence" type="int" comment="宠物的风防"></property>
				<property name="blizzardDefence" type="int" comment="宠物的冰防"></property>
				<property name="thunderDefence" type="int" comment="宠物的雷防"></property>
				<property name="unAllocatedPoints" type="int" comment="还没分配的属性点"></property>
				<property name="activationType" type="byte" comment="宠物的模式, 0-被动，1-主动，2-只跟随"></property>
				<property name="avataRace" type="String" encoding="UTF-8" comment="客户端用来定位形象">
				</property>
				<property name="avataSex" type="String" encoding="UTF-8" comment="客户端用来定位形象" />
				<property name="avata" type="String[]" encoding="UTF-8" comment="玩家身上的部件关键字：比如头部动画名字"></property>
				<property name="avataType" type="byte[]" comment="玩家身上的部件关键字"></property>
				<property name="commonSkillId" type="int" comment="普通攻击id"></property>
				<property name="qualityScore" type="int" comment="宠物得分"></property>
				<!-- 新增的粒子信息 -->
				<property name="objectScale" type="short" encoding="UTF-8" comment="" />
				<property name="particleName" type="String" encoding="UTF-8" comment="" />
				<property name="particleY" type="short" encoding="UTF-8" comment="" />
				
				<property name="footParticleName" type="String" encoding="UTF-8" comment="" />
				<property name="footParticleY" type="short" encoding="UTF-8" comment="" />
			</object-property>
			<object-property name="skillInfos" type="SkillInfo[]" comment="返回宠物技能">
				<property name="id" type="int"></property>
				<property name="skillType" type="byte"></property>
				<property name="maxLevel" type="int"></property>
				<property name="indexOfCareerThread" type="int"></property>
				<property name="needCareerThreadPoints" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="columnIndex" type="byte" comment="" />
			</object-property>

			<object-property name="petSkillReleaseProbability" type="PetSkillReleaseProbability[]" comment="返回宠物技能">
				<property name="skillId" type="int"></property>
				<property name="character" type="int"></property>
				<property name="match" type="int" comment="扩大1000"></property>
				<property name="noMatch" type="int"></property>
			</object-property>

			<property name="description" type="String[]" encoding="UTF-8" comment="" />
			<!-- 新版宠物增加的 -->
			<object-property name="bornSkills" type="SkillInfo[]" comment="天生技能两个">
				<property name="id" type="int"></property>
				<property name="skillType" type="byte"></property>
				<property name="maxLevel" type="int"></property>
				<property name="indexOfCareerThread" type="int"></property>
				<property name="needCareerThreadPoints" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="columnIndex" type="byte" comment="" />
			</object-property>
			<object-property name="talentSkills" type="SkillInfo[]" comment="天赋若干个">
				<property name="id" type="int"></property>
				<property name="skillType" type="byte"></property>
				<property name="maxLevel" type="int"></property>
				<property name="indexOfCareerThread" type="int"></property>
				<property name="needCareerThreadPoints" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="columnIndex" type="byte" comment="" />
			</object-property>
			<property name="grade" type="int"  comment="进阶等级" ></property>
			<property name="wuXing" type="int"  comment="悟性" ></property>
			<property name="addBooks" type="int"  comment="已经用过多少技能书" ></property>
			<property name="rankIndex" type="int"  comment="排在多少名，从0开始，-1表示不在榜单。" ></property>
			<property name="hunExp" type="int"  comment="当前魂值" ></property>
			<property name="toNextHunExp" type="int"  comment="升级魂值" ></property>
			<property name="jinJieAtt" type="int[]"  comment="进阶获得的属性加成。" ></property>
		</res>
	</prototype>
	<prototype req_name="PET2_QUERY_REQ" req_type="0x0E0EAA64" req_client_send="true" 
		res_name="PET2_QUERY_RES" res_type="0x8E0EAA64"	res_client_receive="true" comment="请求宠物信息">
		<req>
			<property name="petId" type="long" comment="宠物的id"></property>
		</req>
		<res>
			<object-property name="pet" type="Pet" comment="返回宠物实体">
				<property name="id" type="long" comment="宠物的id"></property>
				<property name="name" type="String" encoding="UTF-8" comment="宠物的名字"></property>
				<property name="ownerId" type="long" comment="宠物的主人"></property>
				<property name="category" type="String" encoding="UTF-8" comment="宠物的种类(灵狐，狂狼等)"></property>
				<property name="petSort" type="String" encoding="UTF-8" comment="宠物的分类(精怪，兽灵等)"></property>
				<property name="career" type="byte" comment="宠物的职业倾向"></property>
				<property name="character" type="byte" comment="宠物的性格"></property>
				<property name="sex" type="byte" comment="宠物的性别"></property>
				<property name="breedTimes" type="byte" comment="宠物可生育的次数"></property>
				<property name="breededTimes" type="byte" comment="宠物已经生育的次数"></property>

				<property name="identity" type="boolean" comment="是否鉴定过"></property>
				<property name="maxHappyness" type="int" comment="最大宠物的快乐值"></property>
				<property name="maxLifeTime" type="int" comment="最大宠物的寿命"></property>
				<property name="lifeTime" type="int" comment="宠物的寿命"></property>
				<property name="happyness" type="int" comment="宠物的快乐值"></property>
				<property name="level" type="short" comment="宠物的等级"></property>
				<property name="exp" type="int" comment="宠物当前的经验值"></property>
				<property name="nextLevelExp" type="int" comment="宠物升到下级的经验值"></property>
				<property name="quality" type="byte" comment="宠物的品质，非为5档，0~4：普兽（白）、灵兽（绿）、仙兽（蓝）、神兽（紫）、圣兽（橙），需要鉴定"></property>
				<property name="starClass" type="byte" comment="宠物的星级"></property>
				<property name="generation" type="byte" comment="宠物的类型、一代0，二代1"></property>
				<property name="variation" type="byte" comment="宠物是否变异，0为不变异，否则1-5为变异等级"></property>
				<property name="showStrengthQuality" type="int" comment="宠物的力量资质"></property>
				<property name="showDexterityQuality" type="int" comment="宠物的身法资质"></property>
				<property name="showSpellpowerQuality" type="int" comment="宠物的灵力资质"></property>
				<property name="showConstitutionQuality" type="int" comment="宠物的耐力资质"></property>
				<property name="showDingliQuality" type="int" comment="宠物的定力资质"></property>
				<property name="showMinStrengthQuality" type="int" comment="宠物的力量资质(最小值)"></property>
				<property name="showMinDexterityQuality" type="int" comment="宠物的身法资质(最小值)"></property>
				<property name="showMinSpellpowerQuality" type="int" comment="宠物的灵力资质(最小值)"></property>
				<property name="showMinConstitutionQuality" type="int" comment="宠物的耐力资质(最小值)"></property>
				<property name="showMinDingliQuality" type="int" comment="宠物的定力资质(最小值)"></property>
				<property name="showMaxStrengthQuality" type="int" comment="宠物的力量资质(满值)"></property>
				<property name="showMaxDexterityQuality" type="int" comment="宠物的身法资质(满值)"></property>
				<property name="showMaxSpellpowerQuality" type="int" comment="宠物的灵力资质(满值)"></property>
				<property name="showMaxConstitutionQuality" type="int" comment="宠物的耐力资质(满值)"></property>
				<property name="showMaxDingliQuality" type="int" comment="宠物的定力资质(满值)"></property>
				<property name="trainLevel" type="int" comment="宠物的携带等级"></property>
				<property name="rarity" type="byte" comment="宠物的稀有度，0-随处可见,1-百里挑一,2-千载难逢"></property>
				<property name="growthClass" type="byte" comment="宠物的成长品质"></property>
				<property name="growth" type="int" comment="宠物的成长值"></property>
				<property name="skillIds" type="int[]" comment="宠物拥有的技能ids"></property>
				<property name="activeSkillLevels" type="int[]" comment="宠物拥有的技能等级"></property>
				<property name="petPropsId" type="long" comment="宠物的幻化物品实体id"></property>
				<property name="strength" type="int" comment="宠物的力量"></property>
				<property name="dexterity" type="int" comment="宠物的身法"></property>
				<property name="spellpower" type="int" comment="宠物的灵力"></property>
				<property name="constitution" type="int" comment="宠物的耐力"></property>
				<property name="dingli" type="int" comment="宠物的定力"></property>
				<property name="showPhyAttack" type="int" comment="宠物的外功强度"></property>
				<property name="phyDefence" type="int" comment="宠物的外功防御"></property>
				<property name="showMagicAttack" type="int" comment="宠物的内功强度"></property>
				<property name="magicDefence" type="int" comment="宠物的内功防御"></property>
				<property name="maxHP" type="int" comment="宠物的最大血量"></property>
				<property name="hp" type="int" comment="宠物当前血量"></property>
				<property name="criticalHit" type="int" comment="宠物的暴击"></property>
				<property name="hit" type="int" comment="宠物的命中"></property>
				<property name="dodge" type="int" comment="宠物的闪避"></property>
				<property name="hitRate" type="int" comment="命中率"></property>
				<property name="dodgeRate" type="int" comment="闪避率"></property>
				<property name="criticalHitRate" type="int" comment="暴击率"></property>
				<property name="physicalDecrease" type="int" comment="外功防御率"></property>
				<property name="spellDecrease" type="int" comment="内功防御率"></property>
				<property name="fireDefence" type="int" comment="宠物的火防"></property>
				<property name="windDefence" type="int" comment="宠物的风防"></property>
				<property name="blizzardDefence" type="int" comment="宠物的冰防"></property>
				<property name="thunderDefence" type="int" comment="宠物的雷防"></property>
				<property name="unAllocatedPoints" type="int" comment="还没分配的属性点"></property>
				<property name="activationType" type="byte" comment="宠物的模式, 0-被动，1-主动，2-只跟随"></property>
				<property name="avataRace" type="String" encoding="UTF-8" comment="客户端用来定位形象">
				</property>
				<property name="avataSex" type="String" encoding="UTF-8" comment="客户端用来定位形象" />
				<property name="avata" type="String[]" encoding="UTF-8" comment="玩家身上的部件关键字：比如头部动画名字"></property>
				<property name="avataType" type="byte[]" comment="玩家身上的部件关键字"></property>
				<property name="commonSkillId" type="int" comment="普通攻击id"></property>
				<property name="qualityScore" type="int" comment="宠物得分"></property>
			</object-property>
			<object-property name="skillInfos" type="SkillInfo[]" comment="返回宠物技能">
				<property name="id" type="int"></property>
				<property name="skillType" type="byte"></property>
				<property name="maxLevel" type="int"></property>
				<property name="indexOfCareerThread" type="int"></property>
				<property name="needCareerThreadPoints" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="columnIndex" type="byte" comment="" />
			</object-property>

			<object-property name="petSkillReleaseProbability" type="PetSkillReleaseProbability[]" comment="返回宠物技能">
				<property name="skillId" type="int"></property>
				<property name="character" type="int"></property>
				<property name="match" type="int" comment="扩大1000"></property>
				<property name="noMatch" type="int"></property>
			</object-property>

			<property name="description" type="String[]" encoding="UTF-8" comment="" />
			<!-- 新版宠物增加的 -->
			<object-property name="bornSkills" type="SkillInfo[]" comment="天生技能两个">
				<property name="id" type="int"></property>
				<property name="skillType" type="byte"></property>
				<property name="maxLevel" type="int"></property>
				<property name="indexOfCareerThread" type="int"></property>
				<property name="needCareerThreadPoints" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="columnIndex" type="byte" comment="" />
			</object-property>
			<object-property name="talentSkills" type="SkillInfo[]" comment="天赋若干个">
				<property name="id" type="int"></property>
				<property name="skillType" type="byte"></property>
				<property name="maxLevel" type="int"></property>
				<property name="indexOfCareerThread" type="int"></property>
				<property name="needCareerThreadPoints" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="columnIndex" type="byte" comment="" />
			</object-property>
			<property name="grade" type="int"  comment="进阶等级" ></property>
			<property name="wuXing" type="int"  comment="悟性" ></property>
			<property name="addBooks" type="int"  comment="已经用过多少技能书" ></property>
			<property name="rankIndex" type="int"  comment="排在多少名，从0开始，-1表示不在榜单。" ></property>
			<property name="hunExp" type="int"  comment="当前魂值" ></property>
			<property name="toNextHunExp" type="int"  comment="升级魂值" ></property>
			<property name="jinJieAtt" type="int[]"  comment="进阶获得的属性加成。" ></property>
		</res>
	</prototype>
	<prototype req_name="QUERY_SKILLINFO_PET2_REQ" res_name="QUERY_SKILLINFO_PET2_RES" 
		req_type="0x0E0EAA65" res_type="0x8E0EAA65"
		req_client_send="true" res_client_receive="true" comment="请求宠物某个《天赋or天生》技能的详细信息">
		<req>
			<property name="id" type="int" comment="技能编号"></property>
			<property name="level" type="short" comment="技能等级"></property>
			<property name="petId" type="long" comment="拥有这个技能的宠物id，-1000表示从宠物图鉴里查看天生技能。"></property>
		</req>
		<res>
			<property name="petId" type="long" comment="拥有这个技能的宠物id"></property>
			<property name="id" type="int" comment="技能编号"></property>
			<property name="description" type="String" encoding="UTF-8" comment="技能某个等级的详细描述（UUB格式）"></property>
			<property name="level" type="int" comment="等级"></property>
		</res>
	</prototype>
	<prototype req_name="PET2_LIAN_HUN_REQ" res_name="PET2_LIAN_HUN_REs"
		req_type="0x0E0EAA66" res_type="0x8E0EAA66"
		req_client_send="true" res_client_receive="true" comment="宠物炼魂，吃道具">
		<req>
			<property name="petId" type="long" comment="宠物id"></property>
			<property name="foodId" type="long" comment="道具实例id"></property>
		</req>
		<res>
			<property name="petId" type="long" comment="宠物id"></property>
			<property name="hun" type="int" comment="新的炼魂值。"></property>
			<property name="hunNeed" type="int" comment="升级需要值"></property>
		</res>
	</prototype>
	<prototype req_name="PET2_HunArticle_REQ" res_name="PET2_HunArticle_RES"
		req_type="0x0E0EAA6B" res_type="0x8E0EAA6B"
		req_client_send="true" res_client_receive="true" comment="宠物有哪些魂道具可以吃">
		<req>
		</req>
		<res>
			<property name="names"  type="String" encoding="UTF-8" comment="道具名字，#分割"></property>
		</res>
	</prototype>
	<prototype req_name="PET2_LIAN_DAN_REQ" res_name="PET2_LIAN_DAN_RES"
		req_type="0x0E0EAA67" res_type="0x8E0EAA67"
		req_client_send="true" res_client_receive="true" comment="把宠物转换为炼魂道具。">
		<req>
			<property name="petId" type="long" comment="宠物id"></property>
		</req>
		<res>
			<property name="petId" type="long" comment="宠物id;-1000 开启宠物变道具界面;-2000 开启宠物吃魂界面"></property>
		</res>
	</prototype>
	<prototype req_name="PET2_UP_LV_REQ" res_name="PET2_UP_LV_RES"
		req_type="0x0E0EAA69" res_type="0x8E0EAA69"
		req_client_send="true" res_client_receive="true" comment="宠物炼魂升级">
		<req>
			<property name="petId" type="long" comment="宠物id"></property>
		</req>
		<res>
			<property name="petId" type="long" comment="宠物id"></property>
			<property name="newTakeLv" type="int" comment="新的携带等级"></property>
			<property name="hunNeed" type="int" comment="升级需要值"></property>
		</res>
	</prototype>
	<prototype req_name="PET2_UI_DESC_REQ" res_name="PET2_UI_DESC_RES"
		req_type="0x0E0EAA68" res_type="0x8E0EAA68"
		req_client_send="true" res_client_receive="true" comment="宠物界面描述">
		<req>
			<property name="descKey" type="String" encoding="UTF-8" comment="" />
		</req>
		<res>
			<property name="descKey" type="String" encoding="UTF-8" comment="" />
			<property name="desc" type="String" encoding="UTF-8" comment="" />
		</res>
	</prototype>
	<prototype req_name="PET2_XueMai_REQ" res_name="PET2_XueMai_RES"
		req_type="0x0E0EAA6A" res_type="0x8E0EAA6A"
		req_client_send="true" res_client_receive="true" comment="查询血脉">
		<req>
		</req>
		<res>
			<property name="xueMai" type="long" encoding="UTF-8" comment="" />
		</res>
	</prototype>
	
		<prototype req_name="ACTIVENESS_LIST_REQ" res_name="ACTIVENESS_LIST_RES" req_type="0x0E0EAA25" res_type="0x8E0EAA07" req_client_send="true"
		res_client_receive="true" comment="活跃度活动列表">
		<req></req>
		<res>
			<object-property name="activityForActiveness" type="ActivityForActiveness[]" comment="活跃度活动信息">
				<property name="id" type="int" encoding="UTF-8" comment="ID" />
				<property name="name" type="String" encoding="UTF-8" comment="名字" />
				<property name="startGame" type="String" encoding="UTF-8" comment="地图名(资源)" />
				<property name="startNpc" type="String" encoding="UTF-8" comment="npc名字" />
				<property name="startX" type="int" encoding="UTF-8" comment="X坐标" />
				<property name="startY" type="int" encoding="UTF-8" comment="Y坐标" />
				<property name="shortdes" type="String" encoding="UTF-8" comment="简述" />
				<property name="activityAdd" type="int" encoding="UTF-8" comment="增加活跃度" />
				<property name="levelLimit" type="int" encoding="UTF-8" comment="等级限制.等级小于这个等级不寻路" />
				<property name="exp" type="int" encoding="UTF-8" comment="经验星级" />
				<property name="article" type="int" encoding="UTF-8" comment="物品星级" />
				<property name="equipment" type="int" encoding="UTF-8" comment="装备星级" />
			</object-property>
			<property name="showColor" type="int[]" encoding="UTF-8" comment="显示的颜色" />
			<property name="doneDes" type="String[]" encoding="UTF-8" comment="完成度显示" />
			<property name="goJoin" type="String[]" encoding="UTF-8" comment="前往参与" />
			
			<object-property name="playerActivenessInfo" type="PlayerActivenessInfo" comment="活跃度活动信息">
				<property name="dayActiveness" type="int" encoding="UTF-8" comment="当前活跃度" />
				<property name="totalActiveness" type="int" encoding="UTF-8" comment="总活跃度" />
				<property name="gotten" type="boolean[]" encoding="UTF-8" comment="是否已经领取" />
				<property name="hasLottery" type="int" encoding="UTF-8" comment="已抽奖次数" />
				<property name="canLottery" type="int" encoding="UTF-8" comment="可抽奖次数" />
				<property name="hasSign" type="boolean[]" encoding="UTF-8" comment="是否已经签到" />
				<property name="hasGotSign" type="boolean[]" encoding="UTF-8" comment="是否已领取签到奖励" />
			</object-property>
			<property name="awardID" type="long[]" encoding="UTF-8" comment="奖励物品id" />
			<property name="needActiveness" type="int[]" encoding="UTF-8" comment="满足的活跃度值" />
			
			<property name="month" type="int" encoding="UTF-8" comment="当前月份" />
			<property name="days" type="int" encoding="UTF-8" comment="当前日期" />
			<property name="signdays" type="int" encoding="UTF-8" comment="已签到天数" />
			
			<property name="signAwardLevel" type="int[]" encoding="UTF-8" comment="签到奖励档" />
			<property name="signAwardID" type="long[]" encoding="UTF-8" comment="签到奖励物品id" />
			<property name="ranklist" type="String" encoding="UTF-8" comment="我的排行是" />
		</res>
	</prototype>
	
	<prototype req_name="LOTTERY_REQ" res_name="LOTTERY_RES" req_type="0x0E0EAA26" res_type="0x8E0EAA08" req_client_send="true"
		res_client_receive="true" comment="活跃度活动抽奖">
		<req></req>
		<res>
			<property name="lotteryID" type="long[]" encoding="UTF-8" comment="参与抽奖物品id" />
			<property name="lotteryNum" type="int[]" encoding="UTF-8" comment="物品数量" />
		</res>
	</prototype>
	
	<prototype req_name="LOTTERY_FINISH_REQ" res_name="LOTTERY_FINISH_RES" req_type="0x0E0EAA27" res_type="0x8E0EAA10" req_client_send="true"
		res_client_receive="true" comment="活跃度活动抽奖完成">
		<req>
		</req>
		<res>
			<property name="resultID" type="long" encoding="UTF-8" comment="抽中物品id" />
		</res>
	</prototype>
	
	<prototype req_name="ACTIVENESS_DES_REQ" res_name="ACTIVENESS_DES_RES" req_type="0x0E0EAA28" res_type="0x8E0EAA11" req_client_send="true"
		res_client_receive="true" comment="活跃度查看活动详细介绍">
		<req>
			<property name="activityID" type="int" encoding="UTF-8" comment="活动id" />
		</req>
		<res>
			<property name="activityID" type="int" encoding="UTF-8" comment="活动id" />
			<property name="activityName" type="String" encoding="UTF-8" comment="活动名字" />
			<property name="detaildes" type="String" encoding="UTF-8" comment="活动详细描述" />
		</res>
	</prototype>
	<prototype req_name="GET_PRIZE_REQ" res_name="GET_PRIZE_RES" req_type="0x0E0EAA29" res_type="0x8E0EAA12" req_client_send="true"
		res_client_receive="true" comment="领取活动宝箱">
		<req>
			<property name="activeness" type="int" encoding="UTF-8" comment="奖励物品档位" />
		</req>
	</prototype>
	
	<!-- 获取小游戏初始化数据-在领取小游戏活动和新的关卡开始时都需要处理此逻辑 -->
	<prototype req_name="INITDATA_MINIGAME_ACTIVITY_REQ" res_name="INITDATA_MINIGAME_ACTIVITY_RES" req_client_send="true" res_client_receive="true" req_type="0x0E0EAA30" res_type="0x8E0EAA30" coment="小游戏初始化数据">
		<req>
		</req>
		<res>
			<property name="contentMess" type="String" encoding="UTF-8" comment="提示内容---保留，用不用待确定"/>
			<property name="gameType" type="byte" comment="拼图游戏(0),记忆力游戏(1),对对碰(2),管道(3)"></property>
			<property name="currentlevel" type="byte" comment="当前关卡level"></property>
			<property name="difficulty" type="byte" comment="关卡难度,1简单 2中等 3困难"></property>
			<property name="initDataArr" type="String[]" encoding="UTF-8" comment="(记忆游戏前两位为记忆时间和操作时间)初始化数据数组（拼图存储数字序列、其他存储icon名。所有都按照后端初始化的顺序排列）
				【对于拼图游戏，initDataArr[0]为场景名称,initDataArr[1]为x坐标,initDataArr[2]为y坐标】 initDataArr[3]为切块数(横)initDataArr[4]为切块数(竖)
				【对于记忆类游戏，initDataArr[0]为记忆时间,initDataArr[1]为操作时间,最后一位是操作说明;len=initDataArr[2]默认宝石数量--initDataArr[2]-[len]----initDataArr[2+[len]记忆数量，之后为随机出来的记忆宝石序列】"/>
			<property name="totleScore" type="int" comment="总积分"/>
			<property name="totalLife" type="int" comment="总生命数"/>
			<property name="life" type="int" comment="剩余游戏生命数"/>
			<property name="duration" type="int" comment="持续时间"/>
			<property name="scores" type="int[]" comment="scores[0]为达到优的分数--scores[1]为达到良的分数"/>
		</res>
	</prototype>
	<!-- 小游戏具体逻辑处理协议 -->
	<prototype req_name="HANDLE_MINIGAME_ACTIVITY_REQ" res_name="HANDLE_MINIGAME_ACTIVITY_RES" req_client_send="true" res_client_receive="true" req_type="0x0E0EAA31" res_type="0x8E0EAA31" coment="小游戏具体逻辑处理">
		<req>
			<property name="gameType" type="byte" comment="拼图游戏(0),记忆力游戏(1),对对碰(2),管道(3)"/>
			<property name="initDataArr" type="String[]" encoding="UTF-8" comment="初始化数据数组（拼图、记忆力，发送用户改变后的数组序列，数据格式通初始化格式。对对碰、管道只一个数据，玩家点击的游戏位置编号）"/>
		</req>
		<res>
			<property name="contentMess" type="String" encoding="UTF-8" comment="提示内容---保留，用不用待确定"/>
			<property name="totalGrade" type="int" comment="玩家当前总积分--每关过后获得累加"></property>
			<property name="currentScore" type="int" comment="当前小游戏分数"></property>
			<property name="optResult" type="byte" comment="操作结果标志位：1代表操作成功，0代表操作不合法，2代表达到满分可以提前结束,-1代表操作超过规定时间  -2传过来的参数错误"></property>
			<property name="initData" type="String[]" comment="当前需要同步的数组--目前只有管道游戏使用，每次返回新生成的管道数组（整体返回）"></property>
		</res>
	</prototype>
	<!-- 小游戏结束 -->
	<prototype req_name="BUY_LIFE_MINIGAME_ACTIVITY_REQ" res_name="BUY_LIFE_MINIGAME_ACTIVITY_RES" req_client_send="true" res_client_receive="true" req_type="0x0E0EAA32" res_type="0x8E0EAA32" coment="小游戏买命">
		<req>
		</req>
		<res>
			<property name="leftLife" type="int" comment="玩家剩余生命数"></property>
		</res>
	</prototype>
	
	<prototype req_name="TIPS_FOR_MINIGAME_ACTIVITY_REQ" res_name="TIPS_FOR_MINIGAME_ACTIVITY_RES" req_client_send="true" res_client_receive="true" req_type="0x0E0EAA39" res_type="0x8E0EAA41" coment="游戏中帮助提示内容">
		<req>
		</req>
		<res>
			<property name="contentmass" type="String" encoding="UTF-8" comment="提示内容"></property>
		</res>
	</prototype>
	<!-- 小游戏开始 -->
	<prototype req_name="START_MINIGAME_ACTIVITY_REQ" res_name="START_MINIGAME_ACTIVITY_RES" req_client_send="true" res_client_receive="true" req_type="0x0E0EAA36" res_type="0x8E0EAA36" coment="预备开始小游戏，弹窗">
		<req>
		</req>
		<res>
			<property name="title" type="String" encoding="UTF-8" comment="标题"/>
			<property name="rules" type="String" encoding="UTF-8" comment="规则"/>
			<property name="rules2" type="String" encoding="UTF-8" comment="规则2"/>
		</res>
	</prototype>
	
	<prototype res_name="PET_DAO_NUM_INFO_RES" res_client_receive="true" res_type="0x8E0EAA33" coment="宠物迷城实时数量信息">
		<res>
			<property name="petmess" type="String" encoding="UTF-8" comment="信息"/>
		</res>
	</prototype>
	
	<prototype req_name="CAN_GET_REQ" res_name="CAN_GET_RES" req_type="0x8E0EAA34" res_type="0x8E0EAA37" req_client_send="true"
		res_client_receive="true" comment="是否有可领取的宝箱">
		<res>
			<property name="canGet" type="boolean" encoding="UTF-8" comment="是否有可领取的奖励" />
		</res>
	</prototype>
	
	<!-- 新商城 -->
	<prototype req_name="GET_SHOP_REQ" req_type="0x8E0EAA35" res_name="GET_SHOP_RES" res_type="0x8E0EAA38" req_client_send="true" res_client_receive="true" comment="商店首界面">
		<req>
			<property name="shopName" type="String" encoding="UTF-8" comment="商店的名字" />
		</req>
		<res>
			<property name="shopName" type="String" encoding="UTF-8" comment="当前选中的商店名字" />
			<property name="isOpen" type="boolean" comment="是否开启" />
			<property name="starttime" type="long" comment="开放时间" />
			<property name="point" type="long" comment="玩家积分" />
			<property name="activity" type="long" comment="玩家活跃度" />
			<property name="allShopNames" type="String[]" encoding="UTF-8" comment="所有商城名"/>
			<object-property name="goods" type="Goods[]" comment="商店中的商品">
				<property name="articleId" type="long" comment="物品的id"></property>
				<property name="id" type="int" comment="商品id" />
				<property name="articleName" type="String" encoding="UTF-8" comment="商品名字" />
				<property name="level" type="int" comment="如果是装备道具需要显示级别，一般物品设置为-1" />
				<property name="color" type="int" comment="商品颜色" />
				<property name="bundleNum" type="int" comment="商品每捆多少个物品" /> 
				<property name="payType" type="int" comment="支付方式" />
				<property name="oldPrice" type="int" comment="原价" />
				<property name="price" type="int" comment="现价" />
				<property name="littleSellIcon" type="String" encoding="UTF-8" comment="小提示图标" />
				<property name="exchangeArticleNames" type="String[]" encoding="UTF-8" comment="用于交换的物品" />
				<property name="exchangeArticleNums" type="int[]" comment="用于交换的物品的数量" />
				<property name="reputeLimit" type="boolean" comment="用于交换的物品的数量" />
				<property name="description" type="String" encoding="UTF-8" comment="商品的描述，可以用于更新商品的购买限制描述"></property>
				<property name="exchangeArticleDescription" type="String" encoding="UTF-8" comment=""></property>
				<property name="overNum" type="int" comment="剩余数量"></property>
				<property name="goodEndTime" type="long" comment="商品限购计时"></property>
				<property name="serverNumlimit" type="int" comment="全服限购"></property>
				<property name="playerNumlimit" type="int" comment="个人限购"></property>
				<property name="goodMaxNumLimit" type="int" comment="一次可买最大数"></property>
				<property name="littleSellIcon" type="String" encoding="UTF-8" comment="活动图标，比如优惠，打折"/>
			</object-property>
		</res>
	</prototype>
	
	<!-- npc动画 -->
	<prototype res_name="NPC_ACTION_RES" res_type="0x8E0EAA39" res_client_receive="true" comment="点击NPC播放动画">
		<res>
			<property name="npcid" type="long" comment="Npcid"></property>
			<property name="state" type="byte" comment="状态" />
			<property name="direction" type="byte" comment="朝向" />
		</res>
	</prototype>
	
	<!-- 大师技能 -->
	<prototype  req_name="SkEnh_INFO_REQ" req_client_send="true" req_type="0x0E0EAA6F"
		res_name="SkEnh_INFO_RES" res_client_receive="true" res_type="0x8E0EAA6F" coment="请求大师技能信息">
		<req>
		</req>
		<res>
			<property name="levels" type="byte[]" comment="大师技能等级数组，-1：未开启；0：开启；大于0：加了多少点"></property>
			<property name="point" type="int" comment="现有点数"></property>
		</res>
	</prototype>
	<prototype  req_name="SkEnh_exINFO_REQ" req_client_send="true" req_type="0x0E0EAA6E"
		res_name="SkEnh_exINFO_RES" res_client_receive="true" res_type="0x8E0EAA6E" coment="请求兑换信息">
		<req>
		</req>
		<res>
			<property name="point" type="int" comment="现有点数"></property>
			<property name="exTimes" type="int" comment="已兑换次数"></property>
			<object-property name="exConf" type="ExchangeConf[]" comment="经验兑换点数配置">
				<property name="startTimes" type="int" comment="起始次数"></property>
				<property name="endTimes" type="int" comment="截止次数"></property>
				<property name="needExp" type="long" comment="需要经验"></property>
				<property name="desc" type="String" encoding="UTF-8" comment="兑换说明的字符串"></property>
			</object-property>
			<property name="leftTimes" type="long" comment="可兑换次数"></property>
			<property name="exchangeTip"  type="String" encoding="UTF-8" comment="兑换总体描述"></property>
			<property name="moneyPerPoint" type="int" comment="当前兑换1点需要多少（两）银子，0表示不花钱"></property>
		</res>
	</prototype>
	<prototype  req_name="SkEnh_Exp2point_REQ" req_client_send="true" req_type="0x0E0EAA70"
		res_name="SkEnh_Exp2point_RES" res_client_receive="true" res_type="0x8E0EAA70" coment="经验换大师技能点">
		<req>
			<property name="times" type="int" comment="次数"></property>
		</req>
		<res>
			<property name="times" type="int" comment="已兑换次数"></property>
			<property name="point" type="int" comment="新的点数"></property>
		</res>
	</prototype>
	<prototype  req_name="SkEnh_Add_point_REQ" req_client_send="true" req_type="0x0E0EAA71"
		res_name="SkEnh_Add_point_RES" res_client_receive="true" res_type="0x8E0EAA71" coment="大师技能加点">
		<req>
			<property name="index" type="int" comment="技能下标"></property>
		</req>
		<res>
		<property name="index" type="int" comment="技能下标"></property>
			<property name="point" type="int" comment="加完后的点数"></property>
			<property name="pointLeft" type="int" comment="剩余点数"></property>
		</res>
	</prototype>
	<prototype  req_name="SkEnh_Detail_REQ" req_client_send="true" req_type="0x0E0EAA7A"
		res_name="SkEnh_Detail_RES" res_client_receive="true" res_type="0x8E0EAA7A" coment="大师详情">
		<req>
			<property name="index" type="int" comment="技能下标"></property>
		</req>
		<res>
			<property name="index" type="int" comment="技能下标"></property>
			<property name="level" type="int" comment="当前等级"></property>
			<property name="name" type="String" encoding="UTF-8" comment="名字"/>
			<property name="step" type="String" encoding="UTF-8" comment="当前X阶X重"/>
			<property name="desc" type="String" encoding="UTF-8" comment="描述"/>
			<property name="stepDesc" type="String[]" encoding="UTF-8" comment="三大阶段的描述"/>
			<property name="openDesc" type="String" encoding="UTF-8" comment="开启条件"/>
			<property name="layerDesc" type="String" encoding="UTF-8" comment="当前层描述"/>
			<property name="needPay" type="String" encoding="UTF-8" comment="升级消耗"/>
			<property name="nextLayerDesc" type="String" encoding="UTF-8" comment="下一层描述"/>
		</res>
	</prototype>
	<!-- 渡劫 -->
	<prototype  req_name="ENTER_ROBBERT_REQ" req_client_send="true" req_type="0x0E0EAA81"
		res_name="ENTER_ROBBERT_RES" res_client_receive="true" res_type="0x8E0EAA89" coment="请求开始渡劫">
		<req>
		</req>
		<res>
		<property name="robberyLevel" type="int" comment="天劫重数"></property>
		<property name="msgtype" type="byte" encoding="UTF-8" comment="0为开始渡劫  1为继续渡劫"/>
		<property name="contentmass" type="String" encoding="UTF-8" comment="提示内容"/>
		</res>
	</prototype>
	<prototype  req_name="START_ROBBERT_REQ" req_client_send="true" req_type="0x0E0EAA91" coment="正式开始渡劫">
		<req>
		</req>
	</prototype>
	<prototype  req_name="FEISHENG_END_REQ" req_client_send="true" req_type="0x0E0EAA95" coment="飞升完成过图">
		<req>
		</req>
	</prototype>
	<prototype  req_name="ROBBERY_TIPS_REQ" req_client_send="true" req_type="0x0E0EAA84"
		res_name="ROBBERY_TIPS_RES" res_client_receive="true" res_type="0x8E0EAA82" coment="点击天劫按钮弹框">
		<req>
		</req>
		<res>
		<property name="robberyLevel" type="int" comment="天劫重数"></property>
		<property name="contentmass" type="String" encoding="UTF-8" comment="提示内容"/>
		</res>
	</prototype>
	<prototype req_name="NOTIFY_RAYROBBERY_REQ" req_type="0x8E0EAA85" req_client_receive="true"
		comment="服务器通知客户端控制雷云的出现和消失（天劫）">
		<req>
			<property name="rayType" type="byte" comment="0刷出雷云，1结束雷云" />
		</req>
	</prototype>
	<prototype  req_name="BACE_TOWN_IN_ROBBERT_REQ" req_client_send="true" req_type="0x8E0EAA94" coment="渡劫中点击回城">
		<req>
		</req>
	</prototype>
	<prototype req_name="NOTIFY_CLIENT_VICTORY_TIPS_REQ" req_type="0x8E0EAA92" req_client_receive="true"
		comment="通知客户端弹出胜利、失败字体">
		<req>
			<property name="notifyType" type="byte" comment="0失败，1胜利" />
		</req>
	</prototype>
	<prototype req_name="NOTIFY_CLIENT_ROBBERY_CLIENT_REQ" req_type="0x8E0EAA93" req_client_receive="true"
		comment="通知客户渡劫胜利显示回城按钮">
		<req>
		</req>
	</prototype>
	<prototype req_name="NOTIFY_ROBBERY_COUNTDOWN_REQ" req_type="0x8E0EAA86" req_client_receive="true"
		comment="服务器通知客户端天劫相应倒计时">
		<req>
			<property name="countType" type="byte" comment="倒计时类型，1强制进入天劫倒计时，2进入天劫后的各种倒计时" />
			<property name="contentmass" type="String" encoding="UTF-8" comment="倒计时内容"/>
			<property name="leftTime" type="int" comment="剩余时间，单位秒" />
		</req>
	</prototype>
	<prototype req_name="NOTIFY_FEISHENG_DONGHUA_REQ" req_type="0x8E0EAA87" req_client_receive="true"
		comment="服务器通知客户端飞升">
		<req>
			<property name="countType" type="byte" comment="1为自己飞升，2为观礼" />
			<property name="career" type="byte" encoding="UTF-8" comment="职业"/>
			<property name="playerName" type="String" encoding="UTF-8" comment="飞升人的名字" />
			<property name="country" type="byte" encoding="UTF-8" comment="国家" />
			<property name="zunpaiName" type="String" encoding="UTF-8" comment="尊派名字" />
			<property name="jiazu" type="String" encoding="UTF-8" comment="家族名" />
			<property name="avataType" type="byte[]" encoding="UTF-8" comment="avatar部件" />
			<property name="avata" type="String[]" encoding="UTF-8" comment="avatar部件全名" />
			<property name="avataType2" type="byte[]" encoding="UTF-8" comment="飞升后avatar部件" />
			<property name="avata2" type="String[]" encoding="UTF-8" comment="飞升后avatar部件全名" />
		</req>
	</prototype>
	<prototype req_name="CHANAGE_PLAYER_AVATA_REQ" res_name="CHANAGE_PLAYER_AVATA_RES" req_type="0x0E0EAA88"
		res_type="0x8E0EAA88" req_client_send="true" res_client_receive="true" comment="切换avata">
		<req>
		</req>
		<res>
			<property name="isSucc" type="byte" comment="是否成功，0是成功，1是失败" />
			<property name="result" type="String" encoding="UTF-8" comment="结果原因" />
			<property name="cdTime" type="long" comment="CD时间"/>
		</res>
	</prototype>
	<!-- 签到 -->
	<prototype req_name="SIGN_REQ" res_name="SIGN_RES" req_type="0x0E0EAA82" res_type="0x8E0EAA72" req_client_send="true"
		res_client_receive="true" comment="签到">
		<req>
		</req>
		<res>
			<property name="month" type="int" encoding="UTF-8" comment="当前月份" />
			<property name="day" type="int" encoding="UTF-8" comment="当前日期" />
		</res>
	</prototype>
	<prototype req_name="GET_SIGNAWARD_REQ" req_type="0x0E0EAA83" req_client_send="true" comment="签到领奖">
		<req>
			<property name="level" type="int" encoding="UTF-8" comment="领取签到奖励档" />
		</req>
	</prototype>
	
	<!-- 查询仙界地图地域 -->
	<prototype req_name="QUERY_WORLD__XJ_MAP_REQ" req_type="0x0E0EAA85" req_client_send="true" res_name="QUERY_WORLD__XJ_MAP_RES" res_type="0x8E0EAA73"
		res_client_receive="true" comment="查询世界地图地域 ">
		<req>
			<property name="version" type="int" comment="当前版本" />
			<property name="areaname" type="String" encoding="UTF-8" comment="请求该地域信息" />
			<property name="typeName" type="String" encoding="UTF-8" comment="预留" />
		</req>

		<res>
			<property name="typeName" type="int" encoding="UTF-8" comment="0:是仙界世界地图 --1：是仙界地图区域地图" />
			<property name="mapName" type="String" encoding="UTF-8" comment="玩家选择仙界选项卡展示的图片名" />
			<object-property name="areas" type="WorldMapArea[]" comment="世界地图地域">
				<property name="name" type="String" encoding="UTF-8" comment="地域名" />
				<property name="worldMapAreaX" type="short[]" comment="" />
				<property name="worldMapAreaY" type="short[]" comment="" />
				<property name="worldMapAreaWidth" type="short[]" comment="" />
				<property name="worldMapAreaHeight" type="short[]" comment="" />
				<property name="pressPng" type="String" encoding="UTF-8" comment="按下显示图片" />
				<property name="pressPngx" type="short" comment="" />
				<property name="pressPngy" type="short" comment="" />
				<property name="x_wl" type="int" comment="" />
				<property name="y_wl" type="int" comment="纹理" />
				<property name="press_kd" type="int" comment="" />
				<property name="press_gd" type="int" comment="宽度" />
				<property name="area_x_wl" type="int" comment="" />
				<property name="area_y_wl" type="int" comment="" />
				<property name="area_x_wl_kd" type="int" comment="" />
				<property name="area_y_wl_gd" type="int" comment="" />
				<property name="engilshname" type="String" encoding="UTF-8" comment="engilshname" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="IS_XJ_MAP_REQ" req_type="0x0E0EAA86" req_client_send="true" res_name="IS_XJ_MAP_RES" res_type="0x8E0EAA74" res_client_receive="true" comment="查询世界地图地域 ">
		<req>
		</req>
		<res>
			<property name="is_xj_map" type="boolean" comment="是否是仙界地图" />
		</res>
	</prototype>
	<!-- 新装备强化 -->
	<prototype req_name="QUERY_NEW_EQUIPMENT_STRONG_REQ" req_type="0x0E0EAA87" res_name="QUERY_NEW_EQUIPMENT_STRONG_RES" res_type="0x8E0EAA76"
		req_client_send="true" res_client_receive="true" comment="客户端请求服务器，装备强化的各种信息，包括需要什么材料，需要几个，用什么来提高成功率，需要多少手续费等">
		<req>
			<property name="equipmentId" type="long" comment="要强化的装备，玩家的背包中必须有此装备" />
		</req>
		<res>
			<property name="equipmentId" type="long" comment="要强化的装备，玩家的背包中必须有此装备" />
			<property name="cost" type="long" comment="价格" />
			<property name="strongedUUB" type="String" encoding="UTF-8" comment="强化后的装备UUB" />
			<property name="strongMaterialName" type="String[]" encoding="UTF-8" comment="可用的强化符"></property>
			<property name="strongMaterialLuck" type="int[]" comment="各颜色强化符的几率，不同名称强化符颜色相同几率一样"></property>
			<property name="otherStrongMaterialName" type="String" encoding="UTF-8" comment="其他额外可用的强化符"></property>
			<property name="otherStrongMaterialNum" type="int" comment="其他额外可用的强化符数量"></property>
			<property name="otherStrongMaterialluck" type="int" comment="成功"></property>
		</res>
	</prototype>

	<prototype req_name="NEW_EQUIPMENT_STRONG_REQ" req_type="0x00F0EEF8" res_name="NEW_EQUIPMENT_STRONG_RES" res_type="0x70F0EEF8" req_client_send="true"
		res_client_receive="true" comment="客户端请求服务器，装备强化，服务端发送强化成功消息前必须再次发出QUERY_EQUIPMENT_STRONG_RES通知客户端材料变化">
		<req>
			<property name="equipmentId" type="long" comment="要强化的装备，玩家的背包中必须有此装备" />
			<property name="strongMaterialID" type="long[]" comment="强化符ID"></property>
			<property name="otherStrongMaterialID" type="long[]" comment="额外的强化需求物品ID"></property>
			<property name="otherStrongMaterialNum" type="int[]" comment="额外的强化需求物品ID"></property>
			<property name="strongType" type="byte" comment="强化类型，0表示使用金币强化，1表示使用元宝强化"></property>
		</req>
		<res>
			<property name="equipmentId" type="long" comment="要强化的装备，玩家的背包中必须有此装备" />
			<property name="star" type="short" comment="强化后装备的等级"></property>
			<property name="canStrong" type="boolean" comment="是否还能强化"></property>
		</res>
	</prototype>
	<!-- 寻路 -->
	<prototype res_name="FIND_WAY_RES" res_type="0x70F0EF00" req_client_send="true"
		res_client_receive="true" comment="寻路">
		<res>
			<property name="mapName" type="String" encoding="UTF-8" comment="地图名" />
			<property name="intx" type="int" encoding="UTF-8" comment="x坐标" />
			<property name="inty" type="int" encoding="UTF-8" comment="y坐标" />
		</res>
	</prototype>
	<!-- 新活跃度抽奖 -->
	<prototype req_name="LOTTERY_FINISH_NEW_REQ" res_name="LOTTERY_FINISH_NEW_RES"  req_type="0x00F0EF01"  res_type="0x70F0EF01"  req_client_send="true" res_client_receive="true" comment="活跃度活动抽奖完成">
		<req>
		</req>
		<res>
			<property name="resultID" type="long" encoding="UTF-8" comment="抽中物品id" />
			<property name="resultNum" type="int" encoding="UTF-8" comment="抽中物品数量" />
		</res>
	</prototype>
	
	<prototype req_name="FUNCTION_OPEN_REQ" res_name="FUNCTION_OPEN_RES"  req_type="0x00F0EF0F"  res_type="0x70F0EF0F"  req_client_send="true" res_client_receive="true" comment="祈福是否开启">
			<req>
				<property name="functionId" type="int" encoding="UTF-8" comment="功能id:0-祈福" />
			</req>
			<res>
				<property name="functionId" type="int" encoding="UTF-8" comment="功能id:0-祈福" />
				<property name="openStat" type="int" encoding="UTF-8" comment="功能是否开启:0-开启,1-关闭" />
			</res>
	</prototype>
	
	<!-- 法宝 -->
	<prototype req_name="SYNC_MAGICWEAPON_FOR_KNAPSACK_REQ" res_name="SYNC_MAGICWEAPON_FOR_KNAPSACK_RES"  req_type="0x00F0EF02"  res_type="0x70F0EF02"  req_client_send="true" res_client_receive="true" comment="同步背包中法宝信息">
		<req>
			<property name="ids" type="long[]" comment="法宝ID"></property>
		</req>
		<res>
			<object-property name="messes" type="MoreMagicWeaponMess[]" comment="法宝信息">
				<property name="id" type="long" comment="法宝id"></property>
				<property name="shenShi" type="boolean" comment="是否神识" />
				<property name="basicpropertyname" type="String" encoding="UTF-8" comment="法宝前缀名" />
				<property name="mstar" type="int" encoding="UTF-8" comment="星" />
				<property name="mess3" type="String" encoding="UTF-8" comment="扩展信息3" />
				<property name="mess4" type="String" encoding="UTF-8" comment="扩展信息4" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="QUERY_SHENSHI_REQ" res_name="QUERY_SHENSHI_RES"  req_type="0x00F0EF03"  res_type="0x70F0EF03"  req_client_send="true" res_client_receive="true" comment="请求神识">
		<req>
			<property name="id" type="long" comment="法宝ID"></property>
		</req>
		<res>
			<property name="id" type="long" comment="法宝id"></property>
			<property name="jieji" type="String" encoding="UTF-8" comment="阶级" />
			<property name="materialname" type="String" encoding="UTF-8" comment="神识符名字" />
			<property name="materialnums" type="int" encoding="UTF-8" comment="神识符数量" />
			<property name="basicmess" type="String" encoding="UTF-8" comment="基本描述" />
			<property name="costmess" type="String" encoding="UTF-8" comment="消耗描述" />
		</res>
	</prototype>
	
	<prototype req_name="CONFIRM_SHENSHI_REQ" req_type="0x00F0EF04"  res_name="CONFIRM_SHENSHI_RES"  res_type="0x70F0EF04"  req_client_send="true" res_client_receive="true" comment="确认神识">
		<req>
			<property name="magicweaponid" type="long" comment="法宝ID"></property>
			<property name="ids" type="long[]" comment="神识符id"></property>
			<property name="nums" type="int[]" comment="数量"></property>
			<property name="usesilver" type="int" comment="0:使用神识符；1:使用银子"></property>
		</req>
		<res>
			<property name="result" type="boolean" encoding="UTF-8" comment="结果" />
		</res>
	</prototype>
	
	<prototype req_name="NOTIFY_CLIENT_SUMMON_MAGICWEAPON_REQ" req_type="0x8E0EAA99" req_client_receive="true"
		comment="通知客户玩家装备上法宝">
		<req>
			<property name="magicweaponid" type="long" comment="法宝NPCID"></property>
		</req>
	</prototype>
	
	
	<prototype req_name="QUERY_MAGICWEAPON_STRONG_REQ" req_type="0x00F0EF05" res_name="QUERY_MAGICWEAPON_STRONG_RES" res_type="0x70F0EF05" req_client_send="true" res_client_receive="true" comment="法宝强化">
		<req>
			<property name="magicweaponId" type="long" comment="要强化的法宝，玩家的背包中必须有此法宝" />
		</req>
		<res>
			<property name="magicweaponId" type="long" comment="要强化的法宝，玩家的背包中必须有此法宝" />
			<property name="cost" type="long" comment="价格" />
			<property name="strongedUUB" type="String" encoding="UTF-8" comment="强化后的装备UUB" />
			<property name="strongMaterialName" type="String[]" encoding="UTF-8" comment="可用的强化符"></property>
			<property name="strongMaterialLuck" type="int[]" comment="各颜色强化符的几率，不同名称强化符颜色相同几率一样"></property>
			<property name="otherStrongMaterialName" type="String" encoding="UTF-8" comment="其他额外可用的强化符"></property>
			<property name="otherStrongMaterialNum" type="int" comment="其他额外可用的强化符数量"></property>
			<property name="otherStrongMaterialluck" type="int" comment="成功"></property>
		</res>
	</prototype>
	
	<prototype req_name="MAGICWEAPON_STRONG_REQ" req_type="0x00F0EF06" res_name="MAGICWEAPON_STRONG_RES" res_type="0x70F0EF06" req_client_send="true" res_client_receive="true" comment="法宝强化确认">
		<req>
			<property name="magicweaponId" type="long" comment="要强化的法宝" />
			<property name="strongMaterialID" type="long[]" comment="强化符ID"></property>
			<property name="otherStrongMaterialID" type="long[]" comment="额外的强化需求物品ID"></property>
			<property name="otherStrongMaterialNum" type="int[]" comment="额外的强化需求物品ID"></property>
			<property name="strongType" type="byte" comment="强化类型，0表示使用金币强化，1表示使用元宝强化"></property>
		</req>
		<res>
			<property name="magicweaponId" type="long" comment="要强化的法宝" />
			<property name="star" type="short" comment="强化后装备的等级"></property>
			<property name="canStrong" type="boolean" comment="是否还能强化"></property>
		</res>
	</prototype>
	
	<prototype req_name="QUERY_MAGICWEAPON_EAT_REQ" req_type="0x00F0EF07" res_name="QUERY_MAGICWEAPON_EAT_RES" res_type="0x70F0EF07" req_client_send="true" res_client_receive="true" comment="法宝吞噬">
		<req>
			<property name="ids" type="long[]" comment="法宝id集，第一个默认是主法宝" />
		</req>
		<res>
			<property name="costMess" type="String" encoding="UTF-8" comment="主法宝消耗说明" />
			<property name="basicPropertyMess" type="String[]" encoding="UTF-8" comment="法宝吞噬基础属性描述" />
			<property name="basicNums" type="long[]" comment="基础属性值"></property>
			<property name="addNums" type="long[]" comment="升级增加属性值"></property>
			<property name="currAndNextJieJi" type="String[]" encoding="UTF-8" comment="当前和下一阶级"></property>
			<property name="currExps" type="long" comment="法宝当前加成经验" />
			<property name="upgradeExps" type="long" comment="法宝升最大级所需经验" />
		</res>
	</prototype>
	
	<prototype req_name="CONFIRM_MAGICWEAPON_EAT_REQ" req_type="0x00F0EF09" res_name="CONFIRM_MAGICWEAPON_EAT_RES" res_type="0x70F0EF17" req_client_send="true" res_client_receive="true" comment="法宝吞噬确认">
		<req>
			<property name="ids" type="long[]" comment="法宝id集，第一个默认是主法宝" />
		</req>
		<res>
			<property name="result" type="boolean" encoding="UTF-8" comment="结果" />
			<object-property name="messes" type="TunShiModle[]" comment="动画信息">
				<property name="startNums" type="long" comment="起始点"></property>
				<property name="endNums" type="long" comment="结束点"></property>
				<property name="upgradEexps" type="long" comment="升级所需经验"></property>
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="QUERY_MAGICWEAPON_HIDDLE_PROP_REQ" req_type="0x00F0EF18" res_name="QUERY_MAGICWEAPON_HIDDLE_PROP_RES" res_type="0x70F0EF18" req_client_send="true" res_client_receive="true" comment="隐藏属性">
		<req>
			<property name="id" type="long" comment="法宝id" />
		</req>
		<res>
			<property name="hiddlenames" type="String[]" encoding="UTF-8" comment="已经开启的隐藏属性名" />
			<property name="hiddlenums" type="long[]" comment="已经开启的隐藏属性值" />
			<property name="hiddlemaxnums" type="long[]" comment="已经开启的隐藏属性最大值"></property>
			<property name="materialnames" type="String[]" encoding="UTF-8" comment="刷新隐藏属性的材料"></property>
			<property name="costmess" type="String" encoding="UTF-8" comment="消费信息" />
			<property name="jiejimess" type="String" encoding="UTF-8" comment="阶级描述" />
			<property name="maxhiddlenum" type="int" comment="该法宝隐藏属性个数上限"></property>
		</res>
	</prototype>
	
	<prototype req_name="JIHUO_MAGICWEAPON_HIDDLE_PROP_REQ" req_type="0x00F0EF19" res_name="JIHUO_MAGICWEAPON_HIDDLE_PROP_RES" res_type="0x70F0EF19" req_client_send="true" res_client_receive="true" comment="激活隐藏属性">
		<req>
			<property name="id" type="long" comment="法宝id" />
		</req>
		<res>
			<property name="result" type="boolean" encoding="UTF-8" comment="结果" />
		</res>
	</prototype>
	
	<prototype req_name="REFRESH_MAGICWEAPON_HIDDLE_PROP_REQ" req_type="0x00F0EF20" res_name="REFRESH_MAGICWEAPON_HIDDLE_PROP_RES" res_type="0x70F0EF20" req_client_send="true" res_client_receive="true" comment="激活隐藏属性">
		<req>
			<property name="id" type="long" comment="法宝id" />
			<property name="indexs" type="int[]" comment="刷新属性集0,1,2"></property>
			<property name="materialids" type="long" comment="材料id"></property>
			<property name="materialtype" type="int" comment="0:重铸符；1:天铸符；2:神铸符"></property>
			<property name="usesilver" type="int" comment="0:用物品，1：银子"></property>
		</req>
		<res>
			<property name="result" type="boolean" encoding="UTF-8" comment="结果" />
		</res>
	</prototype>
	
	<prototype res_name="OPEN_MAGICWEAPON_OPTION_RES" res_type="0x70F0EF21"  res_client_receive="true" comment="打开法宝操作界面">
		<res>
			<property name="operatetype" type="int" comment="0:神识；1:吞噬；2:强化；3:隐藏属性；4:幻化；" />
			<property name="tunshiarticlenames" type="String[]" encoding="UTF-8" comment="吞噬所需额外物品名" />
		</res>
	</prototype>
	
	<prototype req_name="OPEN_MAGICWEAPON_ZHULING_RES" req_type="0x0E0EAA99" req_client_receive="true"
		comment="打开法宝注灵界面">
		<req>
			<property name="contentmass" type="String" encoding="UTF-8" comment="描述"/>
			<property name="propNames" type="String[]" comment="可用于注灵的道具名"></property>
			<property name="zhulingNum" type="int[]" comment="恢复灵气值"></property>
		</req>
	</prototype>
	
	<prototype req_name="QUERY_MAGICWEAPON_NAIJIU_REQ" req_type="0x00F0EF26" res_name="QUERY_MAGICWEAPON_NAIJIU_RES" res_type="0x70F0EF26" req_client_send="true" res_client_receive="true" comment="请求法宝灵气值">
		<req>
			<property name="magicweaponId" type="long" comment="法宝id" />
		</req>
		<res>
			<property name="naijiu" type="int" encoding="UTF-8" comment="当前灵气值" />
			<property name="maxNaijiu" type="int" encoding="UTF-8" comment="耐久灵气值" />
		</res>
	</prototype>
	
	<prototype req_name="COMFIRM_MAGICWEAPON_NAIJIU_REQ" req_type="0x00F0EF27" res_name="COMFIRM_MAGICWEAPON_NAIJIU_RES" res_type="0x70F0EF27" req_client_send="true" res_client_receive="true" comment="补充法宝灵气">
		<req>
			<property name="magicweaponId" type="long" comment="法宝id" />
			<property name="materiaId" type="long" comment="物品id" />
			<property name="materiaNum" type="int" comment="物品数量" />
		</req>
		<res>
			<property name="result" type="byte" encoding="UTF-8" comment="成功1,失败0" />
		</res>
	</prototype>
	
	<prototype req_name="NOTIFY_CLIENT_MAGICWEAPON_CHANGE_REQ" req_type="0x0E0EAA98" req_client_receive="true"
		comment="通知客户端法宝有变化">
		<req>
			<property name="magicweaponId" type="long" encoding="UTF-8" comment="法宝id"/>
		</req>
	</prototype>
	
	<!-- 恶魔广场 -->
	<prototype  req_name="ENTER_DEVILSQUARE_REQ" req_client_send="true" req_type="0x0E0EAA96" coment="进入恶魔广场副本">
		<req>
			<property name="carbonLevel" type="int" comment="副本等级：110,150,190,220" />
		</req>
	</prototype>
	<prototype req_name="DEVILSQUARE_TIPS_REQ" req_type="0x0E0EAA89" req_client_receive="true"
		comment="恶魔广场副本介绍内容,开启副本等级等">
		<req>
			<object-property name="messes" type="DevelSquareBaseConf[]" comment="法宝信息">
				<property name="level" type="int" comment="副本等级"></property>
				<property name="plays" type="String" encoding="UTF-8" comment="玩法" />
				<property name="bcstorys" type="String" encoding="UTF-8" comment="背景" />
				<property name="costprops" type="long" encoding="UTF-8" comment="进入消耗物品" />
				<property name="costNum" type="int" encoding="UTF-8" comment="消耗数量" />
				<property name="dropprops" type="long[]" encoding="UTF-8" comment="掉落物品" />
				<property name="dropprobabbly" type="String[]" encoding="UTF-8" comment="物品掉率。。纯数字" />
				<property name="mapName" type="String" encoding="UTF-8" comment="地图名" />
			</object-property>
		</req>
	</prototype>
	<prototype req_name="DEVILSQUARE_COUNTDOWNTIME_REQ" req_type="0x0E0EAA90" req_client_receive="true"
		comment="恶魔广场中各种倒计时">
		<req>
			<property name="contentmass" type="String" encoding="UTF-8" comment="内容"/>
			<property name="countType" type="int" comment="类型，0:入场倒计时  1:准备倒计时   2:刷怪倒计时   3:清怪倒计时 4:刷boss倒计时  5:退出副本倒计时"></property>
			<property name="countTime" type="int" comment="时间"></property>
		</req>
	</prototype>
	<!-- 新合成 -->
	<prototype req_name="DEVILSQUARE_COMPOSE_TIPS_REQ" req_type="0x0E0EAA93" req_client_receive="true"
		comment="门票合成通知客户端">
		<req>
			<property name="succeedRate" type="int[]" comment="合成成功率"></property>
			<property name="colorProps" type="long[]" comment="颜色合成得到的物品列表"></property>
			<property name="ticketProps" type="long[]" comment="门票列表"></property>
		</req>
	</prototype>
	
	
	<prototype req_name="ENTER_COMPOSE_REQ" req_type="0x00F0EF23" res_name="ENTER_COMPOSE_RES" res_type="0x70F0EF23" req_client_send="true" res_client_receive="true" comment="物品合成">
		<req>
			<property name="costType" type="int" comment="消耗类型,0:绑银，1:银子" />
			<property name="composetype" type="int" comment="合成类型,1:颜色提升，2:合成新物品" />
			<property name="propIds" type="long[]" comment="道具id列表" />
			<property name="propNums" type="int[]" comment="道具颜色，需要与id对应" />
		</req>
		<res>
			<property name="comType" type="int" encoding="UTF-8" comment="合成类型,1:颜色提升，2:合成新物品" />
			<property name="result" type="byte" encoding="UTF-8" comment="结果,0失败  1成功" />
			<property name="resultPropId" type="long" encoding="UTF-8" comment="合成物品id" />
			<property name="succeedNum" type="int" encoding="UTF-8" comment="成功数量" />
		</res>
	</prototype>
	
	<prototype res_name="SKILL_POINT_SHOW_RES" res_type="0x70F0EF16" req_client_send="true" res_client_receive="true" comment="技能点显示">
		<res>
			<property name="showmess" type="String" encoding="UTF-8" comment="连击描述" />
		</res>
	</prototype>
	
	<prototype req_name="GOD_EQUIPMENT_UPGRADE_REQ" req_type="0x00F0EF24" res_name="GOD_EQUIPMENT_UPGRADE_RES" res_type="0x70F0EF24" req_client_send="true" res_client_receive="true" comment="仙装合成">
		<req>
			<property name="tuZhiId" type="long" encoding="UTF-8" comment="图纸id" />
		</req>
		<res>
			<property name="tuZhiId" type="long" encoding="UTF-8" comment="图纸id" />
			<property name="newEquipmentId" type="long" encoding="UTF-8" comment="目标装备id" />
			<property name="materialNames" type="String[]" encoding="UTF-8" comment="材料name集合，如果type是0，第一个是装备name" />
			<property name="materialIcons" type="String[]" encoding="UTF-8" comment="材料icon" />
			<property name="materialMess" type="String[]" encoding="UTF-8" comment="材料泡泡" />
			<property name="needNums" type="int[]" comment="升级所需材料数" />
			<property name="types" type="byte" encoding="UTF-8" comment="操作类型：0.仙装合成  1.其他合成" />
			<property name="showMess" type="String" encoding="UTF-8" comment="功能描述" />
			<property name="costSilver" type="long" encoding="UTF-8" comment="消耗银两" />
		</res>
	</prototype>

	<prototype req_name="GOD_EQUIPMENT_UPGRADE_SURE_REQ" req_type="0x00F0EF25" res_name="GOD_EQUIPMENT_UPGRADE_SURE_RES" res_type="0x70F0EF25" req_client_send="true" res_client_receive="true" comment="仙装合成确认">
		<req>
			<property name="tuZhiId" type="long" encoding="UTF-8" comment="图纸id" />
			<property name="materialIds" type="long[]" comment="材料id集合" />
			<property name="materialNums" type="int[]" comment="材料数量集合" />
		</req>
		<res>
			<property name="newEquipmentId" type="long" encoding="UTF-8" comment="新装备id，小于0表示失败,大于0把剩余的材料整理到背包" />
		</res>
	</prototype>
	<!-- 仙尊 -->
	<prototype res_name="FAIRY_SHOW_ELECTORS_RES" res_type="0x70F0EF28" res_client_receive="true" comment="查看投票榜">
		<res>
			<object-property name="fairyBuddhaInfos" type="FairyBuddhaInfo[]" comment="参选者信息">
				<property name="id" type="long" encoding="UTF-8" comment="玩家id" />
				<property name="name" type="String" encoding="UTF-8" comment="玩家角色名" />
				<property name="level" type="int" encoding="UTF-8" comment="玩家等级" />
				<property name="country" type="int" encoding="UTF-8" comment="玩家国家" />
				<property name="declaration" type="String" encoding="UTF-8" comment="玩家宣言" />
				<property name="score" type="int" encoding="UTF-8" comment="玩家得分" />
				<property name="lastChangeTime" type="String" encoding="UTF-8" comment="最后一次被投票时间" />
			</object-property>
			<!-- <property name="role" type="byte" encoding="UTF-8" comment="查看者身份:0-普通,1-竞选者,2-仙尊" />
-->
			<property name="showButton" type="boolean[]" encoding="UTF-8" comment="true:显示;false:不显示" />
			<property name="cycle" type="int" encoding="UTF-8" comment="0:本期;-1:上期" />
			<property name="career" type="byte" encoding="UTF-8" comment="投票榜职业" />
		</res>
	</prototype>
	<prototype req_name="FAIRY_VOTE_REQ" res_name="FAIRY_VOTE_RES" req_type="0x00F0EF28" res_type="0x70F0EF29" req_client_send="true" res_client_receive="true" comment="投票">
		<req>
			<property name="electorId" type="long" encoding="UTF-8" comment="被投票玩家id" />
		</req>
		<res>
			<property name="result" type="String" encoding="UTF-8" comment="投票结果" />
		</res>
	</prototype>
	<prototype req_name="FAIRY_DECLARE_REQ" res_name="FAIRY_DECLARE_RES" req_type="0x00F0EF29" res_type="0x70F0EF30" req_client_send="true" res_client_receive="true" comment="设置宣言">
		<req>
			<property name="declaration" type="String" encoding="UTF-8" comment="宣言内容" />
		</req>
		<res>
			<property name="result" type="String" encoding="UTF-8" comment="设置宣言结果" />
		</res>
	</prototype>
	<prototype req_name="FAIRY_THANK_REQ" res_name="FAIRY_THANK_RES" req_type="0x00F0EF30" res_type="0x70F0EF31" req_client_send="true" res_client_receive="true" comment="打开一键答谢界面">
		<req>
		</req>
		<res>
			<property name="des" type="String" encoding="UTF-8" comment="已有X人答谢描述" />
			<property name="num" type="int" encoding="UTF-8" comment="当前有多少人答谢" />
			<property name="awardID" type="long[]" encoding="UTF-8" comment="答谢奖励物品id" />
			<property name="price" type="long[]" encoding="UTF-8" comment="答谢奖励单价" />
			<property name="level" type="byte" encoding="UTF-8" comment="已设置的答谢档次,-1表示未设置过" />
		</res>
	</prototype>
	<prototype req_name="FAIRY_DOTHANK_REQ" res_name="FAIRY_DOTHANK_RES" req_type="0x00F0EF31" res_type="0x70F0EF32" req_client_send="true" res_client_receive="true" comment="一键答谢">
		<req>
			<property name="level" type="byte" encoding="UTF-8" comment="答谢奖励等级" />
		</req>
		<res>
			<property name="result" type="String" encoding="UTF-8" comment="答谢结果" />
		</res>
	</prototype>
	<prototype req_name="FAIRY_VOTERECORD_REQ" res_name="FAIRY_VOTERECORD_RES"  req_type="0x00F0EF33" res_type="0x70F0EF33" req_client_send="true" res_client_receive="true" comment="查看投票记录">
		<req>
			<property name="cycle" type="int" encoding="UTF-8" comment="0:本期;-1:上期" />
		</req>
		<res>
			<object-property name="voters" type="Voter[]" comment="投票信息">
				<property name="id" type="long" encoding="UTF-8" comment="玩家id" />
				<property name="name" type="String" encoding="UTF-8" comment="玩家角色名" />
				<property name="time" type="String" encoding="UTF-8" comment="投票时间" />
			</object-property>
		</res>
	</prototype>
	<prototype res_name="FAIRY_AWARD_RES" res_type="0x70F0EF34" res_client_receive="true" comment="打开设置膜拜奖励等级界面">
		<res>
			<property name="awardNames" type="String[]" encoding="UTF-8" comment="膜拜奖励名" />
			<property name="des" type="String[]" encoding="UTF-8" comment="膜拜奖励描述" />
			<property name="prices" type="long[]" encoding="UTF-8" comment="膜拜奖励价格" />
			<property name="level" type="byte" encoding="UTF-8" comment="膜拜奖励档次,-1表示未设置过" />
		</res>
	</prototype>
	<prototype req_name="FAIRY_SET_AWARDLEVEL_REQ" res_name="FAIRY_SET_AWARDLEVEL_RES" req_type="0x00F0EF32" res_type="0x70F0EF35" req_client_send="true" res_client_receive="true" comment="设置膜拜奖励等级">
		<req>
			<property name="level" type="byte" encoding="UTF-8" comment="膜拜奖励等级" />
		</req>
		<res>
			<property name="result" type="String" encoding="UTF-8" comment="设置结果" />
			<property name="succ" type="int" encoding="UTF-8" comment="是否成功:1-是,0-否" />
		</res>
	</prototype>
	<prototype req_name="FAIRY_REFRESH_REQ" req_type="0x00F0EF34" req_client_send="true" comment="请求刷新投票榜">
		<req></req>
	</prototype>
	<!-- 目标 -->
	<prototype req_name="QUERY_ALL_AIMS_CHAPTER_REQ" req_type="0x00F0EF40" res_name="QUERY_ALL_AIMS_CHAPTER_RES" res_type="0x70F0EF40" req_client_send="true" res_client_receive="true" comment="请求所有目标章节名（顺序）">
		<req>
			<property name="playerId" type="long" encoding="UTF-8" comment="角色id（查看自己的传-1）" />
		</req>
		<res>
			<property name="playerId" type="long" encoding="UTF-8" comment="角色id" />
			<property name="chapterNames" type="String[]" encoding="UTF-8" comment="顺序排放(章节名)" />
			<property name="chapterSubTitle" type="String[]" encoding="UTF-8" comment="章节副标题(章节当前分数)" />
			<property name="totalChapterScore" type="int[]" encoding="UTF-8" comment="顺序排放(章节总分数)" />
			<property name="currentChapterScore" type="int[]" encoding="UTF-8" comment="顺序排放(章节当前分数)" />
			<property name="canReceive" type="int[]" encoding="UTF-8" comment="可领取个数(章节当前分数)" />
			<property name="allScore" type="int" encoding="UTF-8" comment="所有目标加起来可获得的总积分" />
			<property name="currentScore" type="int" encoding="UTF-8" comment="当前获得的总积分" />
			<property name="currentChapterName" type="String" encoding="UTF-8" comment="当前所在章节名" />
		</res>
	</prototype>
	
	<prototype req_name="QUERY_ONE_CHAPTER_REQ" req_type="0x00F0EF41" res_name="QUERY_ONE_CHAPTER_RES" res_type="0x70F0EF41" req_client_send="true" res_client_receive="true" comment="通过章节名请求章节信息">
		<req>
			<property name="playerId" type="long" encoding="UTF-8" comment="角色id（查看自己的传-1）" />
			<property name="chapterName" type="String" encoding="UTF-8" comment="章节名，请求玩家当前等级章节发 default" />
		</req>
		<res>
			<property name="playerId" type="long" encoding="UTF-8" comment="角色id" />
			<property name="chapterName" type="String" encoding="UTF-8" comment="章节名" />
			<property name="icon" type="String" encoding="UTF-8" comment="icon" />
			<property name="totalScore" type="int" encoding="UTF-8" comment="此章节可达到的最大积分" />
			<property name="targetScore" type="int" encoding="UTF-8" comment="领取章节奖励所需积分" />
			<property name="currentScore" type="int" encoding="UTF-8" comment="玩家当前此章节获得积分" />
			<property name="description" type="String" encoding="UTF-8" comment="章节描述" />
			<property name="rewardArticles" type="long[]" encoding="UTF-8" comment="章节奖励物品id列表" />
			<property name="rewardNums" type="long[]" encoding="UTF-8" comment="对应奖励物品数量" />
			<property name="levelLimit" type="int" encoding="UTF-8" comment="领取奖励最低等级" />
			<property name="vipMul" type="int" encoding="UTF-8" comment="vip额外奖励倍数" />
			<property name="vipLimit" type="int" encoding="UTF-8" comment="领取vip奖励最低vip等级" />
			<property name="totalAimNum" type="int" encoding="UTF-8" comment="章节目标总数" />
			<property name="complateNum" type="int" encoding="UTF-8" comment="本章节已完成目标总数" />
			<property name="receiveType" type="byte" encoding="UTF-8" comment="章节奖励领取状态（-1未达成条件  0可领取  1已普通领取  2已vip领取  3vip+普通都已领取）" />
			<object-property name="messes" type="PlayerAims[]" comment="目标信息">
				<property name="id" type="int" comment="目标id"></property>
				<property name="aimName" type="String" encoding="UTF-8" comment="目标名" />
				<property name="description" type="String" encoding="UTF-8" comment="目标描述" />
				<property name="icon" type="String" encoding="UTF-8" comment="目标icon" />
				<property name="frameColor" type="int" encoding="UTF-8" comment="目标边框颜色" />
				<property name="aimNum" type="long" encoding="UTF-8" comment="目标达成条件" />
				<property name="currentNum" type="long" encoding="UTF-8" comment="目标当前进度" />
				<property name="showProcess" type="byte" encoding="UTF-8" comment="是否显示进度 -1为不显示" />
				<property name="receiveStatus" type="byte" encoding="UTF-8" comment="领取状态  -1不可领取  0可领取  1已普通领取  2已vip领取  3都已领取" />
				<property name="vipReceiveLimit" type="int" encoding="UTF-8" comment="vip领取限制" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="QUERY_ONE_AIMS_REQ" req_type="0x00F0EF42" res_name="QUERY_ONE_AIMS_RES" res_type="0x70F0EF42" req_client_send="true" res_client_receive="true" comment="请求单个目标信息">
		<req>
			<property name="playerId" type="long" encoding="UTF-8" comment="角色id（查看自己的传-1）" />
			<property name="aimId" type="int" encoding="UTF-8" comment="目标id" />
		</req>
		<res>
			<property name="playerId" type="long" encoding="UTF-8" comment="角色id" />
			<property name="aimId" type="int" encoding="UTF-8" comment="目标id" />
			<property name="levelLimit" type="int" encoding="UTF-8" comment="领取奖励最低等级" />
			<property name="vipLimit" type="int" encoding="UTF-8" comment="领取vip奖励最低vip等级" />
			<property name="vipMul" type="int" encoding="UTF-8" comment="vip额外奖励倍数" />
			<property name="description" type="String" encoding="UTF-8" comment="引导描述" />
			<property name="rewardArticles" type="long[]" encoding="UTF-8" comment="章节奖励物品id列表" />
			<property name="rewardNums" type="long[]" encoding="UTF-8" comment="对应奖励物品数量" />
			<property name="receiveType" type="byte" encoding="UTF-8" comment="章节奖励领取状态（-1未达成条件  0可领取  1已普通领取  2已vip领取  3vip+普通都已领取）" />
		</res>
	</prototype>
	
	<prototype req_name="RECEIVE_AIM_REWARD_REQ" req_type="0x00F0EF43" res_name="RECEIVE_AIM_REWARD_RES" res_type="0x70F0EF43" req_client_send="true" res_client_receive="true" comment="领取目标奖励">
		<req>
			<property name="aimId" type="int" encoding="UTF-8" comment="目标id" />
			<property name="chapterName" type="String" encoding="UTF-8" comment="章节名" />
			<property name="receiveType" type="byte" encoding="UTF-8" comment="领取类型（0普通领取  1vip领取）" />
		</req>
		<res>
			<property name="contentMess" type="String" encoding="UTF-8" comment="预留。或许播放粒子什么的用" />
		</res>
	</prototype>
	
	<prototype req_name="NOTICE_PARTICLE_REQ" req_type="0x0E0EAA97" req_client_receive="true"
		comment="通知客户端显示目标按钮粒子（有未领取的目标奖励）">
		<req>
			<property name="showNum" type="int" encoding="UTF-8" comment="显示个数"/>
			<property name="btnType" type="int" encoding="UTF-8" comment="方便以后扩展-客户端按钮类型(1为目标按钮)"/>
		</req>
	</prototype>
	
	<prototype req_name="QUERY_COMPLETE_AIM_REQ" req_type="0x00F0EF44" res_name="QUERY_COMPLETE_AIM_RES" res_type="0x70F0EF44" req_client_send="true" res_client_receive="true" comment="达成目标或者查看别人发出的目标">
		<req>
			<property name="playerId" type="long" encoding="UTF-8" comment="玩家id" />
			<property name="aimId" type="int" encoding="UTF-8" comment="目标id" />
		</req>
		<res>
			<property name="playerName" type="String" encoding="UTF-8" comment="玩家名" />
			<property name="icon" type="String" encoding="UTF-8" comment="目标icon" />
			<property name="aimName" type="String" encoding="UTF-8" comment="目标名" />
			<property name="aimColorType" type="int" encoding="UTF-8" comment="目标颜色" />
			<property name="description" type="String" encoding="UTF-8" comment="目标描述" />
			<property name="aimScore" type="int" encoding="UTF-8" comment="目标积分" />
			<property name="completeTime" type="String" encoding="UTF-8" comment="完成时间（未完成为空串）" />
			<property name="completeType" type="byte" encoding="UTF-8" comment="-1代表未完成  1代表已完成" />
		</res>
	</prototype>
	
	<prototype res_name="NOTICE_PLAYER_MUBIAO_CHANGE_RES" res_type="0x70F0EF89" req_client_send="true" 
		res_client_receive="true" comment="通知客户端玩家目标进度变化">
		<res>
			<property name="chapterName" type="String" encoding="UTF-8" comment="所属章节名" />
			<property name="aimId" type="int" comment="目标id" />
			<property name="progress" type="long" comment="目标进度" />
			<property name="currChapterScore" type="int" comment="当前章节积分" />
			<property name="totalScore" type="int" comment="总积分" />
			<property name="chapterReceiveType" type="byte" comment="此章节奖励领取状态" />
		</res>
	</prototype>
	
	<!-- 坐骑 -->
	<prototype req_name="QUERY_HORSE_LIST2_REQ" req_type="0x00F0EF47" res_name="QUERY_HORSE_LIST2_RES" res_type="0x70F0EF47" req_client_send="true"
		res_client_receive="true" comment="客户端向服务器发送查询马匹列表">
		<req>
			<property name="playerId" type="long" comment="角色id"></property>
		</req>
		<res>
			<property name="playerId" type="long" comment="角色id"></property>
			<object-property name="horseList" type="Horse[]" comment="返回个人马匹数组">

				<property name="horseId" type="long" comment="马的id"></property>
				<property name="horseLevel" type="int" comment="马的级别"></property>
				<property name="rank" type="int" comment="阶星级"></property>
				<property name="horseShowName" type="String" encoding="UTF-8" comment="名称" />
				<property name="avata" type="String" encoding="UTF-8" comment="avata" />
				<property name="icon" type="String" encoding="UTF-8" comment="icon" />
				<property name="equipmentIds" type="long[]" comment="坐骑的装备id" />
				<property name="maxEnergy" type="int" comment="坐骑的最大体力值" />
				<property name="energy" type="int" comment="坐骑的当前体力值" />
				<property name="lastEnergyIndex" type="int" comment="体力值影响属性的百分比 5-10" />
				<property name="bloodStar" type="int" comment="血脉星级" />
				<property name="growRate" type="int" comment="成长(乘以100以后的数)" />
				<property name="skillNum" type="int" comment="开启技能格数" />
				<property name="fly" type="boolean" comment="true代表是飞行坐骑" />
				<property name="colorType" type="int" comment="坐骑颜色" />

				<property name="speed" type="int" comment="速度"></property>
				<property name="maxHP" type="int" comment="" />
				<property name="phyAttack" type="int" comment="" />
				<property name="magicAttack" type="int" comment="" />
				<property name="phyDefence" type="int" comment="" />
				<property name="magicDefence" type="int" comment="" />
				<property name="maxMP" type="int" comment="" />
				<property name="breakDefence" type="int" comment="" />
				<property name="accurate" type="int" comment="" />
				<property name="criticalDefence" type="int" comment="" />
				<property name="criticalHit" type="int" comment="" />
				<property name="hit" type="int" comment="" />
				<property name="dodge" type="int" comment="" />
				
				<property name="blizzardAttack" type="int" comment="" />
				<property name="blizzardDefence" type="int" comment="" />
				<property name="blizzardIgnoreDefence" type="int" comment="" />
				
				<property name="fireAttack" type="int" comment="" />
				<property name="fireDefence" type="int" comment="" />
				<property name="fireIgnoreDefence" type="int" comment="" />
				
				<property name="windAttack" type="int" comment="" />
				<property name="windDefence" type="int" comment="" />
				<property name="windIgnoreDefence" type="int" comment="" />
				
				<property name="thunderAttack" type="int" comment="" />
				<property name="thunderDefence" type="int" comment="" />
				<property name="thunderIgnoreDefence" type="int" comment="" />

			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="NOTIFY_HORSE_SELFCHANGE_REQ" req_type="0x00F0EF48" req_client_receive="true" comment="服务器向客户端发送，通知客户端坐骑自身变量的改变">
		<req>
			<object-property name="changeEvents" type="FieldChangeEvent[]" comment="坐骑自身发生的状态变化">
				<property name="objectId" type="long" comment="坐骑id"></property>
				<property name="fieldId" type="short" comment="对象的属性的编号"></property>
				<property name="valueType" type="byte" comment="属性值类型的标识"></property>
				<property name="valueData" type="byte[]" comment="属性值对应的二进制数据"></property>
			</object-property>
		</req>
		<res>
		</res>
	</prototype>
	
	<prototype req_name="QUERY_HORSE_DATA_REQ" req_type="0x00F0EF49" res_name="QUERY_HORSE_DATA_RES" res_type="0x70F0EF49" req_client_send="true"
		res_client_receive="true" comment="请求坐骑相关数据">
		<req>
			<property name="playerId" type="long" comment="角色id"></property>
			<property name="horseId" type="long" comment="马的id"></property>
		</req>
		<res>
			<property name="playerId" type="long" comment="角色id"></property>
			<property name="horseId" type="long" comment="马的id"></property>
			<property name="skillIds" type="int[]" comment="技能id列表"></property>
			<property name="skillLevel" type="int[]" comment="技能等级"></property>
			<property name="skillIcons" type="String[]" encoding="UTF-8" comment="技能icon"></property>
			<property name="tempSkillIds" type="int[]" comment="临时技能（刷新出来没替换的技能列表）"></property>
			<property name="tempSkillIcons" type="String[]" encoding="UTF-8" comment="临时技能icon（刷新出来没替换的技能列表"></property>
			<property name="tempSkillNames" type="String[]" encoding="UTF-8" comment="临时技能名（刷新出来没替换的技能列表"></property>
			<property name="tempSkillDes" type="String[]" encoding="UTF-8" comment="临时技能描述（刷新出来没替换的技能列表"></property>
			<property name="free4Rank" type="int" comment="剩余免费阶星级培养次数"></property>
			<property name="free4Skill" type="int" comment="剩余免费刷新技能次数"></property>
			<property name="maxBloodStar" type="int" comment="最大可升血脉星级"></property>
		</res>
	</prototype>
	
	<prototype req_name="QUERY_SKILLS_MAP_REQ" req_type="0x00F0EF50" res_name="QUERY_SKILLS_MAP_RES" res_type="0x70F0EF50" req_client_send="true"
		res_client_receive="true" comment="请求技能列表">
		<req>
			<property name="skillType" type="int" comment="技能类型  0初级技能  1高级技能"></property>
		</req>
		<res>
			<property name="skillIds" type="int[]" comment="技能id列表"></property>
			<property name="skillIcons" type="String[]" encoding="UTF-8" comment="技能icon"></property>
			<property name="skillType" type="int[]" encoding="UTF-8" comment="0初级技能  1高级技能"></property>
		</res>
	</prototype>
	
	<prototype req_name="HORSE_BLOODSTAR_STRONG_REQ" req_type="0x00F0EF51" res_name="HORSE_BLOODSTAR_STRONG_RES" res_type="0x70F0EF51" req_client_send="true"
		res_client_receive="true" comment="进行血脉升星">
		<req>
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
		</req>
		<res>
			<property name="result" type="byte" encoding="UTF-8" comment="结果 1成功" />
		</res>
	</prototype>
	
	<prototype req_name="HORSE_RANKSTAR_STRONG_REQ" req_type="0x00F0EF55" res_name="HORSE_RANKSTAR_STRONG_RES" res_type="0x70F0EF55" req_client_send="true"
		res_client_receive="true" comment="进行阶升星">
		<req>
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
			<property name="strongType" type="byte" encoding="UTF-8" comment="培养类型(1免费次数+道具培养    2花钱培养)" />
		</req>
		<res>
			<property name="free4rank" type="int" encoding="UTF-8" comment="剩余免费阶培养次数" />
			<property name="result" type="byte" encoding="UTF-8" comment="暴击倍数" />
		</res>
	</prototype>
	
	<prototype req_name="REFRESH_HORSE_SKILL_REQ" req_type="0x00F0EF56" res_name="REFRESH_HORSE_SKILL_RES" res_type="0x70F0EF56" req_client_send="true"
		res_client_receive="true" comment="刷新坐骑技能">
		<req>
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
			<property name="refreshType" type="int" encoding="UTF-8" comment="刷新类型(0免费刷新  1普通刷新  2高级刷新)" />
		</req>
		<res>
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
			<property name="skillId" type="int" encoding="UTF-8" comment="刷新出来的技能id" />
			<property name="skillName" type="String" encoding="UTF-8" comment="刷新出来的技能名" />
			<property name="skillIcon" type="String" encoding="UTF-8" comment="刷新出来的技能icon" />
			<property name="free4Skill" type="int" encoding="UTF-8" comment="免费刷新剩余次数" />
			<property name="particleIndex" type="int" encoding="UTF-8" comment="粒子播放位置 " />
			<property name="articleNum1" type="int" encoding="UTF-8" comment="普通领悟物品数量 " />
			<property name="articleNum2" type="int" encoding="UTF-8" comment="高级领悟物品数量" />
		</res>
	</prototype>
	
	<prototype req_name="LEARN_HORSE_SKILL_REQ" req_type="0x00F0EF57" res_name="LEARN_HORSE_SKILL_RES" res_type="0x70F0EF57" req_client_send="true"
		res_client_receive="true" comment="学习刷新出来的技能">
		<req>
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
			<property name="skillIndex" type="int" encoding="UTF-8" comment="技能格子编号" />
			<property name="skillId" type="int" encoding="UTF-8" comment="要替换的格子对应的技能id  没有技能为-1" />
		</req>
		<res>
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
			<property name="result" type="byte" encoding="UTF-8" comment="结果 1成功" />
		</res>
	</prototype>
	
	<prototype req_name="HORSE_COLOR_STRONG_REQ" req_type="0x00F0EF58" res_name="HORSE_COLOR_STRONG_RES" res_type="0x70F0EF58" req_client_send="true"
		res_client_receive="true" comment="升级坐骑颜色">
		<req>
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
		</req>
		<res>
			<property name="result" type="byte" encoding="UTF-8" comment="结果 1成功" />
			
			<object-property name="changeHorseAttr" type="HorseAttrModel[]" comment="坐骑属性">
				<property name="phyAttack" type="int" encoding="UTF-8" comment="下一星级额外外攻增加值" />
				<property name="magicAttack" type="int" encoding="UTF-8" comment="下一星级额外法攻增加值" />
				<property name="phyDefance" type="int" encoding="UTF-8" comment="下一星级额外外防增加值" />
				<property name="magicDefance" type="int" encoding="UTF-8" comment="下一星级额外法防增加值" />
				<property name="hp" type="int" encoding="UTF-8" comment="下一星级额外气血增加值" />
				<property name="mp" type="int" encoding="UTF-8" comment="下一星级额外仙法增加值" />
				<property name="breakDefance" type="int" encoding="UTF-8" comment="下一星级额外破防增加值" />
				<property name="accurate" type="int" encoding="UTF-8" comment="下一星级额外精准增加值" />
				<property name="criticalDefence" type="int" encoding="UTF-8" comment="下一星级额外免暴增加值" />
				<property name="critical" type="int" encoding="UTF-8" comment="下一星级额外外暴击加值" />
				<property name="dodge" type="int" encoding="UTF-8" comment="下一星级额外闪避增加值" />
				<property name="hit" type="int" encoding="UTF-8" comment="下一星级额外命中增加值" />
				<property name="fireAttack" type="int" encoding="UTF-8" comment="下一星级额外火攻增加值" />
				<property name="blizzAttack" type="int" encoding="UTF-8" comment="下一星级额外冰攻增加值" />
				<property name="windAttack" type="int" encoding="UTF-8" comment="下一星级额外风攻增加值" />
				<property name="thunderAttack" type="int" encoding="UTF-8" comment="下一星级额外雷攻增加值" />
				<property name="fireDefance" type="int" encoding="UTF-8" comment="下一星级额外火防增加值" />
				<property name="blizzDefance" type="int" encoding="UTF-8" comment="下一星级额外冰防增加值" />
				<property name="windDefance" type="int" encoding="UTF-8" comment="下一星级额外风防增加值" />
				<property name="thunderDefance" type="int" encoding="UTF-8" comment="下一星级额外雷防增加值" />
				<property name="fireBreak" type="int" encoding="UTF-8" comment="下一星级额外火减抗增加值" />
				<property name="blizzBreak" type="int" encoding="UTF-8" comment="下一星级额外冰减抗增加值" />
				<property name="windBreak" type="int" encoding="UTF-8" comment="下一星级额外风减抗增加值" />
				<property name="thunderBreak" type="int" encoding="UTF-8" comment="下一星级额外雷减抗增加值" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="UPGRADE_HORSE_SKILL_REQ" req_type="0x00F0EF59" res_name="UPGRADE_HORSE_SKILL_RES" res_type="0x70F0EF59" req_client_send="true"
		res_client_receive="true" comment="升级坐骑技能">
		<req>
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
			<property name="skillIndex" type="int" encoding="UTF-8" comment="技能索引" />
			<property name="skillId" type="int" encoding="UTF-8" comment="技能id" />
		</req>
		<res>
			<property name="result" type="byte" encoding="UTF-8" comment="结果 1成功" />
		</res>
	</prototype>
	
	<prototype req_name="GET_HORSE_SKILL_INFO_SHOW_REQ" req_type="0x00F0EF60" res_name="GET_HORSE_SKILL_INFO_SHOW_RES" res_type="0x70F0EF60" req_client_send="true"
		res_client_receive="true" comment="请求坐骑技能描述">
		<req>
			<property name="playerId" type="long" encoding="UTF-8" comment="玩家id，防止以后可以查看别人的坐骑技能请求描述用,查询自己的传-1" />
			<property name="horseId" type="long" encoding="UTF-8" comment="如果是技能池里边的技能传-1" />
			<property name="skillId" type="int" encoding="UTF-8" comment="技能id" />
		</req>
		<res>
			<property name="skillId" type="int" encoding="UTF-8" comment="技能id" />
			<property name="description" type="String" encoding="UTF-8" comment="技能描述" />
		</res>
	</prototype>
	
	<prototype req_name="GET_HORSE_SKILL_WINDOW_INFO_REQ" req_type="0x00F0EF61" res_name="GET_HORSE_SKILL_WINDOW_INFO_RES" res_type="0x70F0EF61" req_client_send="true"
		res_client_receive="true" comment="打开坐骑花道具刷新技能界面">
		<req>
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
		</req>
		<res>
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
			<property name="tempSkillId" type="int" encoding="UTF-8" comment="可替换技能的id(没有为-1)" />
			<property name="tempSkillIcon" type="String" encoding="UTF-8" comment="可替换技能的icon" />
			<property name="icons" type="String[]" encoding="UTF-8" comment="前两个框对应的icon" />
			<property name="articleIds" type="long[]" encoding="UTF-8" comment="刷新坐骑技能需要的物品id" />
			<property name="desCription" type="String" encoding="UTF-8" comment="描述" />
			<property name="articleNum1" type="int" encoding="UTF-8" comment="普通领悟道具个数" />
			<property name="articleNum2" type="int" encoding="UTF-8" comment="高级领悟道具个数" />
			
		</res>
	</prototype>
	
	<prototype req_name="GET_HORSE_RANK_WINDOW_INFO_REQ" req_type="0x00F0EF62" res_name="GET_HORSE_RANK_WINDOW_INFO_RES" res_type="0x70F0EF62" req_client_send="true"
		res_client_receive="true" comment="打开坐骑阶培养界面">
		<req>
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
		</req>
		<res>
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
			<property name="currentExp" type="long" encoding="UTF-8" comment="阶星级当前经验" />
			<property name="nextStarNeedExp" type="long" encoding="UTF-8" comment="升级到下一星级需要经验" />
			<property name="needArticleId" type="long" encoding="UTF-8" comment="培养需要的道具id" />
			<property name="helpInfo" type="String" encoding="UTF-8" comment="培养帮助界面信息" />
			<property name="leftArticleNum" type="int" encoding="UTF-8" comment="背包剩余物品数量" />
			
			<object-property name="changeHorseAttr" type="HorseAttrModel" comment="坐骑属性">
				<property name="phyAttack" type="int" encoding="UTF-8" comment="下一星级额外外攻增加值" />
				<property name="magicAttack" type="int" encoding="UTF-8" comment="下一星级额外法攻增加值" />
				<property name="phyDefance" type="int" encoding="UTF-8" comment="下一星级额外外防增加值" />
				<property name="magicDefance" type="int" encoding="UTF-8" comment="下一星级额外法防增加值" />
				<property name="hp" type="int" encoding="UTF-8" comment="下一星级额外气血增加值" />
				<property name="mp" type="int" encoding="UTF-8" comment="下一星级额外仙法增加值" />
				<property name="breakDefance" type="int" encoding="UTF-8" comment="下一星级额外破防增加值" />
				<property name="accurate" type="int" encoding="UTF-8" comment="下一星级额外精准增加值" />
				<property name="criticalDefence" type="int" encoding="UTF-8" comment="下一星级额外免暴增加值" />
				<property name="critical" type="int" encoding="UTF-8" comment="下一星级额外外暴击加值" />
				<property name="dodge" type="int" encoding="UTF-8" comment="下一星级额外闪避增加值" />
				<property name="hit" type="int" encoding="UTF-8" comment="下一星级额外命中增加值" />
				<property name="fireAttack" type="int" encoding="UTF-8" comment="下一星级额外火攻增加值" />
				<property name="blizzAttack" type="int" encoding="UTF-8" comment="下一星级额外冰攻增加值" />
				<property name="windAttack" type="int" encoding="UTF-8" comment="下一星级额外风攻增加值" />
				<property name="thunderAttack" type="int" encoding="UTF-8" comment="下一星级额外雷攻增加值" />
				<property name="fireDefance" type="int" encoding="UTF-8" comment="下一星级额外火防增加值" />
				<property name="blizzDefance" type="int" encoding="UTF-8" comment="下一星级额外冰防增加值" />
				<property name="windDefance" type="int" encoding="UTF-8" comment="下一星级额外风防增加值" />
				<property name="thunderDefance" type="int" encoding="UTF-8" comment="下一星级额外雷防增加值" />
				<property name="fireBreak" type="int" encoding="UTF-8" comment="下一星级额外火减抗增加值" />
				<property name="blizzBreak" type="int" encoding="UTF-8" comment="下一星级额外冰减抗增加值" />
				<property name="windBreak" type="int" encoding="UTF-8" comment="下一星级额外风减抗增加值" />
				<property name="thunderBreak" type="int" encoding="UTF-8" comment="下一星级额外雷减抗增加值" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="GET_HORSE_BLOOD_WINDOW_INFO_REQ" req_type="0x00F0EF63" res_name="GET_HORSE_BLOOD_WINDOW_INFO_RES" res_type="0x70F0EF63" req_client_send="true"
		res_client_receive="true" comment="打开坐骑血脉升星界面">
		<req>
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
		</req>
		<res>
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
			<property name="currentXuemai" type="long" encoding="UTF-8" comment="当前拥有血脉值" />
			<property name="needXuemai" type="long" encoding="UTF-8" comment="升级到下一星级需要的血脉值" />
			<property name="maxBloodStar" type="int" encoding="UTF-8" comment="最大可达到的血脉星级" />
			
			<object-property name="changeHorseAttr" type="HorseAttrModel" comment="坐骑属性">
				<property name="phyAttack" type="int" encoding="UTF-8" comment="下一星级额外外攻增加值" />
				<property name="magicAttack" type="int" encoding="UTF-8" comment="下一星级额外法攻增加值" />
				<property name="phyDefance" type="int" encoding="UTF-8" comment="下一星级额外外防增加值" />
				<property name="magicDefance" type="int" encoding="UTF-8" comment="下一星级额外法防增加值" />
				<property name="hp" type="int" encoding="UTF-8" comment="下一星级额外气血增加值" />
				<property name="mp" type="int" encoding="UTF-8" comment="下一星级额外仙法增加值" />
				<property name="breakDefance" type="int" encoding="UTF-8" comment="下一星级额外破防增加值" />
				<property name="accurate" type="int" encoding="UTF-8" comment="下一星级额外精准增加值" />
				<property name="criticalDefence" type="int" encoding="UTF-8" comment="下一星级额外免暴增加值" />
				<property name="critical" type="int" encoding="UTF-8" comment="下一星级额外外暴击加值" />
				<property name="dodge" type="int" encoding="UTF-8" comment="下一星级额外闪避增加值" />
				<property name="hit" type="int" encoding="UTF-8" comment="下一星级额外命中增加值" />
				<property name="fireAttack" type="int" encoding="UTF-8" comment="下一星级额外火攻增加值" />
				<property name="blizzAttack" type="int" encoding="UTF-8" comment="下一星级额外冰攻增加值" />
				<property name="windAttack" type="int" encoding="UTF-8" comment="下一星级额外风攻增加值" />
				<property name="thunderAttack" type="int" encoding="UTF-8" comment="下一星级额外雷攻增加值" />
				<property name="fireDefance" type="int" encoding="UTF-8" comment="下一星级额外火防增加值" />
				<property name="blizzDefance" type="int" encoding="UTF-8" comment="下一星级额外冰防增加值" />
				<property name="windDefance" type="int" encoding="UTF-8" comment="下一星级额外风防增加值" />
				<property name="thunderDefance" type="int" encoding="UTF-8" comment="下一星级额外雷防增加值" />
				<property name="fireBreak" type="int" encoding="UTF-8" comment="下一星级额外火减抗增加值" />
				<property name="blizzBreak" type="int" encoding="UTF-8" comment="下一星级额外冰减抗增加值" />
				<property name="windBreak" type="int" encoding="UTF-8" comment="下一星级额外风减抗增加值" />
				<property name="thunderBreak" type="int" encoding="UTF-8" comment="下一星级额外雷减抗增加值" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="GET_HORSE_NEED_ARTICLE_WIND_REQ" req_type="0x00F0EF64" res_name="GET_HORSE_NEED_ARTICLE_WIND_RES" res_type="0x70F0EF64" req_client_send="true"
		res_client_receive="true" comment="获取成长、升级技能需要物品描述窗口信息">
		<req>
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
			<property name="skillId" type="int" encoding="UTF-8" comment="需要升级的技能id，如果是点击成长传-1" />
		</req>
		<res>
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
			<property name="articleId" type="long" encoding="UTF-8" comment="需要的物品id" />
			<property name="articleNum" type="int" encoding="UTF-8" comment="需要的物品数量" />
			<property name="windType" type="byte" encoding="UTF-8" comment="1为打开成长需要物品窗口   2为打开技能升级需要物品窗口" />
			<property name="desCription" type="String" encoding="UTF-8" comment="描述" />
			
		</res>
	</prototype>
	
	<prototype req_name="GET_HORSE_SKILL_OPEN_INFO_REQ" req_type="0x00F0EF65" res_name="GET_HORSE_SKILL_OPEN_INFO_RES" res_type="0x70F0EF65" req_client_send="true"
		res_client_receive="true" comment="技能格开启条件请求">
		<req>
			<property name="skillIndex" type="int" encoding="UTF-8" comment="技能格index" />
		</req>
		<res>
			<property name="skillIndex" type="int" encoding="UTF-8" comment="技能格index" />
			<property name="description" type="String" encoding="UTF-8" comment="技能格开启描述" />
		</res>
	</prototype>
	
	<prototype req_name="GET_HORSE_HELP_INFO_REQ" req_type="0x00F0EF75" res_name="GET_HORSE_HELP_INFO_RES" res_type="0x70F0EF75" req_client_send="true"
		res_client_receive="true" comment="请求坐骑帮助描述">
		<req>
			<property name="typeIndex" type="byte" encoding="UTF-8" comment="0:坐骑主界面帮助" />
		</req>
		<res>
			<property name="typeIndex" type="byte" encoding="UTF-8" comment="0:坐骑主界面帮助" />
			<property name="description" type="String" encoding="UTF-8" comment="描述" />
		</res>
	</prototype>
	
	<prototype req_name="GET_HORSE_COLOR_STRONG_WIND_REQ" req_type="0x00F0EF76" res_name="GET_HORSE_COLOR_STRONG_WIND_RES" res_type="0x70F0EF76" req_client_send="true"
		res_client_receive="true" comment="获取升级技能需要物品描述窗口信息">
		<req>
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
		</req>
		<res>
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
			<property name="articleId" type="long" encoding="UTF-8" comment="需要的物品id" />
			<property name="articleNum" type="int" encoding="UTF-8" comment="需要的物品数量" />
			<property name="desCription" type="String" encoding="UTF-8" comment="描述" />
			<property name="icons" type="String[]" encoding="UTF-8" comment="坐骑物品icon" />
			<property name="colorType" type="int" encoding="UTF-8" comment="升级后颜色" />
			<property name="growRate" type="int" encoding="UTF-8" comment="升级后成长（需要除以100）" />
			
			<object-property name="changeHorseAttr" type="HorseAttrModel" comment="升级颜色后属性">
				<property name="phyAttack" type="int" encoding="UTF-8" comment="下一星级额外外攻增加值" />
				<property name="magicAttack" type="int" encoding="UTF-8" comment="下一星级额外法攻增加值" />
				<property name="phyDefance" type="int" encoding="UTF-8" comment="下一星级额外外防增加值" />
				<property name="magicDefance" type="int" encoding="UTF-8" comment="下一星级额外法防增加值" />
				<property name="hp" type="int" encoding="UTF-8" comment="下一星级额外气血增加值" />
				<property name="mp" type="int" encoding="UTF-8" comment="下一星级额外仙法增加值" />
				<property name="breakDefance" type="int" encoding="UTF-8" comment="下一星级额外破防增加值" />
				<property name="accurate" type="int" encoding="UTF-8" comment="下一星级额外精准增加值" />
				<property name="criticalDefence" type="int" encoding="UTF-8" comment="下一星级额外免暴增加值" />
				<property name="critical" type="int" encoding="UTF-8" comment="下一星级额外外暴击加值" />
				<property name="dodge" type="int" encoding="UTF-8" comment="下一星级额外闪避增加值" />
				<property name="hit" type="int" encoding="UTF-8" comment="下一星级额外命中增加值" />
				<property name="fireAttack" type="int" encoding="UTF-8" comment="下一星级额外火攻增加值" />
				<property name="blizzAttack" type="int" encoding="UTF-8" comment="下一星级额外冰攻增加值" />
				<property name="windAttack" type="int" encoding="UTF-8" comment="下一星级额外风攻增加值" />
				<property name="thunderAttack" type="int" encoding="UTF-8" comment="下一星级额外雷攻增加值" />
				<property name="fireDefance" type="int" encoding="UTF-8" comment="下一星级额外火防增加值" />
				<property name="blizzDefance" type="int" encoding="UTF-8" comment="下一星级额外冰防增加值" />
				<property name="windDefance" type="int" encoding="UTF-8" comment="下一星级额外风防增加值" />
				<property name="thunderDefance" type="int" encoding="UTF-8" comment="下一星级额外雷防增加值" />
				<property name="fireBreak" type="int" encoding="UTF-8" comment="下一星级额外火减抗增加值" />
				<property name="blizzBreak" type="int" encoding="UTF-8" comment="下一星级额外冰减抗增加值" />
				<property name="windBreak" type="int" encoding="UTF-8" comment="下一星级额外风减抗增加值" />
				<property name="thunderBreak" type="int" encoding="UTF-8" comment="下一星级额外雷减抗增加值" />
			</object-property>
			
		</res>
	</prototype>
	<!-- *********************************坐骑协议结束************************ -->
	
	<prototype req_name="QUERY_ARTICLE_EXCHANGE_REQ" req_type="0x00F0EF52" res_name="QUERY_ARTICLE_EXCHANGE_RES" res_type="0x70F0EF52" req_client_send="true" res_client_receive="true" comment="物品合成请求">
		<req>
			<property name="selectType" type="int" encoding="UTF-8" comment="规模" />
			<property name="articleNames" type="String[]" encoding="UTF-8" comment="物品"></property>
		</req>
		<res>
			<property name="selectType" type="int" encoding="UTF-8" comment="规模" />
			<property name="resultMess" type="String" encoding="UTF-8" comment="配方说明" />
			<property name="newArticleId" type="long" comment="预览id"></property>
		</res>
	</prototype>
	
	<prototype req_name="CONFIRM_ARTICLE_EXCHANGE_REQ" req_type="0x00F0EF53" res_name="CONFIRM_ARTICLE_EXCHANGE_RES" res_type="0x70F0EF53" req_client_send="true" res_client_receive="true" comment="物品合成确认">
		<req>
			<property name="selectType" type="int" encoding="UTF-8" comment="规模" />
			<property name="newArticleId" type="long" encoding="UTF-8" comment="新合成物品id"></property>
			<property name="articleIds" type="long[]" encoding="UTF-8" comment="物品ids"></property>
		</req>
		<res>
			<property name="isSucc" type="int" comment="是否成功0:成功，1:不成功" />
		</res>
	</prototype>
	
	<prototype req_name="SEAL_TASK_INFO_REQ" req_type="0x00F0EF54" res_name="SEAL_TASK_INFO_RES" res_type="0x70F0EF54" req_client_send="true" res_client_receive="true" comment="封印任务描述信息">
		<req>
		</req>
		<res>
			<property name="titleMess" type="String" encoding="UTF-8" comment="描述信息标题" />
			<property name="contentMess" type="String" encoding="UTF-8" comment="描述信息内容" />
			<property name="xPoint" type="int" encoding="UTF-8" comment="x" />
			<property name="yPoint" type="int" encoding="UTF-8" comment="y" />
			<property name="npcName" type="String" encoding="UTF-8" comment="npc名" />
			<property name="mapName" type="String" encoding="UTF-8" comment="map名" />
		</res>
	</prototype>
	
	<prototype req_name="COLLECT_MATERIAL_FOR_BOSS_REQ" req_type="0x00F0EF66" res_name="COLLECT_MATERIAL_FOR_BOSS_RES" res_type="0x70F0EF66" req_client_send="true" res_client_receive="true" comment="捐献材料削弱boss">
		<req>
		</req>
		<res>
			<property name="resultMess" type="String" encoding="UTF-8" comment="描述信息" />
			<property name="needMaterialId" type="long" encoding="UTF-8" comment="所需材料id" />
			<property name="bossBuffName" type="String" encoding="UTF-8" comment="boss削弱buff" />
			<property name="bossBuffIcon" type="String" encoding="UTF-8" comment="boss削弱buff图标" />
			<property name="bossBuffInfo" type="String" encoding="UTF-8" comment="buff描述" />
			<property name="currPoints" type="long" encoding="UTF-8" comment="当前进度" />
			<property name="allPoints" type="long" encoding="UTF-8" comment="总进度" />
			<property name="conllectType" type="int" comment="type:0-默认的，1-buff的" />
			<property name="bossType" type="int" comment="type:0-Aboss，1-Bboss" />
			<property name="materialName" type="String" encoding="UTF-8" comment="材料名字" />
		</res>
	</prototype>
	
	<prototype req_name="CONFIRM_COLLENT_MATERIAL_FOR_BOSS_REQ" req_type="0x00F0EF67" res_name="CONFIRM_COLLENT_MATERIAL_FOR_BOSS_RES" res_type="0x70F0EF67" req_client_send="true" res_client_receive="true" comment="确认捐献材料削弱boss">
		<req>
			<property name="materialIds" type="long[]" comment="材料ids"></property>
			<property name="materialNums" type="int[]" comment="材料数量"></property>
			<property name="bossType" type="int" comment="type:0-Aboss，1-Bboss" />
		</req>
		<res>
			<property name="isSucc" type="int" comment="是否成功0:成功，1:不成功" />
		</res>
	</prototype>
	
	<prototype req_name="ACTIVITY_FIRST_PAGE_REQ" req_type="0x00F0EF68" res_name="ACTIVITY_FIRST_PAGE_RES" res_type="0x70F0EF68" req_client_send="true" res_client_receive="true" comment="活动首界面">
		<req>
			<property name="reqType" type="int" comment="1:日常,2:活动" />
		</req>
		<res>
			<property name="reqType" type="int" comment="1:日常,2:活动" />
			<property name="noticeStat" type="int[]" comment="按钮状态" />
			<property name="activityNames" type="String[]" encoding="UTF-8" comment="活动名字" />
			<property name="activityColors" type="int[]" encoding="UTF-8" comment="活动颜色" />
			<property name="activityStst" type="int[]" encoding="UTF-8" comment="活动列表状态" />
		</res>
	</prototype>
	
	<prototype req_name="GET_ACTIVITY_INFO_REQ" req_type="0x00F0EF99" res_name="GET_ACTIVITY_INFO_RES" res_type="0x70F0EF99" req_client_send="true" res_client_receive="true" comment="请求活动">
		<req>
			<property name="activityName" type="String" encoding="UTF-8" comment="请求的活动名" />
		</req>
		<res>
			<property name="activityName" type="String" encoding="UTF-8" comment="请求的活动名" />
			<property name="tempType" type="int" encoding="UTF-8" comment="模板类型" />
			<property name="backgroundName" type="String" encoding="UTF-8" comment="背景图" />
			<property name="activityTitle" type="String" encoding="UTF-8" comment="活动标题" />
			<property name="activityContent" type="String" encoding="UTF-8" comment="活动内容" />
			<property name="rewardIds" type="long[]" comment="奖励ids" />
			<property name="rewardNums" type="int[]" comment="奖励nums" />
			<property name="lizis" type="int[]" comment="是否显示粒子" />
			<property name="buttonType" type="int" encoding="UTF-8" comment="buttonType" />
			<property name="buttonStat" type="int" encoding="UTF-8" comment="活动按钮状态" />
			<property name="buffonName" type="String" encoding="UTF-8" comment="buttonName" />
			<property name="chargeMess" type="String" encoding="UTF-8" comment="刷新活动内容/活动进度改变" />
			<property name="xPoint" type="int" encoding="UTF-8" comment="x" />
			<property name="yPoint" type="int" encoding="UTF-8" comment="y" />
			<property name="npcName" type="String" encoding="UTF-8" comment="npc名" />
			<property name="mapName" type="String" encoding="UTF-8" comment="地图名" />
		</res>
	</prototype>
	
	<prototype req_name="SEAL_TASK_STAT_REQ" req_type="0x00F0EF70" res_name="SEAL_TASK_STAT_RES" res_type="0x70F0EF70" req_client_send="true" res_client_receive="true" comment="封印任务状态">
		<req>
		</req>
		<res>
			<property name="sealStat" type="int" comment="0:默认无,1:封印状态下并且能做任务" />
		</res>
	</prototype>
	<!-- 新副本协议 -->
	<prototype req_name="NOTIFY_SHOW_DOWNCITY_TUN_REQ" req_type="0x00F0EF71" req_client_receive="true" comment="服务器向客户端发送，通知打开通过副本奖励转盘">
		<req>
			<property name="articleIds" type="long[]" encoding="UTF-8" comment="临时物品id" />
			<property name="articleNums" type="int[]" encoding="UTF-8" comment="物品数量" />
			<property name="leftTimes" type="int" encoding="UTF-8" comment="剩余可抽取次数" />
		</req>
		<res>
		</res>
	</prototype>
	
	<prototype req_name="PLAY_DOWNCITY_TUN_REQ" req_type="0x00F0EF72" res_name="PLAY_DOWNCITY_TUN_RES" res_type="0x70F0EF72" req_client_send="true" res_client_receive="true" comment="转盘抽奖">
		<req>
		</req>
		<res>
			<property name="resultId" type="long" comment="结果物品id(-1带表没次数了)" />
			<property name="resultNum" type="int" comment="物品数量" />
			<property name="leftTimes" type="int" encoding="UTF-8" comment="剩余可抽取次数" />
		</res>
	</prototype>
	
	<prototype res_name="GET_ACTIVITY_MESS_RES" res_type="0x70F0EF73" req_client_send="true" res_client_receive="true" comment="活动信息">
		<res>
			<property name="activityName" type="String" encoding="UTF-8" comment="请求的活动名" />
			<property name="chargeMess" type="String" encoding="UTF-8" comment="刷新活动内容/活动进度改变" />
		</res>
	</prototype>
	
	<prototype req_name="NOTICE_ACTIVITY_STAT_REQ" req_type="0x00F0EF74" req_client_send="true" comment="通知活动状态">
		<req>
			<property name="reqType" type="int" comment="1:日常,2:活动" />
			<property name="activityName" type="String" encoding="UTF-8" comment="请求的活动名" />
		</req>
	</prototype>
	
	<!-- 挖坟活动 -->
	<prototype req_name="OPEN_WAFEN_ACTIVITY_WINDOW_REQ" req_type="0x00F0EF78" res_name="OPEN_WAFEN_ACTIVITY_WINDOW_RES" res_type="0x70F0EF78" req_client_send="true" 
	res_client_receive="true" comment="打开挖坟活动界面">
		<req>
			<property name="fenmuType" type="byte" encoding="UTF-8" comment="0为私有  1为全服共有" />
		</req>
		<res>
			<property name="fenmuType" type="byte" encoding="UTF-8" comment="0为私有  1为全服共有" />
			<property name="fenMuNames" type="String[]" encoding="UTF-8" comment="所有坟墓名(顺序)" />
			<property name="currentFenMuIndex" type="int" encoding="UTF-8" comment="当前坟墓索引" />
			<property name="currentFenMu" type="String" encoding="UTF-8" comment="当前应该挖取的坟墓" />
			<property name="lineWeigth" type="int" encoding="UTF-8" comment="行宽" />
			<property name="lineHeigth" type="int" encoding="UTF-8" comment="列高" />
			<property name="description" type="String" encoding="UTF-8" comment="描述--用不用再看" />
			<property name="leftYinChanzi" type="int" encoding="UTF-8" comment="银铲子剩余" />
			<property name="leftJinChanzi" type="int" encoding="UTF-8" comment="金铲子剩余" />
			<property name="leftLiuliChanzi" type="int" encoding="UTF-8" comment="琉璃铲子剩余" />
			<property name="chanziType" type="int[]" encoding="UTF-8" comment="当前坟墓可使用的铲子类型" />
			<object-property name="fendiModel" type="FenDiModel4Client[]" comment="当前坟墓相关信息">
				<property name="fendiIndex" type="int" comment="坟地索引" />
				<property name="articleId" type="long" comment="物品id" />
				<property name="receiveType" type="byte" comment="领取状态(1为未领取  2为已领取)" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="GET_ONE_FENMU_INFO_REQ" req_type="0x00F0EF79" res_name="GET_ONE_FENMU_INFO_RES" res_type="0x70F0EF79" req_client_send="true" 
		res_client_receive="true" comment="请求单个坟墓信息">
		<req>
			<property name="fenmuName" type="String" encoding="UTF-8" comment="坟墓名" />
		</req>
		<res>
			<property name="fenmuName" type="String" encoding="UTF-8" comment="坟墓名" />
			<property name="fenmuId" type="int" encoding="UTF-8" comment="坟墓id" />
			<property name="lineWeigth" type="int" encoding="UTF-8" comment="行宽" />
			<property name="lineHeigth" type="int" encoding="UTF-8" comment="列高" />
			<property name="chanziType" type="int[]" encoding="UTF-8" comment="当前坟墓可使用的铲子类型" />
			<property name="description" type="String" encoding="UTF-8" comment="帮助信息" />
			<object-property name="fendiModel" type="FenDiModel4Client[]" comment="坟墓相关信息">
				<property name="fendiIndex" type="int" comment="坟地索引" />
				<property name="articleId" type="long" comment="物品id" />
				<property name="receiveType" type="byte" comment="领取状态(1为未领取  2为已领取)" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="DIG_FENMU_REQ" req_type="0x00F0EF80" res_name="DIG_FENMU_RES" res_type="0x70F0EF80" req_client_send="true" 
		res_client_receive="true" comment="挖坟">
		<req>
			<property name="fenmuName" type="String" encoding="UTF-8"  comment="坟墓名" />
			<property name="fendiIndex" type="int" comment="坟地索引" />
		</req>
		<res>
			<property name="fenmuName" type="String" encoding="UTF-8"  comment="坟墓名" />
			<property name="fenmuIndex" type="int" encoding="UTF-8"  comment="坟墓索引id" />
			<property name="fendiIndex" type="int" comment="坟地索引" />
			<property name="receiveType" type="byte" comment="领取状态" />
			<property name="articleId" type="long" comment="挖取的物品id" />
			<property name="useChanziType" type="byte" comment="使用的铲子类型" />
			<property name="leftYinChanzi" type="int" encoding="UTF-8" comment="银铲子剩余" />
			<property name="leftJinChanzi" type="int" encoding="UTF-8" comment="金铲子剩余" />
			<property name="leftLiuliChanzi" type="int" encoding="UTF-8" comment="琉璃铲子剩余" />
		</res>
	</prototype>
	
	<prototype req_name="RECEIVE_FENMU_REWARD_REQ" req_type="0x00F0EF81" res_name="RECEIVE_FENMU_REWARD_RES" res_type="0x70F0EF81" req_client_send="true" 
		res_client_receive="true" comment="一键领取所有挖出来的奖励">
		<req>
			<property name="fenmuName" type="String" encoding="UTF-8"  comment="坟墓名" />
		</req>
		<res>
			<property name="fenmuName" type="String" encoding="UTF-8"  comment="坟墓名" />
			<property name="fenmuIndex" type="int" encoding="UTF-8"  comment="坟墓索引id" />
			<object-property name="fendiModel" type="FenDiModel4Client[]" comment="坟墓相关信息">
				<property name="fendiIndex" type="int" comment="坟地索引" />
				<property name="articleId" type="long" comment="物品id" />
				<property name="receiveType" type="byte" comment="领取状态(1为未领取  2为已领取)" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="EXCHANGE_CHANZI_REQ" req_type="0x00F0EF82" res_name="EXCHANGE_CHANZI_RES" res_type="0x70F0EF82" req_client_send="true" 
		res_client_receive="true" comment="兑换铲子">
		<req>
			<property name="exchangeType" type="byte" comment="0:银铲子   1:金铲子  2:琉璃铲子" />
		</req>
		<res>
			<property name="exchangeType" type="byte" comment="0:银铲子   1:金铲子  2:琉璃铲子" />
			<property name="leftNum" type="int" comment="对应铲子剩余数量" />
		</res>
	</prototype>
	
	<prototype req_name="DIG_FENMU_TEN_REQ" req_type="0x00F0EF84" res_name="DIG_FENMU_TEN_RES" res_type="0x70F0EF84" req_client_send="true" 
		res_client_receive="true" comment="十连挖">
		<req>
			<property name="fenmuName" type="String" encoding="UTF-8"  comment="坟墓名" />
		</req>
		<res>
			<property name="fenmuName" type="String" encoding="UTF-8"  comment="坟墓名" />
			<property name="leftYinChanzi" type="int" encoding="UTF-8" comment="银铲子剩余" />
			<property name="leftJinChanzi" type="int" encoding="UTF-8" comment="金铲子剩余" />
			<property name="leftLiuliChanzi" type="int" encoding="UTF-8" comment="琉璃铲子剩余" />
			<property name="fendiIndexs" type="int[]" encoding="UTF-8" comment="十连挖坟地索引" />
			<object-property name="fendiModel" type="FenDiModel4Client[]" comment="坟墓相关信息">
				<property name="fendiIndex" type="int" comment="坟地索引" />
				<property name="articleId" type="long" comment="物品id" />
				<property name="receiveType" type="byte" comment="领取状态(1为未领取  2为已领取)" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="BICHAN_ARTICLE_REQ" req_type="0x00F0EF85" res_name="BICHAN_ARTICLE_RES" res_type="0x70F0EF85" req_client_send="true" 
		res_client_receive="true" comment="请求坟墓必产物品">
		<req>
			<property name="fenmuName" type="String" encoding="UTF-8" comment="坟墓名" />
		</req>
		<res>
			<property name="fenmuName" type="String" encoding="UTF-8" comment="坟墓名" />
			<property name="articleIds" type="long[]" comment="必产物品临时id" />
			<property name="description" type="String" encoding="UTF-8" comment="描述" />
			<property name="description2" type="String" encoding="UTF-8" comment="描述2" />
		</res>
	</prototype>
	
	<!-- 称号修改 -->
	<prototype req_name="PLAYER_TITLES_List_REQ" req_type="0x00F0EF86" res_name="PLAYER_TITLES_List_RES" res_type="0x70F0EF86" req_client_send="true" 
		res_client_receive="true" comment="请求玩家称号列表">
		<req>
		</req>
		<res>
			<object-property name="honors" type="Honor[]" comment="">
				<property name="name" type="String" encoding="UTF-8" comment="称号名"></property>
				<property name="id" type="int" comment="称号实体的唯一标识"></property>
				<property name="color" type="int" comment="称号颜色品质"></property>
				<property name="expirationTime" type="long" comment="过期时间"></property>
				<property name="iconId" type="String" encoding="UTF-8" comment="称号ICON的ID"></property>
				<property name="desp" type="String" encoding="UTF-8" comment="称号描述"></property>
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="QUERY_TITLE_PRODUCE_REQ" req_type="0x00F0EF88" res_name="QUERY_TITLE_PRODUCE_RES" res_type="0x70F0EF88" req_client_send="true" 
		res_client_receive="true" comment="请求称号产出">
		<req>
			<property name="titleName" type="String" encoding="UTF-8" comment="称号名"></property>
		</req>
		<res>
			<property name="titleName" type="String" encoding="UTF-8" comment="称号名"></property>
			<property name="desp" type="String" encoding="UTF-8" comment="产出描述"></property>
		</res>
	</prototype>
	
	<prototype req_name="NOTICE_ACTIVITY_BUTTON_STAT_REQ" req_type="0x00F0EF83" res_name="NOTICE_ACTIVITY_BUTTON_STAT_RES" res_type="0x70F0EF83" req_client_send="true" 
		res_client_receive="true" comment="活动按钮状态">
		<req>
		</req>
		<res>
			<property name="buttonname" type="String" encoding="UTF-8" comment="按钮" />
			<property name="stat" type="int" comment="状态0：默认不亮，1:亮" />
		</res>
	</prototype>
	<prototype req_name="ARTICLE_INFO_REQ" req_type="0x00FF0000" res_name="ARTICLE_INFO_RES" res_type="0x70FF0000" req_client_send="true" 
		res_client_receive="true" comment="查询物品属性">
		<req>
			<property name="articleName" type="String[]" encoding="UTF-8" comment="物品名称"/>
			<property name="articleColorType" type="int[]" encoding="UTF-8" comment="物品颜色"/>
		</req>
		<res>
			<property name="articleName" type="String[]" encoding="UTF-8" comment="物品名称"/>
			<property name="articleColorType" type="int[]" encoding="UTF-8" comment="物品颜色"/>
			<property name="articleDescription" type="String[]" encoding="UTF-8" comment="物品描述"/>
		</res>
	</prototype>
	<prototype req_name="GET_VIP_NOTICE_INFO_REQ" req_type="0x00FF0001" res_name="GET_VIP_NOTICE_INFO_RES" res_type="0x70FF0001" req_client_send="true" res_client_receive="true" comment="获取vip公告信息">
		<req>
		</req>
		<res>
			<property name="noticeTitle" type="String" encoding="UTF-8" comment="标题"/>
			<property name="noticeContent" type="String" encoding="UTF-8" comment="内容"/>
		</res>
	</prototype>
	<prototype res_name="ARTICLE_REMOVE_SUCC_RES" res_type="0x70FF0002" res_client_receive="true" comment="物品是否删除成功">
		<res>
			<property name="stat" type="int" comment="状态0：成功，1:失败"></property>
		</res>
	</prototype>
	
	<!-- 商店刷新 -->
	<prototype req_name="REFRESH_SHOP_GOODS_REQ" req_type="0x00FF0009" res_name="REFRESH_SHOP_GOODS_RES" res_type="0x70FF0009" req_client_send="true" res_client_receive="true" comment="花钱刷新商店物品">
		<req>
			<property name="shopName" type="String" encoding="UTF-8" comment="商店名" />
		</req>
		<res>
			<property name="result" type="int" encoding="UTF-8" comment="成功失败,0:失败；1:成功"/>
		</res>
	</prototype>
	<prototype req_name="CAN_REFRESH_SHOP_NAME_REQ" req_type="0x00FF0010" res_name="CAN_REFRESH_SHOP_NAME_RES" res_type="0x70FF0010" req_client_send="true" res_client_receive="true" comment="请求有刷新道具功能的商店名">
		<req>
		</req>
		<res>
			<property name="shopNames" type="String[]" encoding="UTF-8" comment="商店名" />
		</res>
	</prototype>
	
	<prototype req_name="JIAZU_INFO_REQ2" req_type="0x00FF0015" res_name="JIAZU_INFO_RES2" res_type="0x70FF0015" req_client_send="true"
		res_client_receive="true" comment="查询家族信息2">
		<req></req>
		<res>
			<property name="jiazuId" type="long" encoding="UTF-8" comment="家族ID" />
			<property name="jiazuName" type="String" encoding="UTF-8" comment="家族名字" />
			<property name="level" type="int" encoding="UTF-8" comment="家族等级" />
			<property name="slogan" type="String" encoding="UTF-8" comment="家族标语" />
			<property name="usedBedge" type="int" encoding="UTF-8" comment="当前使用的徽章" />
			<property name="constructionConsume" type="long" encoding="UTF-8" comment="家族灵脉值 " />
			<property name="titleAlias" type="String[]" encoding="UTF-8" comment="家族修改后的职位" />
			<object-property name="jiazuMembers" type="JiazuMember4Client[]" comment="家族成员类表">
				<property name="playerName" type="String" encoding="UTF-8" comment="角色名" />
				<property name="playerId" type="long" encoding="UTF-8" comment="成员ID" />
				<property name="title" type="int" encoding="UTF-8" comment="职位 " />
				<property name="playerLevel" type="int" encoding="UTF-8" comment="角色等级" />
				<property name="sex" type="byte" encoding="UTF-8" comment="角色性别" />
				<property name="contributionSalary" type="int" encoding="UTF-8" comment="贡献度" />
				<property name="contributeMoney" type="long" encoding="UTF-8" comment="捐献的钱" />
				<property name="classLevel" type="int" encoding="UTF-8" comment="境界" />
				<property name="career" type="int" encoding="UTF-8" comment="职业" />
				<property name="onLine" type="boolean" encoding="UTF-8" comment="是否在线" />
			</object-property>
			<object-property name="allBedge" type="JiazuBedge[]" comment="所有的徽章">
				<property name="id" type="int" encoding="UTF-8" comment="徽章ID" />
				<property name="name" type="String" encoding="UTF-8" comment="徽章名字" />
				<property name="resName" type="String" encoding="UTF-8" comment="徽章资源名" />
				<property name="des" type="String" encoding="UTF-8" comment="徽章描述" />
				<property name="color" type="int" encoding="UTF-8" comment="徽章颜色" />
				<property name="price" type="int" encoding="UTF-8" comment="徽章价格" />
				<property name="type" type="int" encoding="UTF-8" comment="徽章类型" />
				<property name="levelLimit" type="int" encoding="UTF-8" comment="徽章限制" />
			</object-property>
			<property name="hadBedge" type="int[]" encoding="UTF-8" comment="已获得的徽章ID" />
			<property name="switchCost" type="int" comment="切换徽章消耗" />
			<property name="septStationId" type="long" comment="驻地ID" />
			<property name="maintai" type="long" comment="维护费" />
			<property name="jiazuMoney" type="long" encoding="UTF-8" comment="家族资金 " />
			<property name="warScore" type="long" encoding="UTF-8" comment="家族武力值 " />
			<property name="prosperity" type="long" encoding="UTF-8" comment="家族繁荣度 " />
		</res>
	</prototype>
	
	<prototype req_name="JIAZU_INFO_ADD_TIME_REQ2" req_type="0x00FF0016" res_name="JIAZU_INFO_ADD_TIME_RES2" res_type="0x70FF0016"
		req_client_send="true" res_client_receive="true" comment="查询家族信息(2014年8月14日10:03:56)">
		<req></req>
		<res>
			<property name="jiazuId" type="long" encoding="UTF-8" comment="家族ID" />
			<property name="jiazuName" type="String" encoding="UTF-8" comment="家族名字" />
			<property name="level" type="int" encoding="UTF-8" comment="家族等级" />
			<property name="slogan" type="String" encoding="UTF-8" comment="家族标语" />
			<property name="usedBedge" type="int" encoding="UTF-8" comment="当前使用的徽章" />
			<property name="constructionConsume" type="long" encoding="UTF-8" comment="家族灵脉值 " />
			<property name="titleAlias" type="String[]" encoding="UTF-8" comment="家族修改后的职位" />
			<object-property name="jiazuMembers" type="JiazuMember4Client[]" comment="家族成员类表">
				<property name="playerName" type="String" encoding="UTF-8" comment="角色名" />
				<property name="playerId" type="long" encoding="UTF-8" comment="成员ID" />
				<property name="title" type="int" encoding="UTF-8" comment="职位 " />
				<property name="playerLevel" type="int" encoding="UTF-8" comment="角色等级" />
				<property name="sex" type="byte" encoding="UTF-8" comment="角色性别" />
				<property name="contributionSalary" type="int" encoding="UTF-8" comment="贡献度" />
				<property name="contributeMoney" type="long" encoding="UTF-8" comment="捐献的钱" />
				<property name="classLevel" type="int" encoding="UTF-8" comment="境界" />
				<property name="career" type="int" encoding="UTF-8" comment="职业" />
				<property name="onLine" type="boolean" encoding="UTF-8" comment="是否在线" />
			</object-property>
			<property name="offLineTime" type="String[]" encoding="UTF-8" comment="成员离线时间,和上面对应" />
			<object-property name="allBedge" type="JiazuBedge[]" comment="所有的徽章">
				<property name="id" type="int" encoding="UTF-8" comment="徽章ID" />
				<property name="name" type="String" encoding="UTF-8" comment="徽章名字" />
				<property name="resName" type="String" encoding="UTF-8" comment="徽章资源名" />
				<property name="des" type="String" encoding="UTF-8" comment="徽章描述" />
				<property name="color" type="int" encoding="UTF-8" comment="徽章颜色" />
				<property name="price" type="int" encoding="UTF-8" comment="徽章价格" />
				<property name="type" type="int" encoding="UTF-8" comment="徽章类型" />
				<property name="levelLimit" type="int" encoding="UTF-8" comment="徽章限制" />
			</object-property>
			<property name="hadBedge" type="int[]" encoding="UTF-8" comment="已获得的徽章ID" />
			<property name="switchCost" type="int" comment="切换徽章消耗" />
			<property name="septStationId" type="long" comment="驻地ID" />
			<property name="maintai" type="long" comment="维护费" />
			<property name="jiazuMoney" type="long" encoding="UTF-8" comment="家族资金 " />
			<property name="warScore" type="long" encoding="UTF-8" comment="家族武力值 " />
			<property name="prosperity" type="long" encoding="UTF-8" comment="家族繁荣度 " />
		</res>
	</prototype>
	<prototype req_name="JIAZU_BIAOCHE_QIANGHUA_INFO_REQ" req_type="0x00FF0017" res_name="JIAZU_BIAOCHE_QIANGHUA_INFO_RES" res_type="0x70FF0017"
		req_client_send="true" res_client_receive="true" comment="家族镖车强化信息">
		<req></req>
		<res>
			<property name="jiazuLevel" type="int" encoding="UTF-8" comment="家族等级 " />
			<property name="jiazuMoney" type="long" encoding="UTF-8" comment="家族资金 " />
			<property name="constructionConsume" type="long" encoding="UTF-8" comment="家族灵脉值 " />
			<property name="maxLevels" type="int[]" encoding="UTF-8" comment="强化最大等级  [0]血量  [1]双防" />
			<property name="currentLevels" type="int[]" encoding="UTF-8" comment="当前强化等级 [0]血量 [1]双防" />
			<property name="maxProcess" type="int[]" encoding="UTF-8" comment="强化最大进度 [0]血量 [1]双防" />
			<property name="process" type="int[]" encoding="UTF-8" comment="强化当前进度 [0]血量 [1]双防" />
			<property name="costNums" type="long[]" encoding="UTF-8" comment="强化花费[0]血量 [1]双防" />
			<property name="des1" type="String[]" encoding="UTF-8" comment="当前等级描述" />
			<property name="des2" type="String[]" encoding="UTF-8" comment="下一级描述" />
			<property name="jiazuLevels" type="int[]" encoding="UTF-8" comment="需要家族等级 [0]血量 [1]双防" />
		</res>
	</prototype>
	<prototype req_name="JIAZU_BIAOCHE_QIANGHUA_REQ" req_type="0x00FF0018" res_name="JIAZU_BIAOCHE_QIANGHUA_RES" res_type="0x70FF0018"
		req_client_send="true" res_client_receive="true" comment="家族镖车强化">
		<req>
			<property name="qianghuaType" type="byte" encoding="UTF-8" comment="1血量  2双防" />
		</req>
		<res>
			<property name="qianghuaType" type="byte" encoding="UTF-8" comment="1血量  2双防" />
			<property name="isLevelUp" type="byte" encoding="UTF-8" comment="1表示升级  播动画 " />
			<property name="jiazuMoney" type="long" encoding="UTF-8" comment="家族资金 " />
			<property name="constructionConsume" type="long" encoding="UTF-8" comment="家族灵脉值 " />
			<property name="maxLevels" type="int" encoding="UTF-8" comment="强化最大等级" />
			<property name="currentLevels" type="int" encoding="UTF-8" comment="当前强化等级" />
			<property name="maxProcess" type="int" encoding="UTF-8" comment="强化最大进度 " />
			<property name="process" type="int" encoding="UTF-8" comment="强化当前进度" />
			<property name="costNums" type="long" encoding="UTF-8" comment="强化花费" />
			<property name="des1" type="String" encoding="UTF-8" comment="当前等级描述" />
			<property name="des2" type="String" encoding="UTF-8" comment="下一级描述" />
			<property name="jiazuLevel" type="int" encoding="UTF-8" comment="学习需要家族等级" />
		</res>
	</prototype>
	<prototype req_name="BRIGHTINLAY_EXCAVATE_REQ" req_type="0x00FF0034" res_name="BRIGHTINLAY_EXCAVATE_RES" res_type="0x70FF0034"
		req_client_send="true" res_client_receive="true" comment="光效宝石镶嵌挖取">
		<req>
			<property name="brightInlayId" type="long" encoding="UTF-8" comment="光效宝石id" />
			<property name="operateType" type="int" encoding="UTF-8" comment="镶嵌类型,0表示镶嵌,-1表示挖取" />
		</req>
		<res>
			<property name="succ" type="boolean" encoding="UTF-8" comment="操作成功与否"/>
		</res>
	</prototype>
	<!-- 家族 -->
	<prototype req_name="JIAZU_XIULIAN_INFO_REQ" req_type="0x00FF0035" res_name="JIAZU_XIULIAN_INFO_RES" res_type="0x70FF0035"
		req_client_send="true" res_client_receive="true" comment="家族修炼信息">
		<req></req>
		<res>
			<property name="gongzi" type="long" encoding="UTF-8" comment="工资" />
			<property name="xiulianZhi" type="long" encoding="UTF-8" comment="修炼值 " />
			<property name="maxShangxiangNums" type="int" encoding="UTF-8" comment="最多可上香次数 " />
			<property name="currentShangxiang" type="int" encoding="UTF-8" comment="已经上香次数" />
			<property name="shangxiangId" type="int[]" encoding="UTF-8" comment="对应id" />
			<property name="description" type="String[]" encoding="UTF-8" comment="奖励描述" />
			<property name="costType" type="int[]" encoding="UTF-8" comment="消耗金钱类型  0绑银  2工资 1银子" />
			<property name="costNums" type="long[]" encoding="UTF-8" comment="对应消耗数量" />
			<property name="rewardXiulian" type="int[]" encoding="UTF-8" comment="对应奖励修炼值数量" />
		</res>
	</prototype>
	<prototype req_name="JIAZU_XIULIAN_REQ" req_type="0x00FF0036" res_name="JIAZU_XIULIAN_RES" res_type="0x70FF0036"
		req_client_send="true" res_client_receive="true" comment="进行家族修炼">
		<req>
			<property name="shangxiangId" type="int" encoding="UTF-8" comment="对应id" />			
		</req>
		<res>
			<property name="shangxiangId" type="int" encoding="UTF-8" comment="对应id" />
			<property name="gongzi" type="long" encoding="UTF-8" comment="工资" />
			<property name="xiulianZhi" type="long" encoding="UTF-8" comment="修炼值 " />
			<property name="maxShangxiangNums" type="int" encoding="UTF-8" comment="最多可上香次数 " />
			<property name="currentShangxiang" type="int" encoding="UTF-8" comment="已经上香次数" />
		</res>
	</prototype>
	<prototype req_name="JIAZU_JINENG_INFO_REQ" req_type="0x00FF0037" res_name="JIAZU_JINENG_INFO_RES" res_type="0x70FF0037"
		req_client_send="true" res_client_receive="true" comment="家族技能信息">
		<req>
		</req>
		<res>
			<property name="xiulianZhi" type="long" encoding="UTF-8" comment="修炼值" />
			<property name="buildType" type="byte" encoding="UTF-8" comment="0防具坊  1武器坊" />
			<object-property name="jiazuSkills" type="JiazuSkillModel[]" comment="家族技能信息">
				<property name="skillId" type="int" encoding="UTF-8" comment="技能id" />
				<property name="skillName" type="String" encoding="UTF-8" comment="技能名" />
				<property name="icon" type="String" encoding="UTF-8" comment="icon" />
				<property name="maxLevel" type="int" encoding="UTF-8" comment="可升级的最大等级" />
				<property name="currentLevel" type="int" encoding="UTF-8" comment="当前等级" />
				<property name="needExp" type="int" encoding="UTF-8" comment="升级需要经验" />
				<property name="currentExp" type="int" encoding="UTF-8" comment="当前经验" />
				<property name="costType" type="int" encoding="UTF-8" comment="消耗类型" />
				<property name="costNum" type="long" encoding="UTF-8" comment="消耗金币数量" />
				<property name="currentLevelDes" type="String" encoding="UTF-8" comment="当前等级描述" />
			</object-property>
			<property name="costXiulianNum" type="long" encoding="UTF-8" comment="每次消耗修炼值" />
		</res>
	</prototype>
	<prototype req_name="JIAZU_JINENG_REQ" req_type="0x00FF0038" res_name="JIAZU_JINENG_RES" res_type="0x70FF0038"
		req_client_send="true" res_client_receive="true" comment="学习家族技能">
		<req>
			<property name="learnType" type="byte" encoding="UTF-8" comment="0一倍  1十倍" />			
			<property name="skillId" type="int" encoding="UTF-8" comment="家族技能id" />			
		</req>
		<res>
			<property name="xiulianZhi" type="long" encoding="UTF-8" comment="修炼值" />
			<object-property name="jiazuSkills" type="JiazuSkillModel" comment="家族技能信息">
				<property name="skillId" type="int" encoding="UTF-8" comment="技能id" />
				<property name="skillName" type="String" encoding="UTF-8" comment="技能名" />
				<property name="icon" type="String" encoding="UTF-8" comment="icon" />
				<property name="maxLevel" type="int" encoding="UTF-8" comment="可升级的最大等级" />
				<property name="currentLevel" type="int" encoding="UTF-8" comment="当前等级" />
				<property name="needExp" type="int" encoding="UTF-8" comment="升级需要经验" />
				<property name="currentExp" type="int" encoding="UTF-8" comment="当前经验" />
				<property name="costType" type="int" encoding="UTF-8" comment="消耗类型" />
				<property name="costNum" type="long" encoding="UTF-8" comment="消耗金币数量" />
				<property name="currentLevelDes" type="String" encoding="UTF-8" comment="当前等级描述" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="JIAZU_TASK_WINDOW_OPEN_REQ" req_type="0x00FF0039" res_name="JIAZU_TASK_WINDOW_OPEN_RES" res_type="0x70FF0039"
		req_client_send="true" res_client_receive="true" comment="打开家族任务面板">
		<req>
		</req>
		<res>
			<property name="jiazuGongzi" type="long" encoding="UTF-8" comment="工资" />
			<property name="refreshDes" type="String" encoding="UTF-8" comment="刷新任务描述"/>
			<property name="alreadyComp" type="int" encoding="UTF-8" comment="当前已经完成任务数量"/>
			<property name="totalComp" type="int" encoding="UTF-8" comment="每周最多可完成任务数量"/>
			<object-property name="tasks" type="JiazuTaskModel4Client[]" comment="家族技能信息">
				<property name="taskId" type="long" encoding="UTF-8" comment="任务id" />
				<property name="taskName" type="String" encoding="UTF-8" comment="任务名" />
				<property name="des" type="String" encoding="UTF-8" comment="描述" />
				<property name="star" type="int" encoding="UTF-8" comment="星级" />
				<property name="rewardDes" type="String" encoding="UTF-8" comment="奖励描述" />
				<property name="targetDes" type="String" encoding="UTF-8" comment="目标描述" />
				<property name="targetLevel" type="int" encoding="UTF-8" comment="推荐等级" />
			</object-property>
		</res>
	</prototype>
	<prototype req_name="JIAZU_TASK_JIEQU_REQ" req_type="0x00FF0040" res_name="JIAZU_TASK_JIEQU_RES" res_type="0x70FF0040"
		req_client_send="true" res_client_receive="true" comment="接取任务">
		<req>
			<property name="taskId" type="long" encoding="UTF-8" comment="任务id" />
		</req>
		<res>
			<property name="result" type="byte" encoding="UTF-8" comment="接取结果 1接取成功" />
		</res>
	</prototype>
	<prototype req_name="JIAZU_TASK_REFRESH_REQ" req_type="0x00FF0041" res_name="JIAZU_TASK_REFRESH_RES" res_type="0x70FF0041"
		req_client_send="true" res_client_receive="true" comment="刷新任务列表">
		<req>
		</req>
		<res>
			<property name="result" type="byte" encoding="UTF-8" comment="刷新结果  1成功" />
		</res>
	</prototype>
	<prototype req_name="GET_JIAZU_SKILL_INFO_REQ" req_type="0x00FF0043" res_name="GET_JIAZU_SKILL_INFO_RES" res_type="0x70FF0043" req_client_send="true"
		res_client_receive="true" comment="家族技能泡泡">
		<req>
			<property name="skillId" type="int" encoding="UTF-8" comment="家族技能id" />
		</req>
		<res>
			<property name="skillId" type="int" encoding="UTF-8" comment="家族技能id" />
			<property name="description" type="String" encoding="UTF-8" comment="描述" />
		</res>
	</prototype>
	<prototype req_name="ACTIVITY_FIRST_PAGE2_REQ" req_type="0x00FF0046" res_name="ACTIVITY_FIRST_PAGE2_RES" res_type="0x70FF0046" req_client_send="true" res_client_receive="true" comment="活动首界面">
		<req>
			<property name="reqType" type="int" comment="1:日常,2:活动" />
		</req>
		<res>
			<property name="reqType" type="int" comment="1:日常,2:活动" />
			<property name="noticeStat" type="int[]" comment="按钮状态" />
			<property name="activityNames" type="String[]" encoding="UTF-8" comment="活动名字" />
			<property name="menuNames" type="String[]" encoding="UTF-8" comment="菜单名字" />
			<property name="activityColors" type="int[]" encoding="UTF-8" comment="活动颜色" />
			<property name="activityStst" type="int[]" encoding="UTF-8" comment="活动列表状态" />
		</res>
	</prototype>
	
	<prototype req_name="GET_PINGTAI_PARAM_REQ" req_type="0x00FF0049" res_name="GET_PINGTAI_PARAM_RES" res_type="0x70FF0049" req_client_send="true" 
		res_client_receive="true" comment="获取第三方交易平台参数">
		<req>
			<property name="infos" type="String[]" encoding="UTF-8" comment="请求"></property>
		</req>
		<res>
			<property name="results" type="String[]" encoding="UTF-8" comment="返回结果"></property>
		</res>
	</prototype>
	<!-- 屏蔽新增 -->
	<prototype req_name="HIDDEN_POPWINDOW_REQ" req_type="0x00FF0058" 
		req_client_send="true" comment="客户端通知服务器玩家屏蔽某些选项">
		<req>
			<property name="hiddenExchange" type="boolean[]" comment="[0]屏蔽交易 [1]屏蔽交换 [2]屏蔽繁殖 [3]屏蔽组队" />
		</req>
	</prototype>
	<prototype req_name="NOTIFY_AUTOFEED_HORSE_REQ" req_type="0x00FF0059" 
		req_client_send="true" comment="客户端通知服务器玩家屏蔽某些选项">
		<req>
			<property name="autoFeedSwitch" type="boolean" comment="自动喂养坐骑开关" />
			<property name="autoBuyArticle" type="boolean" comment="道具不足时是否自动购买" />
			<property name="autoFeedLine" type="int" comment="坐骑体力低于多少以后执行喂养操作" />
			<property name="autoFeedArticleName" type="String" encoding="UTF-8" comment="自动喂养的物品名" />
		</req>
	</prototype>
	
	<prototype req_name="JIAZU_FENGYING_STATUS_REQ" req_type="0x00FF0063" res_name="JIAZU_FENGYING_STATUS__RES" res_type="0x70FF0063" req_client_send="true"
		res_client_receive="true" comment="请求家族封印状态">
		<req>
		</req>
		<res>
			<property name="fenyingstatus" type="byte" comment="家族封印状态  0正常  -1封印"></property>
			<property name="des" type="String" comment="封印描述信息"></property>
		</res>
	</prototype>
	<prototype req_name="COMMON_RELEVANT_DES_REQ" req_type="0x00FF0064" res_name="COMMON_RELEVANT_DES_RES" res_type="0x70FF0064" req_client_send="true"
		res_client_receive="true" comment="请求家族界面相关描述">
		<req>
			<property name="windowId" type="int" comment="窗口id，用以区分  1:家族面板"></property>
			<property name="windowName" type="String" comment="窗口名"></property>
			<property name="btnName" type="String" comment="控件名"></property>
			<property name="targetName" type="String" comment="按钮名"></property>
		</req>
		<res>
			<property name="windowId" type="int" comment="窗口id，用以区分  1:家族面板"></property>
			<property name="windowName" type="String" comment="窗口名"></property>
			<property name="btnName" type="String" comment="控件名"></property>
			<property name="targetName" type="String" comment="按钮名"></property>
			<property name="des" type="String" comment="封印描述信息"></property>
		</res>
	</prototype>
	<prototype req_name="GET_NEW_SHOP_REQ" req_type="0x00FF0065" res_name="GET_NEW_SHOP_RES" res_type="0x70FF0065" req_client_send="true" res_client_receive="true" comment="商店首界面">
		<req>
			<property name="shopName" type="String" encoding="UTF-8" comment="商店的名字" />
		</req>
		<res>
			<property name="shopName" type="String" encoding="UTF-8" comment="当前选中的商店名字" />
			<property name="isOpen" type="boolean" comment="是否开启" />
			<property name="starttime" type="long" comment="开放时间" />
			<property name="point" type="long" comment="玩家积分" />
			<property name="activity" type="long" comment="玩家活跃度" />
			<property name="allShopNames" type="String[]" encoding="UTF-8" comment="所有商城名"/>
			<object-property name="goods" type="Goods[]" comment="商店中的商品">
				<property name="articleId" type="long" comment="物品的id"></property>
				<property name="id" type="int" comment="商品id" />
				<property name="articleName" type="String" encoding="UTF-8" comment="商品名字" />
				<property name="level" type="int" comment="如果是装备道具需要显示级别，一般物品设置为-1" />
				<property name="color" type="int" comment="商品颜色" />
				<property name="bundleNum" type="int" comment="商品每捆多少个物品" /> 
				<property name="payType" type="int" comment="支付方式" />
				<property name="oldPrice" type="int" comment="原价" />
				<property name="price" type="int" comment="现价" />
				<property name="littleSellIcon" type="String" encoding="UTF-8" comment="小提示图标" />
				<property name="exchangeArticleNames" type="String[]" encoding="UTF-8" comment="用于交换的物品" />
				<property name="exchangeArticleNums" type="int[]" comment="用于交换的物品的数量" />
				<property name="reputeLimit" type="boolean" comment="用于交换的物品的数量" />
				<property name="description" type="String" encoding="UTF-8" comment="商品的描述，可以用于更新商品的购买限制描述"></property>
				<property name="exchangeArticleDescription" type="String" encoding="UTF-8" comment=""></property>
				<property name="overNum" type="int" comment="剩余数量"></property>
				<property name="goodEndTime" type="long" comment="商品限购计时"></property>
				<property name="serverNumlimit" type="int" comment="全服限购"></property>
				<property name="playerNumlimit" type="int" comment="个人限购"></property>
				<property name="goodMaxNumLimit" type="int" comment="一次可买最大数"></property>
				<property name="littleSellIcon" type="String" encoding="UTF-8" comment="活动图标，比如优惠，打折"/>
				<property name="jjcLevelLimit" type="int" comment="个人战勋限制"></property>
			</object-property>
		</res>
	</prototype>
	<prototype req_name="ACTIVITY_EXTEND_REQ" req_type="0x00FF0067" req_client_send="true"  comment="活动扩张">
		<req>
			<property name="actvityType" type="int" comment="type"></property>
			<property name="actvityName" type="String" encoding="UTF-8" comment="名字"></property>
		</req>
	</prototype>
	
	<prototype req_name="MORE_ARGS_ORDER_STATUS_CHANGE_REQ" req_type="0x00FF0068" req_client_send="true" coment="多参数订单状态更新">
		<req>
			<property name="orderId" type="String" encoding="UTF-8" comment="订单号" />
			<property name="channel" type="String" encoding="UTF-8" comment="渠道串" />
			<property name="status" type="String" encoding="UTF-8" comment="此订单的状态" />
			<property name="statusDesp" type="String" encoding="UTF-8" comment="状态说明" />
			<property name="zoneid" type="String" encoding="UTF-8" comment="大区id" />
			<property name="pfkey" type="String" encoding="UTF-8" comment="pfkey" />
			<property name="pay_token" type="String" encoding="UTF-8" comment="pay_token" />
			<property name="args" type="String[]" encoding="UTF-8" comment="额外参数" />
		</req>
	</prototype>
	
	<prototype req_name="MONTH_CARD_ACTIVITY_REQ" req_type="0x00FF0114" res_name="MONTH_CARD_ACTIVITY_RES" res_type="0x70FF0114" req_client_send="true" res_client_receive="true" comment="月卡活动">
		<req>
			<property name="cardName" type="String" encoding="UTF-8" comment="卡名" />
		</req>
		<res>
			<object-property name="infos" type="MonthCardInfo[]" comment="月卡信息">
				<property name="cardName" type="String" comment="卡名"></property>
				<property name="cardId" type="String" comment="卡id"></property>
				<property name="chargeMoney" type="String" comment="充值信息" />
				<property name="chargeRewardIds" type="long[]" encoding="UTF-8" comment="立返物品ids" />
				<property name="chargeRewardCounts" type="int[]" comment="立返物品数量" />
				<property name="dayRewardIds" type="long[]" encoding="UTF-8" comment="日返物品ids" />
				<property name="dayRewardCounts" type="int[]" comment="日返物品数量" />
				<property name="dayRewardInfo" type="String" comment="日返信息" />
				<property name="hasDayMess" type="long" comment="剩余天数" />
				<property name="canReward" type="boolean" comment="是否能领" />
				<property name="str1" type="String" comment="空留" />
			</object-property>
		</res>
	</prototype>
	<prototype req_name="MONTH_CARD_ACTIVITY_GET_REWARD_REQ" req_type="0x00FF0069" res_name="MONTH_CARD_ACTIVITY_GET_REWARD_RES" res_type="0x70FF0069" req_client_send="true" res_client_receive="true" comment="领取奖励">
		<req>
			<property name="cardName" type="String" encoding="UTF-8" comment="卡名" />
		</req>
		<res>
			<property name="result" type="boolean" comment="结果" />
		</res>
	</prototype>
	<prototype req_name="MONTH_CARD_ACTIVITY_BUY_REQ" req_type="0x00FF0070" res_name="MONTH_CARD_ACTIVITY_BUY_RES" res_type="0x70FF0070" req_client_send="true" res_client_receive="true" comment="购买月卡">
		<req>
			<property name="cardName" type="String" encoding="UTF-8" comment="卡名" />
			<property name="channelName" type="String" comment="渠道" />
		</req>
		<res>
			<property name="result" type="boolean" comment="结果" />
		</res>
	</prototype>
	<!-- 每日转盘活动 -->
	<prototype req_name="OPEN_DAILY_TURN_WINDOW_REQ" req_type="0x00FF0071" res_name="OPEN_DAILY_TURN_WINDOW_RES" res_type="0x70FF0071" req_client_send="true" res_client_receive="true" comment="打开每日转盘活动界面">
		<req>
		</req>
		<res>
			<property name="turnNames" type="String[]" comment="转盘名" />
			<property name="turnIds" type="int[]" comment="转盘id" />
			<object-property name="info" type="TurnModel4Client" comment="默认转盘信息">
				<property name="turnId" type="int" comment="转盘id" />
				<property name="turnName" type="String" comment="转盘名" />
				<property name="entityIds" type="long[]" comment="转盘包含物品id" />
				<property name="entityStatus" type="int[]" comment="物品获取状态  0未获取  1已经获取到 " />
				<property name="entityNums" type="int[]" comment="物品数量  " />
				<property name="conditions" type="String[]" comment="获取抽取次数条件  " />
				<property name="conditionStatus" type="int[]" comment="抽取次数获取状态 0已经获取  1未获取  " />
				<property name="desscription" type="String" comment="公告内容  " />
				<property name="btnStr" type="String" comment="按钮文字 " />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="PLAY_DAILY_TURN_REQ" req_type="0x00FF0072" res_name="PLAY_DAILY_TURN_RES" res_type="0x70FF0072" req_client_send="true" res_client_receive="true" comment="抽奖">
		<req>
			<property name="turnName" type="String" comment="转盘名" />
			<property name="turnId" type="int" comment="转盘id" />
		</req>
		<res>
			<property name="takeIndex" type="int" comment="抽中的索引"/>
			<object-property name="info" type="TurnModel4Client" comment="转盘信息">
				<property name="turnId" type="int" comment="转盘id" />
				<property name="turnName" type="String" comment="转盘名" />
				<property name="entityIds" type="long[]" comment="转盘包含物品id" />
				<property name="entityStatus" type="int[]" comment="物品获取状态  0未获取  1已经获取到 " />
				<property name="entityNums" type="int[]" comment="物品数量  " />
				<property name="conditions" type="String[]" comment="获取抽取次数条件  " />
				<property name="conditionStatus" type="int[]" comment="抽取次数获取状态 0已经获取  1未获取  " />
				<property name="btnStr" type="String" comment="按钮文字 " />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="GET_ONE_DAILY_TURN_REQ" req_type="0x00FF0073" res_name="GET_ONE_DAILY_TURN_RES" res_type="0x70FF0073" req_client_send="true" res_client_receive="true" comment="获取单个转盘信息">
		<req>
			<property name="turnName" type="String" comment="转盘名" />
			<property name="turnId" type="int" comment="转盘id" />
		</req>
		<res>
			<object-property name="info" type="TurnModel4Client" comment="默认转盘信息">
				<property name="turnId" type="int" comment="转盘id" />
				<property name="turnName" type="String" comment="转盘名" />
				<property name="entityIds" type="long[]" comment="转盘包含物品id" />
				<property name="entityStatus" type="int[]" comment="物品获取状态  0未获取  1已经获取到 " />
				<property name="entityNums" type="int[]" comment="物品数量  " />
				<property name="conditions" type="String[]" comment="获取抽取次数条件  " />
				<property name="conditionStatus" type="int[]" comment="抽取次数获取状态 0已经获取  1未获取  " />
				<property name="desscription" type="String" comment="公告内容  " />
				<property name="btnStr" type="String" comment="按钮文字 " />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="BUY_EXTRA_TIMES4TURN_REQ" req_type="0x00FF0075" res_name="BUY_EXTRA_TIMES4TURN_RES" res_type="0x70FF0075" req_client_send="true" res_client_receive="true" comment="购买额外参与次数">
		<req>
			<property name="turnName" type="String" comment="转盘名" />
			<property name="turnId" type="int" comment="转盘id" />
		</req>
		<res>
			<object-property name="info" type="TurnModel4Client" comment="转盘信息">
				<property name="turnId" type="int" comment="转盘id" />
				<property name="turnName" type="String" comment="转盘名" />
				<property name="conditions" type="String[]" comment="获取抽取次数条件  " />
				<property name="conditionStatus" type="int[]" comment="抽取次数获取状态 0已经获取  1未获取  " />
			</object-property>
		</res>
	</prototype>
	
	<prototype res_name="CHARGE_AGRS_RES" res_type="0x70FF0074" res_client_receive="true" comment="充值参数">
		<res>
			<property name="modeName" type="String" comment="充值渠道" />
			<property name="chargeId" type="String" comment="充值金额id" />
			<property name="specConfig" type="String" comment="特殊配置" />
			<property name="chargeValue" type="String" comment="充值参数值" />
			<property name="chargeType" type="int" comment="充值原因类型" />
			<property name="money" type="long" comment="钱(单位分)" />
			<property name="args" type="String[]" comment="参数名" />
		</res>
	</prototype>
	
	<!-- 极地寻宝活动 -->
	<prototype req_name="OPEN_TREASUREACTIVITY_WINDOW_REQ" req_type="0x00FF0076" res_name="OPEN_TREASUREACTIVITY_WINDOW_RES" res_type="0x70FF0076" req_client_send="true" res_client_receive="true" comment="打开极地寻宝界面窗口">
		<req>
		</req>
		<res>
			<property name="leftTime" type="long" comment="活动剩余时间，单位：秒" />
			<property name="description" type="String" comment="玩法说明" />
			<property name="treasureNames" type="String[]" comment="宝藏标签名  " />
			<property name="treasureIds" type="int[]" comment="宝藏标签id" />
			<property name="digTimes" type="int[]" comment="一次性挖取的次数" />
			<property name="costSilvers" type="long[]" comment="对应次数消耗银子数量" />
			<property name="defaultArticleIds" type="long[]" comment="默认界面展示的物品id列表" />
		</res>
	</prototype>
	<prototype req_name="GET_ONE_TREASUREACTIVITY_INFO_REQ" req_type="0x00FF0077" res_name="GET_ONE_TREASUREACTIVITY_INFO_RES" res_type="0x70FF0077" req_client_send="true" res_client_receive="true" comment="获取单个宝藏信息">
		<req>
			<property name="treasureId" type="int" comment="宝藏id" />
		</req>
		<res>
			<property name="treasureId" type="int" comment="宝藏id" />
			<property name="defaultArticleIds" type="long[]" comment="展示的物品id列表" />
			<property name="description" type="String" comment="描述" />
		</res>
	</prototype>
	<prototype req_name="PLAY_TREASUREACTIVITY_REQ" req_type="0x00FF0078" res_name="PLAY_TREASUREACTIVITY_RES" res_type="0x70FF0078" req_client_send="true" res_client_receive="true" comment="挖取宝藏">
		<req>
			<property name="treasureId" type="int" comment="宝藏id" />
			<property name="digTimes" type="int" comment="挖取次数" />
		</req>
		<res>
			<property name="treasureId" type="int" comment="宝藏id" />
			<property name="takeArticleIds" type="long[]" comment="挖取到的物品id列表" />
		</res>
	</prototype>
	<!-- 冲级红利活动 -->
	<prototype req_name="OPEN_LEVELUPREWARD_WINDOW_REQ" req_type="0x00FF0079" res_name="OPEN_LEVELUPREWARD_WINDOW_RES" res_type="0x70FF0079" req_client_send="true" res_client_receive="true" comment="打开冲级红利界面">
		<req>
		</req>
		<res>
			<property name="rewardIds" type="int[]" comment="返利页签id" />
			<property name="rewardNames" type="String[]" comment="返利页签名" />
			<property name="descriptions" type="String[]" comment="对应描述" />
			<property name="lowLevels" type="int[]" comment="购买最低等级" />
			<property name="highLevels" type="int[]" comment="购买最高等级" />
		</res>
	</prototype>
	<prototype req_name="BUY_LEVELUPREWARD_GOOD_REQ" req_type="0x00FF0080" req_client_send="true"  comment="购买冲级返利">
		<req>
			<property name="rewardId" type="int" comment="返利页签id" />
			<property name="rewardName" type="String" comment="返利页签名" />
			<property name="channelName" type="String" comment="渠道" />
		</req>
	</prototype>
	<prototype res_name="CHARGE_GET_PACKAGE_RES" res_type="0x70FF0081" res_client_receive="true" comment="打开冲级红利界面">
		<res>
			<property name="titleMess" type="String" comment="标题"/>
			<property name="contentMess" type="String" comment="内容"/>
			<property name="articleId" type="long" comment="礼包id"/>
		</res>
	</prototype>
	<prototype req_name="CHARGE_GET_PACKAGE_SURE_REQ" req_type="0x00FF0082" req_client_send="true"  comment="确定充值购买礼包">
		<req>
		</req>
	</prototype>
	
	<prototype req_name="GET_NEWPLAYERCAREERS_REQ" req_type="0x00FF0083" res_name="GET_NEWPLAYERCAREERS_RES" res_type="0x70FF0083" req_client_send="true" res_client_receive="true" comment="客户端请求新职业">
		<req>
			<property name="requestType" type="int" comment="预留" />
		</req>
		<res>
			<property name="requestType" type="int" comment="预留" />
			<property name="careerTypes" type="int[]" comment="新职业数组" />
		</res>
	</prototype>
	<prototype req_name="NOTICE_CLIENT_BIANSHEN_CD_REQ" req_type="0x00FF0088" req_client_receive="true" comment="通知客户端兽魁变身按钮CD时间">
		<req>
			<property name="leftTime" type="long" encoding="UTF-8" comment="变身cd剩余时间"/>
		</req>
	</prototype>
	<prototype req_name="NOTICE_CLIENT_PLAYE_CARTOON_REQ" req_type="0x00FF0087" req_client_receive="true" comment="通知客户端播放动画">
		<req>
			<property name="playType" type="int" encoding="UTF-8" comment="1兽魁一阶动画   2兽魁2阶动画"/>
		</req>
	</prototype>
	
	<prototype req_name="GET_SHOUKUI_COMMENSKILLS_REQ" req_type="0x00FF0089" res_name="GET_SHOUKUI_COMMENSKILLS_RES" res_type="0x70FF0089" req_client_send="true" res_client_receive="true" comment="客户端请求新职业">
		<req>
			<property name="requestType" type="int" comment="预留" />
		</req>
		<res>
			<property name="requestType" type="int" comment="预留" />
			<property name="careerTypes" type="int[]" comment="兽魁普通攻击技能id，[0]人形态普通攻击 [1]兽形态普通攻击" />
		</res>
	</prototype>
	
	<prototype req_name="SWITCH_BIANSHENJI_SKILLS_REQ" res_name="SWITCH_BIANSHENJI_SKILLS_RES" req_type="0x00FF0084" res_type="0x70FF0084" req_client_send="true"
		res_client_receive="true" comment="切换变身技能">
		<req>
		</req>
		<res>
			<property name="bianshenid" type="int"></property>
			<property name="currpoints" type="int" comment="当前拥有的豆"></property>
			<property name="currStat" type="int" comment="当前形态,0:人,1:兽"></property>
			<property name="skillids" type="int[]" comment="技能id集"></property>
			<property name="skillpoints" type="int[]" comment="使用技能所需豆"></property>
			<property name="skillstats" type="int[]" comment="状态0:可以用，1:未学习"></property>
		</res>
	</prototype>
	<prototype res_name="QUERY_CAREER_BIANSHEN_INFO_RES" res_type="0x70FF0085" res_client_receive="true"
		comment="因为上面那条协议太长发不过去新加的只发变身协议">
		<res>
			
			<property name="bianshenid" type="int"></property>
			<object-property name="bianShenSkills" type="SkillInfo[]">
				<property name="id" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="skillType" type="byte" comment="主动技能，被动技能"></property>
				<property name="maxLevel" type="int"></property>
				<property name="description" type="String" encoding="UTF-8" comment="UUB" />


				<!-- 学习条件，升级条件 -->
				<property name="needMoney" type="int[]"></property>
				<property name="needYuanQi" type="int[]"></property>
				<property name="needLongExp" type="long[]"></property>
				<property name="needPoint" type="int[]"></property>
				<property name="needPlayerLevel" type="int[]"></property>
			</object-property>
		</res>
	</prototype>
	<prototype req_name="QUERY_NEW_PLAYER_REQ" res_name="QUERY_NEW_PLAYER_RES" req_type="0x00FF0086" res_type="0x70FF0086" req_client_send="true"
		res_client_receive="true" comment="客户端向服务器发送查询角色的请求">
		<req>
			<property name="username" type="String" encoding="UTF-8" comment="用户名称"></property>
			<property name="authCode" type="String" encoding="UTF-8" comment="登陆后返回的验证串" />
		</req>
		<res>
			<object-property name="players" type="Player[]" comment="此账户在此服务器上创建的所有的角色，长度为0或者n的数组">
				<property name="mapName" type="String" encoding="UTF-8" comment="玩家当前所在的地图名称"></property>
				<!-- 状态 -->
				<property name="hold" type="boolean" comment="定身"></property>
				<property name="stun" type="boolean" comment="眩晕"></property>
				<property name="immunity" type="boolean" comment="免疫"></property>
				<property name="poison" type="boolean" comment="中毒"></property>
				<property name="weak" type="boolean" comment="虚弱"></property>
				<property name="invulnerable" type="boolean" comment="无敌"></property>
				<property name="cure" type="boolean" comment="缓疗状态"></property>
				<property name="liuxueState" type="boolean" comment="流血状态"></property>
				<property name="jiansuState" type="boolean" comment="减速状态"></property>
				<property name="pojiaState" type="boolean" comment="破甲状态"></property>
				<property name="zhuoreState" type="boolean" comment="灼热状态"></property>
				<property name="hanlengState" type="boolean" comment="寒冷状态"></property>
				<property name="tigaoBaojiState" type="boolean" comment="提高暴击状态"></property>
				<property name="tigaoWaigongState" type="boolean" comment="提高外功状态"></property>
				<property name="tigaoNeigongState" type="boolean" comment="提高内功状态"></property>
				<property name="tigaoWaifangState" type="boolean" comment="提高外防状态"></property>
				<property name="tigaoNeifangState" type="boolean" comment="提高内防状态"></property>
				<property name="shield" type="byte" comment="护盾"></property>
				<property name="fighting" type="boolean" comment="战斗状态"></property>
				<property name="flying" type="boolean" comment="飞行状态"></property>
				<property name="sitdownState" type="boolean" comment="坐的状态默认false为站立"></property>

				<property name="hp" type="int" comment=""></property>
				<property name="maxHP" type="int" comment=""></property>
				<property name="mp" type="int" comment=""></property>
				<property name="maxMP" type="int" comment=""></property>

				<property name="id" type="long" comment="玩家唯一的编号"></property>
				<property name="name" type="String" encoding="UTF-8" comment="玩家的昵称"></property>
				<property name="sex" type="byte" comment="性别"></property>
				<property name="country" type="byte" comment="国家"></property>
				<property name="countryPosition" type="int" comment="职位"></property>
				<property name="career" type="byte" comment="角色的门派或职业"></property>
				<property name="level" type="int" comment="等级"></property>
				<property name="soulLevel" type="int" comment="元神等级" />
				<property name="classLevel" type="short" comment="境界" />
				<property name="totalRmbyuanbao" type="long" comment="非绑定人民币等值元宝"></property>
				<property name="bindSilver" type="long" comment="绑定银子"></property>
				<property name="silver" type="long" comment="银子"></property>
				<property name="exp" type="long" comment="当前经验值"></property>
				<property name="nextLevelExp" type="long" comment="升级所需经验值"></property>
				<property name="nextLevelExpPool" type="long" comment="经验池最大值"></property>
				<property name="weaponType" type="byte" comment="武器类型，包括空手。可以用于技能的判断条件"></property>
				<property name="state" type="byte" comment=""></property>
				<property name="direction" type="byte" comment=""></property>

				<property name="avataRace" type="String" encoding="UTF-8" comment="客户端用来定位形象">
				</property>
				<property name="avata" type="String[]" encoding="UTF-8" comment="玩家身上的部件关键字：比如装备了明月刀，"></property>
				<property name="avataType" type="byte[]" comment="玩家身上的部件关键字"></property>

				<property name="aura" type="byte" comment="光环类型，-1标识没有光环类型"></property>
				<property name="encloser" type="byte" comment="角色周身的外罩，一种透明的光影效果"></property>
				<property name="isUpOrDown" type="boolean" comment=""></property>
				<property name="commonAttackSpeed" type="short" comment="普通攻击的速度"></property>
				<property name="commonAttackRange" type="short" comment="普通攻击的攻击距离（像素为单位）"></property>
				<property name="speed" type="short" comment="角色的移动速度，单位：像素/秒"></property>
				<property name="jiazuId" type="long" comment="家族id"></property>
				<property name="jiazuName" type="String" encoding="UTF-8" comment="家族的名字"></property>
				<property name="zongPaiName" type="String" encoding="UTF-8" comment="宗派的名字"></property>
				<property name="title" type="String" encoding="UTF-8" comment="称号"></property>

				<!-- 战斗属性 -->
				<property name="strength" type="int" comment=""></property>
				<property name="dexterity" type="int" comment=""></property>
				<property name="constitution" type="int" comment=""></property>
				<property name="spellpower" type="int" comment=""></property>
				<property name="physicalDamageUpperLimit" type="int" comment=""></property>
				<property name="physicalDamageLowerLimit" type="int" comment=""></property>
				<property name="phyDefence" type="int" comment=""></property>
				<property name="magicDefence" type="int" comment=""></property>
				<property name="dodge" type="int" comment=""></property>
				<property name="phyAttack" type="int" comment=""></property>
				<property name="magicAttack" type="int" comment=""></property>
				<property name="coolDownTimePercent" type="int" comment=""></property>
				<property name="setupTimePercent" type="int" comment=""></property>
				<property name="criticalHit" type="int" comment=""></property>
				<property name="vitality" type="int" comment="体力"></property>
				<property name="maxVitality" type="int" comment="体力最大数值"></property>
				<property name="energy" type="int" comment="元气"></property>
				<property name="xp" type="int" comment="怒气值"></property>
				<property name="totalXp" type="int" comment="怒气最大值"></property>
				<property name="breakDefence" type="int" comment="破防"></property>
				<property name="breakDefenceRate" type="int" comment="总破防率"></property>
				<property name="hit" type="int" comment="命中等级"></property>
				<property name="hitRate" type="int" comment="总命中率"></property>
				<property name="dodge" type="int" comment="回避"></property>
				<property name="dodgeRate" type="int" comment="总闪避率"></property>
				<property name="accurate" type="int" comment="精准"></property>
				<property name="accurateRate" type="int" comment="总精准率"></property>
				<property name="fireAttack" type="int" comment="火攻"></property>
				<property name="fireDefence" type="int" comment="火防"></property>
				<property name="fireDefenceRate" type="int" comment="总火防率"></property>
				<property name="fireIgnoreDefence" type="int" comment="减少对方火防"></property>
				<property name="fireIgnoreDefenceRate" type="int" comment="总减少对方火防率"></property>
				<property name="blizzardAttack" type="int" comment="冰攻"></property>
				<property name="blizzardDefence" type="int" comment="冰防"></property>
				<property name="blizzardDefenceRate" type="int" comment="总冰防率"></property>
				<property name="blizzardIgnoreDefence" type="int" comment="减少对方冰防"></property>
				<property name="blizzardIgnoreDefenceRate" type="int" comment="总减少对方冰防率"></property>
				<property name="windAttack" type="int" comment="风攻"></property>
				<property name="windDefence" type="int" comment="风防"></property>
				<property name="windDefenceRate" type="int" comment="总风防率"></property>
				<property name="windIgnoreDefence" type="int" comment="减少对方风防"></property>
				<property name="windIgnoreDefenceRate" type="int" comment="总减少对方风防率"></property>
				<property name="thunderAttack" type="int" comment="雷攻"></property>
				<property name="thunderDefence" type="int" comment="雷防"></property>
				<property name="thunderDefenceRate" type="int" comment="总雷防率"></property>
				<property name="thunderIgnoreDefence" type="int" comment="减少对方雷防"></property>
				<property name="thunderIgnoreDefenceRate" type="int" comment="总减少对方雷防率"></property>
				<property name="criticalDefence" type="int" comment="会心防御"></property>
				<property name="criticalDefenceRate" type="int" comment="总会心防御率"></property>
				<property name="criticalHitRate" type="int" comment="总暴击率"></property>
				<!-- 其他属性 -->
				<property name="unallocatedSkillPoint" type="short" comment=""></property>
				<property name="skillOneLevels" type="byte[]" comment="进阶技能的等级"></property>
				<property name="teamMark" type="byte" comment="玩家在团队的标记"></property>
				<!-- 玩家的坐标属性 -->
				<property name="x" type="int" comment="当前x坐标" />
				<property name="y" type="int" comment="当前y坐标" />

				<property name="inBattleField" type="boolean" comment="标记用户是否在战场中" />
				<property name="battleFieldSide" type="byte" comment="玩家在战场中的哪一方，0标识中立，1标识A方，2标识B方" />

				<property name="avataPropsId" type="long" comment="换装道具id，此id部位0或-1即代表此人现在有时装穿在身上" />
				<property name="pkMode" type="byte" comment="0普通, 1-屠杀模式" />
				<property name="nameColorType" type="byte" comment="名字颜色类型" />
				<property name="careerBasicSkillsLevels" type="byte[]" comment="职业基本技能级别" />
				<property name="skillOneLevels" type="byte[]" comment="职业进阶技能级别" />
				<property name="nuqiSkillsLevels" type="byte[]" comment="怒气技能级别" />
				<property name="bianShenLevels" type="byte[]" comment="变身技能级别" />
				<property name="xinfaLevels" type="byte[]" comment="心法技能级别" />
				<property name="jiazuTitle" type="String" encoding="UTF-8" comment="家族称号" />
				<property name="jiazuIcon" type="String" encoding="UTF-8" comment="家族徽章资源名字" />
				<property name="sealState" type="boolean" comment="封印状态" />
				<property name="bournExp" type="int" comment="境界经验" />
				<property name="weaponParticle" type="String" encoding="UTF-8" comment="武器粒子光效" />
				<property name="horseParticle" type="String" encoding="UTF-8" comment="坐骑粒子光效" />
				<property name="suitBodyParticle" type="String" encoding="UTF-8" comment="套装粒子光效身上" />
				<property name="suitFootParticle" type="String" encoding="UTF-8" comment="套装粒子光效脚下" />
				<property name="jiazuXuanZhanFlag" type="boolean" comment="家族是否有宣战" />
				<property name="jiazuXuanZhanData" type="long[]" comment="宣战家族的id" />
				<property name="citanStateLevel" type="byte" comment="刺探状态级别，用于头顶刺探显示" />
				<property name="touzhuanStateLevel" type="byte" comment="偷砖状态级别，用于头顶偷砖显示" />
				<property name="culture" type="int" comment="文采" />
				<property name="todayUsedBindSilver" type="long" comment="今天使用的绑银数" />
				<property name="evil" type="int" comment="罪恶值" />
				<property name="spouse" type="String" encoding="UTF-8" comment="配偶名字" />
				<property name="RMB" type="long" comment="人民币" />
				<property name="vipLevel" type="byte" comment="vip等级" />
				<property name="cityFightSide" type="byte" comment="城战状态，0表示正常，1表示进攻，2表示防守" />
				<property name="isGuozhan" type="boolean" comment="国战" />
				<property name="guozhanLevel" type="int" comment="国战星星" />
				<property name="lilian" type="long" comment="历练" />
				<property name="repairCarry" type="boolean" comment="随身修理" />
				<property name="mailCarry" type="boolean" comment="随身邮件" />
				<property name="wareHouseCarry" type="boolean" comment="随身仓库" />
				<property name="quickBuyCarry" type="boolean" comment="随身求购" />
				<property name="maxHPX" type="int" comment="加成属性maxHPX" />
				<property name="maxMPX" type="int" comment="加成属性maxMPX" />
				<property name="phyDefenceX" type="int" comment="加成属性phyDefenceX" />
				<property name="magicDefenceX" type="int" comment="加成属性magicDefenceX" />
				<property name="breakDefenceX" type="int" comment="加成属性breakDefenceX" />
				<property name="hitX" type="int" comment="加成属性hitX" />
				<property name="dodgeX" type="int" comment="加成属性dodgeX" />
				<property name="accurateX" type="int" comment="加成属性accurateX" />
				<property name="phyAttackX" type="int" comment="加成属性phyAttackX" />
				<property name="magicAttackX" type="int" comment="加成属性magicAttackX" />
				<property name="fireAttackX" type="int" comment="加成属性fireAttackX" />
				<property name="fireDefenceX" type="int" comment="加成属性fireDefenceX" />
				<property name="fireIgnoreDefenceX" type="int" comment="加成属性fireIgnoreDefenceX" />
				<property name="blizzardAttackX" type="int" comment="加成属性blizzardAttackX" />
				<property name="blizzardDefenceX" type="int" comment="加成属性blizzardDefenceX" />
				<property name="blizzardIgnoreDefenceX" type="int" comment="加成属性blizzardIgnoreDefenceX" />
				<property name="windAttackX" type="int" comment="加成属性windAttackX" />
				<property name="windDefenceX" type="int" comment="加成属性windDefenceX" />
				<property name="windIgnoreDefenceX" type="int" comment="加成属性windIgnoreDefenceX" />
				<property name="thunderAttackX" type="int" comment="加成属性thunderAttackX" />
				<property name="thunderDefenceX" type="int" comment="加成属性thunderDefenceX" />
				<property name="thunderIgnoreDefenceX" type="int" comment="加成属性thunderIgnoreDefenceX" />
				<property name="criticalHitX" type="int" comment="加成属性criticalHitX" />
				<property name="criticalDefenceX" type="int" comment="加成属性criticalDefenceX" />
				<property name="gongxun" type="long" comment="功勋" />
				<property name="vipPickedRewardLevel" type="byte" comment="vip已经领取的vip奖励级别(每一级vip只能领取一次，客户端可以根据这个级别来显示领取奖励按钮)" />
			</object-property>
		</res>
	</prototype>
	<prototype res_name="RESET_BIANSHEN_SKILLS_RES" res_type="0x70FF0087" res_client_receive="true" comment="重设变身技能">
		<res>
		</res>
	</prototype>
	<prototype res_name="TOURNAMENT_QUERY_PLAYER_ICON_INFO_RES" res_type="0x70FF0088" res_client_receive="true" comment="武圣请求头像信息">
		<res>
			<property name="id" type="long" comment="玩家唯一的编号"></property>
			<property name="career" type="byte" comment="玩家的职业"></property>
			<property name="playername" type="String" encoding="UTF-8" comment="玩家新名称" />
			<property name="level" type="int" comment="等级"></property>
		</res>
	</prototype>
	
	<prototype req_name="GET_ENCHANT_DESCRIPTION_REQ" res_name="SGET_ENCHANT_DESCRIPTION_RES" req_type="0x00FF0091" res_type="0x70FF0091" req_client_send="true"
		res_client_receive="true" comment="请求附魔规则">
		<req>
			<property name="ruleType" type="int" encoding="UTF-8" comment="规则类型  1附魔规则  2附魔锁定规则"></property>
		</req>
		<res>
			<property name="ruleDes" type="String" encoding="UTF-8" comment="规则描述" ></property>
		</res>
	</prototype>
	<prototype req_name="GET_ARTICLE_DES_REQ" res_name="GET_ARTICLE_DES_RES" req_type="0x00FF0092" res_type="0x70FF0092" req_client_send="true"
		res_client_receive="true" comment="请求附魔道具（装备）描述">
		<req>
			<property name="articleId" type="long" encoding="UTF-8"  comment="物品id"></property>
		</req>
		<res>
			<property name="articleDes" type="String" encoding="UTF-8" comment="附魔描述"></property>
			<property name="articleId" type="long" encoding="UTF-8"  comment="物品id"></property>
		</res>
	</prototype>
	<prototype req_name="ENCHANT_EQUIPMENT_REQ" res_name="ENCHANT_EQUIPMENT_RES" req_type="0x00FF0093" res_type="0x70FF0093" req_client_send="true"
		res_client_receive="true" comment="附魔">
		<req>
			<property name="articleId" type="long" encoding="UTF-8"  comment="装备id"></property>
			<property name="metriIndex" type="int" encoding="UTF-8"  comment="附魔道具在背包中的位置索引"></property>
		</req>
		<res>
			<property name="articleDes" type="String" encoding="UTF-8" comment="装备附魔描述"></property>
		</res>
	</prototype>
	<prototype req_name="OPEN_ENCHANT_LOCK_WINDOW_REQ" res_name="OPEN_ENCHANT_LOCK_WINDOW_RES" req_type="0x00FF0094" res_type="0x70FF0094" req_client_send="true"
		res_client_receive="true" comment="打开锁定界面">
		<req>
		</req>
		<res>
			<property name="articleIds" type="long[]" encoding="UTF-8"  comment="玩家身上可以附魔的装备id列表(-1代表没装备)"></property>
			<property name="articleTypes" type="int[]" encoding="UTF-8"  comment="对应装备类型"></property>
			<property name="enchantStatus" type="int[]" encoding="UTF-8"  comment="附魔类型  0未附魔  1有附魔 2有附魔已锁定"></property>
			<property name="description1" type="String[]" encoding="UTF-8"  comment="附魔名称"></property>
			<property name="description2" type="String[]" encoding="UTF-8"  comment="耐久度"></property>
		</res>
	</prototype>
	<prototype req_name="ENCHANT_LOCK_REQ" res_name="ENCHANT_LOCK_RES" req_type="0x00FF0095" res_type="0x70FF0095" req_client_send="true"
		res_client_receive="true" comment="锁定附魔">
		<req>
			<property name="articleId" type="long"></property>
		</req>
		<res>
			<property name="result" type="int"></property>
			<property name="articleId" type="long"></property>
		</res>
	</prototype>
	<prototype req_name="ENCHANT_UNLOCK_REQ" res_name="ENCHANT_UNLOCK_RES" req_type="0x00FF0096" res_type="0x70FF0096" req_client_send="true"
		res_client_receive="true" comment="解锁附魔">
		<req>
			<property name="articleId" type="long"></property>
		</req>
		<res>
			<property name="result" type="int"></property>
			<property name="articleId" type="long"></property>
		</res>
	</prototype>
	<prototype req_name="ENCHANT_ALL_EQUIPT_REQ" res_name="ENCHANT_ALL_EQUIPT_RES" req_type="0x00FF0100" res_type="0x70FF0100" req_client_send="true"
		res_client_receive="true" comment="一键解锁（锁定）">
		<req>
			<property name="enchantType" type="int"  comment="0为一键解锁   1为一键锁定"></property>
		</req>
		<res>
			<property name="result" type="int" comment="结果  -1不成功"></property>
			<property name="enchantType" type="int"  comment="0为一键解锁   1为一键锁定"></property>
		</res>
	</prototype>
	
	<prototype req_name="JUBAO_PLAYER_REQ" res_name="JUBAO_PLAYER_RES" req_type="0x00FF0097" res_type="0x70FF0097" req_client_send="true"
		res_client_receive="true" comment="举报玩家">
		<req>
			<property name="playerId" type="long" encoding="UTF-8"  comment="被举报人id"></property>
			<property name="playerName" type="String" encoding="UTF-8"  comment="被举报人name"></property>
			<property name="jiBaoType" type="int" encoding="UTF-8"  comment="type;0:聊天,1:邮件,2:私聊"></property>
			<property name="chatType" type="int" encoding="UTF-8"  comment="type"></property>
			<property name="juBaoMess" type="String" encoding="UTF-8"  comment="举报信息"></property>
			<property name="playerSelfRecordMess" type="String" encoding="UTF-8"  comment="玩家自己写的原因"></property>
			<property name="chatTime" type="long" encoding="UTF-8"  comment="说话时间"></property>
			<property name="readyMess" type="String[]" encoding="UTF-8"  comment="预留信息"></property>
		</req>
		<res>
			<property name="result" type="int" encoding="UTF-8"  comment="result;0:失败,1:成功"></property>
			<property name="helpMess" type="String" encoding="UTF-8"  comment="信息"></property>
		</res>
	</prototype>
	
	<prototype req_name="XILIAN_PAGE_REQ" res_name="XILIAN_PAGE_RES" req_type="0x00FF0098" res_type="0x70FF0098" req_client_send="true"
		res_client_receive="true" comment="宝石洗练界面">
		<req>
			<property name="baoShiId" type="long" encoding="UTF-8"  comment="宝石id"></property>
		</req>
		<res>
			<property name="colors" type="int[]" encoding="UTF-8"  comment="颜色集"></property>
			<property name="baoshiids" type="long[]" encoding="UTF-8"  comment="宝石集"></property>
		</res>
	</prototype>
	
	<prototype req_name="XILIAN_CONFIRM_REQ" res_name="XILIAN_CONFIRM_RES" req_type="0x00FF0099" res_type="0x70FF0099" req_client_send="true"
		res_client_receive="true" comment="宝石洗练">
		<req>
			<property name="baoShiId" type="long" encoding="UTF-8"  comment="宝石id"></property>
			<property name="materialId" type="long" encoding="UTF-8"  comment="材料id"></property>
		</req>
		<res>
			<property name="result" type="int"  comment="结果,1:成功"></property>
			<property name="colors" type="int[]" encoding="UTF-8"  comment="颜色集"></property>
		</res>
	</prototype>
	
	<prototype req_name="OPEN_SHOUHUN_WINDOW_REQ" res_name="OPEN_SHOUHUN_WINDOW_RES" req_type="0x00FF0101" res_type="0x70FF0101" req_client_send="true"
		res_client_receive="true" comment="兽魂主界面">
		<req>
		</req>
		<res>
			<object-property name="shouhunModels" type="Shouhun4Client[]">
				<property name="articleId" type="long"></property>
				<property name="level" type="int" encoding="UTF-8" comment="" />
				<property name="currentExp" type="long" encoding="UTF-8" comment="" />
				<property name="needExp" type="long" comment=""></property>
				<property name="attrType" type="int"></property>
				<property name="attrNum" type="int" encoding="UTF-8" comment="UUB" />
				<property name="colorType" type="int" encoding="UTF-8" comment="UUB" />
			</object-property>
			<property name="containsStr" type="String[]" encoding="UTF-8" comment="兽魂包含字符串" />
		</res>
	</prototype>
	<prototype req_name="REPLACE_ALL_SHOUHUN_REQ" res_name="REPLACE_ALL_SHOUHUN_RES" req_type="0x00FF0102" res_type="0x70FF0102" req_client_send="true"
		res_client_receive="true" comment="一键替换装备兽魂（最优）">
		<req>
		</req>
		<res>
			<object-property name="shouhunModels" type="Shouhun4Client[]">
				<property name="articleId" type="long"></property>
				<property name="level" type="int" encoding="UTF-8" comment="" />
				<property name="currentExp" type="long" encoding="UTF-8" comment="" />
				<property name="needExp" type="long" comment=""></property>
				<property name="attrType" type="int"></property>
				<property name="attrNum" type="int" encoding="UTF-8" comment="UUB" />
				<property name="colorType" type="int" encoding="UTF-8" comment="UUB" />
			</object-property>
		</res>
	</prototype>
	<prototype req_name="REPLACE_ONE_SHOUHUN_REQ" res_name="REPLACE_ONE_SHOUHUN_RES" req_type="0x00FF0103" res_type="0x70FF0103" req_client_send="true"
		res_client_receive="true" comment="单个装备兽魂">
		<req>
			<property name="articleId" type="long"  comment="兽魂物品id"></property>
		</req>
		<res>
			<object-property name="shouhunModel" type="Shouhun4Client">
				<property name="articleId" type="long"></property>
				<property name="level" type="int" encoding="UTF-8" comment="" />
				<property name="currentExp" type="long" encoding="UTF-8" comment="" />
				<property name="needExp" type="long" comment=""></property>
				<property name="attrType" type="int"></property>
				<property name="attrNum" type="int" encoding="UTF-8" comment="UUB" />
				<property name="colorType" type="int" encoding="UTF-8" comment="UUB" />
			</object-property>
		</res>
	</prototype>
	<prototype req_name="SHOUHUN_TUNSHI_REQ" res_name="SHOUHUN_TUNSHI_RES" req_type="0x00FF0104" res_type="0x70FF014" req_client_send="true"
		res_client_receive="true" comment="兽魂吞噬">
		<req>
			<property name="mainArticleId" type="long"  comment="吞噬物品id"></property>
			<property name="materialIds" type="long[]"  comment="被吞噬的材料id"></property>
		</req>
		<res>
			<object-property name="shouhunModel" type="Shouhun4Client">
				<property name="articleId" type="long"></property>
				<property name="level" type="int" encoding="UTF-8" comment="" />
				<property name="currentExp" type="long" encoding="UTF-8" comment="" />
				<property name="needExp" type="long" comment=""></property>
				<property name="attrType" type="int"></property>
				<property name="attrNum" type="int" encoding="UTF-8" comment="UUB" />
				<property name="colorType" type="int" encoding="UTF-8" comment="UUB" />
				<property name="icons" type="String" encoding="UTF-8" comment="UUB" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="OPEN_SHOUHUN_LUCK_WINDOW_REQ" res_name="OPEN_SHOUHUN_LUCK_WINDOW_RES" req_type="0x00FF0107" res_type="0x70FF0107" req_client_send="true"
		res_client_receive="true" comment="打开兽魂抽奖界面">
		<req>
		</req>
		<res>
			<property name="leftTime" type="long" comment="下次获取免费次数剩余时间  （小于等于0代表有免费抽取次数）"></property>
			<property name="des4once" type="String[]" encoding="UTF-8" comment="单抽描述" />
			<property name="des4ten" type="String[]" encoding="UTF-8" comment="十连抽描述" />
		</res>
	</prototype>
	<prototype req_name="TAKE_SHOUHUN_LUCK_REQ" res_name="TAKE_SHOUHUN_LUCK_RES" req_type="0x00FF0108" res_type="0x70FF0108" req_client_send="true"
		res_client_receive="true" comment="兽魂抽奖">
		<req>
			<property name="takeType" type="int" comment="抽奖类型（0单抽  1十连抽）"></property>
		</req>
		<res>
			<property name="takeType" type="int" comment="抽奖类型（0单抽  1十连抽）"></property>
			<property name="articleId0" type="long" comment="赠送物品id"></property>
			<property name="articleName0" type="String" comment="赠送物品名"></property>
			<property name="articleColor0" type="int" comment="赠送物品颜色"></property>
			<property name="articleNum0" type="int" comment="赠送物品数量"></property>
			<property name="articleId1" type="long[]" comment="抽取物品id"></property>
			<property name="articleName1" type="String[]" comment="抽取物品名"></property>
			<property name="articleColor1" type="int[]" comment="抽取物品颜色"></property>
			<property name="articleNum1" type="int[]" comment="抽取物品数量"></property>
		</res>
	</prototype>
	
	<prototype req_name="XILIAN_PUT_REQ" res_name="XILIAN_PUT_RES" req_type="0x00FF0105" res_type="0x70FF015" req_client_send="true"
		res_client_receive="true" comment="宝石拖入格子内">
		<req>
			<property name="baoShiId" type="long" encoding="UTF-8"  comment="宝石id"></property>
			<property name="putbaoShiId" type="long" encoding="UTF-8"  comment="拖入宝石id"></property>
			<property name="materialId" type="long[]" encoding="UTF-8"  comment="材料id"></property>
		</req>
		<res>
			<property name="result" type="int"  comment="结果,1:成功"></property>
		</res>
	</prototype>
	
	<prototype req_name="XILIAN_REMOVE_REQ" res_name="XILIAN_REMOVE_RES" req_type="0x00FF0106" res_type="0x70FF016" req_client_send="true"
		res_client_receive="true" comment="删除格子内宝石">
		<req>
			<property name="baoShiId" type="long" encoding="UTF-8"  comment="宝石id"></property>
			<property name="removebaoShiId" type="long" encoding="UTF-8"  comment="删除宝石id"></property>
			<property name="materialId" type="long[]" encoding="UTF-8"  comment="材料id"></property>
		</req>
		<res>
			<property name="result" type="int"  comment="结果,1:成功"></property>
		</res>
	</prototype>
	<prototype req_name="TAKEOUT_SHOUHUN_REQ" res_name="TAKEOUT_SHOUHUN_RES" req_type="0x00FF0109" res_type="0x70FF0109" req_client_send="true"
		res_client_receive="true" comment="摘取兽魂">
		<req>
			<property name="shouhunId" type="long" encoding="UTF-8"  comment="兽魂物品id"></property>
		</req>
		<res>
			<property name="result" type="int"  comment="结果,1:成功"></property>
			<object-property name="shouhunModel" type="Shouhun4Client">
				<property name="articleId" type="long"></property>
				<property name="level" type="int" encoding="UTF-8" comment="" />
				<property name="currentExp" type="long" encoding="UTF-8" comment="" />
				<property name="needExp" type="long" comment=""></property>
				<property name="attrType" type="int"></property>
				<property name="attrNum" type="int" encoding="UTF-8" comment="UUB" />
				<property name="colorType" type="int" encoding="UTF-8" comment="UUB" />
			</object-property>
		</res>
	</prototype>
	<prototype req_name="GET_SHOUHUN_ADDEXPS_REQ" res_name="GET_SHOUHUN_ADDEXPS_RES" req_type="0x00FF0110" res_type="0x70FF0110" req_client_send="true"
		res_client_receive="true" comment="吞噬兽魂材料获取经验">
		<req>
			<property name="shouhunIds" type="long[]" encoding="UTF-8"  comment="被吞噬材料id"></property>
		</req>
		<res>
			<property name="addExps" type="long" encoding="UTF-8"  comment="增加经验"></property>
		</res>
	</prototype>
	
	<prototype req_name="GET_SHOUHUN_KNAP_REQ" res_name="GET_SHOUHUN_KNAP_RES" req_type="0x00FF0111" res_type="0x70FF0111" req_client_send="true"
		res_client_receive="true" comment="获取兽魂仓库">
		<req>
		</req>
		<res>
			<property name="articleIds" type="long[]" encoding="UTF-8"  comment="物品id  小于等于0代表没物品"></property>
		</res>
	</prototype>
	<prototype req_name="ZHENLI_SHOUHUN_KNAP_REQ" res_name="ZHENLI_SHOUHUN_KNAP_RES" req_type="0x00FF0112" res_type="0x70FF0112" req_client_send="true"
		res_client_receive="true" comment="整理兽魂仓库">
		<req>
		</req>
		<res>
			<property name="articleIds" type="long[]" encoding="UTF-8"  comment="物品id  小于等于0代表没物品"></property>
		</res>
	</prototype>
	<prototype req_name="NOTIFY_SHOUHUN_KNAP_CHANGE_REQ" res_name="NOTIFY_SHOUHUN_KNAP_CHANGE_RES" req_type="0x00FF0113" res_type="0x70FF0113" req_client_send="true"
		res_client_receive="true" comment="通知客户端兽魂仓库更新">
		<req>
		</req>
		<res>
			<property name="knapIndex" type="int[]" encoding="UTF-8"  comment="仓库位置"></property>
			<property name="articleIds" type="long[]" encoding="UTF-8"  comment="更改后的id"></property>
		</res>
	</prototype>
	<prototype req_name="PET_FLY_STATE_REQ" res_name="PET_FLY_STATE_RES" req_type="0x00FF0115" res_type="0x70FF0115" req_client_send="true"
		res_client_receive="true" comment="宠物飞升状态">
		<req>
			<property name="petId" type="long" comment="宠物的id"></property>
			<property name="playerId" type="long" comment="玩家的id"></property>
		</req>
		<res>
			<property name="petId" type="long" comment="宠物的id"></property>
			<property name="flyState" type="int" encoding="UTF-8"  comment="0:不能飞升，1:能飞升，但不满足飞升条件，2:能飞升，且图鉴达到最高阶，3:满足所有飞升条件,但未飞升，4:已飞升"></property>
			<property name="qianNengPoint" type="int" encoding="UTF-8"  comment="灵性潜能点数"></property>
			<property name="moreArgs" type="String" encoding="UTF-8"  comment="备用参数"></property>
		</res>
	</prototype>
	<prototype req_name="PET_FLY_BUTTON_ONCLICK_REQ" res_name="PET_FLY_BUTTON_ONCLICK_RES" req_type="0x00FF0116" res_type="0x70FF0116" req_client_send="true"
		res_client_receive="true" comment="点击宠物飞升按钮">
		<req>
			<property name="petId" type="long" comment="宠物的id"></property>
		</req>
		<res>
			<property name="flyAvata" type="String" encoding="UTF-8" comment="飞升avata"/>
			<property name="animation" type="int"  comment="0:默认不播放1:播放动画" ></property>
			<property name="buttonType" type="int"  comment="0:飞升按钮1:刷新技能" ></property>
			<property name="lingXingPoint" type="int"  comment="灵性" ></property>
			<property name="xiaoHuaDate" type="long"  comment="消化时间" ></property>
			<property name="canUseTimes" type="int"  comment="升华露可使用次数" ></property>
			<property name="skillInfo" type="String" encoding="UTF-8"  comment="技能描述" ></property>
			<object-property name="pet" type="Pet" comment="返回宠物实体">
				<property name="id" type="long" comment="宠物的id"></property>
				<property name="name" type="String" encoding="UTF-8" comment="宠物的名字"></property>
				<property name="breedTimes" type="byte" comment="宠物可生育的次数"></property>
				<property name="breededTimes" type="byte" comment="宠物已经生育的次数"></property>
				<property name="identity" type="boolean" comment="是否鉴定过"></property>
				<property name="rarity" type="byte" comment="宠物的稀有度，0-随处可见,1-百里挑一,2-千载难逢"></property>
				<property name="maxLifeTime" type="int" comment="最大宠物的寿命"></property>
				<property name="lifeTime" type="int" comment="宠物的寿命"></property>
				<property name="wuXing" type="int"  comment="悟性" ></property>
				<property name="grade" type="int"  comment="进阶等级" ></property>
			</object-property>
			<object-property name="infos" type="PetFlySkillInfo" comment="技能信息">
				<property name="skillId" type="int" comment="技能id"></property>
				<property name="name" type="String" encoding="UTF-8" comment="技能名字"></property>
				<property name="skillDesc" type="String" encoding="UTF-8" comment="描述"></property>
				<property name="icon" type="String" encoding="UTF-8" comment="icon"></property>
			</object-property>
		</res>
	</prototype>
	<prototype req_name="PET_EAT_FLY_PROP_REQ" req_client_send="true" req_type="0x00FF0119" res_name="PET_EAT_FLY_PROP_RES" res_type="0x70FF0119" res_client_receive="true" coment="宠物吃飞升丹药">
		<req>
			<property name="petId" type="long" comment="宠物ID"></property>
			<property name="eatType" type="int" comment="类型,1:易经丹，2:顿悟丹"></property>
			<property name="articleId" type="long" comment="升华露id"></property>
		</req>
			<res>
			<property name="petId" type="long" comment="宠物ID"></property>
			<property name="result" type="int" encoding="UTF-8"  comment="0:失败,1:成功"></property>
		</res>
	</prototype>
	
	
	<prototype req_name="NOTICE_CLIENT_ALCHEMY_REQ" req_type="0x70FF0117" req_client_receive="true" comment="通知客户端打开炼丹界面">
		<req>
			<property name="progressTime" type="long" encoding="UTF-8" comment="开始到结束时间" />
			<property name="npcId" type="long" encoding="UTF-8"  comment="采集npcid"></property>
		</req>
	</prototype>
	<prototype req_name="ALCHEMY_END_REQ" res_name="ALCHEMY_END_RES" req_type="0x00FF0118" res_type="0x70FF0118" req_client_send="true"
		res_client_receive="true" comment="炼丹结束">
		<req>
			<property name="positionIndex" type="int" encoding="UTF-8"  comment="指针停留位置"></property>
			<property name="npcId" type="long" encoding="UTF-8"  comment="采集npcid"></property>
		</req>
		<res>
			<property name="obtainType" type="int" encoding="UTF-8"  comment="获得仙丹类型,0残渣  1普通  2精品  3无暇  4完美"></property>
		</res>
	</prototype>
	<prototype req_name="PET_CLEAR_PROP_CD_REQ" res_name="PET_CLEAR_PROP_CD_RES" req_type="0x00FF0120" res_type="0x70FF0120" req_client_send="true"
		res_client_receive="true" comment="清楚宠物易经丹cd">
		<req>
			<property name="petId" type="long" comment="宠物的id"></property>
			<property name="clearType" type="int" comment="类型,1:清除cd，2:返生丹"></property>
		</req>
		<res>
			<property name="petId" type="long" comment="宠物的id"></property>
			<property name="result" type="int" comment="0:默认,1:成功"></property>
		</res>
	</prototype>
	
	<prototype req_name="START_DRAW_REQ" res_name="START_DRAW_RES" req_type="0x00FF0121" res_type="0x70FF0121" req_client_send="true"
		res_client_receive="true" comment="打开宝箱">
		<req>
		</req>
		<res>
			<property name="boxName" type="String" encoding="UTF-8"  comment="宝箱名称"></property>
			<property name="prayType" type="String" encoding="UTF-8"  comment="祈福类型"></property>
			<property name="target" type="int" encoding="UTF-8"  comment="抽中格子下标"></property>
			<property name="ids" type="long[]" encoding="UTF-8"  comment="宝箱展示物品"></property>
		</res>
	</prototype>
	<prototype req_name="END_DRAW_REQ" res_name="END_DRAW_RES" req_type="0x00FF0122" res_type="0x70FF0122" req_client_send="true"
		res_client_receive="true" comment="关闭宝箱或者抽取道具结束">
		<req>
			<property name="id" type="long" encoding="UTF-8"  comment="抽中道具id"></property>
		</req>
	</prototype>
	<prototype req_name="QUERY_PET_FLY_SKILLS_REQ" res_name="QUERY_PET_FLY_SKILLS_RES" req_type="0x00FF0123" res_type="0x70FF0123" req_client_send="true"
		res_client_receive="true" comment="宠物飞升技能集">
		<req>
			<property name="petId" type="long" encoding="UTF-8"  comment="宠物id"></property>
		</req>
		<res>
			<property name="petId" type="long" comment="宠物的id"></property>
			<object-property name="infos" type="PetFlySkillInfo[]" comment="技能信息">
				<property name="skillId" type="int" comment="技能id"></property>
				<property name="name" type="String" encoding="UTF-8" comment="技能名字"></property>
				<property name="skillDesc" type="String" encoding="UTF-8" comment="描述"></property>
				<property name="icon" type="String" encoding="UTF-8" comment="icon"></property>
			</object-property>
		</res>
	</prototype>
		<prototype req_name="NEW_PET_LIST_REQ" req_client_send="true" req_type="0x00FF0124" 
		res_name="NEW_PET_LIST_RES" res_client_receive="true" res_type="0x70FF0124" coment="宠物图鉴列表">
		<res>
			<property name="havePets" type="String" comment="获得过的宠物，用#连接起来的宠物统计名称"></property>
			<object-property name="petList" type="GradePet[]">
					<property name="name" type="String" encoding="UTF-8" comment="名称"></property>
					<property name="flyType" type="int" encoding="UTF-8" comment="1:可飞升"></property>
					<property name="flyAvata" type="String" encoding="UTF-8" comment="飞升形象"></property>
					<property name="progName" type="String" encoding="UTF-8" comment="程序用的名称、统计名称"></property>
					<property name="icon" type="String" comment="宠物icon名字"></property>
			</object-property>
			<property name="scaleArr" type="int[]" comment="各个进阶等级缩放比率"></property>
		</res>
	</prototype>
	<prototype req_name="NEW_PET_DETAIL_REQ" req_client_send="true" req_type="0x00FF0125" 
		res_name="NEW_PET_DETAIL_RES" res_client_receive="true" res_type="0x70FF0125" coment="宠物图鉴详情">
		<req>
			<property name="progName" type="String" comment="程序用的名称、统计名称"></property>
		</req>
		<res>
			<object-property name="petDetail" type="GradePet">
					<property name="flyType" type="int" encoding="UTF-8" comment="1:可飞升"></property>
					<property name="flyAvata" type="String" encoding="UTF-8" comment="飞升形象"></property>
					<property name="progName" type="String" encoding="UTF-8" comment="程序用的名称、统计名称"></property>
					<property name="name" type="String" comment="宠物名字"></property>
					<property name="maxGrade" type="int" comment=""></property>
					<property name="lv4Avatar" type="String" comment=""></property>
					<property name="lv7Avatar" type="String" comment=""></property>
					<property name="jiChuJiNengDesc" type="String"  encoding="UTF-8" comment=""></property>
					<property name="tianFuJiNengDesc" type="String"  encoding="UTF-8" comment=""></property>
					<property name="gainFrom" type="String"  encoding="UTF-8" comment=""></property>
					<property name="bornSkill" type="int[]" comment="两个天生技能的ID"></property>
					<property name="icons" type="String[]"  encoding="UTF-8" comment="两个天生技能的icon"></property>
					<property name="skDesc" type="String[]"  encoding="UTF-8" comment="两个天生技能的泡泡"></property>
					<property name="baseAvatar" type="String" encoding="UTF-8" comment=""></property>
					<property name="character" type="int" encoding="UTF-8" comment="性格"></property>
					<property name="takeLevel" type="int" encoding="UTF-8" comment="携带等级"></property>
					<property name="rarity" type="int" encoding="UTF-8" comment="稀有度"></property>
					<property name="minValues" type="int[]" encoding="UTF-8" comment="5个属性的最低值"></property>
					<property name="maxValues" type="int[]" encoding="UTF-8" comment="最高值"></property>
					<property name="partBody" type="String[]" encoding="UTF-8" comment="粒子，[0~8]"></property>
					<property name="partBodyY" type="int[]" encoding="UTF-8" comment=""></property>
					<property name="partFoot" type="String[]" encoding="UTF-8" comment=""></property>
					<property name="partFootY" type="int[]" encoding="UTF-8" comment=""></property>
			</object-property>
		</res>
	</prototype>
	<prototype req_name="NOTICE_PLAYER_OUT_OF_MAP_REQ" res_name="NOTICE_PLAYER_OUT_OF_MAP_RES" req_type="0x00FF0126" res_type="0x70FF0126" req_client_send="true"
		res_client_receive="true" comment="客户端通知服务器玩家进入地图碰撞区">
		<req>
			<property name="playerId" type="long" encoding="UTF-8"  comment="角色id"></property>
		</req>
		<res>
			<property name="playerId" type="long" encoding="UTF-8"  comment="角色id"></property>
		</res>
	</prototype>
	<prototype req_name="TALENT_FIRST_PAGE_REQ" res_name="TALENT_FIRST_PAGE_RES" req_type="0x00FF0127" res_type="0x70FF0127" req_client_send="true" res_client_receive="true" comment="仙婴首界面">
		<req>
			<property name="playerId" type="long" encoding="UTF-8"  comment="角色id"></property>
		</req>
		<res>
			<property name="fullLevel" type="int" comment="满级(0:默认，1:满级)"></property>
			<property name="playerId" type="long" encoding="UTF-8"  comment="角色id"></property>
			<property name="helpMess" type="String" encoding="UTF-8"  comment="帮助信息"></property>
			<property name="level" type="String" encoding="UTF-8"  comment="仙婴等级"></property>
			<property name="phyAttack" type="int" comment="外功"></property>
			<property name="phyDefence" type="int" comment="外防"></property>
			<property name="magicAttack" type="int" comment="内功"></property>
			<property name="magicDefence" type="int" comment="内防"></property>
			<property name="hp" type="int" comment="气血"></property>
			<property name="talentAddMess" type="String" encoding="UTF-8"  comment="天赋加成"></property>
			<property name="currExp" type="long" encoding="UTF-8"  comment="当前经验"></property>
			<property name="upgradeExp" type="long" encoding="UTF-8"  comment="升级经验"></property>
			<property name="articleNames" type="String[]" encoding="UTF-8"  comment="可以兑换经验的道具"></property>
			<property name="cdMess" type="String" comment="cd信息"></property>
		</res>
	</prototype>
	<prototype req_name="QUERY_TALENT_EXP_REQ" res_name="QUERY_TALENT_EXP_RES" req_type="0x00FF0128" res_type="0x70FF0128" req_client_send="true" res_client_receive="true" comment="喂养请求">
		<req>
			<property name="playerId" type="long" encoding="UTF-8"  comment="角色id"></property>
			<property name="feedType" type="int" comment="类型"></property>
			<property name="inputExp" type="long" comment="输入的经验"></property>
			<property name="aeId" type="long[]" comment="道具id"></property>
			<property name="aeNums" type="int[]" comment="道具数量"></property>
		</req>
		<res>
			<property name="getExp" type="long" encoding="UTF-8"  comment="转化后的经验"></property>
			<property name="upgradeExps" type="long" encoding="UTF-8"  comment="升级所需经验"></property>
		</res>
	</prototype>
	<prototype req_name="CONFIRM_TALENT_EXP_REQ" res_name="CONFIRM_TALENT_EXP_RES" req_type="0x00FF0129" res_type="0x70FF0129" req_client_send="true" res_client_receive="true" comment="喂养确认">
		<req>
			<property name="playerId" type="long" encoding="UTF-8"  comment="角色id"></property>
			<property name="feedType" type="int" comment="类型"></property>
			<property name="inputExp" type="long" comment="输入的经验"></property>
			<property name="aeId" type="long[]" comment="道具id"></property>
			<property name="aeNums" type="int[]" comment="道具数量"></property>
		</req>
		<res>
			<property name="result" type="int" encoding="UTF-8"  comment="结果"></property>
		</res>
	</prototype>
	<prototype req_name="XIULIAN_TALENT_EXP_REQ" res_name="XIULIAN_TALENT_EXP_RES" req_type="0x00FF0130" res_type="0x70FF0130" req_client_send="true" res_client_receive="true" comment="修炼">
		<req>
			<property name="playerId" type="long" encoding="UTF-8"  comment="角色id"></property>
		</req>
		<res>
			<property name="result" type="int" encoding="UTF-8"  comment="结果"></property>
		</res>
	</prototype>
	<prototype res_name="PET_FLY_ANIMATION_RES"  res_type="0x70FF0131" res_client_receive="true" comment="宠物飞升动画">
		<res>
			<property name="petId" type="long" encoding="UTF-8"  comment="petId"></property>
			<property name="petName" type="String" encoding="UTF-8"  comment="petName"></property>
			<property name="avataOld" type="String" encoding="UTF-8"  comment="avataOld"></property>
			<property name="avataFly" type="String" encoding="UTF-8"  comment="avataFly"></property>
		</res>
	</prototype>
	<prototype req_name="QUERY_TALENT_SKILLS_REQ" res_name="QUERY_TALENT_SKILLS_RES" req_type="0x00FF0132" res_type="0x70FF0132" req_client_send="true" res_client_receive="true" comment="天赋技能界面">
		<req>
			<property name="playerId" type="long" encoding="UTF-8"  comment="角色id"></property>
		</req>
		<res>
			<property name="playerId" type="long" encoding="UTF-8"  comment="角色id"></property>
			<property name="canUsePoints" type="int" encoding="UTF-8"  comment="可用点数"></property>
			<property name="aPoints" type="int" encoding="UTF-8"  comment="A天赋已加点数"></property>
			<property name="bPoints" type="int" encoding="UTF-8"  comment="B天赋已加点数"></property>
			<property name="helpMess" type="String" encoding="UTF-8"  comment="帮助信息"></property>
			<property name="aName" type="String" encoding="UTF-8"  comment="帮助信息"></property>
			<property name="bName" type="String" encoding="UTF-8"  comment="帮助信息"></property>
			<object-property name="skillInfos" type="TalentSkillClientInfo[]">
					<property name="id" type="int" encoding="UTF-8" comment="id"></property>
					<property name="name" type="String" encoding="UTF-8" comment="name"></property>
					<property name="currLevel" type="int" encoding="UTF-8" comment="currLevel"></property>
					<property name="maxLevel" type="int" encoding="UTF-8" comment="maxLevel"></property>
					<property name="icon" type="String" encoding="UTF-8" comment="icon"></property>
					<property name="mess" type="String" encoding="UTF-8" comment="泡泡"></property>
					<property name="relyId" type="int" comment="前置id"></property>
					<property name="talentType" type="int" comment="0:A天赋，1:B天赋"></property>
					<property name="isOpen" type="boolean" comment="0:A天赋，1:B天赋"></property>
					<property name="skillLimitMess" type="String" encoding="UTF-8" comment="skillLimitMess"></property>
			</object-property>
		</res>
	</prototype>
	<prototype req_name="GET_FAIRY_ROBBERY_STATE_REQ" res_name="GET_FAIRY_ROBBERY_STATE_RES" req_type="0x00FF0133" res_type="0x70FF0133" req_client_send="true" res_client_receive="true" comment="仙界渡劫">
		<req>
		</req>
		<res>
			<property name="result" type="int" encoding="UTF-8"  comment="0显示升级境界按钮   1显示寻路渡劫按钮"></property>
			<property name="npcname" type="String" encoding="UTF-8"  comment="npc名"></property>
			<property name="mapname" type="String" encoding="UTF-8"  comment="地图"></property>
			<property name="points" type="int[]" encoding="UTF-8"  comment="[0]x [1]y"></property>
		</res>
	</prototype>
	<prototype req_name="FLY_TALENT_ADD_POINTS_REQ" res_name="FLY_TALENT_ADD_POINTS_RES" req_type="0x00FF0134" res_type="0x70FF0134" req_client_send="true" res_client_receive="true" comment="天赋加减点">
		<req>
			<property name="calType" type="int" comment="0:加   ,1:减"></property>
			<property name="skillId" type="int" comment="技能id"></property>
		</req>
		<res>
			<property name="canUsePoints" type="int" encoding="UTF-8"  comment="可用点数"></property>
			<property name="aPoints" type="int" encoding="UTF-8"  comment="A天赋已加点数"></property>
			<property name="bPoints" type="int" encoding="UTF-8"  comment="B天赋已加点数"></property>
			<object-property name="skillInfo" type="TalentSkillClientInfo[]">
					<property name="id" type="int" encoding="UTF-8" comment="id"></property>
					<property name="name" type="String" encoding="UTF-8" comment="name"></property>
					<property name="currLevel" type="int" encoding="UTF-8" comment="currLevel"></property>
					<property name="maxLevel" type="int" encoding="UTF-8" comment="maxLevel"></property>
					<property name="icon" type="String" encoding="UTF-8" comment="icon"></property>
					<property name="mess" type="String" encoding="UTF-8" comment="泡泡"></property>
					<property name="relyId" type="int" comment="前置id"></property>
					<property name="talentType" type="int" comment="0:A天赋，1:B天赋"></property>
					<property name="isOpen" type="boolean" comment="0:A天赋，1:B天赋"></property>
					<property name="skillLimitMess" type="String" encoding="UTF-8" comment="skillLimitMess"></property>
			</object-property>
		</res>
	</prototype>
	<prototype req_name="CONFIRM_FLY_TALENT_ADD_POINTS_REQ" res_name="CONFIRM_FLY_TALENT_ADD_POINTS_RES" req_type="0x00FF0135" res_type="0x70FF0135" req_client_send="true" res_client_receive="true" comment="确认天赋加减点">
		<req>
			<property name="handleType" type="int" comment="0:重置   ,1:确认 ,2:取消"></property>
		</req>
		<res>
			<property name="result" type="int" encoding="UTF-8"  comment="1:成功"></property>
		</res>
	</prototype>
	<prototype res_name="NOTICE_TALENT_BUTTON_RES" res_type="0x70FF0136" res_client_receive="true" comment="天赋按钮">
		<res>
			<property name="talentState" type="int" comment="0:默认  ,1:亮"></property>
			<property name="cdCurrTimes" type="long" comment="cd已过时间"></property>
			<property name="cdAllTimes" type="long" comment="cd总时间"></property>
		</res>
	</prototype>
	<prototype req_name="ONCLICK_TALENT_BUTTON_REQ" req_type="0x00FF0136" req_client_send="true" comment="附体">
		<req>
			<property name="args" type="int" comment="预留"></property>
		</req>
	</prototype>
	<!-- 改名 -->
	<prototype req_name="WILL_CHANGE_NAME_REQ" res_name="WILL_CHANGE_NAME_RES" req_type="0x00FF0137" res_type="0x70FF0137" req_client_send="true"
		res_client_receive="true" comment="玩家要改名字">
		<res>
		</res>
	</prototype>
	<prototype req_name="CHANGE_NAME_REQ" res_name="CHANGE_NAME_RES" req_type="0x00FF0138" res_type="0x70FF0138" req_client_send="true"
		res_client_receive="true" comment="新名字">
		<req>
			<property name="newName" type="String" encoding="UTF-8"  comment="新名字"></property>
		</req>
	</prototype>
	<prototype req_name="QUERY_USED_NAME_REQ" res_name="QUERY_USED_NAME_RES" req_type="0x00FF0139" res_type="0x70FF0139" req_client_send="true"
		res_client_receive="true" comment="查看曾用名">
		<req>
			<property name="firendId" type="long" encoding="UTF-8"  comment="被查看好友的id"></property>
		</req>
		<res>
			<property name="firendName" type="String" encoding="UTF-8"  comment="被查看好友的角色名"></property>
			<property name="usedNames" type="String[]" encoding="UTF-8"  comment="被查看好友的曾用名(多余三个的时候显示最近三个)"></property>
		</res>
	</prototype>
	<prototype req_name="QUERY_CHEST_TYPE_TIME_REQ" res_name="QUERY_CHEST_TYPE_TIME_RES" req_type="0x00FF0140" res_type="0x70FF0140" req_client_send="true"
		res_client_receive="true" comment="获取玩家">
		<req>
			<property name="playerId" type="long" encoding="UTF-8"  comment="查看人的角色id"></property>
		</req>
		<res>
			<property name="playerId" type="long" encoding="UTF-8"  comment="查看人的角色id"></property>
			<property name="chestTypes" type="int[]" encoding="UTF-8"  comment="箱子类型"></property>
			<property name="chestTimes" type="long[]" encoding="UTF-8"  comment="开启时间"></property>
		</res>
	</prototype>
	<prototype req_name="NOTICE_CLIENT_PLAYE_CARTOON2_REQ" req_type="0x00FF0141" req_client_receive="true" comment="通知客户端播放动画2">
		<req>
			<property name="avatatypes" type="int[]" encoding="UTF-8"  comment=""></property>
			<property name="avatas" type="String[]" encoding="UTF-8"  comment=""></property>
			<property name="avatatypes2" type="int[]" encoding="UTF-8"  comment=""></property>
			<property name="avatas2" type="String[]" encoding="UTF-8"  comment=""></property>
		</req>
	</prototype>
	<prototype req_name="QUERY_NEW_EQUIPMENT_STRONG2_REQ" req_type="0x00FF0142" res_name="QUERY_NEW_EQUIPMENT_STRONG2_RES" res_type="0x70FF0142"
		req_client_send="true" res_client_receive="true" comment="客户端请求服务器，装备强化的各种信息，包括需要什么材料，需要几个，用什么来提高成功率，需要多少手续费等">
		<req>
			<property name="equipmentId" type="long" comment="要强化的装备，玩家的背包中必须有此装备" />
		</req>
		<res>
			<property name="baoDiName" type="String" comment="保底符名字" />
			<property name="equipmentId" type="long" comment="要强化的装备，玩家的背包中必须有此装备" />
			<property name="cost" type="long" comment="价格" />
			<property name="strongedUUB" type="String" encoding="UTF-8" comment="强化后的装备UUB" />
			<property name="strongMaterialName" type="String[]" encoding="UTF-8" comment="可用的强化符"></property>
			<property name="strongMaterialLuck" type="int[]" comment="各颜色强化符的几率，不同名称强化符颜色相同几率一样"></property>
			<property name="otherStrongMaterialName" type="String" encoding="UTF-8" comment="其他额外可用的强化符"></property>
			<property name="otherStrongMaterialNum" type="int" comment="其他额外可用的强化符数量"></property>
			<property name="otherStrongMaterialluck" type="int" comment="成功"></property>
		</res>
	</prototype>
	<!-- 装备洗练 -->
	<prototype req_name="XILIAN_EQUIPMENT_REQ" req_type="0x00FF0143" res_name="XILIAN_EQUIPMENT_RES" res_type="0x70FF0143"
		req_client_send="true" res_client_receive="true" comment="打开洗炼面板">
		<res>
			<property name="material" type="String" comment="洗炼符名字" />
			<property name="xiLianDes" type="String" comment="洗炼描述" />
		</res>
	</prototype>
	<prototype req_name="XILIAN_PUTEQUIPMENT_REQ" req_type="0x00FF0144" res_name="XILIAN_PUTEQUIPMENT_RES" res_type="0x70FF0144"
		req_client_send="true" res_client_receive="true" comment="洗炼放入装备">
		<req>
			<property name="equipmentId" type="long" comment="装备id" />
		</req>
		<res>
			<property name="equipmentId" type="long" comment="装备id" />
			<property name="addPropDes" type="String" comment="附加属性描述" />
			<property name="xiLianDes" type="String" comment="洗练描述" />
		</res>
	</prototype>
	<prototype req_name="XILIAN_EQUIPMENT_SURE_REQ" req_type="0x00FF0145" res_name="XILIAN_EQUIPMENT_SURE_RES" res_type="0x70FF0145"
		req_client_send="true" res_client_receive="true" comment="确认洗炼">
		<req>
			<property name="equipmentId" type="long" comment="装备id" />
			<property name="materialId" type="long" comment="洗炼符id" />
		</req>
		<res>
			<property name="result" type="boolean" comment="洗炼结果，成功为true" />
		</res>
	</prototype>
	<prototype req_name="OPEN_MAGICWEAPON_BREAK_WINDOW_REQ" res_name="OPEN_MAGICWEAPON_BREAK_WINDOW_RES" req_type="0x00FF0146" res_type="0x70FF0146" req_client_send="true"
		res_client_receive="true" comment="打开法宝进阶突破窗口">
		<req>
		</req>
		<res>
			<property name="windowDes" type="String" encoding="UTF-8"  comment="法宝阶信息"></property>
		</res>
	</prototype>
	
	<prototype req_name="QUERY_MAGICWEAPON_BREAK_NEEDPROP_REQ" res_name="QUERY_MAGICWEAPON_BREAK_NEEDPROP_RES" req_type="0x00FF0147" res_type="0x70FF0147" req_client_send="true"
		res_client_receive="true" comment="法宝进阶突破查询">
		<req>
			<property name="magicweaponId" type="long" encoding="UTF-8"  comment="法宝id"></property>
		</req>
		<res>
			<property name="magicweaponId" type="long" encoding="UTF-8"  comment="法宝id"></property>
			<property name="magicweaponDes" type="String" encoding="UTF-8"  comment="法宝阶信息"></property>
			<property name="needAeName" type="String" encoding="UTF-8"  comment="需要的材料名"></property>
			<property name="succeedProb" type="int" encoding="UTF-8"  comment="成功率"></property>
		</res>
	</prototype>
	
	<prototype req_name="MAGICWEAPON_BREAK_REQ" res_name="MAGICWEAPON_BREAK_RES" req_type="0x00FF0148" res_type="0x70FF0148" req_client_send="true"
		res_client_receive="true" comment="法宝阶突破">
		<req>
			<property name="magicweaponId" type="long" encoding="UTF-8"  comment="法宝id"></property>
		</req>
		<res>
			<property name="magicweaponId" type="long" encoding="UTF-8"  comment="法宝id"></property>
			<property name="windowDes" type="String" encoding="UTF-8"  comment="法宝阶信息"></property>
			<property name="result" type="int" encoding="UTF-8"  comment="突破结果  0失败  1成功"></property>
		</res>
	</prototype>
	
	<!-- 金猴天灾活动 -->
	<prototype req_name="DISASTER_RANK_INFO_REQ" res_name="DISASTER_RANK_INFO_RES" req_type="0x00FF0149" res_type="0x70FF0149" req_client_send="true"
		res_client_receive="true" comment="通知客户端金猴天灾游戏排名">
		<req>
		</req>
		<res>
			<object-property name="disasterPlayers" type="DisasterPlayer[]" comment="数组按照排名先后顺序">
					<property name="playerId" type="long" encoding="UTF-8" comment="角色id"></property>
					<property name="playerNames" type="String" encoding="UTF-8" comment="角色名列表"></property>
					<property name="deadTimes" type="int" encoding="UTF-8" comment="死亡次数"></property>
					<property name="leftHp" type="int" encoding="UTF-8" comment="剩余血量"></property>
			</object-property>
		</res>
	</prototype>
	<prototype req_name="DISASTER_END_INFO_REQ" req_type="0x70FF0151" req_client_receive="true" comment="通知客户端金猴天灾游戏结束">
		<req>
			<property name="playerId" type="long[]" encoding="UTF-8" comment="角色Id列表"></property>
			<property name="playerNames" type="String[]" encoding="UTF-8" comment="角色名列表"></property>
			<property name="deadTimes" type="int[]" encoding="UTF-8" comment="对应角色死亡次数"></property>
			<property name="rewardExp" type="long[]" encoding="UTF-8" comment="对应获得的经验奖励数"></property>
			<property name="rewardAeId" type="long[]" encoding="UTF-8" comment="对应奖励道具Id(0代表没有物品奖励)"></property>
		</req>
	</prototype>
	<prototype req_name="DISASTER_START_INFO_REQ" req_type="0x70FF0152" req_client_receive="true" comment="玩家进入金猴天灾游戏场景开始信息">
		<req>
			<property name="desc" type="String" encoding="UTF-8" comment="描述"></property>
			<property name="startLeftTime" type="long" encoding="UTF-8" comment="距离开启还剩多少毫秒"></property>
		</req>
	</prototype>
	<prototype req_name="DISASTER_MATCH_SUCCESS_REQ" req_type="0x70FF0153" req_client_receive="true" comment="匹配成功弹窗提醒玩家">
		<req>
			<property name="enterLeftTime" type="long" encoding="UTF-8" comment="进入倒计时，毫秒"></property>
		</req>
	</prototype>
	<prototype req_name="DISASTER_SIGN_SUCCESS_REQ" req_type="0x70FF0154" req_client_receive="true" comment="报名成功匹配用时">
		<req>
			<property name="matchTime" type="long" encoding="UTF-8" comment="报名时间，毫秒"></property>
		</req>
	</prototype>
	<prototype req_name="DISASTER_OPT_REQ" res_name="DISASTER_OPT_RES" req_type="0x00FF0155" res_type="0x70FF0155" req_client_send="true"
		res_client_receive="true" comment="进入、放弃、离开空岛大冒险或者取消排队">
		<req>
			<property name="optType" type="int" encoding="UTF-8"  comment="0进入  1放弃  3取消匹配  4离开空岛大冒险地图"></property>
		</req>
		<res>
			<property name="optType" type="int" encoding="UTF-8"  comment="0进入  1放弃  3取消匹配  4离开空岛大冒险地图"></property>
			<property name="result" type="int" encoding="UTF-8"  comment="-1失败  0成功"></property>
		</res>
	</prototype>
	<prototype req_name="PLAYER_IN_SPESCENE_REQ" res_name="PLAYER_IN_SPESCENE_RES" req_type="0x00FF0156" res_type="0x70FF0156" req_client_send="true"
		res_client_receive="true" comment="玩家是否在某个特殊场景">
		<req>
			<property name="sceneType" type="int" encoding="UTF-8"  comment="1空岛大冒险"></property>
		</req>
		<res>
			<property name="sceneType" type="int" encoding="UTF-8"  comment="1空岛大冒险"></property>
			<property name="result" type="int" encoding="UTF-8"  comment="-1不在  1在对应场景"></property>
		</res>
	</prototype>
	<prototype req_name="SHOOK_DICE_REQ" res_name="SHOOK_DICE_RES" req_type="0x00FF0157" res_type="0x70FF0157" req_client_send="true"
		res_client_receive="true" comment="摇骰子请求">
		<req>
		</req>
		<res>
			<property name="id" type="long" encoding="UTF-8"  comment="家族或宗派id"></property>
			<property name="fightType" type="int" encoding="UTF-8"  comment="城战0,矿战1"></property>
			<property name="point1" type="int" encoding="UTF-8"  comment="骰子点数"></property>	
			<property name="point2" type="int" encoding="UTF-8"  comment="骰子点数"></property>	
			<property name="point3" type="int" encoding="UTF-8"  comment="骰子点数"></property>	
			<property name="time" type="int" encoding="UTF-8"  comment="摇骰子等待时间"></property>	
		</res>
	</prototype>
	<prototype req_name="SHOOK_DICE_RESULT_REQ"  req_type="0x00FF0158"  req_client_send="true" comment="摇骰子结果">
		<req>
			<property name="id" type="long" encoding="UTF-8"  comment="家族或宗派id"></property>	
			<property name="fightType" type="int" encoding="UTF-8"  comment="城战0,矿战1"></property>
		</req>
	</prototype>
	
	<prototype res_name="SHOOK_DICE2_RES"  res_type="0x70FF0159" res_client_receive="true" comment="摇骰子请求2">
		<res>
			<property name="point" type="int" encoding="UTF-8"  comment="骰子点数"></property>	
			<property name="pointList" type="int[]" encoding="UTF-8"  comment="点数分布"></property>	
			<property name="time" type="int" encoding="UTF-8"  comment="摇骰子等待时间"></property>	
		</res>
	</prototype>
	
	<prototype res_name="DICE_BILLBOARD_RES"  res_type="0x70FF0160" res_client_receive="true" comment="骰子副本排行">
		<res>
			<property name="myRank" type="int" encoding="UTF-8"  comment="我的排行"></property>
			<property name="enterNextLayerTime" type="int" encoding="UTF-8"  comment="进入下一层需要的时间"></property>
			<property name="enterMess" type="String" encoding="UTF-8"  comment="进入下一层信息"></property>
			<property name="exps" type="long" encoding="UTF-8"  comment="经验"></property>
			<object-property name="datas" type="DiceBillboardData[]">
				<property name="rank" type="int" encoding="UTF-8" comment="rank"></property>
				<property name="playerName" type="String" encoding="UTF-8" comment="playerName"></property>
				<property name="point" type="int" encoding="UTF-8" comment="point"></property>
			</object-property>
		</res>
	</prototype>
	
	<prototype res_name="DICE_END_NOTICE_RES"  res_type="0x70FF0161" res_client_receive="true" comment="结束通知">
		<res>
			<property name="enterRoomNums" type="int" encoding="UTF-8"  comment="进入房间数"></property>	
			<property name="allExps" type="long" encoding="UTF-8"  comment="总经验"></property>	
			<property name="ids" type="long[]" encoding="UTF-8"  comment="奖励id"></property>	
			<property name="nums" type="int[]" encoding="UTF-8"  comment="奖励数量"></property>	
		</res>
	</prototype>
	
	<prototype req_name="QUERY_COUNTRY_OFFICER_REQ" res_name="QUERY_COUNTRY_OFFICER_RES" req_type="0x00FF0162" res_type="0x70FF0162"
		req_client_send="true" res_client_receive="true" comment="发送国家官员信息">
		<req>
		</req>
		<res>
			<property name="kingName" type="String" encoding="UTF-8" comment="国王，天尊" />
			<property name="dasimaName" type="String" encoding="UTF-8" comment="大司马，玄阴真圣" />
			<property name="seniorGeneralName" type="String" encoding="UTF-8" comment="大将军，纯阳真圣" />
			<property name="marshalName" type="String" encoding="UTF-8" comment="元帅，九天司命" />
			<property name="primeMinisterName" type="String" encoding="UTF-8" comment="宰相，九天司空" />
			<property name="policeByKingName" type="String" encoding="UTF-8" comment="巡捕国王任命，真武神君" />
			<property name="yushidafuByKingName" type="String" encoding="UTF-8" comment="御史大夫国王任命，道陵星君" />
			<property name="policeByMarshalName" type="String" encoding="UTF-8" comment="巡捕元帅任命，翔武神君" />
			<property name="yushidafuByPrimeMinisterName" type="String" encoding="UTF-8" comment="御史大夫宰相任命，葛玄星君" />
		</res>
	</prototype>
	<prototype req_name="DISASTER_SKILL_INFO_REQ" res_name="DISASTER_SKILL_INFO_RES" req_type="0x00FF0163" res_type="0x70FF0163" req_client_send="true"
		res_client_receive="true" comment="请求金猴天灾技能列表">
		<req>
		</req>
		<res>
			<property name="idList" type="int[]" encoding="UTF-8" comment="技能id数组" />
		</res>
	</prototype>
	<prototype req_name="DICE_TRANSFER_REQ" req_type="0x00FF0164"  req_client_send="true" comment="传送请求">
		<req>	
			<property name="pId" type="long" encoding="UTF-8" comment="玩家id" />
		</req>
	</prototype>
	
	<prototype req_name="SOULPITH_INFO_REQ" res_name="SOULPITH_INFO_RES" req_type="0x00FF0165" res_type="0x70FF0165" req_client_send="true"
		res_client_receive="true" comment="请求玩家灵根信息">
		<req>
			<property name="soultype" type="int" encoding="UTF-8" comment="元神类型" />
		</req>
		<res>
			<property name="soultype" type="int" encoding="UTF-8" comment="元神类型" />
			<object-property name="datas" type="SoulpithInfo4Client">
				<property name="soulNums" type="int[]" encoding="UTF-8" comment="已拥有的灵髓点数" />
				<property name="inlayInfos" type="long[]" encoding="UTF-8" comment="灵髓宝石镶嵌" />
				<property name="description" type="String[]" encoding="UTF-8" comment="灵髓属性面板描述" />
				<property name="basicsoulNums" type="int[]" encoding="UTF-8" comment="等级灵髓点数" />
				<property name="description2" type="String[]" encoding="UTF-8" comment="灵髓激活的属性" />
			</object-property>
		</res>
	</prototype>
	<prototype req_name="INLAY_SOULPITH_REQ" res_name="INLAY_SOULPITH_RES" req_type="0x00FF0166" res_type="0x70FF0166" req_client_send="true"
		res_client_receive="true" comment="镶嵌灵髓">
		<req>
			<property name="soultype" type="int" encoding="UTF-8" comment="元神类型" />
			<property name="inlayIndex" type="int" encoding="UTF-8" comment="镶嵌位置索引" />
			<property name="articleId" type="long" encoding="UTF-8" comment="镶嵌的灵髓物品id" />
		</req>
		<res>
			<property name="soultype" type="int" encoding="UTF-8" comment="元神类型" />
			<object-property name="datas" type="SoulpithInfo4Client">
				<property name="soulNums" type="int[]" encoding="UTF-8" comment="已拥有的灵髓点数" />
				<property name="inlayInfos" type="long[]" encoding="UTF-8" comment="灵髓宝石镶嵌" />
				<property name="description" type="String[]" encoding="UTF-8" comment="灵髓属性面板描述" />
				<property name="basicsoulNums" type="int[]" encoding="UTF-8" comment="等级灵髓点数" />
				<property name="description2" type="String[]" encoding="UTF-8" comment="灵髓激活的属性" />
			</object-property>
		</res>
	</prototype>
	<prototype req_name="TAKEOUT_SOULPITH_REQ" res_name="TAKEOUT_SOULPITH_RES" req_type="0x00FF0167" res_type="0x70FF0167" req_client_send="true"
		res_client_receive="true" comment="取出灵髓">
		<req>
			<property name="soultype" type="int" encoding="UTF-8" comment="元神类型" />
			<property name="inlayIndex" type="int" encoding="UTF-8" comment="镶嵌位置索引" />
		</req>
		<res>
			<property name="soultype" type="int" encoding="UTF-8" comment="元神类型" />
			<object-property name="datas" type="SoulpithInfo4Client">
				<property name="soulNums" type="int[]" encoding="UTF-8" comment="已拥有的灵髓点数" />
				<property name="inlayInfos" type="long[]" encoding="UTF-8" comment="灵髓宝石镶嵌" />
				<property name="description" type="String[]" encoding="UTF-8" comment="灵髓属性面板描述" />
				<property name="basicsoulNums" type="int[]" encoding="UTF-8" comment="等级灵髓点数" />
				<property name="description2" type="String[]" encoding="UTF-8" comment="灵髓激活的属性" />
			</object-property>
		</res>
	</prototype>
	<prototype req_name="POURIN_SOULPITH_REQ" res_name="POURIN_SOULPITH_RES" req_type="0x00FF0168" res_type="0x70FF0168" req_client_send="true"
		res_client_receive="true" comment="注灵">
		<req>
			<property name="articleId" type="long" encoding="UTF-8" comment="操作的灵髓宝石id" />
			<property name="meterialIds" type="String[]" encoding="UTF-8" comment="仙气葫芦道具名列表" />
			<property name="meterialNums" type="int[]" encoding="UTF-8" comment="仙气葫芦消耗数组" />
		</req>
		<res>
			<property name="result" type="int" encoding="UTF-8" comment="1成功" />
		</res>
	</prototype>
	<prototype req_name="DEVOUR_SOULPITH_REQ" res_name="DEVOUR_SOULPITH_RES" req_type="0x00FF0169" res_type="0x70FF0169" req_client_send="true"
		res_client_receive="true" comment="吞噬">
		<req>
			<property name="mainId" type="long" encoding="UTF-8" comment="吞噬的灵髓宝石id" />
			<property name="meterials" type="long" encoding="UTF-8" comment="被吞噬的灵髓宝石id" />
		</req>
		<res>
			<property name="result" type="int" encoding="UTF-8" comment="1成功" />
		</res>
	</prototype>
	<prototype req_name="ARTIFICE_SOULPITH_REQ" res_name="ARTIFICE_SOULPITH_RES" req_type="0x00FF0170" res_type="0x70FF0170" req_client_send="true"
		res_client_receive="true" comment="炼化">
		<req>
			<property name="meterialIds" type="long[]" encoding="UTF-8" comment="灵髓宝石id" />
		</req>
		<res>
			<property name="resultAeId" type="long" encoding="UTF-8" comment="炼化获得的灵髓宝石Id" />
		</res>
	</prototype>
	<prototype req_name="SOULPITH_EXTRA_INFO_REQ" res_name="SOULPITH_EXTRA_INFO_RES" req_type="0x00FF0171" res_type="0x70FF0171" req_client_send="true"
		res_client_receive="true" comment="灵根激活属性">
		<req>
		</req>
		<res>
			<object-property name="datas" type="SoulPithExtraAttrModule[]">
				<property name="name" type="String" encoding="UTF-8" comment="灵根名" />
				<property name="soulPithTypes" type="int[]" encoding="UTF-8" comment="激活属性需要的灵髓类型 " />
				<property name="needSoulNum" type="int[]" encoding="UTF-8" comment="对应需要的灵髓点数" />
				<property name="attrDes" type="String[]" encoding="UTF-8" comment="属性描述" />
			</object-property>
		</res>
	</prototype>
	<prototype req_name="GOURD_INFO_REQ" res_name="GOURD_INFO_RES" req_type="0x00FF0172" res_type="0x70FF0172" req_client_send="true"
		res_client_receive="true" comment="仙气葫芦临时道具id请求">
		<req>
		</req>
		<res>
			<property name="articleIds" type="long[]" encoding="UTF-8" comment="仙气葫芦物品id" />
			<property name="addExps" type="long[]" encoding="UTF-8" comment="对应增加经验值" />
			<property name="soulOpenlevel" type="int[]" encoding="UTF-8" comment="灵髓镶嵌位置开启等级" />
		</res>
	</prototype>
	
	<prototype req_name="VIP_LOTTERY_OPEN_REQ" req_type="0x00FFF001"  req_client_receive="true" comment="VIP活动弹出转盘">
		<req>
			<object-property name="fixedGiven" type="ActivityPropHasRate" comment="固定奖励">
				<property name="articleNum" type="int" encoding="UTF-8" comment="固定奖励的物品数量" />
				<property name="bind" type="boolean" encoding="UTF-8" comment="固定奖励的物品是否绑定" />
			</object-property>
			<property name="fixedGivenId" type="long" encoding="UTF-8" comment="固定奖励的物品ID" />
			
			<object-property name="randomGiven" type="ActivityPropHasRate[]" comment="随机奖励">
				<property name="articleNum" type="int" encoding="UTF-8" comment="随机奖励的物品数量" />
				<property name="bind" type="boolean" encoding="UTF-8" comment="随机奖励的物品是否绑定" />
			</object-property>
			<property name="randomGivenId" type="long[]" encoding="UTF-8" comment="随机奖励的物品IDs" />						
		</req>
	</prototype>

	<prototype req_name="VIP_LOTTERY_CLICK_REQ"  res_name="VIP_LOTTERY_CLICK_RES" req_type="0x00FFF002" res_type="0x70FFF002"  req_client_send="true" res_client_receive="true" comment="VIP活动点击转盘">
		<req>
		</req>
		<res>
			<property name="fixedGivenId" type="long" encoding="UTF-8" comment="固定奖励的物品ID" />
			<property name="randomGivenId" type="long" encoding="UTF-8" comment="随机奖励的物品索引，不是ID" />
		</res>
	</prototype>

	<!-- 坐骑魂石 -->
	<prototype req_name="HUNSHI_JIANDING_REQ" res_name="HUNSHI_JIANDING_RES" req_type="0x00FFF003" res_type="0x70FFF003"
		req_client_send="true" res_client_receive="true" comment="客户端查询魂石鉴定需要什么材料">
		<req>
			<property name="hunshiId" type="long" comment="魂石ID" />
		</req>
		<res>
			<property name="hunshiId" type="long" comment="魂石ID" />
			<property name="descript" type="String" encoding="UTF-8" comment="鉴定的提示（价格）" />
			<property name="materials" type="String[]" encoding="UTF-8" comment="有效的鉴定符道具名" />
			<property name="materialNums" type="int[]" encoding="UTF-8" comment="需要的鉴定符数量" />
		</res>
	</prototype>

	<prototype req_name="HUNSHI_JIANDING_SURE_REQ" res_name="HUNSHI_JIANDING_SURE_RES" req_type="0x00FFF004" res_type="0x70FFF004" req_client_send="true" res_client_receive="true" comment="客户端魂石鉴定">
		<req>
			<property name="hunshiId" type="long" comment="魂石ID" />
			<property name="materialIds" type="long[]" comment="鉴定材料ID" />
			<property name="materialNums" type="int[]" comment="数量"></property>
			<property name="usesilver" type="int" comment="0:使用鉴定符；1:使用银子"></property>
		</req>
		<res>
			<property name="result" type="boolean" encoding="UTF-8" comment="鉴定结果" />
		</res>
	</prototype>
	
	<prototype req_name="WOLF_SIGN_UP_QUERY_REQ" res_name="WOLF_SIGN_UP_QUERY_RES" req_type="0x00FFF005" res_type="0x70FFF005" req_client_send="true" res_client_receive="true" comment="请求报名界面信息">
		<req>
		</req>
		<res>
			<property name="ruleInfo" type="String" encoding="UTF-8" comment="条件1" />
			<property name="failInfo" type="String" encoding="UTF-8" comment="失败信息" />
			<property name="successInfo" type="String" encoding="UTF-8" comment="成功信息" />
			<property name="fengShenInfo" type="String" encoding="UTF-8" comment="封神信息" />
			<property name="joinPlayerNum" type="String" encoding="UTF-8" comment="参与人数" />
			<property name="joinTimes" type="String" encoding="UTF-8" comment="参与次数" />
			<property name="activityTime" type="String" encoding="UTF-8" comment="活动时间" />
			<property name="hasSignUp" type="boolean" encoding="UTF-8" comment="是否已经报名" />
			<property name="signUpNums" type="int" encoding="UTF-8" comment="当前报名人数" />
			<property name="joinNums" type="int" encoding="UTF-8" comment="参加次数" />
		</res>
	</prototype>
	
	<prototype req_name="WOLF_SIGN_UP_SURE_REQ" res_name="WOLF_SIGN_UP_SURE_RES" req_type="0x00FFF006" res_type="0x70FFF006" req_client_send="true" res_client_receive="true" comment="确认报名">
		<req>
			<property name="signType" type="int" encoding="UTF-8" comment="0:报名，1:取消报名" />
		</req>
		<res>
			<property name="result" type="boolean" encoding="UTF-8" comment="结果" />
		</res>
	</prototype>
	
	<prototype req_name="WOLF_FIGHT_QUERY_REQ" res_name="WOLF_FIGHT_QUERY_RES" req_type="0x00FFF007" res_type="0x70FFF007" req_client_send="true" res_client_receive="true" comment="战斗界面信息">
		<req>
		</req>
		<res>
			<property name="ruleInfo" type="String" encoding="UTF-8" comment="条件1" />
			<property name="failInfo" type="String" encoding="UTF-8" comment="失败信息" />
			<property name="successInfo" type="String" encoding="UTF-8" comment="成功信息" />
			<property name="fengShenInfo" type="String" encoding="UTF-8" comment="封神信息" />
			<property name="wolfInfo" type="String" encoding="UTF-8" comment="大灰狼" />
			<property name="sheepInfo" type="String" encoding="UTF-8" comment="小绵羊" />
		</res>
	</prototype>
	
	<prototype res_name="WOLF_STATE_NOTICE_RES"  res_type="0x70FFF008" res_client_receive="true" comment="状态通知">
		<res>
			<property name="result" type="int" encoding="UTF-8" comment="0:匹配成功，1:匹配中" />
		</res>
	</prototype>
	
	<prototype req_name="WOLF_NOTICE_ENTER_REQ" res_name="WOLF_NOTICE_ENTER_RES" req_type="0x00FFF009" res_type="0x70FFF009" req_client_send="true" res_client_receive="true" comment="通知进入界面">
		<req>
		</req>
		<res>
			<property name="ruleInfo" type="long" encoding="UTF-8" comment="玩家id" />
			<property name="enterTimes" type="int" encoding="UTF-8" comment="进入时间倒计时(秒)" />
		</res>
	</prototype>
	
	<prototype req_name="WOLF_ENTER_REQ" res_name="WOLF_ENTER_RES" req_type="0x00FFF010" res_type="0x70FFF010" req_client_send="true" res_client_receive="true" comment="进入确认">
		<req>
		</req>
		<res>
			<property name="result" type="long" encoding="UTF-8" comment="结果,1:成功" />
		</res>
	</prototype>
	
	<prototype res_name="WOLF_UPDATE_FIGHT_INFO_RES" res_type="0x70FFF011" res_client_receive="true" comment="战斗信息更新">
		<res>
			<property name="wolfName" type="String" encoding="UTF-8" comment="狼名" />
			<property name="sheepDeadInfo" type="String" encoding="UTF-8" comment="羊死亡信息" />
			<property name="exps" type="long" encoding="UTF-8" comment="经验" />
			<property name="ids" type="long[]" encoding="UTF-8" comment="ids" />
			<property name="names" type="String[]" encoding="UTF-8" comment="角色名" />
			<property name="careers" type="int[]" encoding="UTF-8" comment="职业" />
			<property name="deads" type="int[]" encoding="UTF-8" comment="死亡状态" />
		</res>
	</prototype>
	
	<prototype res_name="WOLF_START_FIGHT_NOTICE_RES" res_type="0x70FFF012" res_client_receive="true" comment="战斗即将开始">
		<res>
			<property name="times" type="int" encoding="UTF-8" comment="时间(秒)" />
			<property name="playerId" type="long" encoding="UTF-8" comment="玩家id" />
			<property name="showInfos" type="String" encoding="UTF-8" comment="信息" />
		</res>
	</prototype>
	
	<prototype res_name="WOLF_END_NOTICE_RES" res_type="0x70FFF015" res_client_receive="true" comment="战斗结束通知">
		<res>
			<property name="state" type="int" encoding="UTF-8" comment="0:失败，1:成功，2:封神" />
			<property name="resultInfo" type="String" encoding="UTF-8" comment="描述" />
			<property name="exps" type="long" encoding="UTF-8" comment="经验" />
			<property name="articleIds" type="long[]" encoding="UTF-8" comment="道具id" />
		</res>
	</prototype>
	<!-- 坐骑魂石 -->
	<prototype res_name="HUNSHI_OPEN_RES" res_type="0x70FFF016" res_client_receive="true" comment="打开魂石预览界面">
		<res>
			<property name="des" type="String" comment="描述" />
		</res>
	</prototype>
	<prototype req_name="HUNSHI_MERGE_AIM_REQ" res_name="HUNSHI_MERGE_AIM_RES" req_type="0x00FFF017" res_type="0x70FFF017"
		req_client_send="true" res_client_receive="true" comment="魂石合成目标查询">
		<req>
			<property name="materialId" type="long" comment="材料ID" />
		</req>
		<res>
			<property name="tempAimId" type="long" comment="目标魂石tempID" />
			<property name="silver" type="long" encoding="UTF-8" comment="需要的绑银或银子" />
		</res>
	</prototype>
	<prototype req_name="HUNSHI_SPECIAL_REQ" res_name="HUNSHI_SPECIAL_RES" req_type="0x00FFF018" res_type="0x70FFF018"
		req_client_send="true" res_client_receive="true" comment="魂石特有信息查询">
		<req>
			<property name="materialId" type="long[]" comment="材料ID" />
		</req>
		<res>
			<property name="materialId" type="long[]" comment="材料ID" />
			<property name="jianDing" type="boolean[]" comment="是否已鉴定" />
			<property name="ronghezhi" type="int[]" encoding="UTF-8" comment="总融合值" />
			<property name="index" type="int[]" encoding="UTF-8" comment="窍的位置：-1-不带窍，0~15对应1~16个窍" />
		</res>
	</prototype>
	<prototype req_name="HUNSHI_MERGE_REQ" res_name="HUNSHI_MERGE_RES" req_type="0x00FFF019" res_type="0x70FFF019"
		req_client_send="true" res_client_receive="true" comment="魂石合成确认">
		<req>
			<property name="aimTempId" type="long" comment="目标tempID(合成套装石时使用，合成魂石时用0代替)" />
			<property name="materialId" type="long[]" comment="材料ID" />
			<property name="silverType" type="int" comment="消耗银子类型：0-绑银；1-银子" />
		</req>
		<res>
			<property name="result" type="boolean" encoding="UTF-8" comment="合成结果" />
		</res>
	</prototype>
	<prototype req_name="HUNSHI2_OPEN_REQ" res_name="HUNSHI2_OPEN_RES" req_type="0x00FFF020" res_type="0x70FFF020"
		req_client_send="true" res_client_receive="true" comment="套装魂石合成界面打开">
		<req>
		</req>
		<res>
			<property name="kinds" type="String[]" encoding="UTF-8" comment="分类名" />
		</res>
	</prototype>
	<prototype req_name="HUNSHI2_KIND_REQ" res_name="HUNSHI2_KIND_RES" req_type="0x00FFF021" res_type="0x70FFF021"
		req_client_send="true" res_client_receive="true" comment="套装魂石分类请求">
		<req>
			<property name="kinds" type="String" encoding="UTF-8" comment="分类名" />
		</req>
		<res>
			<property name="kinds" type="String" encoding="UTF-8" comment="分类名" />
			<object-property name="hunshi2" type="Hunshi2Material[]" comment="套装魂石材料">
				<property name="targetTempId" type="long" encoding="UTF-8" comment="目标套装石id" />
				<property name="materialTempIds" type="long[]" encoding="UTF-8" comment="材料ids" />
				<property name="mergeCost" type="long" encoding="UTF-8" comment="合成需要的银子" />
			</object-property>
			<property name="des" type="String" encoding="UTF-8" comment="描述" />
		</res>
	</prototype>
	<prototype req_name="HUNSHI_PUTON_OPEN_REQ" res_name="HUNSHI_PUTON_OPEN_RES" req_type="0x00FFF022" res_type="0x70FFF022"
		req_client_send="true" res_client_receive="true" comment="打开魂石镶嵌界面">
		<req>
			<property name="playerId" type="long" encoding="UTF-8" comment="被查看的玩家id" />
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
		</req>
		<res>
			<property name="playerId" type="long" encoding="UTF-8" comment="被查看的玩家id" />
			<property name="hunshiIds" type="long[]" encoding="UTF-8" comment="镶嵌的魂石数组，id>0表示有镶嵌" />
			<property name="des" type="String" encoding="UTF-8" comment="描述" />
		</res>
	</prototype>
	<prototype req_name="SOUL_ARTICLE_INFO_REQ" res_name="SOUL_ARTICLE_INFO_RES" req_type="0x00FFF023" res_type="0x70FFF023"
		req_client_send="true" res_client_receive="true" comment="请求灵髓宝石属性（等级、经验等）">
		<req>
			<property name="articleId" type="long" encoding="UTF-8" comment="灵髓宝石id" />
		</req>
		<res>
			<property name="articleId" type="long" encoding="UTF-8" comment="灵髓宝石id" />
			<property name="articleLevel" type="int" encoding="UTF-8" comment="灵髓宝石等级·" />
			<property name="articleExp" type="long" encoding="UTF-8" comment="灵髓宝石当前经验" />
			<property name="propTypes" type="int[]" encoding="UTF-8" comment="属性类型" />
			<property name="propNums" type="int[]" encoding="UTF-8" comment="对应值" />
		</res>
	</prototype>
	
	<prototype req_name="SOULPITH_LEVEL_INFO_REQ" res_name="SOULPITH_LEVEL_INFO_RES" req_type="0x00FFF024" res_type="0x70FFF024"
		req_client_send="true" res_client_receive="true" comment="灵髓宝石等级信息">
		<req>
			<property name="soulpithType" type="String" encoding="UTF-8" comment="灵髓类型" />
		</req>
		<res>
			<property name="soulpithType" type="String" encoding="UTF-8" comment="灵髓类型" />
			<object-property name="datas" type="SoulInfo4Client[]" comment="详细信息">
				<property name="soulLevel" type="int" encoding="UTF-8" comment="等级" />
				<property name="propTypes" type="int[]" encoding="UTF-8" comment="属性类型" />
				<property name="propNums" type="int[]" encoding="UTF-8" comment="属性值" />
				<property name="soulNums" type="int[]" encoding="UTF-8" comment="附加的灵髓点数" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="SOUL_LEVELUP_INFO_REQ" res_name="SOUL_LEVELUP_INFO_RES" req_type="0x00FFF025" res_type="0x70FFF025"
		req_client_send="true" res_client_receive="true" comment="请求灵髓宝石升级所需经验">
		<req>
		</req>
		<res>
			<property name="devourSilver" type="long" encoding="UTF-8" comment="吞噬消耗银两" />
			<property name="artificeSilver" type="long" encoding="UTF-8" comment="炼化消耗银两" />
			<property name="needExp" type="long[]" encoding="UTF-8" comment="所需经验" />
			<property name="colorRate" type="int[]" encoding="UTF-8" comment="颜色属性比例" />
		</res>
	</prototype>
	<prototype req_name="HUNSHI_PUTON_REQ" res_name="HUNSHI_PUTON_RES" req_type="0x00FFF026" res_type="0x70FFF026"
		req_client_send="true" res_client_receive="true" comment="镶嵌挖取请求">
		<req>
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
			<property name="hunshiType" type="int" encoding="UTF-8" comment="魂石类型：0-魂石；1套装石" />
			<property name="hunshiId" type="long" encoding="UTF-8" comment="要镶嵌或挖取的魂石id" />
			<property name="index" type="int" encoding="UTF-8" comment="要镶嵌或挖取的位置" />
			<property name="opType" type="int" encoding="UTF-8" comment="操作类型：0-镶嵌；-1-挖取" />
		</req>
		<res>
			<property name="hunshiId" type="long" encoding="UTF-8" comment="要镶嵌或挖取的魂石id" />
			<property name="index" type="int" encoding="UTF-8" comment="要镶嵌或挖取的位置" />
			<property name="opType" type="int" encoding="UTF-8" comment="操作类型：0-镶嵌；-1-挖取" />
			<property name="result" type="boolean" encoding="UTF-8" comment="镶嵌挖取结果" />
		</res>
	</prototype>
	<prototype req_name="HUNSHI_PROP_VIEW_REQ" res_name="HUNSHI_PROP_VIEW_RES" req_type="0x00FFF027" res_type="0x70FFF027"
		req_client_send="true" res_client_receive="true" comment="魂石属性总览">
		<req>
			<property name="playerId" type="long" encoding="UTF-8" comment="被查看的玩家id" />
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
		</req>
		<res>
			<property name="playerId" type="long" encoding="UTF-8" comment="被查看的玩家id" />
			<property name="propName" type="String[]" encoding="UTF-8" comment="属性名" />
			<property name="propValue" type="int[]" encoding="UTF-8" comment="属性值" />
		</res>
	</prototype>
	<prototype req_name="HUNSHI2_PUTON_OPEN_REQ" res_name="HUNSHI2_PUTON_OPEN_RES" req_type="0x00FFF028" res_type="0x70FFF028"
		req_client_send="true" res_client_receive="true" comment="打开套装魂石镶嵌界面">
		<req>
			<property name="playerId" type="long" encoding="UTF-8" comment="被查看的玩家id" />
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
		</req>
		<res>
			<property name="playerId" type="long" encoding="UTF-8" comment="被查看的玩家id" />
			<object-property name="hunshi2cell" type="Hunshi2Cell[]" comment="套装魂石材料">
				<property name="hunshiId" type="long" encoding="UTF-8" comment="已镶嵌套装石id，未镶嵌为-1" />
				<property name="openType" type="int" encoding="UTF-8" comment="格子开启的条件类型：0-默认开启，1-坐骑等级，2-vip等级" />
				<property name="open" type="boolean" encoding="UTF-8" comment="是否已开启" />
				<property name="des" type="String" encoding="UTF-8" comment="提示开启条件的描述" />
			</object-property>
			<property name="descirption" type="String" encoding="UTF-8" comment="描述" />
		</res>
	</prototype>
	<prototype req_name="HUNSHI2_PROP_VIEW_REQ" res_name="HUNSHI2_PROP_VIEW_RES" req_type="0x00FFF029" res_type="0x70FFF029"
		req_client_send="true" res_client_receive="true" comment="套装魂石属性总览">
		<req>
			<property name="playerId" type="long" encoding="UTF-8" comment="被查看的玩家id" />
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
		</req>
		<res>
			<property name="playerId" type="long" encoding="UTF-8" comment="被查看的玩家id" />
			<property name="kind" type="String[]" encoding="UTF-8" comment="套装类型" />
			<property name="propDes" type="String[]" encoding="UTF-8" comment="套装属性描述" />
			<property name="propName" type="String[]" encoding="UTF-8" comment="套装魂石属性名" />
			<property name="propValue" type="int[]" encoding="UTF-8" comment="套装魂石属性值" />
		</res>
	</prototype>
	<prototype req_name="HUNSHI2_CELL_BUY_REQ" res_name="HUNSHI2_CELL_BUY_RES" req_type="0x00FFF030" res_type="0x70FFF030"
		req_client_send="true" res_client_receive="true" comment="购买套装石格子">
		<req>
			<property name="horseId" type="long" encoding="UTF-8" comment="坐骑id" />
			<property name="index" type="int" encoding="UTF-8" comment="格子下标：0-15" />
		</req>
		<res>
			<property name="index" type="int" encoding="UTF-8" comment="格子下标：0-15" />
			<property name="result" type="boolean" encoding="UTF-8" comment="购买结果" />
		</res>
	</prototype>
	<prototype req_name="WOLF_SIGNUP_NUM_REQ" res_name="WOLF_SIGNUP_NUM_RES" req_type="0x00FFF031" res_type="0x70FFF031" req_client_send="true" res_client_receive="true" comment="获取报名人数">
		<req>
		</req>
		<res>
			<property name="signUpNums" type="int" encoding="UTF-8" comment="报名人数" />
			<property name="openActivity" type="boolean" encoding="UTF-8" comment="活动是否开启:false：未开启" />
			<property name="signUpState" type="boolean" encoding="UTF-8" comment="状态：false：取消报名，true：报名" />
		</res>
	</prototype>

	<prototype res_name="WOLF_SKILL_ID_RES"  res_type="0x70FFF032"  res_client_receive="true" comment="获取技能id">
		<res>
			<property name="playerId" type="long" encoding="UTF-8" comment="玩家id" />
			<property name="skillIds" type="int[]" encoding="UTF-8" comment="技能ids" />
			<property name="icons" type="String[]" encoding="UTF-8" comment="icon" />
			<property name="cdtime" type="int[]" encoding="UTF-8" comment="cd" />
			<property name="attackRange" type="int[]" encoding="UTF-8" comment="攻击距离" />
		</res>
	</prototype>
	
	<prototype req_name="WOLF_USE_SKILL_REQ" res_name="WOLF_USE_SKILL_RES" req_type="0x00FFF033" res_type="0x70FFF033" req_client_send="true" res_client_receive="true" comment="技能使用">
		<req>
			<property name="targetPlayerId" type="long" encoding="UTF-8" comment="目标玩家id" />
			<property name="skillId" type="int" encoding="UTF-8" comment="技能id" />
		</req>
		<res>
			<property name="result" type="int" encoding="UTF-8" comment="1:成功" />
			<property name="skillId" type="int" encoding="UTF-8" comment="技能id" />
		</res>
	</prototype>
	
	<prototype req_name="DICE_SIGN_UP_QUERY_REQ" res_name="DICE_SIGN_UP_QUERY_RES" req_type="0x00FFF034" res_type="0x70FFF034" req_client_send="true" res_client_receive="true" comment="请求报名界面信息">
		<req>
		</req>
		<res>
			<property name="joinTimeMess" type="String" encoding="UTF-8" comment="参与时间描述" />
			<property name="joinTypeMess" type="String" encoding="UTF-8" comment="参与方式" />
			<property name="joinHelpMess" type="String" encoding="UTF-8" comment="进入描述" />
			<property name="activityMess" type="String" encoding="UTF-8" comment="活动介绍" />
			<property name="activityReward" type="String" encoding="UTF-8" comment="活动奖励" />
			<property name="signUpNums" type="int" encoding="UTF-8" comment="当前报名人数" />
			<property name="hasSignUp" type="boolean" encoding="UTF-8" comment="是否已经报名" />
			<property name="ids" type="long[]" encoding="UTF-8"  comment="奖励id"></property>	
			<property name="nums" type="int[]" encoding="UTF-8"  comment="奖励数量"></property>
		</res>
	</prototype>
		
	<prototype req_name="DICE_SIGN_UP_SURE_REQ" res_name="DICE_SIGN_UP_SURE_RES" req_type="0x00FFF035" res_type="0x70FFF035" req_client_send="true" res_client_receive="true" comment="确认报名">
		<req>
			<property name="signType" type="int" encoding="UTF-8" comment="0:报名，1:取消报名" />
		</req>
		<res>
			<property name="result" type="boolean" encoding="UTF-8" comment="结果" />
		</res>
	</prototype>
	
	<prototype req_name="NOTICE_DISASTER_COUNTDOWN_REQ" req_type="0x00FFF036" req_client_receive="true" comment="空岛大冒险倒计时">
		<req>
			<property name="countdownType" type="byte" comment="倒计时类型" />
			<property name="leftTime" type="int" comment="剩余时间，单位秒" />
			<property name="description" type="String" encoding="UTF-8" comment="时间旁边显示的简单文字" />
		</req>
	</prototype>
	<!-- 坐骑魂石打开鉴定界面 -->
	<prototype req_name="HUNSHI_JIANDING_QINGQIU_REQ" res_name="HUNSHI_JIANDING_QINGQIU_RES" req_type="0x00FFF037" res_type="0x70FFF037"
		req_client_send="true" res_client_receive="true" comment="坐骑魂石打开鉴定界面">
		<res>
			<property name="descript" type="String" encoding="UTF-8" comment="鉴定的提示（价格）" />
			<property name="materials" type="String[]" encoding="UTF-8" comment="有效的鉴定符道具名" />
			<property name="des" type="String" encoding="UTF-8" comment="鉴定描述" />
		</res>
	</prototype>
	
	<prototype req_name="NEW_WAREHOUSE_GET_REQ" req_type="0x00FFF038" res_name="NEW_WAREHOUSE_GET_RES" res_type="0x70FFF038" req_client_send="true"
		res_client_receive="true" comment="获取一个仓库(新)">
		<req>
			<property name="warehorseType" type="int" comment="6代表2号仓库" />
		</req>
		<res>
			<property name="warehorseType" type="int" comment="6代表2号仓库" />
			<property name="open" type="boolean" comment="是否打开仓库，true开启仓库，false只更新仓库" />
			<property name="entityIds" type="long[]" comment="格子物品数组，值为-1的元素表示格子为空" />
			<property name="counts" type="int[]" comment="格子物品数量数组，值为0的元素表示格子为空" />
		</res>
	</prototype>
	
	<prototype req_name="NEW_WAREHOUSE_ARRANGE_REQ" req_type="0x00FFF039" res_name="NEW_WAREHOUSE_ARRANGE_RES" res_type="0x70FFF039" req_client_send="true"
		comment="自动整理一个仓库">
		<req>
			<property name="warehorseType" type="int" comment="6代表2号仓库" />
		</req>
	</prototype>
	
	<prototype req_name="NEW_ACVITITY_SHOW_INFO_REQ" req_type="0x00FFF040" res_name="NEW_ACVITITY_SHOW_INFO_RES" res_type="0x70FFF040" req_client_send="true"
		res_client_receive="true" comment="新活动界面">
		<req>
		</req>
		<res>
			<object-property name="datas" type="ActivityModule[]" comment="活动数据">
				<property name="activityShowName" type="String" encoding="UTF-8" comment="活动名" />
				<property name="des4client" type="String" encoding="UTF-8" comment="描述" />
				<property name="articleIds" type="long[]" encoding="UTF-8" comment="产出物品临时id" />
				<property name="npcName" type="String" encoding="UTF-8" comment="寻路npc名" />
				<property name="npcPoint" type="int[]" encoding="UTF-8" comment="寻路npc坐标" />
				<property name="mapName" type="String" encoding="UTF-8" comment="npc所在地图名" />
				<property name="inActivityTime" type="boolean" encoding="UTF-8" comment="是否在活动时间" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="NEW_WAREHOUSE_INPUT_PASSWORD_REQ" res_name="NEW_WAREHOUSE_INPUT_PASSWORD_RES" req_type="0x00FFF041" res_type="0x70FFF041"
		req_client_send="true" res_client_receive="true" comment="req为客户端向服务器发送输入密码请求，res为服务器告诉客户端打开输入密码窗口">
		<req>
			<property name="warehorseType" type="int" comment="6代表2号仓库" />
			<property name="password" type="String" encoding="UTF-8" comment="仓库密码" />
		</req>
		<res>
			<property name="warehorseType" type="int" comment="6代表2号仓库" />
			<property name="description" type="String" encoding="UTF-8" comment="返回描述，描述可以为空，为空时不显示" />
		</res>
	</prototype>
	<!-- 坐骑魂石神隐洗炼 -->
	<prototype req_name="HUNSHI_JIANDING2_QINGQIU_REQ" res_name="HUNSHI_JIANDING2_QINGQIU_RES" req_type="0x00FFF042" res_type="0x70FFF042"
		req_client_send="true" res_client_receive="true" comment="坐骑魂石打开魂石神隐洗炼界面">
		<res>
			<property name="descript" type="String" encoding="UTF-8" comment="魂石神隐洗炼提示" />
		</res>
	</prototype>
	<prototype req_name="HUNSHI_JIANDING2_REQ" res_name="HUNSHI_JIANDING2_RES" req_type="0x00FFF043" res_type="0x70FFF043"
		req_client_send="true" res_client_receive="true" comment="客户端查询魂石神隐洗炼需要什么材料">
		<req>
			<property name="hunshiId" type="long" comment="魂石ID" />
		</req>
		<res>
			<property name="descript" type="String" encoding="UTF-8" comment="描述" />
			<property name="des" type="String" encoding="UTF-8" comment="魂石属性展示" />
			<property name="material" type="String" encoding="UTF-8" comment="有效的鉴定符道具名" />
			<property name="color" type="int" encoding="UTF-8" comment="有效的鉴定符颜色" />
		</res>
	</prototype>

	<prototype req_name="HUNSHI_JIANDING2_SURE_REQ" res_name="HUNSHI_JIANDING2_SURE_RES" req_type="0x00FFF044" res_type="0x70FFF044"
	 	req_client_send="true" res_client_receive="true" comment="客户端魂石神隐洗炼">
		<req>
			<property name="hunshiId" type="long" comment="魂石ID" />
			<property name="materialId" type="long" comment="鉴定材料ID" />
		</req>
		<res>
			<property name="des" type="String" encoding="UTF-8" comment="魂石属性展示" />
			<property name="result" type="boolean" encoding="UTF-8" comment="鉴定结果" />
		</res>
	</prototype>
	
	<prototype req_name="NEW_QUERY_ARTICLE_INFO_REQ" res_name="NEW_QUERY_ARTICLE_INFO_RES" req_type="0x00FFF045" req_client_send="true"
		res_client_receive="true" res_type="0x70FFF045" comment="请求物品详细描述">
		<req>
			<property name="articleId" type="long" comment="物品实体的唯一标识" />
		</req>
		<res>
			<property name="articleId" type="long" comment="物品实体的唯一标识" />
			<property name="iconId" type="String" encoding="UTF-8" comment="物品icon变化"></property>
			<property name="description" type="String" encoding="UTF-8" comment="物品实体的详细描述（UUB格式）"></property>
		</res>
	</prototype>
	<prototype req_name="HUNSHI2_INFOSHOW_REQ" res_name="HUNSHI2_INFOSHOW_RES" req_type="0x00FFF046" res_type="0x70FFF046"
	 	req_client_send="true" res_client_receive="true" comment="客户端请求已镶嵌的套装魂石泡泡">
		<req>
			<property name="hunshiId" type="long" comment="魂石ID" />
			<property name="horseId" type="long" comment="魂石ID" />
			<property name="playerId" type="long" comment="鉴定材料ID" />
		</req>
		<res>
			<property name="hunshiId" type="long" comment="魂石ID" />
			<property name="des" type="String" encoding="UTF-8" comment="泡泡内容" />
		</res>
	</prototype>
	<!-- 跨服 -->
	

	<prototype req_name="OPEN_MAGICWEAPON_EXTRAATTR_REQ" res_name="OPEN_MAGICWEAPON_EXTRAATTR_RES" req_type="0x00FFF059" res_type="0x70FFF059"
	 	req_client_send="true" res_client_receive="true" comment="打开法宝附加属性刷新界面">
		<req>
		</req>
		<res>
			<property name="desc" type="String" encoding="UTF-8" comment="描述" />
		</res>
	</prototype>
	
	<prototype req_name="MAGICWEAPON_EXTRAATTR_INFO_REQ" res_name="MAGICWEAPON_EXTRAATTR_INFO_RES" req_type="0x00FFF060" res_type="0x70FFF060"
	 	req_client_send="true" res_client_receive="true" comment="请求法宝附加属性描述">
		<req>
			<property name="articleId" type="long" encoding="UTF-8" comment="法宝id" />
		</req>
		<res>
			<property name="resetCost" type="long" encoding="UTF-8" comment="刷新消耗银两" />
			<property name="desc" type="String" encoding="UTF-8" comment="附加属性描述" />
		</res>
	</prototype>
	<prototype req_name="RESET_MAGICWEAPON_EXTRAATTR_REQ" res_name="RESET_MAGICWEAPON_EXTRAATTR_RES" req_type="0x00FFF061" res_type="0x70FFF061"
	 	req_client_send="true" res_client_receive="true" comment="刷新法宝附加属性">
		<req>
			<property name="articleId" type="long" encoding="UTF-8" comment="法宝id" />
		</req>
		<res>
			<property name="resetCost" type="long" encoding="UTF-8" comment="刷新消耗银两" />
			<property name="desc" type="String" encoding="UTF-8" comment="附加属性描述" />
		</res>
	</prototype>
	<!-- 仙灵大会开始1 -->
	<prototype req_name="XIANLING_OPEN_MAIN_REQ" res_name="XIANLING_OPEN_MAIN_RES" req_type="0x00FFF047" res_type="0x70FFF067"  req_client_send="true" res_client_receive="true" comment="打开仙灵主面板">
		<req>
		</req>
		<res>
			<property name="score" type="int" encoding="UTF-8" comment="玩家当前活动获得的总积分" />
			<property name="icon" type="String" encoding="UTF-8" comment="激活buff图标" />
			<property name="buff_meetMongsterLeftTime" type="long" encoding="UTF-8" comment="激活buff倒计时" />
			<property name="tempId" type="long" encoding="UTF-8" comment="积分卡临时物品id" />
			<property name="buff_xianlingScoreLeftTime" type="long" encoding="UTF-8" comment="积分卡buff倒计时" />
			<property name="buff_xianlingScoreLevel" type="long" encoding="UTF-8" comment="积分卡等级，0:普通，1:高级" />
			<property name="timedTaskLeftTime" type="long" encoding="UTF-8" comment="限时任务倒计时" />
			<property name="timedTaskMonster" type="String" encoding="UTF-8" comment="限时任务怪图标" />
			<property name="maxLevel" type="int" encoding="UTF-8" comment="玩家当前开启过的最大关卡" />
			<property name="currEnergy" type="int" encoding="UTF-8" comment="当前真气" />
			<property name="maxEnergy" type="int" encoding="UTF-8" comment="最大真气" />
			<property name="mapName" type="String[]" encoding="UTF-8" comment="关卡地图名" />
			<property name="isOpen" type="boolean" encoding="UTF-8" comment="活动是否开启" />
		</res>
	</prototype>
	<prototype req_name="HELP_REQ" res_name="HELP_RES" req_type="0x00FFF069" res_type="0x70FFF069"
	 	req_client_send="true" res_client_receive="true" comment="帮助">
		<req>
			<property name="helpType" type="int" encoding="UTF-8" comment="类型:0-仙灵主面板帮助，1-仙灵排行榜帮助,2-助阵界面，3-助阵升级界面" />
		</req>
		<res>
			<property name="des" type="String" encoding="UTF-8" comment="帮助内容" />
		</res>
	</prototype>
	<prototype req_name="XL_CHALLENGE_REQ" res_name="XL_CHALLENGE_RES" req_type="0x00FFF070" res_type="0x70FFF070"
	 	req_client_send="true" res_client_receive="true" comment="点关卡图标">
		<req>
			<property name="level" type="int" encoding="UTF-8" comment="关卡等级" />
		</req>
		<res>
			<property name="level" type="int" encoding="UTF-8" comment="关卡等级" />
			<property name="name" type="String" encoding="UTF-8" comment="关卡名" />
			<property name="monsterName" type="String" encoding="UTF-8" comment="怪物名" />
			<property name="avata" type="String[]" encoding="UTF-8" comment="怪物avata" />
			<property name="scale" type="int" encoding="UTF-8" comment="怪物形象比例" />
			<property name="x" type="int" encoding="UTF-8" comment="怪物坐标x" />
			<property name="y" type="int" encoding="UTF-8" comment="怪物坐标y" />
			<property name="monsterColor" type="int" encoding="UTF-8" comment="怪物品质" />
			<property name="isBoss" type="boolean" encoding="UTF-8" comment="是否boss" />
			<property name="monsterId" type="long" encoding="UTF-8" comment="怪物id(为确认挑战而传的)" />
			<property name="categoryId" type="int" encoding="UTF-8" comment="categoryId(为确认挑战而传的)" />
			<property name="energy" type="int" encoding="UTF-8" comment="当前真气值" />
			<property name="maxLevel" type="int" encoding="UTF-8" comment="玩家已挑战过的最大关卡" />
		</res>
	</prototype>
	<prototype req_name="XL_CHALLENGE_SURE_REQ" req_type="0x00FFF071" req_client_send="true" comment="确认挑战">
		<req>
			<property name="level" type="int" encoding="UTF-8" comment="关卡等级" />
			<property name="monsterId" type="long" encoding="UTF-8" comment="怪物id(为确认挑战而传的)" />
			<property name="categoryId" type="int" encoding="UTF-8" comment="categoryId(为确认挑战而传的)" />
		</req>
	</prototype>
	<prototype req_name="XL_OPEN_MEETMONSTER_BUFF_REQ" res_name="XL_OPEN_MEETMONSTER_BUFF_RES" req_type="0x00FFF072" res_type="0x70FFF072"
	 	req_client_send="true" res_client_receive="true" comment="打开激活buff界面">
		<req>
		</req>
		<res>
			<property name="icons" type="String[]" encoding="UTF-8" comment="buff图标" />
			<property name="buffNames" type="String[]" encoding="UTF-8" comment="buff名" />
			<property name="icon" type="String" encoding="UTF-8" comment="当前buff图标" />
			<property name="buffName" type="String" encoding="UTF-8" comment="当前buff名" />
			<property name="cost" type="int" encoding="UTF-8" comment="消耗银子" />
		</res>
	</prototype>
	<prototype req_name="XL_ACT_MEETMONSTER_BUFF_REQ" res_name="XL_ACT_MEETMONSTER_BUFF_RES" req_type="0x00FFF073" res_type="0x70FFF073"
	 	req_client_send="true" res_client_receive="true" comment="确认激活buff">
		<req>
		</req>
		<res>
			<property name="icon" type="String" encoding="UTF-8" comment="当前buff图标" />
			<property name="buffName" type="String" encoding="UTF-8" comment="当前buff名" />
			<property name="leftTime" type="long" encoding="UTF-8" comment="当前buff剩余时间" />
		</res>
	</prototype>
	<prototype req_name="XL_OPEN_SCORE_BUFF_REQ" res_name="XL_OPEN_SCORE_BUFF_RES" req_type="0x00FFF074" res_type="0x70FFF074"
	 	req_client_send="true" res_client_receive="true" comment="打开积分卡界面">
		<req>
		</req>
		<res>
			<property name="tempId" type="long" encoding="UTF-8" comment="普通积分卡" />
			<property name="num" type="int" encoding="UTF-8" comment="普通积分卡数量" />
			<property name="seniorempId" type="long" encoding="UTF-8" comment="高级积分卡" />
			<property name="seniorum" type="int" encoding="UTF-8" comment="高级积分卡数量" />
		</res>
	</prototype>
	<prototype req_name="XL_USE_SCORE_CARD_REQ"  res_name="XL_USE_SCORE_CARD_RES"  req_type="0x00FFF075"  res_type="0x70FFF075"
	 req_client_send="true" res_client_receive="true" comment="确认使用积分卡">
		<req>
			<property name="cardType" type="byte" encoding="UTF-8" comment="积分卡类型:0-普通;1-高级" />
		</req>
		<res>
			<property name="cardId" type="long" encoding="UTF-8" comment="积分卡id" />
			<property name="leftTime" type="long" encoding="UTF-8" comment="剩余时间" />
		</res>
	</prototype>
	<prototype req_name="XL_TIMEDTASK_REQ" res_name="XL_TIMEDTASK_RES" req_type="0x00FFF076" res_type="0x70FFF076"
	 	req_client_send="true" res_client_receive="true" comment="打开限时任务界面">
		<req>
			<property name="optrateType" type="byte" encoding="UTF-8" comment="0-打开限时任务界面;1-刷新任务" />
		</req>
		<res>
			<property name="taskId" type="int" encoding="UTF-8" comment="限时任务id" />
			<property name="timedTaskMonster" type="String" encoding="UTF-8" comment="限时任务怪图标" />
			<property name="monsterName" type="String" encoding="UTF-8" comment="怪物名" />
			<property name="avata" type="String[]" encoding="UTF-8" comment="怪物avata" />
			<property name="monsterColor" type="int" encoding="UTF-8" comment="怪物品质" />
			<property name="scale" type="int" encoding="UTF-8" comment="怪物形象比例" />
			<property name="x" type="int" encoding="UTF-8" comment="怪物坐标x" />
			<property name="y" type="int" encoding="UTF-8" comment="怪物坐标y" />
			<property name="isBoss" type="boolean" encoding="UTF-8" comment="是否boss" />
			<property name="tip" type="String" encoding="UTF-8" comment="提示" />
			<property name="des" type="String" encoding="UTF-8" comment="描述" />
			<property name="score" type="int" encoding="UTF-8" comment="奖励积分" />
			<property name="tempId" type="long[]" encoding="UTF-8" comment="奖励道具" />
			<property name="num" type="int[]" encoding="UTF-8" comment="奖励道具数量" />
			<property name="bind" type="boolean[]" encoding="UTF-8" comment="奖励道具是否绑定" />
			<property name="leftTime" type="long" encoding="UTF-8" comment="倒计时" />
			<property name="state" type="byte" encoding="UTF-8" comment="任务状态:0-未接取；1-已接取未完成；2-已完成；3-超时失效" />
			<property name="takePrize" type="boolean" encoding="UTF-8" comment="是否已领奖" />
			<property name="cost" type="long" encoding="UTF-8" comment="消耗银子" />
			
		</res>
	</prototype>
	<prototype req_name="XL_TIMEDTASK_PRIZE_REQ" res_name="XL_TIMEDTASK_PRIZE_RES"  req_type="0x00FFF077" res_type="0x70FFF077" 
	req_client_send="true"  res_client_receive="true" comment="领取限时任务奖励">
		<req>
		</req>
		<res>
			<property name="taskId" type="int" encoding="UTF-8" comment="限时任务id" />
			<property name="state" type="byte" encoding="UTF-8" comment="任务状态:0-未接取；1-已接取未完成；2-已完成；3-超时失效" />
			<property name="takePrize" type="boolean" encoding="UTF-8" comment="是否已领奖" />
			<property name="score" type="int" encoding="UTF-8" comment="当前玩家积分" />
		</res>
	</prototype>
	<prototype req_name="XL_GET_SCORE_PRIZE_REQ" res_name="XL_GET_SCORE_PRIZE_RES" req_type="0x00FFF079" res_type="0x70FFF079"
	 	req_client_send="true" res_client_receive="true" comment="打开积分奖励界面">
		<req>
			<property name="score" type="int" encoding="UTF-8" comment="积分要求" />
		</req>
		<res>
			<property name="score" type="int" encoding="UTF-8" comment="积分要求" />
			<property name="result" type="boolean" encoding="UTF-8" comment="领取结果" />
		</res>
	</prototype>
	<!-- 仙灵大会结束1 -->
	<prototype req_name="REFRESH_CROSS_SHOP_REQ"  req_type="0x00FFF0782" req_client_send="true" comment="刷新跨服商店">
		<req>
		</req>
	</prototype>
	<!-- 仙灵大会开始2 -->
	<prototype req_name="XL_BUTENERGY_REQ" res_name="XL_BUTENERGY_RES" req_type="0x00FFF083" res_type="0x70FFF083"
	 	req_client_send="true" res_client_receive="true" comment="打开购买真气界面">
		<req>
		</req>
		<res>
			<property name="des" type="String" encoding="UTF-8" comment="描述" />
			<property name="needSilver" type="long" encoding="UTF-8" comment="消耗银子" />
			<property name="energy" type="int" encoding="UTF-8" comment="购买真气点数" />
		</res>
	</prototype>
	<prototype req_name="XL_BUTENERGY_SURE_REQ"  res_name="XL_BUTENERGY_SURE_RES"  req_type="0x00FFF0784"  res_type="0x70FFF084"
	req_client_send="true" res_client_receive="true" comment="购买真气确认">
		<req>
		</req>
		<res>
			<property name="energy" type="int" encoding="UTF-8" comment="购买后真气点数" />
			<property name="nextNeedSilver" type="int" encoding="UTF-8" comment="下次购买需要的银两" />
		</res>
	</prototype>
	<!-- 仙灵大会结束2 -->
	<prototype req_name="QUERY_NEW_EQUIPMENT_STRONG3_REQ" req_type="0x00FFF084" res_name="QUERY_NEW_EQUIPMENT_STRONG3_RES" res_type="0x70FFF087"
		req_client_send="true" res_client_receive="true" comment="客户端请求服务器，装备强化的各种信息，包括需要什么材料，需要几个，用什么来提高成功率，需要多少手续费等">
		<req>
			<property name="equipmentId" type="long" comment="要强化的装备，玩家的背包中必须有此装备" />
		</req>
		<res>
			<property name="baoDiName" type="String" comment="保底符名字" />
			<property name="equipmentId" type="long" comment="要强化的装备，玩家的背包中必须有此装备" />
			<property name="cost" type="long" comment="价格" />
			<property name="strongedUUB" type="String" encoding="UTF-8" comment="强化后的装备UUB" />
			<property name="strongMaterialName" type="String[]" encoding="UTF-8" comment="可用的强化符"></property>
			<property name="strongMaterialLuck" type="int[]" comment="各颜色强化符的几率，不同名称强化符颜色相同几率一样"></property>
			<property name="otherStrongMaterialName" type="String" encoding="UTF-8" comment="其他额外可用的强化符"></property>
			<property name="otherStrongMaterialNum" type="int" comment="其他额外可用的强化符数量"></property>
			<property name="otherStrongMaterialluck" type="int" comment="成功"></property>
			<property name="strongMaterialName2" type="String[]" encoding="UTF-8" comment="可用的强化符"></property>
			<property name="strongMaterialLuck2" type="int[]" comment="对应概率"></property>
		</res>
	</prototype>
	<!-- 仙灵大会开始3 -->
	<prototype req_name="XL_USE_SKILL_REQ" res_name="XL_USE_SKILL_RES" req_type="0x00FFF085" res_type="0x70FFF085"
	 	req_client_send="true" res_client_receive="true" comment="使用技能">
		<req>
			<property name="skillId" type="int" encoding="UTF-8" comment="使用技能id" />
		</req>
		<res>
			<property name="skillId" type="int" encoding="UTF-8" comment="使用技能id" />
			<property name="cdTime" type="int" encoding="UTF-8" comment="cd时间" />
			<property name="num" type="int" encoding="UTF-8" comment="剩余技能数量" />
		</res>
	</prototype>
	<prototype req_name="XL_QUERY_SKILL_REQ" res_name="XL_QUERY_SKILL_RES" req_type="0x00FFF086" res_type="0x70FFF086"
	 	req_client_send="true" res_client_receive="true" comment="仙灵技能">
		<req>
		</req>
		<res>
			<property name="publicCDTime" type="int" encoding="UTF-8" comment="公cd" />
			<property name="skillIds" type="int[]" encoding="UTF-8" comment="技能id" />
			<property name="icons" type="String[]" encoding="UTF-8" comment="技能图标" />
			<property name="cdTimes" type="long[]" encoding="UTF-8" comment="cd时间" />
			<property name="nums" type="int[]" encoding="UTF-8" comment="道具个数" />
			<property name="countdownTime" type="long" encoding="UTF-8" comment="关卡倒计时" />
		</res>
	</prototype>
	
	<!-- 仙灵大会结束3 -->
	<prototype req_name="QUERY_PET_ORNAID_REQ" res_name="QUERY_PET_ORNAID_RES" req_type="0x00FFF088" res_type="0x70FFF088"
	 	req_client_send="true" res_client_receive="true" comment="获取宠物饰品">
		<req>
			<property name="petId" type="long" encoding="UTF-8" comment="宠物id" />
		</req>
		<res>
			<property name="petId" type="long" encoding="UTF-8" comment="宠物id" />
			<property name="ornaId" type="long" encoding="UTF-8" comment="灵饰id" />
		</res>
	</prototype>
	<prototype req_name="PUTON_PET_ORNA_REQ" res_name="PUTON_PET_ORNA_RES" req_type="0x00FFF089" res_type="0x70FFF089"
	 	req_client_send="true" res_client_receive="true" comment="宠物穿饰品">
		<req>
			<property name="petId" type="long" encoding="UTF-8" comment="宠物id" />
			<property name="ornaId" type="long" encoding="UTF-8" comment="饰品id   -1代表拖饰品" />
		</req>
		<res>
			<property name="petId" type="long" encoding="UTF-8" comment="宠物id" />
			<property name="ornaId" type="long" encoding="UTF-8" comment="灵饰id" />
		</res>
	</prototype>
	<!-- 仙灵大会开始4 -->
	<prototype req_name="XL_EXIT_CHALLENGE_REQ" req_type="0x00FFF090" req_client_send="true" comment="退出挑战">
		<req>
		</req>
	</prototype>
	<prototype res_name="XL_SHOW_SKILL_HELP_RES" res_type="0x70FFF091" res_client_receive="true" comment="显示技能蒙板">
		<res>
		</res>
	</prototype>
	<prototype res_name="XL_CATCH_SUCC_RES" res_type="0x70FFF092" res_client_receive="true" comment="捕捉成功">
		<res>
			<property name="score" type="int" encoding="UTF-8" comment="奖励积分" />
			<property name="result" type="boolean" encoding="UTF-8" comment="捕捉结果" />
		</res>
	</prototype>
	<prototype req_name="XL_REFRESH_ENERGY_REQ" res_name="XL_REFRESH_ENERGY_RES" req_type="0x00FFF093" res_type="0x70FFF093"
	req_client_send="true" res_client_receive="true" comment="刷新真气">
		<req>
		</req>
		<res>
			<property name="energy" type="int" encoding="UTF-8" comment="当前真气" />
			<property name="nextRefreshTime" type="long" encoding="UTF-8" comment="下次自动恢复真气时间" />
		</res>
	</prototype>
	<prototype req_name="XL_NOTICE_REQ" res_name="XL_NOTICE_RES" req_type="0x00FFF094" res_type="0x70FFF094"
	req_client_send="true" res_client_receive="true" comment="红点提示玩家">
		<req>
			<property name="noticeType" type="int" encoding="UTF-8" comment="提示类型:1-限时任务有可免费刷新次数" />
		</req>
		<res>
			<property name="noticeType" type="int" encoding="UTF-8" comment="提示类型:1-限时任务有可免费刷新次数" />
		</res>
	</prototype>
	<!-- 仙灵大会结束4 -->
	
	<prototype req_name="PET3_QUERY_REQ" req_type="0x00FFF095" req_client_send="true" 
		res_name="PET3_QUERY_RES" res_type="0x70FFF095"	res_client_receive="true" comment="请求宠物信息">
		<req>
			<property name="petId" type="long" comment="宠物的id"></property>
		</req>
		<res>
			<object-property name="pet" type="Pet" comment="返回宠物实体">
				<property name="id" type="long" comment="宠物的id"></property>
				<property name="name" type="String" encoding="UTF-8" comment="宠物的名字"></property>
				<property name="ownerId" type="long" comment="宠物的主人"></property>
				<property name="category" type="String" encoding="UTF-8" comment="宠物的种类(灵狐，狂狼等)"></property>
				<property name="petSort" type="String" encoding="UTF-8" comment="宠物的分类(精怪，兽灵等)"></property>
				<property name="career" type="byte" comment="宠物的职业倾向"></property>
				<property name="character" type="byte" comment="宠物的性格"></property>
				<property name="sex" type="byte" comment="宠物的性别"></property>
				<property name="breedTimes" type="byte" comment="宠物可生育的次数"></property>
				<property name="breededTimes" type="byte" comment="宠物已经生育的次数"></property>

				<property name="identity" type="boolean" comment="是否鉴定过"></property>
				<property name="maxHappyness" type="int" comment="最大宠物的快乐值"></property>
				<property name="maxLifeTime" type="int" comment="最大宠物的寿命"></property>
				<property name="lifeTime" type="int" comment="宠物的寿命"></property>
				<property name="happyness" type="int" comment="宠物的快乐值"></property>
				<property name="level" type="short" comment="宠物的等级"></property>
				<property name="exp" type="long" comment="宠物当前的经验值"></property>
				<property name="nextLevelExp" type="long" comment="宠物升到下级的经验值"></property>
				<property name="quality" type="byte" comment="宠物的品质，非为5档，0~4：普兽（白）、灵兽（绿）、仙兽（蓝）、神兽（紫）、圣兽（橙），需要鉴定"></property>
				<property name="starClass" type="byte" comment="宠物的星级"></property>
				<property name="generation" type="byte" comment="宠物的类型、一代0，二代1"></property>
				<property name="variation" type="byte" comment="宠物是否变异，0为不变异，否则1-5为变异等级"></property>
				<property name="showStrengthQuality" type="int" comment="宠物的力量资质"></property>
				<property name="showDexterityQuality" type="int" comment="宠物的身法资质"></property>
				<property name="showSpellpowerQuality" type="int" comment="宠物的灵力资质"></property>
				<property name="showConstitutionQuality" type="int" comment="宠物的耐力资质"></property>
				<property name="showDingliQuality" type="int" comment="宠物的定力资质"></property>
				<property name="showMinStrengthQuality" type="int" comment="宠物的力量资质(最小值)"></property>
				<property name="showMinDexterityQuality" type="int" comment="宠物的身法资质(最小值)"></property>
				<property name="showMinSpellpowerQuality" type="int" comment="宠物的灵力资质(最小值)"></property>
				<property name="showMinConstitutionQuality" type="int" comment="宠物的耐力资质(最小值)"></property>
				<property name="showMinDingliQuality" type="int" comment="宠物的定力资质(最小值)"></property>
				<property name="showMaxStrengthQuality" type="int" comment="宠物的力量资质(满值)"></property>
				<property name="showMaxDexterityQuality" type="int" comment="宠物的身法资质(满值)"></property>
				<property name="showMaxSpellpowerQuality" type="int" comment="宠物的灵力资质(满值)"></property>
				<property name="showMaxConstitutionQuality" type="int" comment="宠物的耐力资质(满值)"></property>
				<property name="showMaxDingliQuality" type="int" comment="宠物的定力资质(满值)"></property>
				<property name="trainLevel" type="int" comment="宠物的携带等级"></property>
				<property name="rarity" type="byte" comment="宠物的稀有度，0-随处可见,1-百里挑一,2-千载难逢"></property>
				<property name="growthClass" type="byte" comment="宠物的成长品质"></property>
				<property name="growth" type="int" comment="宠物的成长值"></property>
				<property name="skillIds" type="int[]" comment="宠物拥有的技能ids"></property>
				<property name="activeSkillLevels" type="int[]" comment="宠物拥有的技能等级"></property>
				<property name="petPropsId" type="long" comment="宠物的幻化物品实体id"></property>
				<property name="strength" type="int" comment="宠物的力量"></property>
				<property name="dexterity" type="int" comment="宠物的身法"></property>
				<property name="spellpower" type="int" comment="宠物的灵力"></property>
				<property name="constitution" type="int" comment="宠物的耐力"></property>
				<property name="dingli" type="int" comment="宠物的定力"></property>
				<property name="showPhyAttack" type="int" comment="宠物的外功强度"></property>
				<property name="phyDefence" type="int" comment="宠物的外功防御"></property>
				<property name="showMagicAttack" type="int" comment="宠物的内功强度"></property>
				<property name="magicDefence" type="int" comment="宠物的内功防御"></property>
				<property name="maxHP" type="int" comment="宠物的最大血量"></property>
				<property name="hp" type="int" comment="宠物当前血量"></property>
				<property name="criticalHit" type="int" comment="宠物的暴击"></property>
				<property name="hit" type="int" comment="宠物的命中"></property>
				<property name="dodge" type="int" comment="宠物的闪避"></property>
				<property name="hitRate" type="int" comment="命中率"></property>
				<property name="dodgeRate" type="int" comment="闪避率"></property>
				<property name="criticalHitRate" type="int" comment="暴击率"></property>
				<property name="physicalDecrease" type="int" comment="外功防御率"></property>
				<property name="spellDecrease" type="int" comment="内功防御率"></property>
				<property name="fireDefence" type="int" comment="宠物的火防"></property>
				<property name="windDefence" type="int" comment="宠物的风防"></property>
				<property name="blizzardDefence" type="int" comment="宠物的冰防"></property>
				<property name="thunderDefence" type="int" comment="宠物的雷防"></property>
				<property name="unAllocatedPoints" type="int" comment="还没分配的属性点"></property>
				<property name="activationType" type="byte" comment="宠物的模式, 0-被动，1-主动，2-只跟随"></property>
				<property name="avataRace" type="String" encoding="UTF-8" comment="客户端用来定位形象">
				</property>
				<property name="avataSex" type="String" encoding="UTF-8" comment="客户端用来定位形象" />
				<property name="avata" type="String[]" encoding="UTF-8" comment="玩家身上的部件关键字：比如头部动画名字"></property>
				<property name="avataType" type="byte[]" comment="玩家身上的部件关键字"></property>
				<property name="commonSkillId" type="int" comment="普通攻击id"></property>
				<property name="qualityScore" type="int" comment="宠物得分"></property>
			</object-property>
			<object-property name="skillInfos" type="SkillInfo[]" comment="返回宠物技能">
				<property name="id" type="int"></property>
				<property name="skillType" type="byte"></property>
				<property name="maxLevel" type="int"></property>
				<property name="indexOfCareerThread" type="int"></property>
				<property name="needCareerThreadPoints" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="columnIndex" type="byte" comment="" />
			</object-property>

			<object-property name="petSkillReleaseProbability" type="PetSkillReleaseProbability[]" comment="返回宠物技能">
				<property name="skillId" type="int"></property>
				<property name="character" type="int"></property>
				<property name="match" type="int" comment="扩大1000"></property>
				<property name="noMatch" type="int"></property>
			</object-property>

			<property name="description" type="String[]" encoding="UTF-8" comment="" />
			<!-- 新版宠物增加的 -->
			<object-property name="bornSkills" type="SkillInfo[]" comment="天生技能两个">
				<property name="id" type="int"></property>
				<property name="skillType" type="byte"></property>
				<property name="maxLevel" type="int"></property>
				<property name="indexOfCareerThread" type="int"></property>
				<property name="needCareerThreadPoints" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="columnIndex" type="byte" comment="" />
			</object-property>
			<object-property name="talentSkills" type="SkillInfo[]" comment="天赋若干个">
				<property name="id" type="int"></property>
				<property name="skillType" type="byte"></property>
				<property name="maxLevel" type="int"></property>
				<property name="indexOfCareerThread" type="int"></property>
				<property name="needCareerThreadPoints" type="int"></property>
				<property name="name" type="String" encoding="UTF-8" comment="" />
				<property name="iconId" type="String" encoding="UTF-8" comment="" />
				<property name="columnIndex" type="byte" comment="" />
			</object-property>
			<property name="grade" type="int"  comment="进阶等级" ></property>
			<property name="wuXing" type="int"  comment="悟性" ></property>
			<property name="addBooks" type="int"  comment="已经用过多少技能书" ></property>
			<property name="rankIndex" type="int"  comment="排在多少名，从0开始，-1表示不在榜单。" ></property>
			<property name="hunExp" type="int"  comment="当前魂值" ></property>
			<property name="toNextHunExp" type="int"  comment="升级魂值" ></property>
			<property name="jinJieAtt" type="int[]"  comment="进阶获得的属性加成。" ></property>
		</res>
	</prototype>
	<prototype req_name="QUERY_PLAYER_CREATE_TIME_REQ" res_name="QUERY_PLAYER_CREATE_TIME_RES" req_type="0x00FFF096" res_type="0x70FFF096"
	 	req_client_send="true" res_client_receive="true" comment="角色创建时间">
		<req>
		</req>
		<res>
			<property name="playerCreateTime" type="long" encoding="UTF-8" comment="时间" />
		</res>
	</prototype>
	
	<prototype req_name="QUERY_PALYER_PROP_INFO_REQ" req_type="0x00FFF099" res_name="QUERY_PALYER_PROP_INFO_RES" res_type="0x70FFF099" req_client_send="true" res_client_receive="true" comment="查询玩家属性">
		<req>
			<property name="battleType" type="int" encoding="UTF-8" comment="战队规模，0,1,2分别2v2,3v3,5v5,默认:1" />
			<property name="saijiName" type="String" encoding="UTF-8" comment="第几赛季,默认:第一赛季" />
			<property name="playerId" type="long" encoding="UTF-8" comment="id" />
		</req>
		<res>
			<property name="playerId" type="long" encoding="UTF-8" comment="id" />
			<property name="properNames" type="String[]" encoding="UTF-8" comment="属性名称" />
			<property name="properValues" type="long[]" encoding="UTF-8" comment="属性值" />
		</res>
	</prototype>
	
	
	<prototype req_name="QUERY_HORSE_EQUIPMENT_INFO_REQ" req_type="0x00FFF100" res_name="QUERY_HORSE_EQUIPMENT_INFO__RES" res_type="0x70FFF100" req_client_send="true" res_client_receive="true" comment="查询坐骑装备开孔情况">
		<req>
			<property name="horseEquId" type="long" encoding="UTF-8" comment="坐骑装备id" />
		</req>
		<res>
			<property name="horseEquId" type="long" encoding="UTF-8" comment="坐骑装备id" />
			<property name="inlayColors" type="int[]" encoding="UTF-8" comment="孔颜色数组  -1代表没开孔" />
			<property name="inlayIds" type="long[]" encoding="UTF-8" comment="孔中镶嵌的神匣id数组 " />
			<property name="needArticles" type="String[]" encoding="UTF-8" comment="开孔需要道具名" />
			<property name="needNums" type="int[]" encoding="UTF-8" comment="开孔需要道具数量" />
			<property name="haveNums" type="int[]" encoding="UTF-8" comment="背包内已拥有的道具数量" />
			<property name="temoArticleId" type="long[]" encoding="UTF-8" comment="道具id" />
		</res>
	</prototype>
	
	<prototype req_name="ACTIVITY_HORSEEQU_INLAY_REQ" req_type="0x00FFF101" res_name="ACTIVITY_HORSEEQU_INLAY_RES" res_type="0x70FFF101" req_client_send="true" res_client_receive="true" comment="激活或者重置坐骑装备孔">
		<req>
			<property name="horseEquId" type="long" encoding="UTF-8" comment="坐骑装备id" />
			<property name="opt" type="int" encoding="UTF-8" comment="操作类型  1激活  2重置" />
			<property name="inlayIndex" type="int" encoding="UTF-8" comment="孔索引" />
			<property name="costIds" type="long[]" encoding="UTF-8" comment="选择消耗的物品id数组" />
			<property name="costNums" type="int[]" encoding="UTF-8" comment="选择消耗的物品数量数组" />
		</req>
		<res>
			<property name="horseEquId" type="long" encoding="UTF-8" comment="坐骑装备id" />
			<property name="inlayIndex" type="int" encoding="UTF-8" comment="孔索引" />
			<property name="inlayColor" type="int" encoding="UTF-8" comment="孔颜色" />
			<property name="needArticles" type="String[]" encoding="UTF-8" comment="开孔需要道具名" />
			<property name="haveNums" type="int[]" encoding="UTF-8" comment="背包内拥有的道具数量" />
		</res>
	</prototype>
	
	<prototype req_name="QUERY_INLAY_WINDOW_INFO_REQ" req_type="0x00FFF102" res_name="QUERY_INLAY_WINDOW_INFO_RES" res_type="0x70FFF102" req_client_send="true" res_client_receive="true" comment="打开坐骑装备镶嵌界面">
		<req>
			<property name="horseEquId" type="long" encoding="UTF-8" comment="坐骑装备id" />
		</req>
		<res>
			<property name="horseEquId" type="long" encoding="UTF-8" comment="坐骑装备id" />
			<property name="inlayIndexs" type="int[]" encoding="UTF-8" comment="孔索引" />
			<property name="inlayColors" type="int[]" encoding="UTF-8" comment="对应索引颜色" />
			<property name="inlayIds" type="long[]" encoding="UTF-8" comment="对应索引镶嵌的神匣id" />
		</res>
	</prototype>
	
	<prototype req_name="INLAYTAKE_HORSEBAOSHI_REQ" req_type="0x00FFF103" res_name="INLAYTAKE_HORSEBAOSHI_RES" res_type="0x70FFF103" req_client_send="true" res_client_receive="true" comment="镶嵌货取出坐骑装备神匣">
		<req>
			<property name="horseEquId" type="long" encoding="UTF-8" comment="坐骑装备id" />
			<property name="inlayIndex" type="int" encoding="UTF-8" comment="镶嵌索引" />
			<property name="shenxiaId" type="long" encoding="UTF-8" comment="神匣id    -1代表取出对应格子神匣" />
		</req>
		<res>
			<property name="horseEquId" type="long" encoding="UTF-8" comment="坐骑装备id" />
			<property name="inlayIndex" type="int" encoding="UTF-8" comment="镶嵌索引" />
			<property name="inlayId" type="long" encoding="UTF-8" comment="格子中镶嵌的物品id" />
		</res>
	</prototype>
	
	<prototype req_name="INLAYTAKE_WINDOW_REQ" req_type="0x00FFF104" res_name="INLAYTAKE_WINDOW_RES" res_type="0x70FFF104" req_client_send="true" res_client_receive="true" comment="打开坐骑开孔操作界面">
		<req>
		</req>
		<res>
			<property name="windowType" type="int" encoding="UTF-8" comment="1打开开孔界面   2打开镶嵌界面" />
			<property name="needArticles" type="String[]" encoding="UTF-8" comment="开孔需要道具名" />
			<property name="haveNums" type="int[]" encoding="UTF-8" comment="背包内拥有的道具数量" />
		</res>
	</prototype>
	
	<prototype req_name="NEW_GET_ONE_TREASUREACTIVITY_INFO_REQ" req_type="0x00FFF105" res_name="NEW_GET_ONE_TREASUREACTIVITY_INFO_RES" res_type="0x70FFF105" req_client_send="true" res_client_receive="true" comment="获取单个宝藏信息">
		<req>
			<property name="treasureId" type="int" comment="宝藏id" />
		</req>
		<res>
			<property name="treasureId" type="int" comment="宝藏id" />
			<property name="defaultArticleIds" type="long[]" comment="展示的物品id列表" />
			<property name="description" type="String" comment="描述" />
			<property name="costNums" type="long[]" comment="消耗银子数组" />
		</res>
	</prototype>
	
	<prototype req_name="BOOTH_OFFLINE_REQ" req_type="0x00FFF111" res_name="BOOTH_OFFLINE_RES" res_type="0x70FFF111" req_client_send="true" res_client_receive="true" comment="离线摆摊">
		<req>
		</req>
		<res>
			<property name="pid" type="long" encoding="UTF-8" comment="角色id" />
			<property name="buyDays" type="int[]" encoding="UTF-8" comment="购买天数" />
			<property name="costMoney" type="long[]" encoding="UTF-8" comment="消耗的钱,单位文" />
		</res>
	</prototype>
	
	<prototype req_name="BOOTH_OFFLINE_SURE_REQ" req_type="0x00FFF112" res_name="BOOTH_OFFLINE_SURE_RES" res_type="0x70FFF112" req_client_send="true" res_client_receive="true" comment="离线摆摊确认">
		<req>
			<property name="buyDays" type="int" encoding="UTF-8" comment="购买天数" />
			<property name="costMoney" type="long" encoding="UTF-8" comment="消耗的钱,单位文" />
		</req>
		<res>
			<property name="result" type="boolean" encoding="UTF-8" comment="结果" />
		</res>
	</prototype>
	
	<prototype req_name="BOOTH_FIRST_PAGE_REQ" req_type="0x00FFF113" res_name="BOOTH_FIRST_PAGE_RES" res_type="0x70FFF113" req_client_send="true" res_client_receive="true" comment="boss副本首界面">
		<req>
			<property name="billboardType" type="int" encoding="UTF-8" comment="排行类型,0:个人，1:家族" />
		</req>
		<res>
			<property name="billboardType" type="int" encoding="UTF-8" comment="排行类型,0:个人，1:家族" />
			<property name="names" type="String[]" encoding="UTF-8" comment="名字集合"/>
			<property name="damages" type="long[]" encoding="UTF-8" comment="伤害集合"/>
			<property name="rank" type="int" encoding="UTF-8" comment="本人排行:家族排名"/>
			<property name="damage" type="long" encoding="UTF-8" comment="本人伤害:家族伤害"/>
			<property name="name" type="String" encoding="UTF-8" comment="本人名字:家族名字"/>
			<property name="bossName" type="String" encoding="UTF-8" comment="boss名字"/>
			<property name="bossIcon" type="String" encoding="UTF-8" comment="bossIcon"/>
			<property name="jiaZuJoins" type="int" encoding="UTF-8" comment="家族参与人数"/>
			<property name="openTime" type="String" encoding="UTF-8" comment="开放时间"/>
			<property name="articleIds" type="long[]" encoding="UTF-8" comment="奖励id集"/>
			<property name="articleNums" type="int[]" encoding="UTF-8" comment="奖励数量集"/>
			<property name="nextOpenTime" type="long" encoding="UTF-8" comment="距离开启时间,小鱼等于0，正在进行中"/>
		</res>
	</prototype>
	
	<prototype req_name="BOOTH_HELP_REQ" req_type="0x00FFF114" res_name="BOOTH_HELP_RES" res_type="0x70FFF114" req_client_send="true" res_client_receive="true" comment="帮助信息">
		<req>
		</req>
		<res>
			<property name="helpMess" type="String" encoding="UTF-8" comment="帮助信息" />
		</res>
	</prototype>
	
	<prototype req_name="BOOTH_START_FIGHT_REQ" req_type="0x00FFF115" req_client_send="true" comment="发起挑战">
		<req>
		</req>
	</prototype>
	
	<prototype req_name="BOOTH_BATTLE_INFO_REQ" req_type="0x00FFF116" res_name="BOOTH_BATTLE_INFO_RES" res_type="0x70FFF116" req_client_send="true" res_client_receive="true" comment="战斗信息">
		<req>
			<property name="billboardType" type="int" encoding="UTF-8" comment="排行类型,0:个人，1:家族" />
		</req>
		<res>
			<property name="billboardType" type="int" encoding="UTF-8" comment="排行类型,0:个人，1:家族" />
			<property name="playerGuLi" type="int" encoding="UTF-8" comment="个人鼓励,百分比" />
			<property name="jiaZuGuLi" type="int" encoding="UTF-8" comment="家族鼓励,百分比" />
			<property name="jiaZuJoins" type="int" encoding="UTF-8" comment="家族参与人数"/>
			<property name="rank" type="int" encoding="UTF-8" comment="本人排行:家族排名"/>
			<property name="damage" type="long" encoding="UTF-8" comment="本人伤害:家族伤害"/>
			<property name="name" type="String" encoding="UTF-8" comment="本人名字:家族名字"/>
			<property name="names" type="String[]" encoding="UTF-8" comment="名字集合"/>
			<property name="damages" type="long[]" encoding="UTF-8" comment="伤害集合"/>
		</res>
	</prototype>
	
	<prototype req_name="BOOTH_GULI_REQ" req_type="0x00FFF117" req_client_send="true" comment="鼓励">
		<req>
			<property name="billboardType" type="int" encoding="UTF-8" comment="排行类型,0:个人，1:家族" />
		</req>
	</prototype>
	
	<prototype req_name="PET_CELL_HELP_REQ" req_type="0x00FFF118" res_name="PET_CELL_HELP_RES" res_type="0x70FFF118" req_client_send="true" res_client_receive="true" comment="助战信息">
		<req>
		</req>
		<res>
			<property name="helpMess" type="String" encoding="UTF-8" comment="信息说明" />
		</res>
	</prototype>
	
	<prototype req_name="PET_CELL_UPGRADE_QUERY_REQ" req_type="0x00FFF119" res_name="PET_CELL_UPGRADE_QUERY_RES" res_type="0x70FFF119" req_client_send="true" res_client_receive="true" comment="升级请求">
		<req>
		</req>
		<res>
			<property name="currId" type="int" encoding="UTF-8" comment="当前加成id" />
			<property name="helpMess" type="String" encoding="UTF-8" comment="帮助信息,留的口" />
			<object-property name="infos" type="PetCellInfo[]" comment="八卦信息">
				<property name="id" type="int" encoding="UTF-8" comment="currId之前的都亮，之后的都是灰的"></property>
				<property name="name" type="String" encoding="UTF-8"></property>
				<property name="level" type="int" encoding="UTF-8"></property>
				<property name="addProp" type="int" encoding="UTF-8"></property>
				<property name="materialNum" type="int" encoding="UTF-8"></property>
				<property name="exp" type="long" encoding="UTF-8" comment=""/>
				<property name="showInfo" type="String" encoding="UTF-8" comment=""/>
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="PET_CELL_UPGRADE_CONFIRM_REQ" req_type="0x00FFF120" res_name="PET_CELL_UPGRADE_CONFIRM_RES" res_type="0x70FFF120" req_client_send="true" res_client_receive="true" comment="升级弹窗确认">
		<req>
			<property name="upgradeId" type="int" encoding="UTF-8" comment="升级id" />
		</req>
		<res>
			<property name="result" type="int" encoding="UTF-8" comment="0:失败，1:成功" />
		</res>
	</prototype>
	
	<prototype req_name="PET_CELL_FIRST_PAGE_REQ" req_type="0x00FFF121" res_name="QUERY_PET_INFO_RES" res_type="0x70FFF121" req_client_send="true" res_client_receive="true" comment="点击宠物助战按钮">
		<req>
		</req>
		<res>
			<property name="ids" type="long[]" encoding="UTF-8" comment="当前上阵宠物id" />
			<property name="addPro" type="int" encoding="UTF-8" comment="当前宠物加成比例" />
		</res>
	</prototype>
	
	<prototype req_name="MONTH_CARD_FIRST_PAGE_REQ" req_type="0x00FFF122" res_name="MONTH_CARD_FIRST_PAGE_RES" res_type="0x70FFF122" req_client_send="true" res_client_receive="true" comment="月卡界面信息">
		<req>
			<property name="channelName" type="String" encoding="UTF-8" comment="渠道"/>
		</req>
		<res>
			<property name="ids" type="int[]" encoding="UTF-8" comment="1:修真2:渡劫3:飞仙" />
			<property name="days" type="long[]" encoding="UTF-8" comment="每个卡结束的时间,单位毫秒" />
			<property name="xiuZhen" type="String[]" encoding="UTF-8" comment="修真" />
			<property name="duJie" type="String[]" encoding="UTF-8" comment="渡劫" />
			<property name="feiXian" type="String[]" encoding="UTF-8" comment="飞仙" />
			<property name="modeName" type="String" encoding="UTF-8" comment="充值卡名字" />
			<property name="functionName" type="String" encoding="UTF-8" comment="充值功能名字" />
			<property name="chargeIds" type="String[]" encoding="UTF-8" comment="充值ID" />
			<property name="specConfigs" type="String[]" encoding="UTF-8" comment="苹果充值档" />
		</res>
	</prototype>
	
	<prototype req_name="MONTH_CARD_BUY_REQ" req_type="0x00FFF123" req_client_send="true" comment="购买某一种月卡">
		<req>
			<property name="cardId" type="int" encoding="UTF-8" comment="1:修真2:渡劫3:飞仙" />
		</req>
	</prototype>
	
	<prototype req_name="LOGIN_REWARD_REQ" req_type="0x00FFF124" res_name="LOGIN_REWARD_RES" res_type="0x70FFF124" req_client_send="true" res_client_receive="true" comment="七日登录奖励">
		<req>
		</req>
		<res>
			<property name="states" type="int[]" encoding="UTF-8" comment="领取状态,0:初始值，1:登录，2:领取过奖励" />
			<property name="names" type="String[]" encoding="UTF-8" comment="礼包名字集" />
			<property name="icons" type="String[]" encoding="UTF-8" comment="礼包名icon" />
			<property name="aeIds1" type="long[]" encoding="UTF-8" comment="礼包开出具体物品id集" />
			<property name="aeIds2" type="long[]" encoding="UTF-8" comment="礼包开出具体物品id集" />
			<property name="aeIds3" type="long[]" encoding="UTF-8" comment="礼包开出具体物品id集" />
			<property name="aeIds4" type="long[]" encoding="UTF-8" comment="礼包开出具体物品id集" />
			<property name="aeIds5" type="long[]" encoding="UTF-8" comment="礼包开出具体物品id集" />
			<property name="aeIds6" type="long[]" encoding="UTF-8" comment="礼包开出具体物品id集" />
			<property name="aeIds7" type="long[]" encoding="UTF-8" comment="礼包开出具体物品id集" />
		</res>
	</prototype>
	
	<prototype req_name="GET_LOGIN_REWARD_REQ" req_type="0x00FFF125" req_client_send="true" comment="领取七日登录奖励">
		<req>
			<property name="day" type="int" encoding="UTF-8" comment="第几天的奖励" />
		</req>
	</prototype>
	
	<prototype req_name="FIRST_CHARGE_STATE_REQ" req_type="0x00FFF127" res_name="FIRST_CHARGE_STATE_RES" res_type="0x70FFF127" req_client_send="true" res_client_receive="true" comment="首冲状态，0;没冲过，1:冲过">
		<req>
		</req>
		<res>
			<property name="state" type="int" encoding="UTF-8" comment="状态,0:初始值,没冲过，1:冲过" />
		</res>
	</prototype>
	
	<prototype req_name="FIRST_CHARGE_REQ" req_type="0x00FFF126" res_name="FIRST_CHARGE_RES" res_type="0x70FFF126" req_client_send="true" res_client_receive="true" comment="首冲">
		<req>
		</req>
		<res>
			<property name="ids" type="long[]" encoding="UTF-8" comment="奖励id集" />
			<property name="counts" type="int[]" encoding="UTF-8" comment="奖励数量集" />
		</res>
	</prototype>
	
	<prototype req_name="PET_JOIN_CELL_REQ" req_type="0x00FFF128" req_client_send="true"  comment="上阵，撤回">
		<req>
			<property name="optionType" type="int" encoding="UTF-8" comment="1,上阵，2,撤回" />
			<property name="petId" type="long" encoding="UTF-8" comment="宠物id" />
		</req>
	</prototype>
	
	<prototype req_name="TOTLE_ONLINE_REWARD_REQ" req_type="0x00FFF129" res_name="TOTLE_ONLINE_REWARD_RES" res_type="0x70FFF129" req_client_send="true" res_client_receive="true" comment="累计在线">
		<req>
		</req>
		<res>
			<property name="ids" type="long[]" encoding="UTF-8" comment="奖励id集" />
			<property name="onlineTimes" type="long[]" encoding="UTF-8" comment="如果领取状态是0,显示剩余时间，单位毫秒" />
			<property name="stste" type="int[]" encoding="UTF-8" comment="0：默认，1：可领取,2：已经领取过" />
		</res>
	</prototype>
	
	<prototype req_name="GET_TOTLE_ONLINE_REWARD_REQ" req_type="0x00FFF130" req_client_send="true" comment="领取累计在线">
		<req>
		</req>
	</prototype>
	
	<prototype req_name="PLAYER_PET_HOUSE_REQ" req_type="0x00FFF131" res_name="PLAYER_PET_HOUSE_RES" res_type="0x70FFF131" req_client_send="true" res_client_receive="true" comment="我的仙兽房">
		<req>
		</req>
		<res>
			<property name="openCell" type="int[]" encoding="UTF-8" comment="是否开启,0：默认没开启，1：开启，开启也可以为空" />
			<property name="ids" type="long[]" encoding="UTF-8" comment="挂机中的宠物id集" />
			<property name="storeTimes" type="long[]" encoding="UTF-8" comment="挂机时长，单位毫秒" />
			<property name="blessCounts" type="int[]" encoding="UTF-8" comment="祝福次数" />
			<property name="addExps" type="long[]" encoding="UTF-8" comment="获得经验" />
		</res>
	</prototype>
	
	<prototype req_name="JIAZU_PET_HOUSE_REQ" req_type="0x00FFF132" res_name="JIAZU_PET_HOUSE_RES" res_type="0x70FFF132" req_client_send="true" res_client_receive="true" comment="家族仙兽房">
		<req>
		</req>
		<res>
			<property name="ids" type="long[]" encoding="UTF-8" comment="家族挂机中的宠物id集" />
			<property name="playerName" type="String[]" encoding="UTF-8" comment="主人名字" />
			<property name="canBless" type="byte[]" encoding="UTF-8" comment="是否可祝福，0：可以，1：不可以" />
		</res>
	</prototype>
	
	<prototype req_name="PET_STORE_REQ" req_type="0x00FFF133" req_client_send="true" comment="宠物挂机">
		<req>
			<property name="petId" type="long" encoding="UTF-8" comment="选中要挂机的宠物id" />
		</req>
	</prototype>
	
	<prototype req_name="PET_CALL_BACK_REQ" req_type="0x00FFF134" req_client_send="true" comment="收回宠物">
		<req>
			<property name="petId" type="long" encoding="UTF-8" comment="选中要收回的宠物id" />
		</req>
	</prototype>
	
	<prototype req_name="BLESS_PET_REQ" req_type="0x00FFF135" res_name="BLESS_PET_RES" res_type="0x70FFF135" req_client_send="true" res_client_receive="true" comment="家族仙兽房">
		<req>
			<property name="petId" type="long" encoding="UTF-8" comment="选中要祝福的宠物id" />
		</req>
		<res>
			<property name="id" type="long" encoding="UTF-8" comment="家族挂机中的宠物id" />
			<property name="blessCount" type="long" encoding="UTF-8" comment="祝福次数" />
			<property name="canBless" type="byte" encoding="UTF-8" comment="是否可祝福，0：可以，1：不可以" />
		</res>
	</prototype>
	
	<prototype req_name="CITY_SINGLE_REQ" req_type="0x00FFF136" res_name="CITY_SINGLE_RES" res_type="0x70FFF136" req_client_send="true" res_client_receive="true" comment="单人副本">
		<req>
			<property name="cityType" type="int" encoding="UTF-8" comment="副本类型,0：组队副本，1：家族副本，2：全民boss" />
		</req>
		<res>
			<property name="cityType" type="int" encoding="UTF-8" comment="副本类型,0：组队副本，1：家族副本，2：全民boss" />
			<object-property name="infos" type="HuanJingInfoForClient[]" comment="副本信息">
				<property name="bossId" type="long" encoding="UTF-8" comment="bossid" />
				<property name="bossName" type="String" encoding="UTF-8" comment="boss名字" />
				<property name="bossIcon" type="String" encoding="UTF-8" comment="bossIcon" />
				<property name="dropRate" type="String" encoding="UTF-8" comment="掉率" />
				<property name="playerLevel" type="int" encoding="UTF-8" comment="角色等级限制" />
				<property name="ids" type="long[]" encoding="UTF-8" comment="奖励id集" />
				<property name="nums" type="int[]" encoding="UTF-8" comment="奖励数量集" />
				<property name="cityName" type="String" encoding="UTF-8" comment="副本名字" />
				<property name="openTime" type="String" encoding="UTF-8" comment="开发时间" />
				<property name="jiazuLevel" type="int" encoding="UTF-8" comment="家族等级限制" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="ENTER_CITY_SINGLE_REQ" req_type="0x00FFF137" req_client_send="true" comment="进入单人副本">
		<req>
			<property name="cityName" type="String" encoding="UTF-8" comment="选中要进入的副本bossId" />
		</req>
	</prototype>
	
	<prototype req_name="ACTIVITY_IS_SHOW_REQ" req_type="0x00FFF138" res_name="ACTIVITY_IS_SHOW_RES" res_type="0x70FFF138" req_client_send="true" res_client_receive="true" comment="是否显示活动">
		<req>
			<property name="activityType" type="int" encoding="UTF-8" comment="活动类型" />
		</req>
		<res>
			<property name="activityType" type="int" encoding="UTF-8" comment="活动类型" />
			<property name="result" type="boolean[]" encoding="UTF-8" comment="结果" />
		</res>
	</prototype>
	
	<prototype req_name="ACTIVITY_QUERY_REQ" req_type="0x00FFF139" res_name="ACTIVITY_QUERY_RES" res_type="0x70FFF139" req_client_send="true" res_client_receive="true" comment="活动请求">
		<req>
			<property name="activityId" type="int" encoding="UTF-8" comment="活动id，第一次请求是0" />
		</req>
		<res>
			<property name="activityId" type="int" encoding="UTF-8" comment="活动id" />
			<property name="activityNames" type="String[]" encoding="UTF-8" comment="活动名字" />
			<property name="activityids" type="int[]" encoding="UTF-8" comment="活动ids" />
			<property name="activityContent" type="String" encoding="UTF-8" comment="内容" />
			<property name="havaBindSivler" type="boolean" comment="havaBindSivler" />
			<property name="bindSivlerNum" type="int" comment="绑银数量" />
		</res>
	</prototype>
	<prototype req_name="PLAYER_HOOK_PET_REQ" req_type="0x00FFF140" req_client_send="true" res_name="PLAYER_HOOK_PET_RES" res_type="0x70FFF140"  res_client_receive="true" comment="获取玩家正在挂机的宠物id集合">
		<req>
		</req>
		<res>
			<property name="petIds" type="long[]" encoding="UTF-8" comment="ids" />
		</res>
	</prototype>
	<prototype req_name="ACTIVITY_DO_REQ" req_type="0x00FFF141" req_client_send="true" comment="活动执行">
		<req>
			<property name="doType" type="int" encoding="UTF-8" comment="执行类型,0:默认是客户端寻路,1:服务端操作" />
		</req>
	</prototype>
	
	<prototype req_name="DAY_PACKAGE_OF_RMB_REQ" req_type="0x00FFF142" res_name="DAY_PACKAGE_OF_RMB_RES" res_type="0x70FFF142" req_client_send="true" res_client_receive="true" comment="每日礼包">
		<req>
			<property name="channelName" type="String" encoding="UTF-8" comment="渠道" />
		</req>
		<res>
			<property name="cardType" type="int[]" encoding="UTF-8" comment="1:每日，2:修真3:渡劫"/>
			<property name="ids" type="long[]" encoding="UTF-8" comment="每日礼包ids"/>
			<property name="nums" type="long[]" encoding="UTF-8" comment="每日礼包ids"/>
			<property name="ids2" type="long[]" encoding="UTF-8" comment="修真ids"/>
			<property name="mums2" type="long[]" encoding="UTF-8" comment="每日礼包ids"/>
			<property name="ids3" type="long[]" encoding="UTF-8" comment="渡劫ids"/>
			<property name="nums3" type="long[]" encoding="UTF-8" comment="每日礼包ids"/>
			<property name="modeName" type="String" encoding="UTF-8" comment="充值卡名字"/>
			<property name="functionName" type="String" encoding="UTF-8" comment="充值功能名字"/>
			<property name="chargeIds" type="String[]" encoding="UTF-8" comment="充值ID"/>
			<property name="specConfigs" type="String[]" encoding="UTF-8" comment="苹果充值档"/>
			<property name="buyType" type="int[]" encoding="UTF-8" comment="1:已经购买过,2：需要购买修正卡，3：需要购买渡劫卡"/>
		</res>
	</prototype>
	
	<prototype res_name="NOTICE_BUY_SUCCESS_RES" res_type="0x70FFF143" res_client_receive="true" comment="通知月卡,每日礼包,购买成功">
		<res>
			<property name="buyType" type="int" encoding="UTF-8" comment="1:月卡，2:每日礼包,3:"/>
			<property name="result" type="int" encoding="UTF-8" comment="1:成功"/>
		</res>
	</prototype>
	
	<prototype req_name="CHARGE_LIST_REQ" res_name="CHARGE_LIST_RES" req_type="0x00FFF144" res_type="0x70FFF144" req_client_send="true" res_client_receive="true" comment="查询充值信息新版">
		<req>
			<property name="channel" type="String" encoding="UTF-8" comment="渠道" />
		</req>
		<res>
			<property name="modeName" type="String[]" encoding="UTF-8" comment="充值渠道:协议回传使用" />
			<property name="functionName" type="String" encoding="UTF-8" comment="充值功能名字" />
			<object-property name="chargeCardConfig" type="ChargeCardConfig[]" comment="充值档显示">
				<property name="id" type="String" encoding="UTF-8" comment="ID" />
				<property name="activityType" type="int" encoding="UTF-8" comment="0：默认什么都不显示，1：纯文字显示，2：首充送，3：额外送" />
				<property name="iconOrDesc" type="String" encoding="UTF-8" comment="根据activityType来取的具体值,icon或者文字描述" />
				<property name="tableHead" type="String" encoding="UTF-8" comment="最上面表头描述" />
				<property name="needChargeRmb" type="String" encoding="UTF-8" comment="充值的rmb描述，eg：30元" />
				<property name="silverInfo" type="String" encoding="UTF-8" comment="充值可获得多少银子描述" />
				<property name="tuiJianIcon" type="String" encoding="UTF-8" comment="null或者空串不显示" />
				<property name="showInIcon" type="String" encoding="UTF-8" comment="充值额外送的描述,套装icon里的文字" />
				<property name="backageIcon" type="String" encoding="UTF-8" comment="背景图" />
				<property name="specConfigs" type="String" encoding="UTF-8" comment="苹果充值档" />
			</object-property>
		</res>
	</prototype>
	
	<prototype req_name="STAR_HELP_REQ" res_name="STAR_HELP_RES" req_type="0x00FFF145" res_type="0x70FFF145" req_client_send="true" res_client_receive="true" comment="摘星帮助信息">
		<res>
			<property name="functionMess" type="String" encoding="UTF-8" comment="功能介绍信息" />
			<property name="helpMess" type="String" encoding="UTF-8" comment="帮助信息" />
		</res>
	</prototype>
	
	<prototype req_name="STAR_MONEY_REQ" res_name="STAR_MONEY_RES" req_type="0x00FFF146" res_type="0x70FFF146" req_client_send="true" res_client_receive="true" comment="摘星钱数">
		<req>
			<property name="equipmentId" type="long" encoding="UTF-8" comment="装备id" />
		</req>
		<res>
			<property name="money" type="long" encoding="UTF-8" comment="需要钱数" />
		</res>
	</prototype>
	
	<prototype req_name="STAR_GO_REQ" res_name="STAR_GO_RES" req_type="0x00FFF147" res_type="0x70FFF147" req_client_send="true" res_client_receive="true" comment="摘星确认">
		<req>
			<property name="removeId" type="long" encoding="UTF-8" comment="被转移星的装备id" />
			<property name="addId" type="long" encoding="UTF-8" comment="继承星的装备id" />
		</req>
		<res>
			<property name="result" type="boolean" encoding="UTF-8" comment="结果" />
		</res>
	</prototype>
	<prototype req_name="PLAYER_IN_SPESCENE2_REQ" res_name="PLAYER_IN_SPESCENE2_RES" req_type="0x00FFF148" res_type="0x70FFF148" req_client_send="true"
		res_client_receive="true" comment="玩家是否在某个特殊场景2">
		<req>
		</req>
		<res>
			<property name="sceneTypes" type="int[]" encoding="UTF-8"  comment="1:空岛,2:全民boss,3:冰封幻境（70）,4:虚空幻境（81）,5:家族远征"></property>
			<property name="results" type="int[]" encoding="UTF-8"  comment="0:不在  1:在对应场景"></property>
		</res>
	</prototype>
	
	<prototype req_name="BATTLE_GUWU_INFO_REQ" req_type="0x00FFF149" res_name="BATTLE_GUWU_INFO_RES" res_type="0x70FFF149" req_client_send="true" res_client_receive="true" comment="家族鼓舞">
		<req>
			<property name="guliLevel" type="int" encoding="UTF-8" comment="鼓舞级别" />
		</req>
		<res>
			<property name="guliMess" type="String" encoding="UTF-8" comment="鼓舞描述" />
			<property name="guliLevel" type="int" encoding="UTF-8" comment="鼓舞级别" />
			<property name="jiaZuGuLi" type="int" encoding="UTF-8" comment="家族鼓励,百分比" />
		</res>
	</prototype>
		<prototype req_name="FUNCTION_SHOW_REQ" req_type="0x00FFF150" res_name="FUNCTION_SHOW_RES" res_type="0x70FFF150" req_client_send="true" res_client_receive="true" comment="功能状态">
		<req>
			<property name="queryType" type="int" encoding="UTF-8" comment="请求功能类型，1：月卡" />
		</req>
		<res>
			<property name="queryType" type="int" encoding="UTF-8" comment="请求功能类型，1：月卡" />
			<property name="result" type="boolean" encoding="UTF-8" comment="结果" />
		</res>
	</prototype>
	<prototype req_name="TOTLE_COST_ACTIVITY_REQ" req_type="0x00FFF151" res_name="TOTLE_COST_ACTIVITY_RES" res_type="0x70FFF151" req_client_send="true" res_client_receive="true" comment="累计消费">
		<req>
		</req>
		<res>
			<property name="helpMess" type="String" encoding="UTF-8" comment="帮助信息" />
			<object-property name="totleCostActivitys" type="TotleCostActivity[]" comment="活动列表">
				<property name="hasChargeRmb" type="int" encoding="UTF-8" comment="hasChargeRmb" />
				<property name="needChargeRmb" type="int" encoding="UTF-8" comment="needChargeRmb" />
				<property name="ids" type="long[]" encoding="UTF-8" comment="ids" />
				<property name="nums" type="int[]" encoding="UTF-8" comment="nums" />
				<property name="colors" type="int[]" comment="颜色"></property>
				<property name="showIcon" type="String" encoding="UTF-8" comment="showIcon" />
				<property name="endTime" type="long" encoding="UTF-8" comment="endTime" />
			</object-property>
		</res>
	</prototype>
	
</prototypes>