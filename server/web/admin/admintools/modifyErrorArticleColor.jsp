<%@page import="com.fy.engineserver.datasource.article.manager.ArticleManager"%>
<%@page import="com.fy.engineserver.datasource.article.manager.ArticleEntityManager"%>
<%@page import="com.fy.engineserver.datasource.article.data.props.Cell"%>
<%@page import="com.fy.engineserver.core.CoreSubSystem"%>
<%@page
	import="com.fy.engineserver.datasource.article.data.entity.ArticleEntity"%>
<%@page
	import="com.fy.engineserver.datasource.article.data.props.Knapsack"%>
<%@page import="com.fy.engineserver.sprite.PlayerManager"%>
<%@page import="com.fy.engineserver.sprite.Player"%>
<%@page import="com.xuanzhi.boss.game.GameConstants"%>
<%@page import="java.util.*"%>
<%@page import="java.util.HashMap"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<%
	Map<String, long[]> map = new HashMap<String, long[]>();
	long ymsg[] = { 1103000000000002581L, 1103000000000003797L,
			1103000000000007779L, 1103000000000013684L,
			1103000000000015191L, 1103000000000015787L,
			1103000000000016724L, 1103000000000018479L,
			1103000000000019888L, 1103000000000022059L,
			1103000000000028236L, 1103000000000034853L,
			1103000000000044148L, 1103000000000044602L,
			1103000000000051541L, 1103000000000054348L,
			1103000000000054359L, 1103000000000054416L,
			1103000000000056541L, 1103000000000065957L,
			1103000000000067417L, 1103000000000069646L,
			1103000000000069931L, 1103000000000072057L,
			1103000000000073807L, 1103000000000075870L,
			1103000000000078677L, 1103000000000080904L,
			1103000000000088334L, 1103000000000089418L,
			1103000000000092546L, 1103000000000094632L,
			1103000000000094974L, 1103000000000102634L,
			1103000000000103483L, 1103000000000104455L,
			1103000000000106770L, 1103000000000113092L,
			1103000000000118495L, 1103000000000120089L,
			1103000000000120473L };
	long slbw[] = { 1112000000000005248L, 1112000000000005558L,
			1112000000000005576L, 1112000000000005618L,
			1112000000000005679L, 1112000000000005723L,
			1112000000000005849L, 1112000000000005879L,
			1112000000000005896L, 1112000000000006064L,
			1112000000000006168L, 1112000000000006498L,
			1112000000000006641L, 1112000000000006655L,
			1112000000000006911L, 1112000000000007598L,
			1112000000000007997L, 1112000000000009164L,
			1112000000000009310L, 1112000000000009465L,
			1112000000000009939L, 1112000000000009971L,
			1112000000000010068L, 1112000000000010153L,
			1112000000000010361L, 1112000000000010607L,
			1112000000000010767L, 1112000000000010879L,
			1112000000000010977L, 1112000000000011206L,
			1112000000000011243L, 1112000000000012776L,
			1112000000000013417L, 1112000000000015573L,
			1112000000000017339L, 1112000000000018242L,
			1112000000000018342L, 1112000000000020132L,
			1112000000000020136L, 1112000000000020328L,
			1112000000000021326L, 1112000000000021465L,
			1112000000000023334L, 1112000000000023823L,
			1112000000000025088L, 1112000000000025392L,
			1112000000000026364L, 1112000000000027790L,
			1112000000000029285L, 1112000000000029848L,
			1112000000000030966L, 1112000000000032091L,
			1112000000000035823L, 1112000000000037464L,
			1112000000000037931L, 1112000000000039156L,
			1112000000000039179L, 1112000000000041429L,
			1112000000000042006L, 1112000000000045789L, };

	long xsqg[] = { 1108000000000017897L, 1108000000000052977L,
			1108000000000060903L, 1108000000000074379L,
			1108000000000074737L, };

	long bqqk[] = { 1105000000000001137L, 1105000000000001196L,
			1105000000000001505L, 1105000000000001547L,
			1105000000000002669L, 1105000000000003027L,
			1105000000000003448L, 1105000000000003631L,
			1105000000000003655L, 1105000000000006070L,
			1105000000000006840L, 1105000000000008532L,
			1105000000000010223L, 1105000000000010947L,
			1105000000000013561L, 1105000000000022370L,
			1105000000000022554L, 1105000000000022910L,
			1105000000000024842L, 1105000000000026721L,
			1105000000000027961L, 1105000000000032106L,
			1105000000000033331L, 1105000000000034490L,
			1105000000000035683L, 1105000000000038028L,
			1105000000000040594L, 1105000000000041133L,
			1105000000000043834L, 1105000000000045662L,
			1105000000000045961L, 1105000000000045993L,
			1105000000000047672L, 1105000000000053294L,
			1105000000000055274L, 1105000000000056222L,
			1105000000000061503L, 1105000000000061676L,
			1105000000000063135L, 1105000000000066365L,
			1105000000000066455L, 1105000000000067220L,
			1105000000000068061L, 1105000000000068086L,
			1105000000000068997L, 1105000000000069297L,
			1105000000000073816L, 1105000000000074830L,
			1105000000000074906L, 1105000000000076254L,
			1105000000000076918L, 1105000000000077432L,
			1105000000000077886L, 1105000000000077917L,
			1105000000000079271L, 1105000000000080241L,
			1105000000000088333L, 1105000000000091874L,
			1105000000000094005L, 1105000000000099891L,
			1105000000000102260L, 1105000000000103192L,
			1105000000000103369L, 1105000000000103793L,
			1105000000000106741L, 1105000000000107015L,
			1105000000000107617L, 1105000000000107937L,
			1105000000000111056L, 1105000000000111770L,
			1105000000000112139L, 1105000000000114490L,
			1105000000000115978L, 1105000000000116065L,
			1105000000000116916L, 1105000000000117674L,
			1105000000000119379L, 1105000000000119712L,
			1105000000000125511L, 1105000000000128603L,
			1105000000000133213L, };

	long lahm[] = { 1113000000000001103L, 1113000000000001313L,
			1113000000000001768L, 1113000000000002346L,
			1113000000000002350L, 1113000000000002686L,
			1113000000000002711L, 1113000000000002735L,
			1113000000000003494L, 1113000000000003733L,
			1113000000000003946L, 1113000000000004036L,
			1113000000000004707L, 1113000000000005394L,
			1113000000000006019L, 1113000000000006107L,
			1113000000000006631L, 1113000000000006658L,
			1113000000000007137L, 1113000000000008550L,
			1113000000000008963L, 1113000000000008995L,
			1113000000000010568L, 1113000000000011739L,
			1113000000000012766L, 1113000000000014112L,
			1113000000000014650L, 1113000000000015173L,
			1113000000000017003L, 1113000000000019518L,
			1113000000000021786L, 1113000000000023367L,
			1113000000000025214L, 1113000000000029603L,
			1113000000000031890L, 1113000000000032658L,
			1113000000000032812L, 1113000000000032865L,
			1113000000000033933L, 1113000000000034101L,
			1113000000000040385L, 1113000000000042788L,
			1113000000000045160L, 1113000000000045340L,
			1113000000000046867L, 1113000000000047149L,
			1113000000000047177L, 1113000000000048217L, };
	long yyqs[] = { 1107000000000001032L, 1107000000000001062L,
			1107000000000001468L, 1107000000000001557L,
			1107000000000001716L, 1107000000000002317L,
			1107000000000002715L, 1107000000000002814L,
			1107000000000002820L, 1107000000000002825L,
			1107000000000002842L, 1107000000000002948L,
			1107000000000002965L, 1107000000000003050L,
			1107000000000003379L, 1107000000000003619L,
			1107000000000004493L, 1107000000000004552L,
			1107000000000004779L, 1107000000000005698L,
			1107000000000005714L, 1107000000000006067L,
			1107000000000006292L, 1107000000000006315L,
			1107000000000006492L, 1107000000000006502L,
			1107000000000006504L, 1107000000000006746L,
			1107000000000009953L, 1107000000000011145L,
			1107000000000011183L, 1107000000000011227L,
			1107000000000011564L, 1107000000000011998L,
			1107000000000012199L, 1107000000000013897L,
			1107000000000014355L, 1107000000000017902L,
			1107000000000018283L, 1107000000000020318L,
			1107000000000023009L, 1107000000000026190L,
			1107000000000026816L, 1107000000000029035L,
			1107000000000029339L, 1107000000000032913L,
			1107000000000033847L, 1107000000000042504L,
			1107000000000043007L, 1107000000000043029L,
			1107000000000044794L, 1107000000000047821L,
			1107000000000048331L, 1107000000000050298L,
			1107000000000055290L, 1107000000000055684L,
			1107000000000056859L, 1107000000000057205L,
			1107000000000058351L, 1107000000000058452L,
			1107000000000058469L, 1107000000000059085L,
			1107000000000059216L, 1107000000000059479L,
			1107000000000062820L, 1107000000000065986L,
			1107000000000066002L, 1107000000000067361L,
			1107000000000069379L, 1107000000000070790L,
			1107000000000071908L, 1107000000000074005L,
			1107000000000074510L, 1107000000000078155L,
			1107000000000080916L, 1107000000000081194L,
			1107000000000081539L, 1107000000000081681L,
			1107000000000084895L, 1107000000000088371L,
			1107000000000089052L, 1107000000000089614L,
			1107000000000090742L, 1107000000000092606L,
			1107000000000095767L, 1107000000000098484L,
			1107000000000099964L, 1107000000000100773L,
			1107000000000102892L, 1107000000000105657L,
			1107000000000110657L, 1107000000000110915L,
			1107000000000112408L, 1107000000000114763L,
			1107000000000116089L, 1107000000000118370L,
			1107000000000118808L, 1107000000000118834L,
			1107000000000120013L, 1107000000000120044L,
			1107000000000120264L, 1107000000000121166L,
			1107000000000122965L, 1107000000000123019L,
			1107000000000124936L, 1107000000000126465L,
			1107000000000127195L, 1107000000000128009L,
			1107000000000128815L, 1107000000000128873L,
			1107000000000129072L, 1107000000000129423L,
			1107000000000130602L, 1107000000000131018L, };
	long lxbd[] = { 1103000000000002119L, 1103000000000002971L,
			1103000000000003033L, 1103000000000005155L,
			1103000000000005323L, 1103000000000007558L,
			1103000000000007939L, 1103000000000008916L,
			1103000000000009164L, 1103000000000010963L,
			1103000000000011328L, 1103000000000013759L,
			1103000000000013961L, 1103000000000014097L,
			1103000000000014405L, 1103000000000014652L,
			1103000000000015410L, 1103000000000015518L,
			1103000000000016196L, 1103000000000017503L,
			1103000000000024288L, 1103000000000024297L,
			1103000000000029727L, 1103000000000030536L,
			1103000000000030669L, 1103000000000034263L,
			1103000000000037290L, 1103000000000039111L,
			1103000000000040683L, 1103000000000041325L,
			1103000000000048101L, 1103000000000049693L,
			1103000000000054027L, 1103000000000055201L,
			1103000000000055654L, 1103000000000056567L,
			1103000000000057930L, 1103000000000058072L,
			1103000000000059962L, 1103000000000060200L,
			1103000000000061910L, 1103000000000062081L,
			1103000000000066232L, 1103000000000066732L,
			1103000000000071445L, 1103000000000072747L,
			1103000000000073275L, 1103000000000073355L,
			1103000000000078637L, 1103000000000079561L,
			1103000000000080310L, 1103000000000082574L,
			1103000000000086025L, 1103000000000089779L,
			1103000000000091900L, 1103000000000091942L,
			1103000000000092269L, 1103000000000092283L,
			1103000000000095410L, 1103000000000096444L,
			1103000000000099796L, 1103000000000103645L,
			1103000000000104317L, 1103000000000104541L,
			1103000000000105538L, 1103000000000105840L,
			1103000000000108560L, 1103000000000108779L,
			1103000000000110702L, 1103000000000111917L,
			1103000000000113902L, 1103000000000114712L,
			1103000000000115980L, 1103000000000116048L,
			1103000000000116139L, 1103000000000116191L,
			1103000000000117518L, 1103000000000117602L,
			1103000000000117741L, 1103000000000122668L, };
	long zxgl[] = { 1114000000000004112L, 1114000000000004238L,
			1114000000000004340L, 1114000000000004355L,
			1114000000000004372L, 1114000000000004448L,
			1114000000000004467L, 1114000000000004479L,
			1114000000000004568L, 1114000000000004766L,
			1114000000000004780L, 1114000000000004809L,
			1114000000000004848L, 1114000000000004861L,
			1114000000000004867L, 1114000000000004871L,
			1114000000000004887L, 1114000000000004888L,
			1114000000000004897L, 1114000000000004970L,
			1114000000000005144L, 1114000000000005202L,
			1114000000000005396L, 1114000000000005649L,
			1114000000000005689L, 1114000000000005696L,
			1114000000000005708L, 1114000000000005751L,
			1114000000000005877L, 1114000000000006047L,
			1114000000000006142L, 1114000000000006350L,
			1114000000000006404L, 1114000000000006463L,
			1114000000000006795L, 1114000000000007091L,
			1114000000000007332L, 1114000000000007511L,
			1114000000000007678L, 1114000000000007692L,
			1114000000000008257L, 1114000000000009626L,
			1114000000000010215L, 1114000000000010417L,
			1114000000000010553L, 1114000000000010571L,
			1114000000000010889L, 1114000000000010948L,
			1114000000000011466L, 1114000000000012093L,
			1114000000000012483L, 1114000000000012531L,
			1114000000000012554L, 1114000000000012776L,
			1114000000000012978L, 1114000000000013043L,
			1114000000000013239L, 1114000000000013298L,
			1114000000000013525L, 1114000000000013578L,
			1114000000000013950L, 1114000000000016606L,
			1114000000000017343L, 1114000000000018031L,
			1114000000000018270L, 1114000000000018423L,
			1114000000000019015L, 1114000000000019153L,
			1114000000000020610L, 1114000000000021693L,
			1114000000000022524L, 1114000000000023236L,
			1114000000000025206L, 1114000000000027835L,
			1114000000000027882L, 1114000000000028246L,
			1114000000000031302L, 1114000000000032427L,
			1114000000000032597L, 1114000000000035557L,
			1114000000000037547L, 1114000000000038176L, };
	
	map.put("幽冥山谷", ymsg);
	map.put("神龙摆尾", slbw);
	map.put("仙山琼阁", xsqg);
	map.put("霸气乾坤", bqqk);
	map.put("柳暗花明", lahm);
	map.put("烟雨青山", yyqs);
	map.put("凌霄宝殿", lxbd);
	map.put("众仙归来", zxgl);
	map.put("巍巍昆仑",new long[]{1100000000000494593L});
	String issubmit = request.getParameter("issubmit");
	if(issubmit!=null && issubmit.equals("ok")){
		String servername = GameConstants.getInstance().getServerName();
		PlayerManager pmanager = PlayerManager.getInstance();
		if (servername != null) {
			long[] ids = map.get(servername);
			if (ids == null) {
				out.print("通过服务器获取map失败-"+servername);
				return;
			}
			for (long playerid : ids) {
				try {
					Player player = pmanager.getPlayer(playerid);
					Knapsack k = player.getKnapsack_common();
					Knapsack k2 = player.getKnapsack_fangbao();
					Knapsack k3 = player.getKnapsacks_cangku();
					if (k != null) {
						replaceColor(k, player,out);
					}
					if (k2 != null) {
						replaceColor(k2, player,out);
					}
					if (k3 != null) {
						replaceColor(k3, player,out);
					}
				} catch (Exception e) {
					e.printStackTrace();
					out.print("[修改错误的物品color] [异常] ["+e+"]");
					Knapsack.logger.warn("[修改错误的物品color] [异常] [id:"+playerid+"]",e);
				}
			}
		}
	}else{
		out.print("请提交！");
	}
%>

<%!
public void replaceColor(Knapsack k, Player p,JspWriter out) throws Exception {
		String articlename = "灵兽内丹";
		long limittime = 364 * 24 * 60 * 60 * 1000L + 14 * 60 * 60 * 1000L;
		for (Cell cell :k.getCells()) {
			if (cell != null && cell.getEntityId() > 0) {
				ArticleEntity ae = ArticleEntityManager.getInstance().getEntity(cell.getEntityId());
				if (ae != null) {
					int oldColor = ae.getColorType();
					if (ae.getArticleName().equals(articlename)) {
						if (ae.isBinded()) {
							long invalidTime = ae.getEndTime();
							if ((invalidTime - System.currentTimeMillis()) > limittime) {
								if (ae.getColorType() >= 3) {
									ae.setColorType(ae.getColorType() - 3);
									String notice = "[修改错误的物品color] [成功] [invalidTime:"+invalidTime+"] [物品id："+ae.getId()+"] [堆叠个数："+(cell.getCount())+"] [原来颜色："+oldColor+"] [新颜色:"+ae.getColorType()+"] [帐号："+p.getUsername()+"] [角色名："+p.getName()+"] ";
									out.print(notice + "<BR/>") ;
									Knapsack.logger.warn(notice);
								}
							}
						}
					}
				}
			}
		}
	}
		/**
		try {
			
			for (int i = 0; i < colors.length; i++) {
				int articleindex = k.indexOf(articlename, colors[i], true);
				if (articleindex > 0) {
					ae = k.getArticleEntityByCell(articleindex);
					if (ae != null && ae.getTimer() != null
							&& !ae.getTimer().isClosed()) {
						invalidTime = ae.getTimer().getEndTime();
						if (invalidTime > limittime) {
							//存储？
							ae.setColorType(repcolors[i]);
							CoreSubSystem.logger
									.warn("[修改错误的物品color] [成功] [物品颜色："
											+ colors[i] + "] [替换后颜色："
											+ ae.getColorType() + "] ["
											+ p.getLogString() + "]");
						}
					}
				}
			}
		} catch (Exception e) {
			CoreSubSystem.logger.warn(
					"[修改错误的物品color] [异常] [" + p.getLogString() + "]", e);
		}
	*/
	%>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>修改错误的物品color</title>
</head>
<body>
	<form>
		<table>
		<tr><td><input type="text" name="issubmit" value="ok"></td></tr>
			<input type="submit" value="提交"/>
		</table>
	</form>

</body>
</html>