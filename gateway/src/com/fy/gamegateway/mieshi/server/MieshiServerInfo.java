package com.fy.gamegateway.mieshi.server;

import java.util.Calendar;

import com.fy.gamegateway.language.Translate;
/**
 * 
 * 
 *
 */
public class MieshiServerInfo implements java.io.Serializable{
	/**
	 * 
	 */
	private static final long serialVersionUID = 4421408529428689503L;

	//优先级，用于服务器显示的排列
	private int priority;
	public int getPriority() {
		return priority;
	}

	public void setPriority(int priority) {
		this.priority = priority;
	}

	//分区
	private String category;
	
	//显示名字
	private String name;
	
	//唯一标示
	private String realname;
	
	private String ip;
	
	private int port;
	
	private int httpPort;
	
	private byte clientid;
	
	private byte serverid;
	
	private String description;
	
	private int onlinePlayerNum;
	
	private int status;
	
	//从当天0点开始每一分钟的最高在线人数
	private transient int[] onlineNumInEveryMinute = new int[24*60];
	private transient long lastNotifyOnlineNumTime = System.currentTimeMillis();
	
	public static int SERVERTYPE_正式对外的服务器 = 0;
	public static int SERVERTYPE_对外测试的服务器 = 1;
	public static int SERVERTYPE_内部测试服务器 = 2;
	public static int SERVERTYPE_UC和国服不可见 = 3;
	public static int SERVERTYPE_91看不见的服务器 = 4;
	public static int SERVERTYPE_苹果渠道服务器 = 5;
	public static int SERVERTYPE_苹果正式服务器 = 6;
	public static int SERVERTYPE_仅铸剑渠道可见 = 7;
	public static int SERVERTYPE_仅神仙谱渠道可见 = 8;
	public static int SERVERTYPE_除了铸剑神仙谱appstore渠道都可见 = 9;
	public static int SERVERTYPE_185 = 10;
//	public static int SERVERTYPE_苹果台湾服 = 5;
//	public static int SERVERTYPE_第三方市场服务器 = 4;
	
//	public static int SERVERTYPE_文化部测试服务器 = 6;
	
//	public static int SERVERTYPE_UC专用服务器 = 7;
//	public static int SERVERTYPE_当乐与市场类渠道服务器 = 8;
//	public static int SERVERTYPE_91专用服务器 = 9;
//	public static int SERVERTYPE_苹果国际服 = 10;
//	public static int SERVERTYPE_移动专服 = 12;
//	public static int SERVERTYPE_91与UC共用服务器 = 13;
//	public static int SERVERTYPE_UC看不见的服务器 = 14;
//	public static int SERVERTYPE_WIN8专用服务器 = 15;
//	public static int SERVERTYPE_UC和国服不可见 = 16;
	
	
//	public static String SERVERTYPE_NAMES[] = new String[]{"对外正式的服务器","对外测试的服务器","内部测试服务器","苹果国内服务器",
//		"91看不见的服务器","文化部测试服务器","UC专用服务器","91专用服务器","苹果国际服务器","苹果台湾服务器","移动专服","91与UC共用服务器","UC看不见的服务器","WIN8专用服务器","UC和国服不可见"};
	public static String SERVERTYPE_NAMES[] = new String[]{"对外正式的服务器","对外测试的服务器","内部测试服务器","UC和国服不可见","91看不见的服务器","苹果渠道服务器","苹果正式服务器"
		,"仅铸剑渠道可见","仅神仙谱渠道可见","除了铸剑神仙谱appstore渠道都可见","185"};
	
	//服务器类型，用于服务器列表过滤使用
	private int serverType = 0;
	
	private String serverUrl;
	
	
	public String getCategory() {
		return category;
	}

	public void setCategory(String category) {
		this.category = category;
	}

	public int getStatus() {
		return status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	public static final byte STATUS_OFF = 0;
	public static final byte STATUS_NEW = 1;
	public static final byte STATUS_GOOD = 2;
	public static final byte STATUS_BUSY = 3;
	public static final byte STATUS_FULL = 4;
	public static final byte STATUS_WEIHU = 5;
	public static final byte INNER_TEST = 6;
	
	public static final String[] STATUS_DESP = new String[]{Translate.维护,Translate.普通,Translate.新区,Translate.推荐,Translate.火爆,Translate.关闭,Translate.内部测试用};

	/**
	 * 根据服务器的状态，返回描述服务器的字符串
	 * @return
	 */
	public String autoGenerateDescription(){
		return Translate.正常;
	}
	
	/**
	 * 服务器名称
	 * @return
	 */
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getRealname() {
		return realname;
	}

	public void setRealname(String realname) {
		this.realname = realname;
	}

	/**
	 * IP地址
	 * @return
	 */
	public String getIp() {
		return ip;
	}

	public void setIp(String ip) {
		this.ip = ip;
	}

	/**
	 * 端口
	 * @return
	 */
	public int getPort() {
		return port;
	}

	public void setPort(int port) {
		this.port = port;
	}

	/**
	 * 描述
	 * @return
	 */
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	

	public int getOnlinePlayerNum() {
		return onlinePlayerNum;
	}

	public void setOnlinePlayerNum(int onlinePlayerNum) {
		this.onlinePlayerNum = onlinePlayerNum;
	}
	
	public byte getServerid() {
		return serverid;
	}

	public void setServerid(byte serverid) {
		this.serverid = serverid;
	}

	public byte getClientid() {
		return clientid;
	}

	public void setClientid(byte clientid) {
		this.clientid = clientid;
	}

	public int getServerType() {
		return serverType;
	}

	public void setServerType(int serverType) {
		this.serverType = serverType;
	}
	
	public int[] getOnlineNumInEveryMinute(){
		if(onlineNumInEveryMinute == null){
			onlineNumInEveryMinute = new int[24*60];
			lastNotifyOnlineNumTime = System.currentTimeMillis();
		}
		return onlineNumInEveryMinute;
	}
	/**
	 * 服务器通知当前在线人数
	 * @param num
	 */
	public void notifyOnlineNum(int num){
		if(onlineNumInEveryMinute == null){
			onlineNumInEveryMinute = new int[24*60];
			lastNotifyOnlineNumTime = System.currentTimeMillis();
		}
		this.setOnlinePlayerNum(num);
		Calendar cal = Calendar.getInstance();
		cal.setTimeInMillis(this.lastNotifyOnlineNumTime);
		int d1 = cal.get(Calendar.DAY_OF_YEAR);
		cal.setTimeInMillis(System.currentTimeMillis());
		int d2 = cal.get(Calendar.DAY_OF_YEAR);
		if(d1 != d2){
			onlineNumInEveryMinute = new int[24*60];
		}
		int hour = cal.get(Calendar.HOUR_OF_DAY);
		int minute = cal.get(Calendar.MINUTE);
		int index = hour*60 + minute;
		if(index<0)index=0;
		if(index>=24*60) index=24*60-1;
		if(onlineNumInEveryMinute[index]<num)
			onlineNumInEveryMinute[index]=num;
		
		lastNotifyOnlineNumTime = System.currentTimeMillis();
		
	}

	public String getServerUrl() {
		return serverUrl;
	}

	public void setServerUrl(String serverUrl) {
		this.serverUrl = serverUrl;
	}

	public int getHttpPort() {
		if(httpPort == 0){
			if(port % 2 == 1){
				return 8001;
			}else{
				return 8002;
			}
		}
		return httpPort;
	}

	public void setHttpPort(int httpPort) {
		this.httpPort = httpPort;
	}
}
